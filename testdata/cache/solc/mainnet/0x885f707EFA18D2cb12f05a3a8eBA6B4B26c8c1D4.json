{"data":{"meta":{"SourceCode":{"language":"Solidity","sources":{"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (metatx/ERC2771Context.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Context variant with ERC-2771 support.\n *\n * WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n * be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n * specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n * behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n * function only accessible if `msg.data.length == 0`.\n *\n * WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n * Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n * recovery.\n */\nabstract contract ERC2771Context is Context {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable _trustedForwarder;\n\n    /**\n     * @dev Initializes the contract with a trusted forwarder, which will be able to\n     * invoke functions on this contract on behalf of other accounts.\n     *\n     * NOTE: The trusted forwarder can be replaced by overriding {trustedForwarder}.\n     */\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder_) {\n        _trustedForwarder = trustedForwarder_;\n    }\n\n    /**\n     * @dev Returns the address of the trusted forwarder.\n     */\n    function trustedForwarder() public view virtual returns (address) {\n        return _trustedForwarder;\n    }\n\n    /**\n     * @dev Indicates whether any particular address is the trusted forwarder.\n     */\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return forwarder == trustedForwarder();\n    }\n\n    /**\n     * @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgSender() internal view virtual override returns (address) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return address(bytes20(msg.data[calldataLength - contextSuffixLength:]));\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return msg.data[:calldataLength - contextSuffixLength];\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @dev ERC-2771 specifies the context as being a single address (20 bytes).\n     */\n    function _contextSuffixLength() internal view virtual override returns (uint256) {\n        return 20;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"src/interfaces/IJBTokenUriResolver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IJBTokenUriResolver {\n    function getUri(uint256 projectId) external view returns (string memory tokenUri);\n}\n"},"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"src/interfaces/IJBProjects.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nimport {IJBTokenUriResolver} from \"./IJBTokenUriResolver.sol\";\n\ninterface IJBProjects is IERC721 {\n    event Create(uint256 indexed projectId, address indexed owner, address caller);\n    event SetTokenUriResolver(IJBTokenUriResolver indexed resolver, address caller);\n\n    function count() external view returns (uint256);\n    function tokenUriResolver() external view returns (IJBTokenUriResolver);\n\n    function createFor(address owner) external returns (uint256 projectId);\n    function setTokenUriResolver(IJBTokenUriResolver resolver) external;\n}\n"},"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"src/JBProjects.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.23;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ERC2771Context} from \"@openzeppelin/contracts/metatx/ERC2771Context.sol\";\nimport {ERC721, Context} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\nimport {IJBProjects} from \"./interfaces/IJBProjects.sol\";\nimport {IJBTokenUriResolver} from \"./interfaces/IJBTokenUriResolver.sol\";\n\n/// @notice Stores project ownership and metadata.\n/// @dev Projects are represented as ERC-721s.\ncontract JBProjects is ERC721, ERC2771Context, Ownable, IJBProjects {\n    //*********************************************************************//\n    // --------------------- public stored properties -------------------- //\n    //*********************************************************************//\n\n    /// @notice The number of projects that have been created using this contract.\n    /// @dev The count is incremented with each new project created.\n    /// @dev The resulting ERC-721 token ID for each project is the newly incremented count value.\n    uint256 public override count;\n\n    /// @notice The contract resolving each project ID to its ERC721 URI.\n    IJBTokenUriResolver public override tokenUriResolver;\n\n    //*********************************************************************//\n    // -------------------------- constructor ---------------------------- //\n    //*********************************************************************//\n\n    /// @param owner The owner of the contract who can set metadata.\n    /// @param feeProjectOwner The address that will receive the fee-project. If `address(0)` the fee-project will not\n    /// be minted.\n    /// @param trustedForwarder The trusted forwarder for the ERC2771Context.\n    constructor(\n        address owner,\n        address feeProjectOwner,\n        address trustedForwarder\n    )\n        ERC721(\"Juicebox Projects\", \"JUICEBOX\")\n        Ownable(owner)\n        ERC2771Context(trustedForwarder)\n    {\n        if (feeProjectOwner != address(0)) {\n            createFor(feeProjectOwner);\n        }\n    }\n\n    //*********************************************************************//\n    // -------------------------- public views --------------------------- //\n    //*********************************************************************//\n\n    /// @notice Indicates whether this contract adheres to the specified interface.\n    /// @dev See {IERC165-supportsInterface}.\n    /// @param interfaceId The ID of the interface to check for adherence to.\n    /// @return A flag indicating if the provided interface ID is supported.\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IJBProjects).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /// @notice Returns the URI where the ERC-721 standard JSON of a project is hosted.\n    /// @param projectId The ID of the project to get a URI of.\n    /// @return The token URI to use for the provided `projectId`.\n    function tokenURI(uint256 projectId) public view override returns (string memory) {\n        // Keep a reference to the resolver.\n        IJBTokenUriResolver resolver = tokenUriResolver;\n\n        // If there's no resolver, there's no URI.\n        if (resolver == IJBTokenUriResolver(address(0))) return \"\";\n\n        // Return the resolved URI.\n        return resolver.getUri(projectId);\n    }\n\n    //*********************************************************************//\n    // -------------------------- internal views ------------------------- //\n    //*********************************************************************//\n\n    /// @dev `ERC-2771` specifies the context as being a single address (20 bytes).\n    function _contextSuffixLength() internal view override(ERC2771Context, Context) returns (uint256) {\n        return super._contextSuffixLength();\n    }\n\n    /// @notice The calldata. Preferred to use over `msg.data`.\n    /// @return calldata The `msg.data` of this call.\n    function _msgData() internal view override(ERC2771Context, Context) returns (bytes calldata) {\n        return ERC2771Context._msgData();\n    }\n\n    /// @notice The message's sender. Preferred to use over `msg.sender`.\n    /// @return sender The address which sent this call.\n    function _msgSender() internal view override(ERC2771Context, Context) returns (address sender) {\n        return ERC2771Context._msgSender();\n    }\n\n    //*********************************************************************//\n    // ---------------------- external transactions ---------------------- //\n    //*********************************************************************//\n\n    /// @notice Sets the address of the resolver used to retrieve the tokenURI of projects.\n    /// @param resolver The address of the new resolver.\n    function setTokenUriResolver(IJBTokenUriResolver resolver) external override onlyOwner {\n        // Store the new resolver.\n        tokenUriResolver = resolver;\n\n        emit SetTokenUriResolver({resolver: resolver, caller: _msgSender()});\n    }\n\n    //*********************************************************************//\n    // ---------------------- public transactions ---------------------- //\n    //*********************************************************************//\n\n    /// @notice Create a new project for the specified owner, which mints an NFT (ERC-721) into their wallet.\n    /// @dev Anyone can create a project on an owner's behalf.\n    /// @param owner The address that will be the owner of the project.\n    /// @return projectId The token ID of the newly created project.\n    function createFor(address owner) public override returns (uint256 projectId) {\n        // Increment the count, which will be used as the ID.\n        projectId = ++count;\n\n        emit Create({projectId: projectId, owner: owner, caller: _msgSender()});\n\n        // Mint the project.\n        _safeMint(owner, projectId);\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"node_modules/@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"}},"settings":{"evmVersion":"paris","metadata":{"appendCBOR":true,"bytecodeHash":"ipfs","useLiteralContent":false},"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["evm.bytecode","evm.deployedBytecode","devdoc","userdoc","metadata","abi"]}},"remappings":["@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/","@arbitrum/=node_modules/@arbitrum/","@bananapus/=node_modules/@bananapus/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","@scroll-tech/=node_modules/@scroll-tech/","@uniswap/=node_modules/@uniswap/","@zksync/=node_modules/@zksync/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solmate/=node_modules/solmate/","sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/"],"viaIR":false}},"ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeProjectOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Create\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IJBTokenUriResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SetTokenUriResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IJBTokenUriResolver\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setTokenUriResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenUriResolver\",\"outputs\":[{\"internalType\":\"contract IJBTokenUriResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"JBProjects","CompilerVersion":"v0.8.23+commit.f704f362","OptimizationUsed":1,"Runs":200,"ConstructorArguments":"0x00000000000000000000000080a8f7a4bd75b539ce26937016df607fdc9abeb500000000000000000000000080a8f7a4bd75b539ce26937016df607fdc9abeb5000000000000000000000000c29d6995ab3b0df4650ad643adeac55e7acbb566","EVMVersion":"paris","Library":"","LicenseType":"","Proxy":0,"SwarmSource":""},"input":{"language":"Solidity","sources":{"node_modules/@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (metatx/ERC2771Context.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Context variant with ERC-2771 support.\n *\n * WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n * be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n * specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n * behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n * function only accessible if `msg.data.length == 0`.\n *\n * WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n * Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n * recovery.\n */\nabstract contract ERC2771Context is Context {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable _trustedForwarder;\n\n    /**\n     * @dev Initializes the contract with a trusted forwarder, which will be able to\n     * invoke functions on this contract on behalf of other accounts.\n     *\n     * NOTE: The trusted forwarder can be replaced by overriding {trustedForwarder}.\n     */\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder_) {\n        _trustedForwarder = trustedForwarder_;\n    }\n\n    /**\n     * @dev Returns the address of the trusted forwarder.\n     */\n    function trustedForwarder() public view virtual returns (address) {\n        return _trustedForwarder;\n    }\n\n    /**\n     * @dev Indicates whether any particular address is the trusted forwarder.\n     */\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return forwarder == trustedForwarder();\n    }\n\n    /**\n     * @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgSender() internal view virtual override returns (address) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return address(bytes20(msg.data[calldataLength - contextSuffixLength:]));\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return msg.data[:calldataLength - contextSuffixLength];\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @dev ERC-2771 specifies the context as being a single address (20 bytes).\n     */\n    function _contextSuffixLength() internal view virtual override returns (uint256) {\n        return 20;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"src/JBProjects.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.23;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ERC2771Context} from \"@openzeppelin/contracts/metatx/ERC2771Context.sol\";\nimport {ERC721, Context} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\nimport {IJBProjects} from \"./interfaces/IJBProjects.sol\";\nimport {IJBTokenUriResolver} from \"./interfaces/IJBTokenUriResolver.sol\";\n\n/// @notice Stores project ownership and metadata.\n/// @dev Projects are represented as ERC-721s.\ncontract JBProjects is ERC721, ERC2771Context, Ownable, IJBProjects {\n    //*********************************************************************//\n    // --------------------- public stored properties -------------------- //\n    //*********************************************************************//\n\n    /// @notice The number of projects that have been created using this contract.\n    /// @dev The count is incremented with each new project created.\n    /// @dev The resulting ERC-721 token ID for each project is the newly incremented count value.\n    uint256 public override count;\n\n    /// @notice The contract resolving each project ID to its ERC721 URI.\n    IJBTokenUriResolver public override tokenUriResolver;\n\n    //*********************************************************************//\n    // -------------------------- constructor ---------------------------- //\n    //*********************************************************************//\n\n    /// @param owner The owner of the contract who can set metadata.\n    /// @param feeProjectOwner The address that will receive the fee-project. If `address(0)` the fee-project will not\n    /// be minted.\n    /// @param trustedForwarder The trusted forwarder for the ERC2771Context.\n    constructor(\n        address owner,\n        address feeProjectOwner,\n        address trustedForwarder\n    )\n        ERC721(\"Juicebox Projects\", \"JUICEBOX\")\n        Ownable(owner)\n        ERC2771Context(trustedForwarder)\n    {\n        if (feeProjectOwner != address(0)) {\n            createFor(feeProjectOwner);\n        }\n    }\n\n    //*********************************************************************//\n    // -------------------------- public views --------------------------- //\n    //*********************************************************************//\n\n    /// @notice Indicates whether this contract adheres to the specified interface.\n    /// @dev See {IERC165-supportsInterface}.\n    /// @param interfaceId The ID of the interface to check for adherence to.\n    /// @return A flag indicating if the provided interface ID is supported.\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IJBProjects).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /// @notice Returns the URI where the ERC-721 standard JSON of a project is hosted.\n    /// @param projectId The ID of the project to get a URI of.\n    /// @return The token URI to use for the provided `projectId`.\n    function tokenURI(uint256 projectId) public view override returns (string memory) {\n        // Keep a reference to the resolver.\n        IJBTokenUriResolver resolver = tokenUriResolver;\n\n        // If there's no resolver, there's no URI.\n        if (resolver == IJBTokenUriResolver(address(0))) return \"\";\n\n        // Return the resolved URI.\n        return resolver.getUri(projectId);\n    }\n\n    //*********************************************************************//\n    // -------------------------- internal views ------------------------- //\n    //*********************************************************************//\n\n    /// @dev `ERC-2771` specifies the context as being a single address (20 bytes).\n    function _contextSuffixLength() internal view override(ERC2771Context, Context) returns (uint256) {\n        return super._contextSuffixLength();\n    }\n\n    /// @notice The calldata. Preferred to use over `msg.data`.\n    /// @return calldata The `msg.data` of this call.\n    function _msgData() internal view override(ERC2771Context, Context) returns (bytes calldata) {\n        return ERC2771Context._msgData();\n    }\n\n    /// @notice The message's sender. Preferred to use over `msg.sender`.\n    /// @return sender The address which sent this call.\n    function _msgSender() internal view override(ERC2771Context, Context) returns (address sender) {\n        return ERC2771Context._msgSender();\n    }\n\n    //*********************************************************************//\n    // ---------------------- external transactions ---------------------- //\n    //*********************************************************************//\n\n    /// @notice Sets the address of the resolver used to retrieve the tokenURI of projects.\n    /// @param resolver The address of the new resolver.\n    function setTokenUriResolver(IJBTokenUriResolver resolver) external override onlyOwner {\n        // Store the new resolver.\n        tokenUriResolver = resolver;\n\n        emit SetTokenUriResolver({resolver: resolver, caller: _msgSender()});\n    }\n\n    //*********************************************************************//\n    // ---------------------- public transactions ---------------------- //\n    //*********************************************************************//\n\n    /// @notice Create a new project for the specified owner, which mints an NFT (ERC-721) into their wallet.\n    /// @dev Anyone can create a project on an owner's behalf.\n    /// @param owner The address that will be the owner of the project.\n    /// @return projectId The token ID of the newly created project.\n    function createFor(address owner) public override returns (uint256 projectId) {\n        // Increment the count, which will be used as the ID.\n        projectId = ++count;\n\n        emit Create({projectId: projectId, owner: owner, caller: _msgSender()});\n\n        // Mint the project.\n        _safeMint(owner, projectId);\n    }\n}\n"},"src/interfaces/IJBProjects.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nimport {IJBTokenUriResolver} from \"./IJBTokenUriResolver.sol\";\n\ninterface IJBProjects is IERC721 {\n    event Create(uint256 indexed projectId, address indexed owner, address caller);\n    event SetTokenUriResolver(IJBTokenUriResolver indexed resolver, address caller);\n\n    function count() external view returns (uint256);\n    function tokenUriResolver() external view returns (IJBTokenUriResolver);\n\n    function createFor(address owner) external returns (uint256 projectId);\n    function setTokenUriResolver(IJBTokenUriResolver resolver) external;\n}\n"},"src/interfaces/IJBTokenUriResolver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IJBTokenUriResolver {\n    function getUri(uint256 projectId) external view returns (string memory tokenUri);\n}\n"}},"settings":{"remappings":["@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/","@arbitrum/=node_modules/@arbitrum/","@bananapus/=node_modules/@bananapus/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","@scroll-tech/=node_modules/@scroll-tech/","@uniswap/=node_modules/@uniswap/","@zksync/=node_modules/@zksync/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solmate/=node_modules/solmate/","sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"useLiteralContent":false,"bytecodeHash":"ipfs","appendCBOR":true},"outputSelection":{"*":{"":["*"],"*":["*"]}},"evmVersion":"paris","viaIR":false,"libraries":{}}},"output":{"sources":{"node_modules/@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/access/Ownable.sol","id":148,"exportedSymbols":{"Context":[1654],"Ownable":[147]},"nodeType":"SourceUnit","src":"102:3000:0","nodes":[{"id":1,"nodeType":"PragmaDirective","src":"102:24:0","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":3,"nodeType":"ImportDirective","src":"128:45:0","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","nameLocation":"-1:-1:-1","scope":148,"sourceUnit":1655,"symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":147,"nodeType":"ContractDefinition","src":"663:2438:0","nodes":[{"id":8,"nodeType":"VariableDeclaration","src":"706:22:0","nodes":[],"constant":false,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","scope":147,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":13,"nodeType":"ErrorDefinition","src":"825:50:0","nodes":[],"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"}},{"id":18,"nodeType":"ErrorDefinition","src":"968:41:0","nodes":[],"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","name":"OwnableInvalidOwner","nameLocation":"974:19:0","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"}},{"id":24,"nodeType":"EventDefinition","src":"1015:84:0","nodes":[],"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","name":"OwnershipTransferred","nameLocation":"1021:20:0","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"}},{"id":50,"nodeType":"FunctionDefinition","src":"1225:187:0","nodes":[],"body":{"id":49,"nodeType":"Block","src":"1259:153:0","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":58,"nodeType":"ModifierDefinition","src":"1500:62:0","nodes":[],"body":{"id":57,"nodeType":"Block","src":"1521:41:0","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"name":"onlyOwner","nameLocation":"1509:9:0","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"virtual":false,"visibility":"internal"},{"id":67,"nodeType":"FunctionDefinition","src":"1638:85:0","nodes":[],"body":{"id":66,"nodeType":"Block","src":"1693:30:0","nodes":[],"statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":84,"nodeType":"FunctionDefinition","src":"1796:162:0","nodes":[],"body":{"id":83,"nodeType":"Block","src":"1841:117:0","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":98,"nodeType":"FunctionDefinition","src":"2293:101:0","nodes":[],"body":{"id":97,"nodeType":"Block","src":"2347:47:0","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":126,"nodeType":"FunctionDefinition","src":"2543:215:0","nodes":[],"body":{"id":125,"nodeType":"Block","src":"2613:145:0","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":146,"nodeType":"FunctionDefinition","src":"2912:187:0","nodes":[],"body":{"id":145,"nodeType":"Block","src":"2975:124:0","nodes":[],"statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1654,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"linearizedBaseContracts":[147,1654],"name":"Ownable","nameLocation":"681:7:0","scope":148,"usedErrors":[13,18],"usedEvents":[24]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"id":1,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":285,"exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"nodeType":"SourceUnit","src":"112:6426:1","nodes":[{"id":149,"nodeType":"PragmaDirective","src":"112:24:1","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":189,"nodeType":"ContractDefinition","src":"280:1764:1","nodes":[{"id":159,"nodeType":"ErrorDefinition","src":"623:80:1","nodes":[],"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","name":"ERC20InsufficientBalance","nameLocation":"629:24:1","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"}},{"id":164,"nodeType":"ErrorDefinition","src":"866:41:1","nodes":[],"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","name":"ERC20InvalidSender","nameLocation":"872:18:1","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"}},{"id":169,"nodeType":"ErrorDefinition","src":"1077:45:1","nodes":[],"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"}},{"id":178,"nodeType":"ErrorDefinition","src":"1478:85:1","nodes":[],"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"}},{"id":183,"nodeType":"ErrorDefinition","src":"1748:45:1","nodes":[],"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","name":"ERC20InvalidApprover","nameLocation":"1754:20:1","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"}},{"id":188,"nodeType":"ErrorDefinition","src":"1999:43:1","nodes":[],"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","name":"ERC20InvalidSpender","nameLocation":"2005:19:1","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"}}],"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","scope":285,"usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"id":237,"nodeType":"ContractDefinition","src":"2190:2092:1","nodes":[{"id":195,"nodeType":"ErrorDefinition","src":"2444:40:1","nodes":[],"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","name":"ERC721InvalidOwner","nameLocation":"2450:18:1","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"}},{"id":200,"nodeType":"ErrorDefinition","src":"2627:46:1","nodes":[],"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","name":"ERC721NonexistentToken","nameLocation":"2633:22:1","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"}},{"id":209,"nodeType":"ErrorDefinition","src":"2973:75:1","nodes":[],"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"}},{"id":214,"nodeType":"ErrorDefinition","src":"3211:42:1","nodes":[],"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","name":"ERC721InvalidSender","nameLocation":"3217:19:1","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"}},{"id":219,"nodeType":"ErrorDefinition","src":"3423:46:1","nodes":[],"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"}},{"id":226,"nodeType":"ErrorDefinition","src":"3727:68:1","nodes":[],"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"}},{"id":231,"nodeType":"ErrorDefinition","src":"3980:46:1","nodes":[],"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","name":"ERC721InvalidApprover","nameLocation":"3986:21:1","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"}},{"id":236,"nodeType":"ErrorDefinition","src":"4234:46:1","nodes":[],"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","name":"ERC721InvalidOperator","nameLocation":"4240:21:1","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"}}],"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","scope":285,"usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"id":284,"nodeType":"ContractDefinition","src":"4430:2107:1","nodes":[{"id":249,"nodeType":"ErrorDefinition","src":"4827:99:1","nodes":[],"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"}},{"id":254,"nodeType":"ErrorDefinition","src":"5089:43:1","nodes":[],"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","name":"ERC1155InvalidSender","nameLocation":"5095:20:1","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"}},{"id":259,"nodeType":"ErrorDefinition","src":"5302:47:1","nodes":[],"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"}},{"id":266,"nodeType":"ErrorDefinition","src":"5616:68:1","nodes":[],"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"}},{"id":271,"nodeType":"ErrorDefinition","src":"5869:47:1","nodes":[],"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"}},{"id":276,"nodeType":"ErrorDefinition","src":"6124:47:1","nodes":[],"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"}},{"id":283,"nodeType":"ErrorDefinition","src":"6462:73:1","nodes":[],"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"}}],"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","scope":285,"usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol":{"id":2,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol","id":428,"exportedSymbols":{"Context":[1654],"ERC2771Context":[427]},"nodeType":"SourceUnit","src":"109:3386:2","nodes":[{"id":286,"nodeType":"PragmaDirective","src":"109:24:2","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":288,"nodeType":"ImportDirective","src":"135:45:2","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","nameLocation":"-1:-1:-1","scope":428,"sourceUnit":1655,"symbolAliases":[{"foreign":{"id":287,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"143:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":427,"nodeType":"ContractDefinition","src":"969:2525:2","nodes":[{"id":294,"nodeType":"VariableDeclaration","src":"1085:43:2","nodes":[],"constant":false,"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"1019:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"mutability":"immutable","name":"_trustedForwarder","nameLocation":"1111:17:2","scope":427,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"1085:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":305,"nodeType":"FunctionDefinition","src":"1451:93:2","nodes":[],"body":{"id":304,"nodeType":"Block","src":"1490:54:2","nodes":[],"statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":300,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1500:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":301,"name":"trustedForwarder_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1520:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1500:37:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":303,"nodeType":"ExpressionStatement","src":"1500:37:2"}]},"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"1398:48:2","text":"@custom:oz-upgrades-unsafe-allow constructor"},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"trustedForwarder_","nameLocation":"1471:17:2","nodeType":"VariableDeclaration","scope":305,"src":"1463:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1462:27:2"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[],"src":"1490:0:2"},"scope":427,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":314,"nodeType":"FunctionDefinition","src":"1624:107:2","nodes":[],"body":{"id":313,"nodeType":"Block","src":"1690:41:2","nodes":[],"statements":[{"expression":{"id":311,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1707:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":310,"id":312,"nodeType":"Return","src":"1700:24:2"}]},"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"1550:69:2","text":" @dev Returns the address of the trusted forwarder."},"functionSelector":"7da0a877","implemented":true,"kind":"function","modifiers":[],"name":"trustedForwarder","nameLocation":"1633:16:2","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"1649:2:2"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"1681:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1681:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1680:9:2"},"scope":427,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":328,"nodeType":"FunctionDefinition","src":"1832:137:2","nodes":[],"body":{"id":327,"nodeType":"Block","src":"1914:55:2","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":322,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1931:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":323,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1944:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1931:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":321,"id":326,"nodeType":"Return","src":"1924:38:2"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"1737:90:2","text":" @dev Indicates whether any particular address is the trusted forwarder."},"functionSelector":"572b6c05","implemented":true,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"1841:18:2","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"forwarder","nameLocation":"1868:9:2","nodeType":"VariableDeclaration","scope":328,"src":"1860:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1859:19:2"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":328,"src":"1908:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":319,"name":"bool","nodeType":"ElementaryTypeName","src":"1908:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1907:6:2"},"scope":427,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":375,"nodeType":"FunctionDefinition","src":"2206:429:2","nodes":[],"body":{"id":374,"nodeType":"Block","src":"2277:358:2","nodes":[],"statements":[{"assignments":[336],"declarations":[{"constant":false,"id":336,"mutability":"mutable","name":"calldataLength","nameLocation":"2295:14:2","nodeType":"VariableDeclaration","scope":374,"src":"2287:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":340,"initialValue":{"expression":{"expression":{"id":337,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2312:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2316:4:2","memberName":"data","nodeType":"MemberAccess","src":"2312:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2321:6:2","memberName":"length","nodeType":"MemberAccess","src":"2312:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2287:40:2"},{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"2345:19:2","nodeType":"VariableDeclaration","scope":374,"src":"2337:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2337:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":345,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":343,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[426],"referencedDeclaration":426,"src":"2367:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2367:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2337:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":347,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2422:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2426:6:2","memberName":"sender","nodeType":"MemberAccess","src":"2422:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"2403:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2403:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":350,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2437:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":351,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2455:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2437:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2403:71:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":372,"nodeType":"Block","src":"2579:50:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":368,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2600:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771Context_$427_$","typeString":"type(contract super ERC2771Context)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:10:2","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":1636,"src":"2600:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2600:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":334,"id":371,"nodeType":"Return","src":"2593:25:2"}]},"id":373,"nodeType":"IfStatement","src":"2399:230:2","trueBody":{"id":367,"nodeType":"Block","src":"2476:97:2","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":358,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2513:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:4:2","memberName":"data","nodeType":"MemberAccess","src":"2513:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2513:47:2","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":360,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2522:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":361,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2539:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2522:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2505:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":356,"name":"bytes20","nodeType":"ElementaryTypeName","src":"2505:7:2","typeDescriptions":{}}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2497:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"2497:7:2","typeDescriptions":{}}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":334,"id":366,"nodeType":"Return","src":"2490:72:2"}]}}]},"baseFunctions":[1636],"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"1975:226:2","text":" @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"2215:10:2","overrides":{"id":331,"nodeType":"OverrideSpecifier","overrides":[],"src":"2250:8:2"},"parameters":{"id":330,"nodeType":"ParameterList","parameters":[],"src":"2225:2:2"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"2268:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2267:9:2"},"scope":427,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":416,"nodeType":"FunctionDefinition","src":"2868:414:2","nodes":[],"body":{"id":415,"nodeType":"Block","src":"2944:338:2","nodes":[],"statements":[{"assignments":[383],"declarations":[{"constant":false,"id":383,"mutability":"mutable","name":"calldataLength","nameLocation":"2962:14:2","nodeType":"VariableDeclaration","scope":415,"src":"2954:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2954:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":387,"initialValue":{"expression":{"expression":{"id":384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2979:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2983:4:2","memberName":"data","nodeType":"MemberAccess","src":"2979:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2988:6:2","memberName":"length","nodeType":"MemberAccess","src":"2979:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2954:40:2"},{"assignments":[389],"declarations":[{"constant":false,"id":389,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"3012:19:2","nodeType":"VariableDeclaration","scope":415,"src":"3004:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"3004:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":392,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":390,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[426],"referencedDeclaration":426,"src":"3034:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3034:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3004:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":394,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3089:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3093:6:2","memberName":"sender","nodeType":"MemberAccess","src":"3089:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":393,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3070:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":397,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"3104:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":398,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"3122:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3104:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3070:71:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":413,"nodeType":"Block","src":"3228:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":409,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3249:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771Context_$427_$","typeString":"type(contract super ERC2771Context)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3255:8:2","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"3249:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":381,"id":412,"nodeType":"Return","src":"3242:23:2"}]},"id":414,"nodeType":"IfStatement","src":"3066:210:2","trueBody":{"id":408,"nodeType":"Block","src":"3143:79:2","statements":[{"expression":{"baseExpression":{"expression":{"id":401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3164:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3168:4:2","memberName":"data","nodeType":"MemberAccess","src":"3164:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"3174:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":404,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"3191:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3174:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3164:47:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":381,"id":407,"nodeType":"Return","src":"3157:54:2"}]}}]},"baseFunctions":[1645],"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"2641:222:2","text":" @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"2877:8:2","overrides":{"id":378,"nodeType":"OverrideSpecifier","overrides":[],"src":"2910:8:2"},"parameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"2885:2:2"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":416,"src":"2928:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":379,"name":"bytes","nodeType":"ElementaryTypeName","src":"2928:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2927:16:2"},"scope":427,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":426,"nodeType":"FunctionDefinition","src":"3385:107:2","nodes":[],"body":{"id":425,"nodeType":"Block","src":"3466:26:2","nodes":[],"statements":[{"expression":{"hexValue":"3230","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3483:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"functionReturnParameters":422,"id":424,"nodeType":"Return","src":"3476:9:2"}]},"baseFunctions":[1653],"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"3288:92:2","text":" @dev ERC-2771 specifies the context as being a single address (20 bytes)."},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"3394:20:2","overrides":{"id":419,"nodeType":"OverrideSpecifier","overrides":[],"src":"3439:8:2"},"parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"3414:2:2"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3457:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"3457:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3456:9:2"},"scope":427,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":290,"name":"Context","nameLocations":["1005:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1654,"src":"1005:7:2"},"id":291,"nodeType":"InheritanceSpecifier","src":"1005:7:2"}],"canonicalName":"ERC2771Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"182:786:2","text":" @dev Context variant with ERC-2771 support.\n WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n function only accessible if `msg.data.length == 0`.\n WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n recovery."},"fullyImplemented":true,"linearizedBaseContracts":[427,1654],"name":"ERC2771Context","nameLocation":"987:14:2","scope":428,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol":{"id":3,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol","id":1385,"exportedSymbols":{"Context":[1654],"ERC165":[2930],"ERC721":[1384],"ERC721Utils":[1624],"IERC165":[2942],"IERC721":[1501],"IERC721Errors":[237],"IERC721Metadata":[1547],"Strings":[2906]},"nodeType":"SourceUnit","src":"107:16349:3","nodes":[{"id":429,"nodeType":"PragmaDirective","src":"107:24:3","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":431,"nodeType":"ImportDirective","src":"133:38:3","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","nameLocation":"-1:-1:-1","scope":1385,"sourceUnit":1502,"symbolAliases":[{"foreign":{"id":430,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":433,"nodeType":"ImportDirective","src":"172:65:3","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","nameLocation":"-1:-1:-1","scope":1385,"sourceUnit":1548,"symbolAliases":[{"foreign":{"id":432,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"180:15:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":435,"nodeType":"ImportDirective","src":"238:52:3","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","nameLocation":"-1:-1:-1","scope":1385,"sourceUnit":1625,"symbolAliases":[{"foreign":{"id":434,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"246:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":437,"nodeType":"ImportDirective","src":"291:48:3","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","nameLocation":"-1:-1:-1","scope":1385,"sourceUnit":1655,"symbolAliases":[{"foreign":{"id":436,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"299:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":439,"nodeType":"ImportDirective","src":"340:48:3","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","nameLocation":"-1:-1:-1","scope":1385,"sourceUnit":2907,"symbolAliases":[{"foreign":{"id":438,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"348:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":442,"nodeType":"ImportDirective","src":"389:69:3","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","nameLocation":"-1:-1:-1","scope":1385,"sourceUnit":2931,"symbolAliases":[{"foreign":{"id":440,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"397:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":441,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"406:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":444,"nodeType":"ImportDirective","src":"459:66:3","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","nameLocation":"-1:-1:-1","scope":1385,"sourceUnit":285,"symbolAliases":[{"foreign":{"id":443,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1384,"nodeType":"ContractDefinition","src":"775:15680:3","nodes":[{"id":458,"nodeType":"UsingForDirective","src":"866:26:3","nodes":[],"global":false,"libraryName":{"id":456,"name":"Strings","nameLocations":["872:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2906,"src":"872:7:3"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":460,"nodeType":"VariableDeclaration","src":"916:20:3","nodes":[],"constant":false,"mutability":"mutable","name":"_name","nameLocation":"931:5:3","scope":1384,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":459,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"id":462,"nodeType":"VariableDeclaration","src":"963:22:3","nodes":[],"constant":false,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:3","scope":1384,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":461,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"id":466,"nodeType":"VariableDeclaration","src":"992:51:3","nodes":[],"constant":false,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:3","scope":1384,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":465,"keyName":"tokenId","keyNameLocation":"1008:7:3","keyType":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"id":470,"nodeType":"VariableDeclaration","src":"1050:51:3","nodes":[],"constant":false,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:3","scope":1384,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":469,"keyName":"owner","keyNameLocation":"1066:5:3","keyType":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"id":474,"nodeType":"VariableDeclaration","src":"1108:59:3","nodes":[],"constant":false,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:3","scope":1384,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":473,"keyName":"tokenId","keyNameLocation":"1124:7:3","keyType":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"id":480,"nodeType":"VariableDeclaration","src":"1174:86:3","nodes":[],"constant":false,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:3","scope":1384,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":479,"keyName":"owner","keyNameLocation":"1190:5:3","keyType":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":478,"keyName":"operator","keyNameLocation":"1215:8:3","keyType":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":477,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"id":497,"nodeType":"FunctionDefinition","src":"1380:113:3","nodes":[],"body":{"id":496,"nodeType":"Block","src":"1436:57:3","nodes":[],"statements":[{"expression":{"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":488,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"1446:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":489,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"1454:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":491,"nodeType":"ExpressionStatement","src":"1446:13:3"},{"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":492,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"1469:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":493,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"1479:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":495,"nodeType":"ExpressionStatement","src":"1469:17:3"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"1267:108:3","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"name_","nameLocation":"1406:5:3","nodeType":"VariableDeclaration","scope":497,"src":"1392:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":482,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:3","nodeType":"VariableDeclaration","scope":497,"src":"1413:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":484,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:3"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[],"src":"1436:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":528,"nodeType":"FunctionDefinition","src":"1560:300:3","nodes":[],"body":{"id":527,"nodeType":"Block","src":"1668:192:3","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":508,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1697:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":510,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"1717:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1501_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1501_$","typeString":"type(contract IERC721)"}],"id":509,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1501","typeString":"type(contract IERC721)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1753:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":516,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"1773:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1547_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1547_$","typeString":"type(contract IERC721Metadata)"}],"id":515,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1547","typeString":"type(contract IERC721Metadata)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":523,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1841:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":521,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1384_$","typeString":"type(contract super ERC721)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2929,"src":"1817:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":507,"id":526,"nodeType":"Return","src":"1678:175:3"}]},"baseFunctions":[2929,2941],"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"1499:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:3","overrides":{"id":504,"nodeType":"OverrideSpecifier","overrides":[{"id":502,"name":"ERC165","nameLocations":["1636:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2930,"src":"1636:6:3"},{"id":503,"name":"IERC165","nameLocations":["1644:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"1644:7:3"}],"src":"1627:25:3"},"parameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:3","nodeType":"VariableDeclaration","scope":528,"src":"1587:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":499,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:3"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":528,"src":"1662:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":505,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":556,"nodeType":"FunctionDefinition","src":"1919:208:3","nodes":[],"body":{"id":555,"nodeType":"Block","src":"1991:136:3","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2005:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:3","typeDescriptions":{}}},"id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":550,"nodeType":"IfStatement","src":"2001:87:3","trueBody":{"id":549,"nodeType":"Block","src":"2026:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:3","typeDescriptions":{}}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":542,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2047:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":548,"nodeType":"RevertStatement","src":"2040:37:3"}]}},{"expression":{"baseExpression":{"id":551,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"2104:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":553,"indexExpression":{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2114:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":535,"id":554,"nodeType":"Return","src":"2097:23:3"}]},"baseFunctions":[1426],"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"1866:48:3","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:3","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"owner","nameLocation":"1946:5:3","nodeType":"VariableDeclaration","scope":556,"src":"1938:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:3"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":556,"src":"1982:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":569,"nodeType":"FunctionDefinition","src":"2184:118:3","nodes":[],"body":{"id":568,"nodeType":"Block","src":"2256:46:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"2287:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":564,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"2273:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":563,"id":567,"nodeType":"Return","src":"2266:29:3"}]},"baseFunctions":[1434],"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"2133:46:3","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:3","parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:3","nodeType":"VariableDeclaration","scope":569,"src":"2201:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":569,"src":"2247:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":578,"nodeType":"FunctionDefinition","src":"2364:89:3","nodes":[],"body":{"id":577,"nodeType":"Block","src":"2424:29:3","nodes":[],"statements":[{"expression":{"id":575,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2441:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":574,"id":576,"nodeType":"Return","src":"2434:12:3"}]},"baseFunctions":[1532],"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"2308:51:3","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:3","parameters":{"id":571,"nodeType":"ParameterList","parameters":[],"src":"2377:2:3"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":578,"src":"2409:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":572,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":587,"nodeType":"FunctionDefinition","src":"2517:93:3","nodes":[],"body":{"id":586,"nodeType":"Block","src":"2579:31:3","nodes":[],"statements":[{"expression":{"id":584,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"2596:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":583,"id":585,"nodeType":"Return","src":"2589:14:3"}]},"baseFunctions":[1538],"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"2459:53:3","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:3","parameters":{"id":580,"nodeType":"ParameterList","parameters":[],"src":"2532:2:3"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":587,"src":"2564:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":581,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":623,"nodeType":"FunctionDefinition","src":"2676:255:3","nodes":[],"body":{"id":622,"nodeType":"Block","src":"2755:176:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":596,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"2779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":595,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"2765:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":598,"nodeType":"ExpressionStatement","src":"2765:22:3"},{"assignments":[600],"declarations":[{"constant":false,"id":600,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:3","nodeType":"VariableDeclaration","scope":622,"src":"2798:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":599,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":603,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"2822:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:3"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":606,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"2855:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":604,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:3","memberName":"length","nodeType":"MemberAccess","src":"2849:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:3","trueExpression":{"arguments":[{"id":614,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"2891:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":615,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"2900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1784,"src":"2900:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":611,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:3","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:3","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":594,"id":621,"nodeType":"Return","src":"2842:82:3"}]},"baseFunctions":[1546],"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"2616:55:3","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:3","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:3","nodeType":"VariableDeclaration","scope":623,"src":"2694:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:3"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":623,"src":"2740:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":592,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":632,"nodeType":"FunctionDefinition","src":"3173:92:3","nodes":[],"body":{"id":631,"nodeType":"Block","src":"3239:26:3","nodes":[],"statements":[{"expression":{"hexValue":"","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":628,"id":630,"nodeType":"Return","src":"3249:9:3"}]},"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"2937:231:3","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:3","parameters":{"id":625,"nodeType":"ParameterList","parameters":[],"src":"3190:2:3"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":632,"src":"3224:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":626,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":648,"nodeType":"FunctionDefinition","src":"3322:113:3","nodes":[],"body":{"id":647,"nodeType":"Block","src":"3383:52:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":641,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"3402:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"3406:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":643,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"3415:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":640,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1251,1317],"referencedDeclaration":1251,"src":"3393:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"3393:35:3"}]},"baseFunctions":[1474],"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"3271:46:3","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:3","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"to","nameLocation":"3347:2:3","nodeType":"VariableDeclaration","scope":648,"src":"3339:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:3","nodeType":"VariableDeclaration","scope":648,"src":"3351:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:3"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[],"src":"3383:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":665,"nodeType":"FunctionDefinition","src":"3496:154:3","nodes":[],"body":{"id":664,"nodeType":"Block","src":"3572:78:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":657,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"3596:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"3582:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":659,"nodeType":"ExpressionStatement","src":"3582:22:3"},{"expression":{"arguments":[{"id":661,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"3635:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":660,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3622:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":655,"id":663,"nodeType":"Return","src":"3615:28:3"}]},"baseFunctions":[1490],"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"3441:50:3","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:3","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:3","nodeType":"VariableDeclaration","scope":665,"src":"3517:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:3"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"3563:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":681,"nodeType":"FunctionDefinition","src":"3717:144:3","nodes":[],"body":{"id":680,"nodeType":"Block","src":"3792:69:3","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":674,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"3821:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"3835:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":677,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"3845:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":673,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"3802:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"3802:52:3"}]},"baseFunctions":[1482],"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"3656:56:3","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:3","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"operator","nameLocation":"3752:8:3","nodeType":"VariableDeclaration","scope":681,"src":"3744:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"approved","nameLocation":"3767:8:3","nodeType":"VariableDeclaration","scope":681,"src":"3762:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":669,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:3"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"3792:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":698,"nodeType":"FunctionDefinition","src":"3927:153:3","nodes":[],"body":{"id":697,"nodeType":"Block","src":"4021:59:3","nodes":[],"statements":[{"expression":{"baseExpression":{"baseExpression":{"id":691,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4038:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":693,"indexExpression":{"id":692,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"4057:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":695,"indexExpression":{"id":694,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"4064:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":690,"id":696,"nodeType":"Return","src":"4031:42:3"}]},"baseFunctions":[1500],"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"3867:55:3","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:3","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"owner","nameLocation":"3961:5:3","nodeType":"VariableDeclaration","scope":698,"src":"3953:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"operator","nameLocation":"3976:8:3","nodeType":"VariableDeclaration","scope":698,"src":"3968:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:3"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"4015:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":688,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":744,"nodeType":"FunctionDefinition","src":"4142:578:3","nodes":[],"body":{"id":743,"nodeType":"Block","src":"4222:498:3","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":708,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"4236:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:3","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":722,"nodeType":"IfStatement","src":"4232:87:3","trueBody":{"id":721,"nodeType":"Block","src":"4254:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:3","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":714,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4275:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"RevertStatement","src":"4268:40:3"}]}},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:3","nodeType":"VariableDeclaration","scope":743,"src":"4537:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":731,"initialValue":{"arguments":[{"id":726,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"4569:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":727,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"4573:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":728,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"4582:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":725,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"4561:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":732,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"4609:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":733,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4626:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":742,"nodeType":"IfStatement","src":"4605:109:3","trueBody":{"id":741,"nodeType":"Block","src":"4632:82:3","statements":[{"errorCall":{"arguments":[{"id":736,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4674:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":737,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"4680:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":738,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"4689:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":735,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4653:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"RevertStatement","src":"4646:57:3"}]}}]},"baseFunctions":[1466],"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"4086:51:3","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:3","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"from","nameLocation":"4172:4:3","nodeType":"VariableDeclaration","scope":744,"src":"4164:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"to","nameLocation":"4186:2:3","nodeType":"VariableDeclaration","scope":744,"src":"4178:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:3","nodeType":"VariableDeclaration","scope":744,"src":"4190:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:3"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"4222:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":762,"nodeType":"FunctionDefinition","src":"4786:132:3","nodes":[],"body":{"id":761,"nodeType":"Block","src":"4862:56:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":755,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"4889:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"4895:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":757,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"4899:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":754,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[762,792],"referencedDeclaration":792,"src":"4872:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"ExpressionStatement","src":"4872:39:3"}]},"baseFunctions":[1456],"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"4726:55:3","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:3","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"from","nameLocation":"4820:4:3","nodeType":"VariableDeclaration","scope":762,"src":"4812:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"to","nameLocation":"4834:2:3","nodeType":"VariableDeclaration","scope":762,"src":"4826:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":751,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:3","nodeType":"VariableDeclaration","scope":762,"src":"4838:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[],"src":"4862:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":792,"nodeType":"FunctionDefinition","src":"4984:233:3","nodes":[],"body":{"id":791,"nodeType":"Block","src":"5087:130:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":775,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5110:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"5116:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"5120:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":774,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"5097:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"ExpressionStatement","src":"5097:31:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":783,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5172:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5186:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"5192:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"5196:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":788,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"5205:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":780,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"5138:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1624_$","typeString":"type(library ERC721Utils)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1623,"src":"5138:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"5138:72:3"}]},"baseFunctions":[1446],"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"4924:55:3","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:3","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"from","nameLocation":"5018:4:3","nodeType":"VariableDeclaration","scope":792,"src":"5010:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"to","nameLocation":"5032:2:3","nodeType":"VariableDeclaration","scope":792,"src":"5024:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:3","nodeType":"VariableDeclaration","scope":792,"src":"5036:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"data","nameLocation":"5066:4:3","nodeType":"VariableDeclaration","scope":792,"src":"5053:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":770,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:3"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"5087:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":805,"nodeType":"FunctionDefinition","src":"5732:115:3","nodes":[],"body":{"id":804,"nodeType":"Block","src":"5807:40:3","nodes":[],"statements":[{"expression":{"baseExpression":{"id":800,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"5824:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":802,"indexExpression":{"id":801,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"5832:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":799,"id":803,"nodeType":"Return","src":"5817:23:3"}]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"5223:504:3","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:3","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:3","nodeType":"VariableDeclaration","scope":805,"src":"5750:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:3"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":805,"src":"5798:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":818,"nodeType":"FunctionDefinition","src":"5963:127:3","nodes":[],"body":{"id":817,"nodeType":"Block","src":"6042:48:3","nodes":[],"statements":[{"expression":{"baseExpression":{"id":813,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6059:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":815,"indexExpression":{"id":814,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"6075:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":812,"id":816,"nodeType":"Return","src":"6052:31:3"}]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"5853:105:3","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:3","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:3","nodeType":"VariableDeclaration","scope":818,"src":"5985:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"6033:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":854,"nodeType":"FunctionDefinition","src":"6401:272:3","nodes":[],"body":{"id":853,"nodeType":"Block","src":"6510:163:3","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":830,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6539:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:3","typeDescriptions":{}}},"id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":836,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6577:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":837,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6586:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":840,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6614:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":841,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6621:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":839,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6597:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":845,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":844,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"6633:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":847,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6658:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":829,"id":852,"nodeType":"Return","src":"6520:146:3"}]},"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"6096:300:3","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:3","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"owner","nameLocation":"6432:5:3","nodeType":"VariableDeclaration","scope":854,"src":"6424:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"spender","nameLocation":"6447:7:3","nodeType":"VariableDeclaration","scope":854,"src":"6439:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:3","nodeType":"VariableDeclaration","scope":854,"src":"6456:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:3"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"6504:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":827,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":891,"nodeType":"FunctionDefinition","src":"7105:368:3","nodes":[],"body":{"id":890,"nodeType":"Block","src":"7202:271:3","nodes":[],"statements":[{"condition":{"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:3","subExpression":{"arguments":[{"id":865,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"7231:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"7238:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":867,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"7247:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":864,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"7217:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":889,"nodeType":"IfStatement","src":"7212:255:3","trueBody":{"id":888,"nodeType":"Block","src":"7257:210:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"7275:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:3","typeDescriptions":{}}},"id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":886,"nodeType":"Block","src":"7373:84:3","statements":[{"errorCall":{"arguments":[{"id":882,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"7425:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":883,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"7434:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":881,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7398:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":885,"nodeType":"RevertStatement","src":"7391:51:3"}]},"id":887,"nodeType":"IfStatement","src":"7271:186:3","trueBody":{"id":880,"nodeType":"Block","src":"7296:71:3","statements":[{"errorCall":{"arguments":[{"id":877,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"7344:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":876,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7321:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"RevertStatement","src":"7314:38:3"}]}}]}}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"6679:421:3","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:3","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"owner","nameLocation":"7139:5:3","nodeType":"VariableDeclaration","scope":891,"src":"7131:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"spender","nameLocation":"7154:7:3","nodeType":"VariableDeclaration","scope":891,"src":"7146:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:3","nodeType":"VariableDeclaration","scope":891,"src":"7163:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[],"src":"7202:0:3"},"scope":1384,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":907,"nodeType":"FunctionDefinition","src":"8115:153:3","nodes":[],"body":{"id":906,"nodeType":"Block","src":"8190:78:3","nodes":[],"statements":[{"id":905,"nodeType":"UncheckedBlock","src":"8200:62:3","statements":[{"expression":{"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":899,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8224:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":901,"indexExpression":{"id":900,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8234:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"8246:5:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":904,"nodeType":"ExpressionStatement","src":"8224:27:3"}]}]},"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"7479:631:3","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:3","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"account","nameLocation":"8149:7:3","nodeType":"VariableDeclaration","scope":907,"src":"8141:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"8166:5:3","nodeType":"VariableDeclaration","scope":907,"src":"8158:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":895,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:3"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"8190:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":997,"nodeType":"FunctionDefinition","src":"8861:795:3","nodes":[],"body":{"id":996,"nodeType":"Block","src":"8956:700:3","nodes":[],"statements":[{"assignments":[920],"declarations":[{"constant":false,"id":920,"mutability":"mutable","name":"from","nameLocation":"8974:4:3","nodeType":"VariableDeclaration","scope":996,"src":"8966:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":924,"initialValue":{"arguments":[{"id":922,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"8990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":921,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"8981:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":925,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"9058:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:3","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":938,"nodeType":"IfStatement","src":"9054:86:3","trueBody":{"id":937,"nodeType":"Block","src":"9078:62:3","statements":[{"expression":{"arguments":[{"id":932,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"9109:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":933,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"9115:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":934,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"9121:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":931,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"9092:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":936,"nodeType":"ExpressionStatement","src":"9092:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"9184:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:3","typeDescriptions":{}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":966,"nodeType":"IfStatement","src":"9180:256:3","trueBody":{"id":965,"nodeType":"Block","src":"9204:232:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:3","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"9321:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:3","typeDescriptions":{}}},"id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":945,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1251,1317],"referencedDeclaration":1317,"src":"9300:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":957,"nodeType":"ExpressionStatement","src":"9300:48:3"},{"id":964,"nodeType":"UncheckedBlock","src":"9363:63:3","statements":[{"expression":{"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":958,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"9391:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":960,"indexExpression":{"id":959,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"9401:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":963,"nodeType":"ExpressionStatement","src":"9391:20:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":967,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9450:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:3","typeDescriptions":{}}},"id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":981,"nodeType":"IfStatement","src":"9446:107:3","trueBody":{"id":980,"nodeType":"Block","src":"9468:85:3","statements":[{"id":979,"nodeType":"UncheckedBlock","src":"9482:61:3","statements":[{"expression":{"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":973,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"9510:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":975,"indexExpression":{"id":974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9520:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":978,"nodeType":"ExpressionStatement","src":"9510:18:3"}]}]}},{"expression":{"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":982,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"9563:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":984,"indexExpression":{"id":983,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"9571:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":985,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9582:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":987,"nodeType":"ExpressionStatement","src":"9563:21:3"},{"eventCall":{"arguments":[{"id":989,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"9609:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":990,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9615:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":991,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"9619:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":988,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"9600:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"EmitStatement","src":"9595:32:3"},{"expression":{"id":994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"9645:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":918,"id":995,"nodeType":"Return","src":"9638:11:3"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"8274:582:3","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:3","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"to","nameLocation":"8886:2:3","nodeType":"VariableDeclaration","scope":997,"src":"8878:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:3","nodeType":"VariableDeclaration","scope":997,"src":"8890:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"auth","nameLocation":"8915:4:3","nodeType":"VariableDeclaration","scope":997,"src":"8907:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:3"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":997,"src":"8947:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:3"},"scope":1384,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":1047,"nodeType":"FunctionDefinition","src":"9978:327:3","nodes":[],"body":{"id":1046,"nodeType":"Block","src":"10031:274:3","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1005,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"10045:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:3","typeDescriptions":{}}},"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1019,"nodeType":"IfStatement","src":"10041:87:3","trueBody":{"id":1018,"nodeType":"Block","src":"10063:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:3","typeDescriptions":{}}},"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1011,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10084:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"RevertStatement","src":"10077:40:3"}]}},{"assignments":[1021],"declarations":[{"constant":false,"id":1021,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:3","nodeType":"VariableDeclaration","scope":1046,"src":"10137:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1030,"initialValue":{"arguments":[{"id":1023,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"10169:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"10173:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:3","typeDescriptions":{}}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1022,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"10161:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1031,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"10207:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:3","typeDescriptions":{}}},"id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1045,"nodeType":"IfStatement","src":"10203:96:3","trueBody":{"id":1044,"nodeType":"Block","src":"10236:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:3","typeDescriptions":{}}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1037,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10257:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"RevertStatement","src":"10250:38:3"}]}}]},"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"9662:311:3","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:3","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"to","nameLocation":"10001:2:3","nodeType":"VariableDeclaration","scope":1047,"src":"9993:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:3","nodeType":"VariableDeclaration","scope":1047,"src":"10005:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:3"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"10031:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1062,"nodeType":"FunctionDefinition","src":"10656:100:3","nodes":[],"body":{"id":1061,"nodeType":"Block","src":"10713:43:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":1056,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"10733:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1057,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"10737:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1055,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1062,1092],"referencedDeclaration":1092,"src":"10723:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"ExpressionStatement","src":"10723:26:3"}]},"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"10311:340:3","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:3","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"to","nameLocation":"10683:2:3","nodeType":"VariableDeclaration","scope":1062,"src":"10675:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:3","nodeType":"VariableDeclaration","scope":1062,"src":"10687:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:3"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"10713:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1092,"nodeType":"FunctionDefinition","src":"10977:207:3","nodes":[],"body":{"id":1091,"nodeType":"Block","src":"11061:123:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":1073,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"11077:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"11081:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"11071:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"ExpressionStatement","src":"11071:18:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1080,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"11133:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:3","typeDescriptions":{}}},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"11159:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1087,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"11163:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1088,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"11172:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1077,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"11099:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1624_$","typeString":"type(library ERC721Utils)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1623,"src":"11099:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"ExpressionStatement","src":"11099:78:3"}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"10762:210:3","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:3","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"to","nameLocation":"11004:2:3","nodeType":"VariableDeclaration","scope":1092,"src":"10996:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:3","nodeType":"VariableDeclaration","scope":1092,"src":"11008:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"data","nameLocation":"11038:4:3","nodeType":"VariableDeclaration","scope":1092,"src":"11025:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:3"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"11061:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":1125,"nodeType":"FunctionDefinition","src":"11510:227:3","nodes":[],"body":{"id":1124,"nodeType":"Block","src":"11551:186:3","nodes":[],"statements":[{"assignments":[1099],"declarations":[{"constant":false,"id":1099,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:3","nodeType":"VariableDeclaration","scope":1124,"src":"11561:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1111,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:3","typeDescriptions":{}}},"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1105,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"11605:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:3","typeDescriptions":{}}},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1100,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"11585:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1112,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"11639:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:3","typeDescriptions":{}}},"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"11635:96:3","trueBody":{"id":1122,"nodeType":"Block","src":"11668:63:3","statements":[{"errorCall":{"arguments":[{"id":1119,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"11712:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1118,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11689:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"RevertStatement","src":"11682:38:3"}]}}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"11190:315:3","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:3","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:3","nodeType":"VariableDeclaration","scope":1125,"src":"11525:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:3"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"11551:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1185,"nodeType":"FunctionDefinition","src":"12061:460:3","nodes":[],"body":{"id":1184,"nodeType":"Block","src":"12132:389:3","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1135,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"12146:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:3","typeDescriptions":{}}},"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1149,"nodeType":"IfStatement","src":"12142:87:3","trueBody":{"id":1148,"nodeType":"Block","src":"12164:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:3","typeDescriptions":{}}},"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1141,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12185:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1147,"nodeType":"RevertStatement","src":"12178:40:3"}]}},{"assignments":[1151],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:3","nodeType":"VariableDeclaration","scope":1184,"src":"12238:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1160,"initialValue":{"arguments":[{"id":1153,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"12270:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1154,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"12274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1152,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"12262:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1161,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"12308:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:3","typeDescriptions":{}}},"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"12410:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1173,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"12427:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1182,"nodeType":"IfStatement","src":"12406:109:3","trueBody":{"id":1181,"nodeType":"Block","src":"12433:82:3","statements":[{"errorCall":{"arguments":[{"id":1176,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"12475:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1177,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"12481:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1178,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"12490:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1175,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12454:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"RevertStatement","src":"12447:57:3"}]}},"id":1183,"nodeType":"IfStatement","src":"12304:211:3","trueBody":{"id":1171,"nodeType":"Block","src":"12337:63:3","statements":[{"errorCall":{"arguments":[{"id":1168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"12381:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1167,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12358:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1170,"nodeType":"RevertStatement","src":"12351:38:3"}]}}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"11743:313:3","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:3","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"from","nameLocation":"12088:4:3","nodeType":"VariableDeclaration","scope":1185,"src":"12080:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"to","nameLocation":"12102:2:3","nodeType":"VariableDeclaration","scope":1185,"src":"12094:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:3","nodeType":"VariableDeclaration","scope":1185,"src":"12106:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:3"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[],"src":"12132:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1203,"nodeType":"FunctionDefinition","src":"13455:128:3","nodes":[],"body":{"id":1202,"nodeType":"Block","src":"13530:53:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":1196,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"13554:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1197,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"13560:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1198,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"13564:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1195,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1203,1233],"referencedDeclaration":1233,"src":"13540:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1201,"nodeType":"ExpressionStatement","src":"13540:36:3"}]},"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"12527:923:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:3","parameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"from","nameLocation":"13486:4:3","nodeType":"VariableDeclaration","scope":1203,"src":"13478:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"to","nameLocation":"13500:2:3","nodeType":"VariableDeclaration","scope":1203,"src":"13492:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:3","nodeType":"VariableDeclaration","scope":1203,"src":"13504:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:3"},"returnParameters":{"id":1194,"nodeType":"ParameterList","parameters":[],"src":"13530:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1233,"nodeType":"FunctionDefinition","src":"13820:229:3","nodes":[],"body":{"id":1232,"nodeType":"Block","src":"13922:127:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":1216,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"13942:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1217,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"13948:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1218,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"13952:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1215,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"13932:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1220,"nodeType":"ExpressionStatement","src":"13932:28:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1224,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"14004:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"14018:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1227,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"14024:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1228,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"14028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1229,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"14037:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1221,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"13970:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1624_$","typeString":"type(library ERC721Utils)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1623,"src":"13970:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1231,"nodeType":"ExpressionStatement","src":"13970:72:3"}]},"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"13589:226:3","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:3","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"from","nameLocation":"13851:4:3","nodeType":"VariableDeclaration","scope":1233,"src":"13843:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"to","nameLocation":"13865:2:3","nodeType":"VariableDeclaration","scope":1233,"src":"13857:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:3","nodeType":"VariableDeclaration","scope":1233,"src":"13869:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"data","nameLocation":"13899:4:3","nodeType":"VariableDeclaration","scope":1233,"src":"13886:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1211,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:3"},"returnParameters":{"id":1214,"nodeType":"ParameterList","parameters":[],"src":"13922:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":1251,"nodeType":"FunctionDefinition","src":"14492:120:3","nodes":[],"body":{"id":1250,"nodeType":"Block","src":"14562:50:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":1244,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"14581:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1245,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"14585:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1246,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"14594:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1243,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1251,1317],"referencedDeclaration":1317,"src":"14572:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1249,"nodeType":"ExpressionStatement","src":"14572:33:3"}]},"documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"14055:432:3","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:3","parameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"to","nameLocation":"14518:2:3","nodeType":"VariableDeclaration","scope":1251,"src":"14510:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:3","nodeType":"VariableDeclaration","scope":1251,"src":"14522:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"auth","nameLocation":"14547:4:3","nodeType":"VariableDeclaration","scope":1251,"src":"14539:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:3"},"returnParameters":{"id":1242,"nodeType":"ParameterList","parameters":[],"src":"14562:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1317,"nodeType":"FunctionDefinition","src":"14794:662:3","nodes":[],"body":{"id":1316,"nodeType":"Block","src":"14888:568:3","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1263,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"14954:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1264,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"14967:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:3","typeDescriptions":{}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1309,"nodeType":"IfStatement","src":"14950:460:3","trueBody":{"id":1308,"nodeType":"Block","src":"14987:423:3","statements":[{"assignments":[1272],"declarations":[{"constant":false,"id":1272,"mutability":"mutable","name":"owner","nameLocation":"15009:5:3","nodeType":"VariableDeclaration","scope":1308,"src":"15001:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1276,"initialValue":{"arguments":[{"id":1274,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15031:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1273,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"15017:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"15167:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:3","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"15189:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1284,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"15198:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:3","subExpression":{"arguments":[{"id":1288,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"15224:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1289,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"15231:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1287,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"15207:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1298,"nodeType":"IfStatement","src":"15163:142:3","trueBody":{"id":1297,"nodeType":"Block","src":"15238:67:3","statements":[{"errorCall":{"arguments":[{"id":1294,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"15285:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1293,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15263:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"RevertStatement","src":"15256:34:3"}]}},{"condition":{"id":1299,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"15323:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1307,"nodeType":"IfStatement","src":"15319:81:3","trueBody":{"id":1306,"nodeType":"Block","src":"15334:66:3","statements":[{"eventCall":{"arguments":[{"id":1301,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"15366:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1302,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"15373:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1303,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15377:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1300,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"15357:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1305,"nodeType":"EmitStatement","src":"15352:33:3"}]}}]}},{"expression":{"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1310,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"15420:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1312,"indexExpression":{"id":1311,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15436:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1313,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"15447:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1315,"nodeType":"ExpressionStatement","src":"15420:29:3"}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"14618:171:3","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:3","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"to","nameLocation":"14820:2:3","nodeType":"VariableDeclaration","scope":1317,"src":"14812:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:3","nodeType":"VariableDeclaration","scope":1317,"src":"14824:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"auth","nameLocation":"14849:4:3","nodeType":"VariableDeclaration","scope":1317,"src":"14841:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:3","nodeType":"VariableDeclaration","scope":1317,"src":"14855:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1259,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:3"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[],"src":"14888:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":1354,"nodeType":"FunctionDefinition","src":"15665:312:3","nodes":[],"body":{"id":1353,"nodeType":"Block","src":"15758:219:3","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"15772:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:3","typeDescriptions":{}}},"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1338,"nodeType":"IfStatement","src":"15768:91:3","trueBody":{"id":1337,"nodeType":"Block","src":"15796:63:3","statements":[{"errorCall":{"arguments":[{"id":1334,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"15839:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1333,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15817:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1336,"nodeType":"RevertStatement","src":"15810:38:3"}]}},{"expression":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1339,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"15868:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1342,"indexExpression":{"id":1340,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"15887:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1343,"indexExpression":{"id":1341,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"15894:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1344,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"15906:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1346,"nodeType":"ExpressionStatement","src":"15868:46:3"},{"eventCall":{"arguments":[{"id":1348,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"15944:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"15951:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1350,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"15961:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1347,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"15929:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"EmitStatement","src":"15924:46:3"}]},"documentation":{"id":1318,"nodeType":"StructuredDocumentation","src":"15462:198:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:3","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"owner","nameLocation":"15701:5:3","nodeType":"VariableDeclaration","scope":1354,"src":"15693:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"operator","nameLocation":"15716:8:3","nodeType":"VariableDeclaration","scope":1354,"src":"15708:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"approved","nameLocation":"15731:8:3","nodeType":"VariableDeclaration","scope":1354,"src":"15726:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1323,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:3"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[],"src":"15758:0:3"},"scope":1384,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":1383,"nodeType":"FunctionDefinition","src":"16212:241:3","nodes":[],"body":{"id":1382,"nodeType":"Block","src":"16284:169:3","nodes":[],"statements":[{"assignments":[1363],"declarations":[{"constant":false,"id":1363,"mutability":"mutable","name":"owner","nameLocation":"16302:5:3","nodeType":"VariableDeclaration","scope":1382,"src":"16294:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1367,"initialValue":{"arguments":[{"id":1365,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"16319:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1364,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"16310:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1368,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"16341:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:3","typeDescriptions":{}}},"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1379,"nodeType":"IfStatement","src":"16337:88:3","trueBody":{"id":1378,"nodeType":"Block","src":"16362:63:3","statements":[{"errorCall":{"arguments":[{"id":1375,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"16406:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16383:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"RevertStatement","src":"16376:38:3"}]}},{"expression":{"id":1380,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"16441:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1361,"id":1381,"nodeType":"Return","src":"16434:12:3"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"15983:224:3","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:3","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:3","nodeType":"VariableDeclaration","scope":1383,"src":"16235:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:3"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1383,"src":"16275:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:3"},"scope":1384,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":446,"name":"Context","nameLocations":["803:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1654,"src":"803:7:3"},"id":447,"nodeType":"InheritanceSpecifier","src":"803:7:3"},{"baseName":{"id":448,"name":"ERC165","nameLocations":["812:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2930,"src":"812:6:3"},"id":449,"nodeType":"InheritanceSpecifier","src":"812:6:3"},{"baseName":{"id":450,"name":"IERC721","nameLocations":["820:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1501,"src":"820:7:3"},"id":451,"nodeType":"InheritanceSpecifier","src":"820:7:3"},{"baseName":{"id":452,"name":"IERC721Metadata","nameLocations":["829:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"829:15:3"},"id":453,"nodeType":"InheritanceSpecifier","src":"829:15:3"},{"baseName":{"id":454,"name":"IERC721Errors","nameLocations":["846:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:3"},"id":455,"nodeType":"InheritanceSpecifier","src":"846:13:3"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"527:247:3","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"linearizedBaseContracts":[1384,237,1547,1501,2930,2942,1654],"name":"ERC721","nameLocation":"793:6:3","scope":1385,"usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[1400,1409,1418]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol":{"id":4,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1502,"exportedSymbols":{"IERC165":[2942],"IERC721":[1501]},"nodeType":"SourceUnit","src":"108:4821:4","nodes":[{"id":1386,"nodeType":"PragmaDirective","src":"108:24:4","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":1388,"nodeType":"ImportDirective","src":"134:62:4","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","nameLocation":"-1:-1:-1","scope":1502,"sourceUnit":2943,"symbolAliases":[{"foreign":{"id":1387,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"142:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1501,"nodeType":"ContractDefinition","src":"267:4661:4","nodes":[{"id":1400,"nodeType":"EventDefinition","src":"395:82:4","nodes":[],"anonymous":false,"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"302:88:4","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","name":"Transfer","nameLocation":"401:8:4","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:4","nodeType":"VariableDeclaration","scope":1400,"src":"410:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:4","nodeType":"VariableDeclaration","scope":1400,"src":"432:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:4","nodeType":"VariableDeclaration","scope":1400,"src":"452:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:4"}},{"id":1409,"nodeType":"EventDefinition","src":"582:89:4","nodes":[],"anonymous":false,"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"483:94:4","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","name":"Approval","nameLocation":"588:8:4","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:4","nodeType":"VariableDeclaration","scope":1409,"src":"597:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1405,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:4","nodeType":"VariableDeclaration","scope":1409,"src":"620:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1407,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:4","nodeType":"VariableDeclaration","scope":1409,"src":"646:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:4"}},{"id":1418,"nodeType":"EventDefinition","src":"799:85:4","nodes":[],"anonymous":false,"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"677:117:4","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","name":"ApprovalForAll","nameLocation":"805:14:4","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:4","nodeType":"VariableDeclaration","scope":1418,"src":"820:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:4","nodeType":"VariableDeclaration","scope":1418,"src":"843:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:4","nodeType":"VariableDeclaration","scope":1418,"src":"869:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1415,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:4"}},{"id":1426,"nodeType":"FunctionDefinition","src":"971:74:4","nodes":[],"documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"890:76:4","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:4","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"owner","nameLocation":"998:5:4","nodeType":"VariableDeclaration","scope":1426,"src":"990:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:4"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"balance","nameLocation":"1036:7:4","nodeType":"VariableDeclaration","scope":1426,"src":"1028:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:4"},"scope":1501,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1434,"nodeType":"FunctionDefinition","src":"1187:72:4","nodes":[],"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"1051:131:4","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:4","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:4","nodeType":"VariableDeclaration","scope":1434,"src":"1204:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:4"},"returnParameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"owner","nameLocation":"1252:5:4","nodeType":"VariableDeclaration","scope":1434,"src":"1244:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:4"},"scope":1501,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1446,"nodeType":"FunctionDefinition","src":"1835:99:4","nodes":[],"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"1265:565:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:4","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"from","nameLocation":"1869:4:4","nodeType":"VariableDeclaration","scope":1446,"src":"1861:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"to","nameLocation":"1883:2:4","nodeType":"VariableDeclaration","scope":1446,"src":"1875:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:4","nodeType":"VariableDeclaration","scope":1446,"src":"1887:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"data","nameLocation":"1919:4:4","nodeType":"VariableDeclaration","scope":1446,"src":"1904:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1442,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:4"},"returnParameters":{"id":1445,"nodeType":"ParameterList","parameters":[],"src":"1933:0:4"},"scope":1501,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1456,"nodeType":"FunctionDefinition","src":"2651:78:4","nodes":[],"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"1940:706:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:4","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":1456,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"to","nameLocation":"2699:2:4","nodeType":"VariableDeclaration","scope":1456,"src":"2691:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:4","nodeType":"VariableDeclaration","scope":1456,"src":"2703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:4"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[],"src":"2728:0:4"},"scope":1501,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1466,"nodeType":"FunctionDefinition","src":"3473:74:4","nodes":[],"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"2735:733:4","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:4","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"from","nameLocation":"3503:4:4","nodeType":"VariableDeclaration","scope":1466,"src":"3495:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"to","nameLocation":"3517:2:4","nodeType":"VariableDeclaration","scope":1466,"src":"3509:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:4","nodeType":"VariableDeclaration","scope":1466,"src":"3521:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:4"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"3546:0:4"},"scope":1501,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1474,"nodeType":"FunctionDefinition","src":"4010:55:4","nodes":[],"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"3553:452:4","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:4","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"to","nameLocation":"4035:2:4","nodeType":"VariableDeclaration","scope":1474,"src":"4027:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1468,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:4","nodeType":"VariableDeclaration","scope":1474,"src":"4039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:4"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"4064:0:4"},"scope":1501,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1482,"nodeType":"FunctionDefinition","src":"4391:69:4","nodes":[],"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"4071:315:4","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:4","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"operator","nameLocation":"4426:8:4","nodeType":"VariableDeclaration","scope":1482,"src":"4418:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"approved","nameLocation":"4441:8:4","nodeType":"VariableDeclaration","scope":1482,"src":"4436:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1478,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:4"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[],"src":"4459:0:4"},"scope":1501,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1490,"nodeType":"FunctionDefinition","src":"4610:79:4","nodes":[],"documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"4466:139:4","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:4","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:4","nodeType":"VariableDeclaration","scope":1490,"src":"4631:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:4"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"operator","nameLocation":"4679:8:4","nodeType":"VariableDeclaration","scope":1490,"src":"4671:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:4"},"scope":1501,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1500,"nodeType":"FunctionDefinition","src":"4838:88:4","nodes":[],"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"4695:138:4","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:4","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"owner","nameLocation":"4872:5:4","nodeType":"VariableDeclaration","scope":1500,"src":"4864:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"operator","nameLocation":"4887:8:4","nodeType":"VariableDeclaration","scope":1500,"src":"4879:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:4"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1500,"src":"4920:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1497,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:4"},"scope":1501,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":1390,"name":"IERC165","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"288:7:4"},"id":1391,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"198:68:4","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"linearizedBaseContracts":[1501,2942],"name":"IERC721","nameLocation":"277:7:4","scope":1502,"usedErrors":[],"usedEvents":[1400,1409,1418]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"id":5,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":1520,"exportedSymbols":{"IERC721Receiver":[1519]},"nodeType":"SourceUnit","src":"116:881:5","nodes":[{"id":1503,"nodeType":"PragmaDirective","src":"116:24:5","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":1519,"nodeType":"ContractDefinition","src":"297:699:5","nodes":[{"id":1518,"nodeType":"FunctionDefinition","src":"834:160:5","nodes":[],"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"329:500:5","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:5","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"operator","nameLocation":"877:8:5","nodeType":"VariableDeclaration","scope":1518,"src":"869:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"from","nameLocation":"903:4:5","nodeType":"VariableDeclaration","scope":1518,"src":"895:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:5","nodeType":"VariableDeclaration","scope":1518,"src":"917:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"data","nameLocation":"957:4:5","nodeType":"VariableDeclaration","scope":1518,"src":"942:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1512,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:5"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1518,"src":"986:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1515,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:5"},"scope":1519,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"142:154:5","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"linearizedBaseContracts":[1519],"name":"IERC721Receiver","nameLocation":"307:15:5","scope":1520,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"id":6,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":1548,"exportedSymbols":{"IERC721":[1501],"IERC721Metadata":[1547]},"nodeType":"SourceUnit","src":"127:665:6","nodes":[{"id":1521,"nodeType":"PragmaDirective","src":"127:24:6","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":1523,"nodeType":"ImportDirective","src":"153:39:6","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","nameLocation":"-1:-1:-1","scope":1548,"sourceUnit":1502,"symbolAliases":[{"foreign":{"id":1522,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"161:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1547,"nodeType":"ContractDefinition","src":"328:463:6","nodes":[{"id":1532,"nodeType":"FunctionDefinition","src":"434:54:6","nodes":[],"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"371:58:6","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:6","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[],"src":"447:2:6"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1532,"src":"473:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1529,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:6"},"scope":1547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1538,"nodeType":"FunctionDefinition","src":"559:56:6","nodes":[],"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"494:60:6","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:6","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[],"src":"574:2:6"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1538,"src":"600:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1535,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:6"},"scope":1547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1546,"nodeType":"FunctionDefinition","src":"716:73:6","nodes":[],"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"621:90:6","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:6","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:6","nodeType":"VariableDeclaration","scope":1546,"src":"734:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:6"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"774:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1543,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:6"},"scope":1547,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":1525,"name":"IERC721","nameLocations":["357:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1501,"src":"357:7:6"},"id":1526,"nodeType":"InheritanceSpecifier","src":"357:7:6"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"194:133:6","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"linearizedBaseContracts":[1547,1501,2942],"name":"IERC721Metadata","nameLocation":"338:15:6","scope":1548,"usedErrors":[],"usedEvents":[1400,1409,1418]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"id":7,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","id":1625,"exportedSymbols":{"ERC721Utils":[1624],"IERC721Errors":[237],"IERC721Receiver":[1519]},"nodeType":"SourceUnit","src":"118:1794:7","nodes":[{"id":1549,"nodeType":"PragmaDirective","src":"118:24:7","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":1551,"nodeType":"ImportDirective","src":"144:55:7","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","nameLocation":"-1:-1:-1","scope":1625,"sourceUnit":1520,"symbolAliases":[{"foreign":{"id":1550,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"152:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1553,"nodeType":"ImportDirective","src":"200:69:7","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","nameLocation":"-1:-1:-1","scope":1625,"sourceUnit":285,"symbolAliases":[{"foreign":{"id":1552,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1624,"nodeType":"ContractDefinition","src":"431:1480:7","nodes":[{"id":1623,"nodeType":"FunctionDefinition","src":"985:924:7","nodes":[],"body":{"id":1622,"nodeType":"Block","src":"1151:758:7","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1568,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1165:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:7","memberName":"code","nodeType":"MemberAccess","src":"1165:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:7","memberName":"length","nodeType":"MemberAccess","src":"1165:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1621,"nodeType":"IfStatement","src":"1161:742:7","trueBody":{"id":1620,"nodeType":"Block","src":"1185:718:7","statements":[{"clauses":[{"block":{"id":1598,"nodeType":"Block","src":"1295:214:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"1317:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1586,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1327:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1519_$","typeString":"type(contract IERC721Receiver)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"1327:32:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1597,"nodeType":"IfStatement","src":"1313:182:7","trueBody":{"id":1596,"nodeType":"Block","src":"1370:125:7","statements":[{"errorCall":{"arguments":[{"id":1593,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1473:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1590,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1437:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:7","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1437:35:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"RevertStatement","src":"1430:46:7"}]}}]},"errorName":"","id":1599,"nodeType":"TryCatchClause","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"retval","nameLocation":"1287:6:7","nodeType":"VariableDeclaration","scope":1599,"src":"1280:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1582,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:7"},"src":"1271:238:7"},{"block":{"id":1617,"nodeType":"Block","src":"1538:355:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1603,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1560:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:7","memberName":"length","nodeType":"MemberAccess","src":"1560:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1615,"nodeType":"Block","src":"1728:151:7","statements":[{"AST":{"nativeSrc":"1775:86:7","nodeType":"YulBlock","src":"1775:86:7","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1812:2:7","nodeType":"YulLiteral","src":"1812:2:7","type":"","value":"32"},{"name":"reason","nativeSrc":"1816:6:7","nodeType":"YulIdentifier","src":"1816:6:7"}],"functionName":{"name":"add","nativeSrc":"1808:3:7","nodeType":"YulIdentifier","src":"1808:3:7"},"nativeSrc":"1808:15:7","nodeType":"YulFunctionCall","src":"1808:15:7"},{"arguments":[{"name":"reason","nativeSrc":"1831:6:7","nodeType":"YulIdentifier","src":"1831:6:7"}],"functionName":{"name":"mload","nativeSrc":"1825:5:7","nodeType":"YulIdentifier","src":"1825:5:7"},"nativeSrc":"1825:13:7","nodeType":"YulFunctionCall","src":"1825:13:7"}],"functionName":{"name":"revert","nativeSrc":"1801:6:7","nodeType":"YulIdentifier","src":"1801:6:7"},"nativeSrc":"1801:38:7","nodeType":"YulFunctionCall","src":"1801:38:7"},"nativeSrc":"1801:38:7","nodeType":"YulExpressionStatement","src":"1801:38:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1601,"isOffset":false,"isSlot":false,"src":"1816:6:7","valueSize":1},{"declaration":1601,"isOffset":false,"isSlot":false,"src":"1831:6:7","valueSize":1}],"flags":["memory-safe"],"id":1614,"nodeType":"InlineAssembly","src":"1750:111:7"}]},"id":1616,"nodeType":"IfStatement","src":"1556:323:7","trueBody":{"id":1613,"nodeType":"Block","src":"1580:142:7","statements":[{"errorCall":{"arguments":[{"id":1610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1700:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1607,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1664:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:7","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1664:35:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1612,"nodeType":"RevertStatement","src":"1657:46:7"}]}}]},"errorName":"","id":1618,"nodeType":"TryCatchClause","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"reason","nameLocation":"1530:6:7","nodeType":"VariableDeclaration","scope":1618,"src":"1517:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1600,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:7"},"src":"1510:383:7"}],"externalCall":{"arguments":[{"id":1577,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1240:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"1250:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1579,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"1256:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1580,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"1265:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1574,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1219:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1573,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1203:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1519_$","typeString":"type(contract IERC721Receiver)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1519","typeString":"contract IERC721Receiver"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"1203:36:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1619,"nodeType":"TryStatement","src":"1199:694:7"}]}}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"457:523:7","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:7","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"operator","nameLocation":"1033:8:7","nodeType":"VariableDeclaration","scope":1623,"src":"1025:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"from","nameLocation":"1059:4:7","nodeType":"VariableDeclaration","scope":1623,"src":"1051:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1558,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"to","nameLocation":"1081:2:7","nodeType":"VariableDeclaration","scope":1623,"src":"1073:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:7","nodeType":"VariableDeclaration","scope":1623,"src":"1093:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1565,"mutability":"mutable","name":"data","nameLocation":"1131:4:7","nodeType":"VariableDeclaration","scope":1623,"src":"1118:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1564,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:7"},"returnParameters":{"id":1567,"nodeType":"ParameterList","parameters":[],"src":"1151:0:7"},"scope":1624,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"271:159:7","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"linearizedBaseContracts":[1624],"name":"ERC721Utils","nameLocation":"439:11:7","scope":1625,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"id":8,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","id":1655,"exportedSymbols":{"Context":[1654]},"nodeType":"SourceUnit","src":"101:862:8","nodes":[{"id":1626,"nodeType":"PragmaDirective","src":"101:24:8","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":1654,"nodeType":"ContractDefinition","src":"624:338:8","nodes":[{"id":1636,"nodeType":"FunctionDefinition","src":"656:96:8","nodes":[],"body":{"id":1635,"nodeType":"Block","src":"718:34:8","nodes":[],"statements":[{"expression":{"expression":{"id":1632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1631,"id":1634,"nodeType":"Return","src":"728:17:8"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1636,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1654,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":1645,"nodeType":"FunctionDefinition","src":"758:99:8","nodes":[],"body":{"id":1644,"nodeType":"Block","src":"825:32:8","nodes":[],"statements":[{"expression":{"expression":{"id":1641,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1640,"id":1643,"nodeType":"Return","src":"835:15:8"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1638,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1654,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":1653,"nodeType":"FunctionDefinition","src":"863:97:8","nodes":[],"body":{"id":1652,"nodeType":"Block","src":"935:25:8","nodes":[],"statements":[{"expression":{"hexValue":"30","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1649,"id":1651,"nodeType":"Return","src":"945:8:8"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1653,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1654,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[1654],"name":"Context","nameLocation":"642:7:8","scope":1655,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/utils/Panic.sol":{"id":9,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Panic.sol","id":1707,"exportedSymbols":{"Panic":[1706]},"nodeType":"SourceUnit","src":"99:1874:9","nodes":[{"id":1656,"nodeType":"PragmaDirective","src":"99:24:9","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":1706,"nodeType":"ContractDefinition","src":"657:1315:9","nodes":[{"id":1661,"nodeType":"VariableDeclaration","src":"718:40:9","nodes":[],"constant":true,"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"677:36:9","text":"@dev generic / unspecified error"},"mutability":"constant","name":"GENERIC","nameLocation":"744:7:9","scope":1706,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"id":1665,"nodeType":"VariableDeclaration","src":"806:39:9","nodes":[],"constant":true,"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"764:37:9","text":"@dev used by the assert() builtin"},"mutability":"constant","name":"ASSERT","nameLocation":"832:6:9","scope":1706,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"id":1669,"nodeType":"VariableDeclaration","src":"897:47:9","nodes":[],"constant":true,"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"851:41:9","text":"@dev arithmetic underflow or overflow"},"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:9","scope":1706,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:9","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"id":1673,"nodeType":"VariableDeclaration","src":"990:49:9","nodes":[],"constant":true,"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"950:35:9","text":"@dev division or modulo by zero"},"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:9","scope":1706,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"id":1677,"nodeType":"VariableDeclaration","src":"1080:54:9","nodes":[],"constant":true,"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"1045:30:9","text":"@dev enum conversion error"},"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:9","scope":1706,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:9","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"id":1681,"nodeType":"VariableDeclaration","src":"1181:55:9","nodes":[],"constant":true,"documentation":{"id":1678,"nodeType":"StructuredDocumentation","src":"1140:36:9","text":"@dev invalid encoding in storage"},"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:9","scope":1706,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"id":1685,"nodeType":"VariableDeclaration","src":"1271:48:9","nodes":[],"constant":true,"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"1242:24:9","text":"@dev empty array pop"},"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:9","scope":1706,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:9","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"id":1689,"nodeType":"VariableDeclaration","src":"1365:52:9","nodes":[],"constant":true,"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"1325:35:9","text":"@dev array out of bounds access"},"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:9","scope":1706,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"id":1693,"nodeType":"VariableDeclaration","src":"1493:47:9","nodes":[],"constant":true,"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"1423:65:9","text":"@dev resource error (too large allocation or too large array)"},"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:9","scope":1706,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:9","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"id":1697,"nodeType":"VariableDeclaration","src":"1593:58:9","nodes":[],"constant":true,"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"1546:42:9","text":"@dev calling invalid internal function"},"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:9","scope":1706,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:9","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"id":1705,"nodeType":"FunctionDefinition","src":"1776:194:9","nodes":[],"body":{"id":1704,"nodeType":"Block","src":"1819:151:9","nodes":[],"statements":[{"AST":{"nativeSrc":"1854:110:9","nodeType":"YulBlock","src":"1854:110:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:9","nodeType":"YulLiteral","src":"1875:4:9","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:9","nodeType":"YulLiteral","src":"1881:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:9","nodeType":"YulIdentifier","src":"1868:6:9"},"nativeSrc":"1868:24:9","nodeType":"YulFunctionCall","src":"1868:24:9"},"nativeSrc":"1868:24:9","nodeType":"YulExpressionStatement","src":"1868:24:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:9","nodeType":"YulLiteral","src":"1912:4:9","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:9","nodeType":"YulIdentifier","src":"1918:4:9"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:9","nodeType":"YulIdentifier","src":"1905:6:9"},"nativeSrc":"1905:18:9","nodeType":"YulFunctionCall","src":"1905:18:9"},"nativeSrc":"1905:18:9","nodeType":"YulExpressionStatement","src":"1905:18:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:9","nodeType":"YulLiteral","src":"1943:4:9","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:9","nodeType":"YulLiteral","src":"1949:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:9","nodeType":"YulIdentifier","src":"1936:6:9"},"nativeSrc":"1936:18:9","nodeType":"YulFunctionCall","src":"1936:18:9"},"nativeSrc":"1936:18:9","nodeType":"YulExpressionStatement","src":"1936:18:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1700,"isOffset":false,"isSlot":false,"src":"1918:4:9","valueSize":1}],"flags":["memory-safe"],"id":1703,"nodeType":"InlineAssembly","src":"1829:135:9"}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"1658:113:9","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:9","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"code","nameLocation":"1799:4:9","nodeType":"VariableDeclaration","scope":1705,"src":"1791:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:9"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[],"src":"1819:0:9"},"scope":1706,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"125:489:9","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"linearizedBaseContracts":[1706],"name":"Panic","nameLocation":"665:5:9","scope":1707,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"id":10,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Strings.sol","id":2907,"exportedSymbols":{"Math":[4548],"SafeCast":[6313],"SignedMath":[6457],"Strings":[2906]},"nodeType":"SourceUnit","src":"101:16738:10","nodes":[{"id":1708,"nodeType":"PragmaDirective","src":"101:24:10","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":1710,"nodeType":"ImportDirective","src":"127:37:10","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","nameLocation":"-1:-1:-1","scope":2907,"sourceUnit":4549,"symbolAliases":[{"foreign":{"id":1709,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"135:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1712,"nodeType":"ImportDirective","src":"165:45:10","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","nameLocation":"-1:-1:-1","scope":2907,"sourceUnit":6314,"symbolAliases":[{"foreign":{"id":1711,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"173:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1714,"nodeType":"ImportDirective","src":"211:49:10","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","nameLocation":"-1:-1:-1","scope":2907,"sourceUnit":6458,"symbolAliases":[{"foreign":{"id":1713,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6457,"src":"219:10:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2906,"nodeType":"ContractDefinition","src":"297:16541:10","nodes":[{"id":1717,"nodeType":"UsingForDirective","src":"319:21:10","nodes":[],"global":false,"libraryName":{"id":1716,"name":"SafeCast","nameLocations":["325:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":6313,"src":"325:8:10"}},{"id":1720,"nodeType":"VariableDeclaration","src":"346:56:10","nodes":[],"constant":true,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:10","scope":2906,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1718,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"id":1723,"nodeType":"VariableDeclaration","src":"408:42:10","nodes":[],"constant":true,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:10","scope":2906,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1721,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"id":1730,"nodeType":"ErrorDefinition","src":"543:66:10","nodes":[],"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"457:81:10","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","name":"StringsInsufficientHexLength","nameLocation":"549:28:10","parameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"value","nameLocation":"586:5:10","nodeType":"VariableDeclaration","scope":1730,"src":"578:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"length","nameLocation":"601:6:10","nodeType":"VariableDeclaration","scope":1730,"src":"593:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:10"}},{"id":1733,"nodeType":"ErrorDefinition","src":"728:27:10","nodes":[],"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"615:108:10","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","name":"StringsInvalidChar","nameLocation":"734:18:10","parameters":{"id":1732,"nodeType":"ParameterList","parameters":[],"src":"752:2:10"}},{"id":1736,"nodeType":"ErrorDefinition","src":"850:36:10","nodes":[],"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"761:84:10","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","name":"StringsInvalidAddressFormat","nameLocation":"856:27:10","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[],"src":"883:2:10"}},{"id":1784,"nodeType":"FunctionDefinition","src":"987:632:10","nodes":[],"body":{"id":1783,"nodeType":"Block","src":"1058:561:10","nodes":[],"statements":[{"id":1782,"nodeType":"UncheckedBlock","src":"1068:545:10","statements":[{"assignments":[1745],"declarations":[{"constant":false,"id":1745,"mutability":"mutable","name":"length","nameLocation":"1100:6:10","nodeType":"VariableDeclaration","scope":1782,"src":"1092:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1752,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"1120:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1746,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"1109:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4548_$","typeString":"type(library Math)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:10","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4320,"src":"1109:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:10"},{"assignments":[1754],"declarations":[{"constant":false,"id":1754,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:10","nodeType":"VariableDeclaration","scope":1782,"src":"1144:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1753,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1759,"initialValue":{"arguments":[{"id":1757,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"1178:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1755,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:10"},{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:10","nodeType":"VariableDeclaration","scope":1782,"src":"1199:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1762,"nodeType":"VariableDeclarationStatement","src":"1199:11:10"},{"AST":{"nativeSrc":"1249:67:10","nodeType":"YulBlock","src":"1249:67:10","statements":[{"nativeSrc":"1267:35:10","nodeType":"YulAssignment","src":"1267:35:10","value":{"arguments":[{"name":"buffer","nativeSrc":"1278:6:10","nodeType":"YulIdentifier","src":"1278:6:10"},{"arguments":[{"kind":"number","nativeSrc":"1290:2:10","nodeType":"YulLiteral","src":"1290:2:10","type":"","value":"32"},{"name":"length","nativeSrc":"1294:6:10","nodeType":"YulIdentifier","src":"1294:6:10"}],"functionName":{"name":"add","nativeSrc":"1286:3:10","nodeType":"YulIdentifier","src":"1286:3:10"},"nativeSrc":"1286:15:10","nodeType":"YulFunctionCall","src":"1286:15:10"}],"functionName":{"name":"add","nativeSrc":"1274:3:10","nodeType":"YulIdentifier","src":"1274:3:10"},"nativeSrc":"1274:28:10","nodeType":"YulFunctionCall","src":"1274:28:10"},"variableNames":[{"name":"ptr","nativeSrc":"1267:3:10","nodeType":"YulIdentifier","src":"1267:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1754,"isOffset":false,"isSlot":false,"src":"1278:6:10","valueSize":1},{"declaration":1745,"isOffset":false,"isSlot":false,"src":"1294:6:10","valueSize":1},{"declaration":1761,"isOffset":false,"isSlot":false,"src":"1267:3:10","valueSize":1}],"flags":["memory-safe"],"id":1763,"nodeType":"InlineAssembly","src":"1224:92:10"},{"body":{"id":1778,"nodeType":"Block","src":"1342:234:10","statements":[{"expression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:10","subExpression":{"id":1765,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"1360:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1767,"nodeType":"ExpressionStatement","src":"1360:5:10"},{"AST":{"nativeSrc":"1408:86:10","nodeType":"YulBlock","src":"1408:86:10","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1438:3:10","nodeType":"YulIdentifier","src":"1438:3:10"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1452:5:10","nodeType":"YulIdentifier","src":"1452:5:10"},{"kind":"number","nativeSrc":"1459:2:10","nodeType":"YulLiteral","src":"1459:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1448:3:10","nodeType":"YulIdentifier","src":"1448:3:10"},"nativeSrc":"1448:14:10","nodeType":"YulFunctionCall","src":"1448:14:10"},{"name":"HEX_DIGITS","nativeSrc":"1464:10:10","nodeType":"YulIdentifier","src":"1464:10:10"}],"functionName":{"name":"byte","nativeSrc":"1443:4:10","nodeType":"YulIdentifier","src":"1443:4:10"},"nativeSrc":"1443:32:10","nodeType":"YulFunctionCall","src":"1443:32:10"}],"functionName":{"name":"mstore8","nativeSrc":"1430:7:10","nodeType":"YulIdentifier","src":"1430:7:10"},"nativeSrc":"1430:46:10","nodeType":"YulFunctionCall","src":"1430:46:10"},"nativeSrc":"1430:46:10","nodeType":"YulExpressionStatement","src":"1430:46:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1720,"isOffset":false,"isSlot":false,"src":"1464:10:10","valueSize":1},{"declaration":1761,"isOffset":false,"isSlot":false,"src":"1438:3:10","valueSize":1},{"declaration":1739,"isOffset":false,"isSlot":false,"src":"1452:5:10","valueSize":1}],"flags":["memory-safe"],"id":1768,"nodeType":"InlineAssembly","src":"1383:111:10"},{"expression":{"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"1511:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1772,"nodeType":"ExpressionStatement","src":"1511:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"1544:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1777,"nodeType":"IfStatement","src":"1540:21:10","trueBody":{"id":1776,"nodeType":"Break","src":"1556:5:10"}}]},"condition":{"hexValue":"74727565","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1779,"nodeType":"WhileStatement","src":"1329:247:10"},{"expression":{"id":1780,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"1596:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1743,"id":1781,"nodeType":"Return","src":"1589:13:10"}]}]},"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"892:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:10","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"value","nameLocation":"1013:5:10","nodeType":"VariableDeclaration","scope":1784,"src":"1005:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:10"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1784,"src":"1043:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1741,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1810,"nodeType":"FunctionDefinition","src":"1719:168:10","nodes":[],"body":{"id":1809,"nodeType":"Block","src":"1795:92:10","nodes":[],"statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"1826:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:10","trueExpression":{"hexValue":"2d","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"1872:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1802,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6457,"src":"1857:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6457_$","typeString":"type(library SignedMath)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:10","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6456,"src":"1857:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1801,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"1848:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1792,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:10","typeDescriptions":{}}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:10","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1791,"id":1808,"nodeType":"Return","src":"1805:75:10"}]},"documentation":{"id":1785,"nodeType":"StructuredDocumentation","src":"1625:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:10","parameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"value","nameLocation":"1750:5:10","nodeType":"VariableDeclaration","scope":1810,"src":"1743:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1786,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:10"},"returnParameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1810,"src":"1780:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1789,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1830,"nodeType":"FunctionDefinition","src":"1992:174:10","nodes":[],"body":{"id":1829,"nodeType":"Block","src":"2066:100:10","nodes":[],"statements":[{"id":1828,"nodeType":"UncheckedBlock","src":"2076:84:10","statements":[{"expression":{"arguments":[{"id":1819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"2119:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"2138:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1820,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"2126:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4548_$","typeString":"type(library Math)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:10","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4491,"src":"2126:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1818,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1830,1913,1933],"referencedDeclaration":1913,"src":"2107:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1817,"id":1827,"nodeType":"Return","src":"2100:49:10"}]}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"1893:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:10","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"value","nameLocation":"2021:5:10","nodeType":"VariableDeclaration","scope":1830,"src":"2013:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:10"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1830,"src":"2051:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1815,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1913,"nodeType":"FunctionDefinition","src":"2289:525:10","nodes":[],"body":{"id":1912,"nodeType":"Block","src":"2379:435:10","nodes":[],"statements":[{"assignments":[1841],"declarations":[{"constant":false,"id":1841,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:10","nodeType":"VariableDeclaration","scope":1912,"src":"2389:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1843,"initialValue":{"id":1842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"2410:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:10"},{"assignments":[1845],"declarations":[{"constant":false,"id":1845,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:10","nodeType":"VariableDeclaration","scope":1912,"src":"2425:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1844,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1854,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1849,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2461:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:10"},{"expression":{"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1855,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2482:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1857,"indexExpression":{"hexValue":"30","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1860,"nodeType":"ExpressionStatement","src":"2482:15:10"},{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1861,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2507:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1863,"indexExpression":{"hexValue":"31","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1866,"nodeType":"ExpressionStatement","src":"2507:15:10"},{"body":{"id":1895,"nodeType":"Block","src":"2577:95:10","statements":[{"expression":{"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1881,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2591:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1883,"indexExpression":{"id":1882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"2598:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1884,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"2603:10:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1888,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1885,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2614:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1890,"nodeType":"ExpressionStatement","src":"2591:40:10"},{"expression":{"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1891,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2645:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1894,"nodeType":"ExpressionStatement","src":"2645:16:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"2565:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1896,"initializationExpression":{"assignments":[1868],"declarations":[{"constant":false,"id":1868,"mutability":"mutable","name":"i","nameLocation":"2545:1:10","nodeType":"VariableDeclaration","scope":1896,"src":"2537:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1874,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1870,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2553:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:10"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:10","subExpression":{"id":1878,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"2574:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1880,"nodeType":"ExpressionStatement","src":"2572:3:10"},"nodeType":"ForStatement","src":"2532:140:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2685:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"2681:96:10","trueBody":{"id":1905,"nodeType":"Block","src":"2702:75:10","statements":[{"errorCall":{"arguments":[{"id":1901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"2752:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1902,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2759:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1900,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2723:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"RevertStatement","src":"2716:50:10"}]}},{"expression":{"arguments":[{"id":1909,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2800:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1907,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:10","typeDescriptions":{}}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1839,"id":1911,"nodeType":"Return","src":"2786:21:10"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"2172:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:10","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"value","nameLocation":"2318:5:10","nodeType":"VariableDeclaration","scope":1913,"src":"2310:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"length","nameLocation":"2333:6:10","nodeType":"VariableDeclaration","scope":1913,"src":"2325:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:10"},"returnParameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1913,"src":"2364:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1837,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1933,"nodeType":"FunctionDefinition","src":"2973:148:10","nodes":[],"body":{"id":1932,"nodeType":"Block","src":"3046:75:10","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1926,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"3091:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1924,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:10","typeDescriptions":{}}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:10","typeDescriptions":{}}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1929,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3099:14:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1921,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1830,1913,1933],"referencedDeclaration":1913,"src":"3063:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1920,"id":1931,"nodeType":"Return","src":"3056:58:10"}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"2820:148:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:10","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"addr","nameLocation":"3002:4:10","nodeType":"VariableDeclaration","scope":1933,"src":"2994:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:10"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1933,"src":"3031:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1918,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1998,"nodeType":"FunctionDefinition","src":"3297:723:10","nodes":[],"body":{"id":1997,"nodeType":"Block","src":"3378:642:10","nodes":[],"statements":[{"assignments":[1942],"declarations":[{"constant":false,"id":1942,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:10","nodeType":"VariableDeclaration","scope":1997,"src":"3388:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1941,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1949,"initialValue":{"arguments":[{"arguments":[{"id":1946,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"3428:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1945,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1830,1913,1933],"referencedDeclaration":1933,"src":"3416:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1943,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:10","typeDescriptions":{}}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:10"},{"assignments":[1951],"declarations":[{"constant":false,"id":1951,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:10","nodeType":"VariableDeclaration","scope":1997,"src":"3519:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1952,"nodeType":"VariableDeclarationStatement","src":"3519:17:10"},{"AST":{"nativeSrc":"3571:78:10","nodeType":"YulBlock","src":"3571:78:10","statements":[{"nativeSrc":"3585:54:10","nodeType":"YulAssignment","src":"3585:54:10","value":{"arguments":[{"kind":"number","nativeSrc":"3602:2:10","nodeType":"YulLiteral","src":"3602:2:10","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3620:6:10","nodeType":"YulIdentifier","src":"3620:6:10"},{"kind":"number","nativeSrc":"3628:4:10","nodeType":"YulLiteral","src":"3628:4:10","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3616:3:10","nodeType":"YulIdentifier","src":"3616:3:10"},"nativeSrc":"3616:17:10","nodeType":"YulFunctionCall","src":"3616:17:10"},{"kind":"number","nativeSrc":"3635:2:10","nodeType":"YulLiteral","src":"3635:2:10","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3606:9:10","nodeType":"YulIdentifier","src":"3606:9:10"},"nativeSrc":"3606:32:10","nodeType":"YulFunctionCall","src":"3606:32:10"}],"functionName":{"name":"shr","nativeSrc":"3598:3:10","nodeType":"YulIdentifier","src":"3598:3:10"},"nativeSrc":"3598:41:10","nodeType":"YulFunctionCall","src":"3598:41:10"},"variableNames":[{"name":"hashValue","nativeSrc":"3585:9:10","nodeType":"YulIdentifier","src":"3585:9:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1942,"isOffset":false,"isSlot":false,"src":"3620:6:10","valueSize":1},{"declaration":1951,"isOffset":false,"isSlot":false,"src":"3585:9:10","valueSize":1}],"flags":["memory-safe"],"id":1953,"nodeType":"InlineAssembly","src":"3546:103:10"},{"body":{"id":1990,"nodeType":"Block","src":"3692:291:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1964,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"3798:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1971,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"3827:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1973,"indexExpression":{"id":1972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"3834:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1969,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:10","typeDescriptions":{}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1985,"nodeType":"IfStatement","src":"3794:150:10","trueBody":{"id":1984,"nodeType":"Block","src":"3844:100:10","statements":[{"expression":{"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1978,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"3912:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1980,"indexExpression":{"id":1979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"3919:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1983,"nodeType":"ExpressionStatement","src":"3912:17:10"}]}},{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1986,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"3957:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1989,"nodeType":"ExpressionStatement","src":"3957:15:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"3680:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1991,"initializationExpression":{"assignments":[1955],"declarations":[{"constant":false,"id":1955,"mutability":"mutable","name":"i","nameLocation":"3672:1:10","nodeType":"VariableDeclaration","scope":1991,"src":"3664:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1957,"initialValue":{"hexValue":"3431","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:10","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:10"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:10","subExpression":{"id":1961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"3689:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1963,"nodeType":"ExpressionStatement","src":"3687:3:10"},"nodeType":"ForStatement","src":"3659:324:10"},{"expression":{"arguments":[{"id":1994,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"4006:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1992,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:10","typeDescriptions":{}}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1940,"id":1996,"nodeType":"Return","src":"3992:21:10"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"3127:165:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:10","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"addr","nameLocation":"3334:4:10","nodeType":"VariableDeclaration","scope":1998,"src":"3326:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:10"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"3363:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1938,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2035,"nodeType":"FunctionDefinition","src":"4097:182:10","nodes":[],"body":{"id":2034,"nodeType":"Block","src":"4175:104:10","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"4198:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2008,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:10","typeDescriptions":{}}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:10","memberName":"length","nodeType":"MemberAccess","src":"4192:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2015,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"4217:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2013,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:10","typeDescriptions":{}}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:10","memberName":"length","nodeType":"MemberAccess","src":"4211:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2022,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"4246:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2020,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:10","typeDescriptions":{}}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2019,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2028,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"4269:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2026,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:10","typeDescriptions":{}}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2025,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2007,"id":2033,"nodeType":"Return","src":"4185:87:10"}]},"documentation":{"id":1999,"nodeType":"StructuredDocumentation","src":"4026:66:10","text":" @dev Returns true if the two strings are equal."},"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:10","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"a","nameLocation":"4126:1:10","nodeType":"VariableDeclaration","scope":2035,"src":"4112:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2000,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"b","nameLocation":"4143:1:10","nodeType":"VariableDeclaration","scope":2035,"src":"4129:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2002,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:10"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"4169:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2005,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2054,"nodeType":"FunctionDefinition","src":"4504:136:10","nodes":[],"body":{"id":2053,"nodeType":"Block","src":"4576:64:10","nodes":[],"statements":[{"expression":{"arguments":[{"id":2044,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"4603:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2048,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"4619:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2046,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:10","typeDescriptions":{}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:10","memberName":"length","nodeType":"MemberAccess","src":"4613:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2043,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2054,2085],"referencedDeclaration":2085,"src":"4593:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2042,"id":2052,"nodeType":"Return","src":"4586:47:10"}]},"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"4285:214:10","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:10","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"input","nameLocation":"4537:5:10","nodeType":"VariableDeclaration","scope":2054,"src":"4523:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2037,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:10"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2054,"src":"4567:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2085,"nodeType":"FunctionDefinition","src":"4938:253:10","nodes":[],"body":{"id":2084,"nodeType":"Block","src":"5038:153:10","nodes":[],"statements":[{"assignments":[2067,2069],"declarations":[{"constant":false,"id":2067,"mutability":"mutable","name":"success","nameLocation":"5054:7:10","nodeType":"VariableDeclaration","scope":2084,"src":"5049:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2066,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2069,"mutability":"mutable","name":"value","nameLocation":"5071:5:10","nodeType":"VariableDeclaration","scope":2084,"src":"5063:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2075,"initialValue":{"arguments":[{"id":2071,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"5093:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2072,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"5100:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2073,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"5107:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2070,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2106,2143],"referencedDeclaration":2143,"src":"5080:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:10"},{"condition":{"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:10","subExpression":{"id":2076,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"5126:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"IfStatement","src":"5121:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2078,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"5142:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2080,"nodeType":"RevertStatement","src":"5135:27:10"}},{"expression":{"id":2082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"5179:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2065,"id":2083,"nodeType":"Return","src":"5172:12:10"}]},"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"4646:287:10","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:10","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"input","nameLocation":"4971:5:10","nodeType":"VariableDeclaration","scope":2085,"src":"4957:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2056,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"begin","nameLocation":"4986:5:10","nodeType":"VariableDeclaration","scope":2085,"src":"4978:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2061,"mutability":"mutable","name":"end","nameLocation":"5001:3:10","nodeType":"VariableDeclaration","scope":2085,"src":"4993:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:10"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2085,"src":"5029:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2106,"nodeType":"FunctionDefinition","src":"5417:178:10","nodes":[],"body":{"id":2105,"nodeType":"Block","src":"5512:83:10","nodes":[],"statements":[{"expression":{"arguments":[{"id":2096,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"5558:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2100,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"5574:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2098,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:10","typeDescriptions":{}}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:10","memberName":"length","nodeType":"MemberAccess","src":"5568:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2095,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"5529:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2094,"id":2104,"nodeType":"Return","src":"5522:66:10"}]},"documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"5197:215:10","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:10","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"input","nameLocation":"5453:5:10","nodeType":"VariableDeclaration","scope":2106,"src":"5439:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2087,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:10"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"success","nameLocation":"5488:7:10","nodeType":"VariableDeclaration","scope":2106,"src":"5483:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2090,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"value","nameLocation":"5505:5:10","nodeType":"VariableDeclaration","scope":2106,"src":"5497:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2143,"nodeType":"FunctionDefinition","src":"5844:297:10","nodes":[],"body":{"id":2142,"nodeType":"Block","src":"5997:144:10","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"6011:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2123,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"6023:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2121,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:10","typeDescriptions":{}}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:10","memberName":"length","nodeType":"MemberAccess","src":"6017:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2127,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"6040:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2128,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"6048:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2135,"nodeType":"IfStatement","src":"6007:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2119,"id":2134,"nodeType":"Return","src":"6053:17:10"}},{"expression":{"arguments":[{"id":2137,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"6116:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2138,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"6123:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2139,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"6130:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2136,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"6087:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2119,"id":2141,"nodeType":"Return","src":"6080:54:10"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"5601:238:10","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:10","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"input","nameLocation":"5889:5:10","nodeType":"VariableDeclaration","scope":2143,"src":"5875:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2108,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"begin","nameLocation":"5912:5:10","nodeType":"VariableDeclaration","scope":2143,"src":"5904:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"end","nameLocation":"5935:3:10","nodeType":"VariableDeclaration","scope":2143,"src":"5927:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:10"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"success","nameLocation":"5973:7:10","nodeType":"VariableDeclaration","scope":2143,"src":"5968:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2115,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"5990:5:10","nodeType":"VariableDeclaration","scope":2143,"src":"5982:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2213,"nodeType":"FunctionDefinition","src":"6353:515:10","nodes":[],"body":{"id":2212,"nodeType":"Block","src":"6521:347:10","nodes":[],"statements":[{"assignments":[2158],"declarations":[{"constant":false,"id":2158,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:10","nodeType":"VariableDeclaration","scope":2212,"src":"6531:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2157,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2163,"initialValue":{"arguments":[{"id":2161,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"6559:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2159,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:10","typeDescriptions":{}}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:10"},{"assignments":[2165],"declarations":[{"constant":false,"id":2165,"mutability":"mutable","name":"result","nameLocation":"6584:6:10","nodeType":"VariableDeclaration","scope":2212,"src":"6576:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2167,"initialValue":{"hexValue":"30","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:10"},{"body":{"id":2206,"nodeType":"Block","src":"6642:189:10","statements":[{"assignments":[2179],"declarations":[{"constant":false,"id":2179,"mutability":"mutable","name":"chr","nameLocation":"6662:3:10","nodeType":"VariableDeclaration","scope":2206,"src":"6656:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2178,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2189,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2184,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"6711:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2185,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"6719:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2183,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"6688:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2181,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:10","typeDescriptions":{}}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2180,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"6668:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"6741:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2197,"nodeType":"IfStatement","src":"6737:30:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2156,"id":2196,"nodeType":"Return","src":"6750:17:10"}},{"expression":{"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6781:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2201,"nodeType":"ExpressionStatement","src":"6781:12:10"},{"expression":{"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6807:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2203,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"6817:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2205,"nodeType":"ExpressionStatement","src":"6807:13:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"6628:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2173,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"6632:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2207,"initializationExpression":{"assignments":[2169],"declarations":[{"constant":false,"id":2169,"mutability":"mutable","name":"i","nameLocation":"6617:1:10","nodeType":"VariableDeclaration","scope":2207,"src":"6609:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2171,"initialValue":{"id":2170,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"6621:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:10","subExpression":{"id":2175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"6639:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2177,"nodeType":"ExpressionStatement","src":"6637:3:10"},"nodeType":"ForStatement","src":"6604:227:10"},{"expression":{"components":[{"hexValue":"74727565","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6854:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2156,"id":2211,"nodeType":"Return","src":"6840:21:10"}]},"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"6147:201:10","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:10","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"input","nameLocation":"6414:5:10","nodeType":"VariableDeclaration","scope":2213,"src":"6400:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2145,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"begin","nameLocation":"6437:5:10","nodeType":"VariableDeclaration","scope":2213,"src":"6429:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"end","nameLocation":"6460:3:10","nodeType":"VariableDeclaration","scope":2213,"src":"6452:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:10"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"success","nameLocation":"6497:7:10","nodeType":"VariableDeclaration","scope":2213,"src":"6492:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2152,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"value","nameLocation":"6514:5:10","nodeType":"VariableDeclaration","scope":2213,"src":"6506:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"private"},{"id":2232,"nodeType":"FunctionDefinition","src":"7095:133:10","nodes":[],"body":{"id":2231,"nodeType":"Block","src":"7165:63:10","nodes":[],"statements":[{"expression":{"arguments":[{"id":2222,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"7191:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2226,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"7207:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2224,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:10","typeDescriptions":{}}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:10","memberName":"length","nodeType":"MemberAccess","src":"7201:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2221,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2232,2263],"referencedDeclaration":2263,"src":"7182:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2220,"id":2230,"nodeType":"Return","src":"7175:46:10"}]},"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"6874:216:10","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:10","parameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"input","nameLocation":"7127:5:10","nodeType":"VariableDeclaration","scope":2232,"src":"7113:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2215,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:10"},"returnParameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2232,"src":"7157:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2218,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2263,"nodeType":"FunctionDefinition","src":"7535:249:10","nodes":[],"body":{"id":2262,"nodeType":"Block","src":"7633:151:10","nodes":[],"statements":[{"assignments":[2245,2247],"declarations":[{"constant":false,"id":2245,"mutability":"mutable","name":"success","nameLocation":"7649:7:10","nodeType":"VariableDeclaration","scope":2262,"src":"7644:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2244,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"value","nameLocation":"7665:5:10","nodeType":"VariableDeclaration","scope":2262,"src":"7658:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2246,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2253,"initialValue":{"arguments":[{"id":2249,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"7686:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2250,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"7693:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2251,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"7700:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2248,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2284,2326],"referencedDeclaration":2326,"src":"7674:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:10"},{"condition":{"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:10","subExpression":{"id":2254,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"7719:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2259,"nodeType":"IfStatement","src":"7714:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2256,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"7735:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2258,"nodeType":"RevertStatement","src":"7728:27:10"}},{"expression":{"id":2260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"7772:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2243,"id":2261,"nodeType":"Return","src":"7765:12:10"}]},"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"7234:296:10","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:10","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"input","nameLocation":"7567:5:10","nodeType":"VariableDeclaration","scope":2263,"src":"7553:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2234,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"begin","nameLocation":"7582:5:10","nodeType":"VariableDeclaration","scope":2263,"src":"7574:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"end","nameLocation":"7597:3:10","nodeType":"VariableDeclaration","scope":2263,"src":"7589:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:10"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2263,"src":"7625:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2241,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2284,"nodeType":"FunctionDefinition","src":"8082:175:10","nodes":[],"body":{"id":2283,"nodeType":"Block","src":"8175:82:10","nodes":[],"statements":[{"expression":{"arguments":[{"id":2274,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"8220:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2278,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"8236:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2276,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:10","typeDescriptions":{}}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:10","memberName":"length","nodeType":"MemberAccess","src":"8230:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2273,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"8192:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2272,"id":2282,"nodeType":"Return","src":"8185:65:10"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"7790:287:10","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:10","parameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"input","nameLocation":"8117:5:10","nodeType":"VariableDeclaration","scope":2284,"src":"8103:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2265,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:10"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"success","nameLocation":"8152:7:10","nodeType":"VariableDeclaration","scope":2284,"src":"8147:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2268,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"value","nameLocation":"8168:5:10","nodeType":"VariableDeclaration","scope":2284,"src":"8161:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2270,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2289,"nodeType":"VariableDeclaration","src":"8263:50:10","nodes":[],"constant":true,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:10","scope":2906,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"id":2326,"nodeType":"FunctionDefinition","src":"8628:294:10","nodes":[],"body":{"id":2325,"nodeType":"Block","src":"8779:143:10","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2303,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"8793:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2306,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"8805:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2304,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:10","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:10","memberName":"length","nodeType":"MemberAccess","src":"8799:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2310,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"8822:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2311,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"8830:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2318,"nodeType":"IfStatement","src":"8789:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2302,"id":2317,"nodeType":"Return","src":"8835:17:10"}},{"expression":{"arguments":[{"id":2320,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"8897:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2321,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"8904:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2322,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"8911:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2319,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"8869:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2302,"id":2324,"nodeType":"Return","src":"8862:53:10"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"8320:303:10","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:10","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"input","nameLocation":"8672:5:10","nodeType":"VariableDeclaration","scope":2326,"src":"8658:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2291,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2294,"mutability":"mutable","name":"begin","nameLocation":"8695:5:10","nodeType":"VariableDeclaration","scope":2326,"src":"8687:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"end","nameLocation":"8718:3:10","nodeType":"VariableDeclaration","scope":2326,"src":"8710:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:10"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"success","nameLocation":"8756:7:10","nodeType":"VariableDeclaration","scope":2326,"src":"8751:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2298,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"value","nameLocation":"8772:5:10","nodeType":"VariableDeclaration","scope":2326,"src":"8765:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2300,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2447,"nodeType":"FunctionDefinition","src":"9133:978:10","nodes":[],"body":{"id":2446,"nodeType":"Block","src":"9299:812:10","nodes":[],"statements":[{"assignments":[2341],"declarations":[{"constant":false,"id":2341,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:10","nodeType":"VariableDeclaration","scope":2446,"src":"9309:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2340,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2346,"initialValue":{"arguments":[{"id":2344,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"9337:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2342,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:10","typeDescriptions":{}}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:10"},{"assignments":[2348],"declarations":[{"constant":false,"id":2348,"mutability":"mutable","name":"sign","nameLocation":"9407:4:10","nodeType":"VariableDeclaration","scope":2446,"src":"9400:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2347,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2364,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2349,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"9414:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2350,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"9423:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2359,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"9471:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2360,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"9479:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2358,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"9448:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2356,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:10","typeDescriptions":{}}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:10","trueExpression":{"arguments":[{"hexValue":"30","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2352,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:10","typeDescriptions":{}}},"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:10"},{"assignments":[2366],"declarations":[{"constant":false,"id":2366,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:10","nodeType":"VariableDeclaration","scope":2446,"src":"9567:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2365,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2373,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"9587:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2368,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:10","typeDescriptions":{}}},"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:10"},{"assignments":[2375],"declarations":[{"constant":false,"id":2375,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:10","nodeType":"VariableDeclaration","scope":2446,"src":"9616:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2374,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2382,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2376,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"9636:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2377,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:10","typeDescriptions":{}}},"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:10"},{"assignments":[2384],"declarations":[{"constant":false,"id":2384,"mutability":"mutable","name":"offset","nameLocation":"9673:6:10","nodeType":"VariableDeclaration","scope":2446,"src":"9665:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2391,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2385,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"9683:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2386,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"9699:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"9682:37:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:10"},{"assignments":[2393,2395],"declarations":[{"constant":false,"id":2393,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:10","nodeType":"VariableDeclaration","scope":2446,"src":"9733:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2392,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:10","nodeType":"VariableDeclaration","scope":2446,"src":"9750:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2403,"initialValue":{"arguments":[{"id":2397,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"9783:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2398,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"9790:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2399,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"9798:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2401,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"9806:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2396,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2106,2143],"referencedDeclaration":2143,"src":"9770:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"9825:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"9839:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2406,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"9850:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"9967:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2425,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"9981:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2427,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"9997:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2428,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"10009:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2339,"id":2443,"nodeType":"Return","src":"10087:17:10"},"id":2444,"nodeType":"IfStatement","src":"9963:141:10","trueBody":{"id":2439,"nodeType":"Block","src":"10025:56:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2433,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:10","memberName":"min","nodeType":"MemberAccess","src":"10053:16:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2339,"id":2438,"nodeType":"Return","src":"10039:31:10"}]}},"id":2445,"nodeType":"IfStatement","src":"9821:283:10","trueBody":{"id":2423,"nodeType":"Block","src":"9866:91:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2410,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"9894:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2418,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"9936:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2416,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:10","typeDescriptions":{}}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:10","trueExpression":{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:10","subExpression":{"arguments":[{"id":2413,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"9917:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2411,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:10","typeDescriptions":{}}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2339,"id":2422,"nodeType":"Return","src":"9880:66:10"}]}}]},"documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"8928:200:10","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:10","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"input","nameLocation":"9193:5:10","nodeType":"VariableDeclaration","scope":2447,"src":"9179:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2328,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"begin","nameLocation":"9216:5:10","nodeType":"VariableDeclaration","scope":2447,"src":"9208:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"end","nameLocation":"9239:3:10","nodeType":"VariableDeclaration","scope":2447,"src":"9231:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:10"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"success","nameLocation":"9276:7:10","nodeType":"VariableDeclaration","scope":2447,"src":"9271:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2335,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"value","nameLocation":"9292:5:10","nodeType":"VariableDeclaration","scope":2447,"src":"9285:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2337,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"private"},{"id":2466,"nodeType":"FunctionDefinition","src":"10381:142:10","nodes":[],"body":{"id":2465,"nodeType":"Block","src":"10456:67:10","nodes":[],"statements":[{"expression":{"arguments":[{"id":2456,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"10486:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2460,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"10502:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2458,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:10","typeDescriptions":{}}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:10","memberName":"length","nodeType":"MemberAccess","src":"10496:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2455,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2466,2497],"referencedDeclaration":2497,"src":"10473:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2454,"id":2464,"nodeType":"Return","src":"10466:50:10"}]},"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"10117:259:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:10","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"input","nameLocation":"10417:5:10","nodeType":"VariableDeclaration","scope":2466,"src":"10403:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2449,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:10"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2466,"src":"10447:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2497,"nodeType":"FunctionDefinition","src":"10834:259:10","nodes":[],"body":{"id":2496,"nodeType":"Block","src":"10937:156:10","nodes":[],"statements":[{"assignments":[2479,2481],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"success","nameLocation":"10953:7:10","nodeType":"VariableDeclaration","scope":2496,"src":"10948:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2478,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"value","nameLocation":"10970:5:10","nodeType":"VariableDeclaration","scope":2496,"src":"10962:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2487,"initialValue":{"arguments":[{"id":2483,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"10995:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2484,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"11002:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2485,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11009:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2482,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2518,2555],"referencedDeclaration":2555,"src":"10979:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:10"},{"condition":{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:10","subExpression":{"id":2488,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"11028:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2493,"nodeType":"IfStatement","src":"11023:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2490,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"11044:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"RevertStatement","src":"11037:27:10"}},{"expression":{"id":2494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"11081:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2477,"id":2495,"nodeType":"Return","src":"11074:12:10"}]},"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"10529:300:10","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:10","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"input","nameLocation":"10870:5:10","nodeType":"VariableDeclaration","scope":2497,"src":"10856:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2468,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"begin","nameLocation":"10885:5:10","nodeType":"VariableDeclaration","scope":2497,"src":"10877:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"end","nameLocation":"10900:3:10","nodeType":"VariableDeclaration","scope":2497,"src":"10892:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:10"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2497,"src":"10928:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2518,"nodeType":"FunctionDefinition","src":"11322:184:10","nodes":[],"body":{"id":2517,"nodeType":"Block","src":"11420:86:10","nodes":[],"statements":[{"expression":{"arguments":[{"id":2508,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"11469:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2512,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"11485:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2510,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:10","typeDescriptions":{}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:10","memberName":"length","nodeType":"MemberAccess","src":"11479:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2507,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"11437:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2506,"id":2516,"nodeType":"Return","src":"11430:69:10"}]},"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"11099:218:10","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:10","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"input","nameLocation":"11361:5:10","nodeType":"VariableDeclaration","scope":2518,"src":"11347:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2499,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:10"},"returnParameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"success","nameLocation":"11396:7:10","nodeType":"VariableDeclaration","scope":2518,"src":"11391:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2502,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"value","nameLocation":"11413:5:10","nodeType":"VariableDeclaration","scope":2518,"src":"11405:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2555,"nodeType":"FunctionDefinition","src":"11758:303:10","nodes":[],"body":{"id":2554,"nodeType":"Block","src":"11914:147:10","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2532,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"11928:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2535,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"11940:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2533,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:10","typeDescriptions":{}}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:10","memberName":"length","nodeType":"MemberAccess","src":"11934:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2539,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"11957:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2540,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"11965:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2547,"nodeType":"IfStatement","src":"11924:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2531,"id":2546,"nodeType":"Return","src":"11970:17:10"}},{"expression":{"arguments":[{"id":2549,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"12036:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2550,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"12043:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2551,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"12050:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2548,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"12004:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2531,"id":2553,"nodeType":"Return","src":"11997:57:10"}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"11512:241:10","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:10","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"input","nameLocation":"11806:5:10","nodeType":"VariableDeclaration","scope":2555,"src":"11792:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2520,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"begin","nameLocation":"11829:5:10","nodeType":"VariableDeclaration","scope":2555,"src":"11821:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"end","nameLocation":"11852:3:10","nodeType":"VariableDeclaration","scope":2555,"src":"11844:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:10"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"success","nameLocation":"11890:7:10","nodeType":"VariableDeclaration","scope":2555,"src":"11885:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2527,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"value","nameLocation":"11907:5:10","nodeType":"VariableDeclaration","scope":2555,"src":"11899:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2658,"nodeType":"FunctionDefinition","src":"12276:1051:10","nodes":[],"body":{"id":2657,"nodeType":"Block","src":"12447:880:10","nodes":[],"statements":[{"assignments":[2570],"declarations":[{"constant":false,"id":2570,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:10","nodeType":"VariableDeclaration","scope":2657,"src":"12457:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2569,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2575,"initialValue":{"arguments":[{"id":2573,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"12485:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2571,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:10","typeDescriptions":{}}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:10"},{"assignments":[2577],"declarations":[{"constant":false,"id":2577,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:10","nodeType":"VariableDeclaration","scope":2657,"src":"12539:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2576,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2597,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2578,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"12557:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2579,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"12563:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2587,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"12607:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2588,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"12615:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2586,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"12584:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2584,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:10","typeDescriptions":{}}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2591,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:10","typeDescriptions":{}}},"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:10"},{"assignments":[2599],"declarations":[{"constant":false,"id":2599,"mutability":"mutable","name":"offset","nameLocation":"12727:6:10","nodeType":"VariableDeclaration","scope":2657,"src":"12719:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2605,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2600,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"12736:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"12736:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:10"},{"assignments":[2607],"declarations":[{"constant":false,"id":2607,"mutability":"mutable","name":"result","nameLocation":"12777:6:10","nodeType":"VariableDeclaration","scope":2657,"src":"12769:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2609,"initialValue":{"hexValue":"30","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:10"},{"body":{"id":2651,"nodeType":"Block","src":"12844:446:10","statements":[{"assignments":[2623],"declarations":[{"constant":false,"id":2623,"mutability":"mutable","name":"chr","nameLocation":"12864:3:10","nodeType":"VariableDeclaration","scope":2651,"src":"12858:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2622,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2633,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2628,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"12913:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2629,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"12921:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2627,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"12890:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2625,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:10","typeDescriptions":{}}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2624,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"12870:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"12943:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2641,"nodeType":"IfStatement","src":"12939:31:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2568,"id":2640,"nodeType":"Return","src":"12953:17:10"}},{"expression":{"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"12984:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2645,"nodeType":"ExpressionStatement","src":"12984:12:10"},{"id":2650,"nodeType":"UncheckedBlock","src":"13010:270:10","statements":[{"expression":{"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"13252:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2647,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"13262:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2649,"nodeType":"ExpressionStatement","src":"13252:13:10"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"12830:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2617,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"12834:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2652,"initializationExpression":{"assignments":[2611],"declarations":[{"constant":false,"id":2611,"mutability":"mutable","name":"i","nameLocation":"12810:1:10","nodeType":"VariableDeclaration","scope":2652,"src":"12802:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2615,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2612,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"12814:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2613,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"12822:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:10","subExpression":{"id":2619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"12841:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2621,"nodeType":"ExpressionStatement","src":"12839:3:10"},"nodeType":"ForStatement","src":"12797:493:10"},{"expression":{"components":[{"hexValue":"74727565","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"13313:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2568,"id":2656,"nodeType":"Return","src":"13299:21:10"}]},"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"12067:204:10","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:10","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"input","nameLocation":"12340:5:10","nodeType":"VariableDeclaration","scope":2658,"src":"12326:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2557,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"begin","nameLocation":"12363:5:10","nodeType":"VariableDeclaration","scope":2658,"src":"12355:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"end","nameLocation":"12386:3:10","nodeType":"VariableDeclaration","scope":2658,"src":"12378:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:10"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"success","nameLocation":"12423:7:10","nodeType":"VariableDeclaration","scope":2658,"src":"12418:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2564,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"value","nameLocation":"12440:5:10","nodeType":"VariableDeclaration","scope":2658,"src":"12432:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"private"},{"id":2677,"nodeType":"FunctionDefinition","src":"13550:142:10","nodes":[],"body":{"id":2676,"nodeType":"Block","src":"13625:67:10","nodes":[],"statements":[{"expression":{"arguments":[{"id":2667,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"13655:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2671,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"13671:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2669,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:10","typeDescriptions":{}}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:10","memberName":"length","nodeType":"MemberAccess","src":"13665:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2666,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2677,2708],"referencedDeclaration":2708,"src":"13642:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2665,"id":2675,"nodeType":"Return","src":"13635:50:10"}]},"documentation":{"id":2659,"nodeType":"StructuredDocumentation","src":"13333:212:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:10","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"input","nameLocation":"13586:5:10","nodeType":"VariableDeclaration","scope":2677,"src":"13572:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2660,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:10"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2677,"src":"13616:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2708,"nodeType":"FunctionDefinition","src":"13955:268:10","nodes":[],"body":{"id":2707,"nodeType":"Block","src":"14058:165:10","nodes":[],"statements":[{"assignments":[2690,2692],"declarations":[{"constant":false,"id":2690,"mutability":"mutable","name":"success","nameLocation":"14074:7:10","nodeType":"VariableDeclaration","scope":2707,"src":"14069:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2689,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"value","nameLocation":"14091:5:10","nodeType":"VariableDeclaration","scope":2707,"src":"14083:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2691,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2698,"initialValue":{"arguments":[{"id":2694,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"14116:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2695,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"14123:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2696,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"14130:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2693,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2729,2833],"referencedDeclaration":2833,"src":"14100:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:10"},{"condition":{"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:10","subExpression":{"id":2699,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"14149:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2704,"nodeType":"IfStatement","src":"14144:50:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2701,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"14165:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2703,"nodeType":"RevertStatement","src":"14158:36:10"}},{"expression":{"id":2705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"14211:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2688,"id":2706,"nodeType":"Return","src":"14204:12:10"}]},"documentation":{"id":2678,"nodeType":"StructuredDocumentation","src":"13698:252:10","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:10","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"input","nameLocation":"13991:5:10","nodeType":"VariableDeclaration","scope":2708,"src":"13977:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2679,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"begin","nameLocation":"14006:5:10","nodeType":"VariableDeclaration","scope":2708,"src":"13998:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"end","nameLocation":"14021:3:10","nodeType":"VariableDeclaration","scope":2708,"src":"14013:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:10"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2708,"src":"14049:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2686,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2729,"nodeType":"FunctionDefinition","src":"14425:168:10","nodes":[],"body":{"id":2728,"nodeType":"Block","src":"14523:70:10","nodes":[],"statements":[{"expression":{"arguments":[{"id":2719,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"14556:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2723,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"14572:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2721,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:10","typeDescriptions":{}}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:10","memberName":"length","nodeType":"MemberAccess","src":"14566:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2718,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2729,2833],"referencedDeclaration":2833,"src":"14540:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2717,"id":2727,"nodeType":"Return","src":"14533:53:10"}]},"documentation":{"id":2709,"nodeType":"StructuredDocumentation","src":"14229:191:10","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:10","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"input","nameLocation":"14464:5:10","nodeType":"VariableDeclaration","scope":2729,"src":"14450:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2710,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:10"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"success","nameLocation":"14499:7:10","nodeType":"VariableDeclaration","scope":2729,"src":"14494:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2713,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"value","nameLocation":"14516:5:10","nodeType":"VariableDeclaration","scope":2729,"src":"14508:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2715,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2833,"nodeType":"FunctionDefinition","src":"14807:889:10","nodes":[],"body":{"id":2832,"nodeType":"Block","src":"14963:733:10","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"14977:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2746,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"14989:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2744,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:10","typeDescriptions":{}}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:10","memberName":"length","nodeType":"MemberAccess","src":"14983:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"15006:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2751,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15014:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2761,"nodeType":"IfStatement","src":"14973:72:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:10","typeDescriptions":{}}},"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2742,"id":2760,"nodeType":"Return","src":"15019:26:10"}},{"assignments":[2763],"declarations":[{"constant":false,"id":2763,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:10","nodeType":"VariableDeclaration","scope":2832,"src":"15056:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2762,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2786,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15074:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"15080:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2775,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"15130:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:10","typeDescriptions":{}}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2777,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"15138:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2772,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"15101:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2770,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:10","typeDescriptions":{}}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2780,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:10","typeDescriptions":{}}},"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:10"},{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:10","nodeType":"VariableDeclaration","scope":2832,"src":"15242:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2796,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:10","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2790,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"15272:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"15272:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15359:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2798,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"15365:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2800,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"15374:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2830,"nodeType":"Block","src":"15639:51:10","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2824,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:10","typeDescriptions":{}}},"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2742,"id":2829,"nodeType":"Return","src":"15653:26:10"}]},"id":2831,"nodeType":"IfStatement","src":"15355:335:10","trueBody":{"id":2822,"nodeType":"Block","src":"15390:243:10","statements":[{"assignments":[2803,2805],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"s","nameLocation":"15511:1:10","nodeType":"VariableDeclaration","scope":2822,"src":"15506:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2802,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"v","nameLocation":"15522:1:10","nodeType":"VariableDeclaration","scope":2822,"src":"15514:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2811,"initialValue":{"arguments":[{"id":2807,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"15559:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2808,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"15566:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2809,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15573:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2806,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"15527:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:10"},{"expression":{"components":[{"id":2812,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"15599:1:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2817,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"15618:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2815,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:10","typeDescriptions":{}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:10","typeDescriptions":{}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2742,"id":2821,"nodeType":"Return","src":"15591:31:10"}]}}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"14599:203:10","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:10","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"input","nameLocation":"14855:5:10","nodeType":"VariableDeclaration","scope":2833,"src":"14841:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2731,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"begin","nameLocation":"14878:5:10","nodeType":"VariableDeclaration","scope":2833,"src":"14870:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"end","nameLocation":"14901:3:10","nodeType":"VariableDeclaration","scope":2833,"src":"14893:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:10"},"returnParameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"success","nameLocation":"14939:7:10","nodeType":"VariableDeclaration","scope":2833,"src":"14934:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2738,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"value","nameLocation":"14956:5:10","nodeType":"VariableDeclaration","scope":2833,"src":"14948:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2893,"nodeType":"FunctionDefinition","src":"15702:524:10","nodes":[],"body":{"id":2892,"nodeType":"Block","src":"15765:461:10","nodes":[],"statements":[{"assignments":[2841],"declarations":[{"constant":false,"id":2841,"mutability":"mutable","name":"value","nameLocation":"15781:5:10","nodeType":"VariableDeclaration","scope":2892,"src":"15775:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2840,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2846,"initialValue":{"arguments":[{"id":2844,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"15795:3:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2842,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:10","typeDescriptions":{}}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:10"},{"id":2889,"nodeType":"UncheckedBlock","src":"15959:238:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"15987:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:10","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"16001:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:10","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"16047:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"16061:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:10","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"16108:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"16122:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:10","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2881,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2880,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:10","memberName":"max","nodeType":"MemberAccess","src":"16171:15:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2839,"id":2885,"nodeType":"Return","src":"16164:22:10"},"id":2886,"nodeType":"IfStatement","src":"16104:82:10","trueBody":{"expression":{"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"16134:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:10","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2879,"nodeType":"ExpressionStatement","src":"16134:11:10"}},"id":2887,"nodeType":"IfStatement","src":"16043:143:10","trueBody":{"expression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"16074:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:10","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2868,"nodeType":"ExpressionStatement","src":"16074:11:10"}},"id":2888,"nodeType":"IfStatement","src":"15983:203:10","trueBody":{"expression":{"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"16013:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2857,"nodeType":"ExpressionStatement","src":"16013:11:10"}}]},{"expression":{"id":2890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"16214:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2839,"id":2891,"nodeType":"Return","src":"16207:12:10"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:10","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"chr","nameLocation":"15731:3:10","nodeType":"VariableDeclaration","scope":2893,"src":"15724:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2834,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:10"},"returnParameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"15758:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2837,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"private"},{"id":2905,"nodeType":"FunctionDefinition","src":"16505:331:10","nodes":[],"body":{"id":2904,"nodeType":"Block","src":"16611:225:10","nodes":[],"statements":[{"AST":{"nativeSrc":"16760:70:10","nodeType":"YulBlock","src":"16760:70:10","statements":[{"nativeSrc":"16774:46:10","nodeType":"YulAssignment","src":"16774:46:10","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"16793:6:10","nodeType":"YulIdentifier","src":"16793:6:10"},{"arguments":[{"kind":"number","nativeSrc":"16805:4:10","nodeType":"YulLiteral","src":"16805:4:10","type":"","value":"0x20"},{"name":"offset","nativeSrc":"16811:6:10","nodeType":"YulIdentifier","src":"16811:6:10"}],"functionName":{"name":"add","nativeSrc":"16801:3:10","nodeType":"YulIdentifier","src":"16801:3:10"},"nativeSrc":"16801:17:10","nodeType":"YulFunctionCall","src":"16801:17:10"}],"functionName":{"name":"add","nativeSrc":"16789:3:10","nodeType":"YulIdentifier","src":"16789:3:10"},"nativeSrc":"16789:30:10","nodeType":"YulFunctionCall","src":"16789:30:10"}],"functionName":{"name":"mload","nativeSrc":"16783:5:10","nodeType":"YulIdentifier","src":"16783:5:10"},"nativeSrc":"16783:37:10","nodeType":"YulFunctionCall","src":"16783:37:10"},"variableNames":[{"name":"value","nativeSrc":"16774:5:10","nodeType":"YulIdentifier","src":"16774:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2896,"isOffset":false,"isSlot":false,"src":"16793:6:10","valueSize":1},{"declaration":2898,"isOffset":false,"isSlot":false,"src":"16811:6:10","valueSize":1},{"declaration":2901,"isOffset":false,"isSlot":false,"src":"16774:5:10","valueSize":1}],"flags":["memory-safe"],"id":2903,"nodeType":"InlineAssembly","src":"16735:95:10"}]},"documentation":{"id":2894,"nodeType":"StructuredDocumentation","src":"16232:268:10","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:10","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:10","nodeType":"VariableDeclaration","scope":2905,"src":"16537:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2895,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2898,"mutability":"mutable","name":"offset","nameLocation":"16566:6:10","nodeType":"VariableDeclaration","scope":2905,"src":"16558:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:10"},"returnParameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"value","nameLocation":"16604:5:10","nodeType":"VariableDeclaration","scope":2905,"src":"16596:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:10"},"scope":2906,"stateMutability":"pure","virtual":false,"visibility":"private"}],"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"262:34:10","text":" @dev String operations."},"fullyImplemented":true,"linearizedBaseContracts":[2906],"name":"Strings","nameLocation":"305:7:10","scope":2907,"usedErrors":[1730,1733,1736],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":11,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","id":2931,"exportedSymbols":{"ERC165":[2930],"IERC165":[2942]},"nodeType":"SourceUnit","src":"114:798:11","nodes":[{"id":2908,"nodeType":"PragmaDirective","src":"114:24:11","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":2910,"nodeType":"ImportDirective","src":"140:38:11","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","nameLocation":"-1:-1:-1","scope":2931,"sourceUnit":2943,"symbolAliases":[{"foreign":{"id":2909,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"148:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2930,"nodeType":"ContractDefinition","src":"660:251:11","nodes":[{"id":2929,"nodeType":"FunctionDefinition","src":"763:146:11","nodes":[],"body":{"id":2928,"nodeType":"Block","src":"845:64:11","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"862:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2923,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"882:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2942_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2942_$","typeString":"type(contract IERC165)"}],"id":2922,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2942","typeString":"type(contract IERC165)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2920,"id":2927,"nodeType":"Return","src":"855:47:11"}]},"baseFunctions":[2941],"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"702:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:11","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:11","nodeType":"VariableDeclaration","scope":2929,"src":"790:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2915,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:11"},"returnParameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2929,"src":"839:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2918,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:11"},"scope":2930,"stateMutability":"view","virtual":true,"visibility":"public"}],"abstract":true,"baseContracts":[{"baseName":{"id":2912,"name":"IERC165","nameLocations":["688:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"688:7:11"},"id":2913,"nodeType":"InheritanceSpecifier","src":"688:7:11"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"180:479:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"linearizedBaseContracts":[2930,2942],"name":"ERC165","nameLocation":"678:6:11","scope":2931,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":12,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2943,"exportedSymbols":{"IERC165":[2942]},"nodeType":"SourceUnit","src":"115:755:12","nodes":[{"id":2932,"nodeType":"PragmaDirective","src":"115:24:12","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":2942,"nodeType":"ContractDefinition","src":"422:447:12","nodes":[{"id":2941,"nodeType":"FunctionDefinition","src":"791:76:12","nodes":[],"documentation":{"id":2934,"nodeType":"StructuredDocumentation","src":"446:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:12","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:12","nodeType":"VariableDeclaration","scope":2941,"src":"818:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2935,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:12"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2941,"src":"861:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2938,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:12"},"scope":2942,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"141:280:12","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"linearizedBaseContracts":[2942],"name":"IERC165","nameLocation":"432:7:12","scope":2943,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"id":13,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/math/Math.sol","id":4549,"exportedSymbols":{"Math":[4548],"Panic":[1706],"SafeCast":[6313]},"nodeType":"SourceUnit","src":"103:28205:13","nodes":[{"id":2944,"nodeType":"PragmaDirective","src":"103:24:13","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":2946,"nodeType":"ImportDirective","src":"129:35:13","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","nameLocation":"-1:-1:-1","scope":4549,"sourceUnit":1707,"symbolAliases":[{"foreign":{"id":2945,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"137:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2948,"nodeType":"ImportDirective","src":"165:40:13","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","nameLocation":"-1:-1:-1","scope":4549,"sourceUnit":6314,"symbolAliases":[{"foreign":{"id":2947,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"173:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":4548,"nodeType":"ContractDefinition","src":"281:28026:13","nodes":[{"id":2954,"nodeType":"EnumDefinition","src":"300:169:13","nodes":[],"canonicalName":"Math.Rounding","members":[{"id":2950,"name":"Floor","nameLocation":"324:5:13","nodeType":"EnumValue","src":"324:5:13"},{"id":2951,"name":"Ceil","nameLocation":"367:4:13","nodeType":"EnumValue","src":"367:4:13"},{"id":2952,"name":"Trunc","nameLocation":"409:5:13","nodeType":"EnumValue","src":"409:5:13"},{"id":2953,"name":"Expand","nameLocation":"439:6:13","nodeType":"EnumValue","src":"439:6:13"}],"name":"Rounding","nameLocation":"305:8:13"},{"id":2986,"nodeType":"FunctionDefinition","src":"586:231:13","nodes":[],"body":{"id":2985,"nodeType":"Block","src":"677:140:13","nodes":[],"statements":[{"id":2984,"nodeType":"UncheckedBlock","src":"687:124:13","statements":[{"assignments":[2967],"declarations":[{"constant":false,"id":2967,"mutability":"mutable","name":"c","nameLocation":"719:1:13","nodeType":"VariableDeclaration","scope":2984,"src":"711:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2971,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"723:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"727:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"746:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2973,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"750:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2979,"nodeType":"IfStatement","src":"742:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2965,"id":2978,"nodeType":"Return","src":"753:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2981,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"798:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2965,"id":2983,"nodeType":"Return","src":"784:16:13"}]}]},"documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"475:106:13","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:13","parameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"a","nameLocation":"610:1:13","nodeType":"VariableDeclaration","scope":2986,"src":"602:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2959,"mutability":"mutable","name":"b","nameLocation":"621:1:13","nodeType":"VariableDeclaration","scope":2986,"src":"613:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:13"},"returnParameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"success","nameLocation":"652:7:13","nodeType":"VariableDeclaration","scope":2986,"src":"647:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2961,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"result","nameLocation":"669:6:13","nodeType":"VariableDeclaration","scope":2986,"src":"661:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3014,"nodeType":"FunctionDefinition","src":"937:204:13","nodes":[],"body":{"id":3013,"nodeType":"Block","src":"1028:113:13","nodes":[],"statements":[{"id":3012,"nodeType":"UncheckedBlock","src":"1038:97:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2998,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"1066:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2999,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"1070:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3005,"nodeType":"IfStatement","src":"1062:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2997,"id":3004,"nodeType":"Return","src":"1073:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"1118:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3008,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"1122:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2997,"id":3011,"nodeType":"Return","src":"1104:20:13"}]}]},"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"823:109:13","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:13","parameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"a","nameLocation":"961:1:13","nodeType":"VariableDeclaration","scope":3014,"src":"953:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"b","nameLocation":"972:1:13","nodeType":"VariableDeclaration","scope":3014,"src":"964:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:13"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"success","nameLocation":"1003:7:13","nodeType":"VariableDeclaration","scope":3014,"src":"998:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2993,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"result","nameLocation":"1020:6:13","nodeType":"VariableDeclaration","scope":3014,"src":"1012:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3056,"nodeType":"FunctionDefinition","src":"1264:508:13","nodes":[],"body":{"id":3055,"nodeType":"Block","src":"1355:417:13","nodes":[],"statements":[{"id":3054,"nodeType":"UncheckedBlock","src":"1365:401:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"1623:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3033,"nodeType":"IfStatement","src":"1619:28:13","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3025,"id":3032,"nodeType":"Return","src":"1631:16:13"}},{"assignments":[3035],"declarations":[{"constant":false,"id":3035,"mutability":"mutable","name":"c","nameLocation":"1669:1:13","nodeType":"VariableDeclaration","scope":3054,"src":"1661:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3039,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3036,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"1673:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3037,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"1677:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1696:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"1700:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"1705:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3049,"nodeType":"IfStatement","src":"1692:33:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3025,"id":3048,"nodeType":"Return","src":"1708:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3051,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1753:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3025,"id":3053,"nodeType":"Return","src":"1739:16:13"}]}]},"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"1147:112:13","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:13","parameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"a","nameLocation":"1288:1:13","nodeType":"VariableDeclaration","scope":3056,"src":"1280:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"b","nameLocation":"1299:1:13","nodeType":"VariableDeclaration","scope":3056,"src":"1291:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:13"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"success","nameLocation":"1330:7:13","nodeType":"VariableDeclaration","scope":3056,"src":"1325:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3021,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"result","nameLocation":"1347:6:13","nodeType":"VariableDeclaration","scope":3056,"src":"1339:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3084,"nodeType":"FunctionDefinition","src":"1896:205:13","nodes":[],"body":{"id":3083,"nodeType":"Block","src":"1987:114:13","nodes":[],"statements":[{"id":3082,"nodeType":"UncheckedBlock","src":"1997:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"2025:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3075,"nodeType":"IfStatement","src":"2021:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3073,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3067,"id":3074,"nodeType":"Return","src":"2033:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"2078:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3078,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"2082:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3067,"id":3081,"nodeType":"Return","src":"2064:20:13"}]}]},"documentation":{"id":3057,"nodeType":"StructuredDocumentation","src":"1778:113:13","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:13","parameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"a","nameLocation":"1920:1:13","nodeType":"VariableDeclaration","scope":3084,"src":"1912:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"b","nameLocation":"1931:1:13","nodeType":"VariableDeclaration","scope":3084,"src":"1923:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:13"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"success","nameLocation":"1962:7:13","nodeType":"VariableDeclaration","scope":3084,"src":"1957:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3063,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"result","nameLocation":"1979:6:13","nodeType":"VariableDeclaration","scope":3084,"src":"1971:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3112,"nodeType":"FunctionDefinition","src":"2235:205:13","nodes":[],"body":{"id":3111,"nodeType":"Block","src":"2326:114:13","nodes":[],"statements":[{"id":3110,"nodeType":"UncheckedBlock","src":"2336:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2364:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3103,"nodeType":"IfStatement","src":"2360:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3095,"id":3102,"nodeType":"Return","src":"2372:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"2417:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3106,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2421:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3095,"id":3109,"nodeType":"Return","src":"2403:20:13"}]}]},"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"2107:123:13","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:13","parameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"a","nameLocation":"2259:1:13","nodeType":"VariableDeclaration","scope":3112,"src":"2251:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"b","nameLocation":"2270:1:13","nodeType":"VariableDeclaration","scope":3112,"src":"2262:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:13"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"success","nameLocation":"2301:7:13","nodeType":"VariableDeclaration","scope":3112,"src":"2296:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3091,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"result","nameLocation":"2318:6:13","nodeType":"VariableDeclaration","scope":3112,"src":"2310:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3139,"nodeType":"FunctionDefinition","src":"2825:294:13","nodes":[],"body":{"id":3138,"nodeType":"Block","src":"2912:207:13","nodes":[],"statements":[{"id":3137,"nodeType":"UncheckedBlock","src":"2922:191:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"3060:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"3066:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"3070:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3131,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"3091:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3129,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"3075:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"3075:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3123,"id":3136,"nodeType":"Return","src":"3053:49:13"}]}]},"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"2446:374:13","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:13","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"condition","nameLocation":"2847:9:13","nodeType":"VariableDeclaration","scope":3139,"src":"2842:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3114,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"a","nameLocation":"2866:1:13","nodeType":"VariableDeclaration","scope":3139,"src":"2858:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"b","nameLocation":"2877:1:13","nodeType":"VariableDeclaration","scope":3139,"src":"2869:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:13"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3139,"src":"2903:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3158,"nodeType":"FunctionDefinition","src":"3189:111:13","nodes":[],"body":{"id":3157,"nodeType":"Block","src":"3256:44:13","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"3281:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3151,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"3285:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"3288:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"3291:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3149,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"3273:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3148,"id":3156,"nodeType":"Return","src":"3266:27:13"}]},"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"3125:59:13","text":" @dev Returns the largest of two numbers."},"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:13","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"a","nameLocation":"3210:1:13","nodeType":"VariableDeclaration","scope":3158,"src":"3202:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"b","nameLocation":"3221:1:13","nodeType":"VariableDeclaration","scope":3158,"src":"3213:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:13"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3158,"src":"3247:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3177,"nodeType":"FunctionDefinition","src":"3371:111:13","nodes":[],"body":{"id":3176,"nodeType":"Block","src":"3438:44:13","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3169,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"3463:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3170,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"3467:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"3470:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"3473:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3168,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"3455:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3167,"id":3175,"nodeType":"Return","src":"3448:27:13"}]},"documentation":{"id":3159,"nodeType":"StructuredDocumentation","src":"3306:60:13","text":" @dev Returns the smallest of two numbers."},"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:13","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"a","nameLocation":"3392:1:13","nodeType":"VariableDeclaration","scope":3177,"src":"3384:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3163,"mutability":"mutable","name":"b","nameLocation":"3403:1:13","nodeType":"VariableDeclaration","scope":3177,"src":"3395:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:13"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"3429:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3200,"nodeType":"FunctionDefinition","src":"3595:153:13","nodes":[],"body":{"id":3199,"nodeType":"Block","src":"3666:82:13","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"3721:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3188,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3725:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"3731:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3192,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3735:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3186,"id":3198,"nodeType":"Return","src":"3713:28:13"}]},"documentation":{"id":3178,"nodeType":"StructuredDocumentation","src":"3488:102:13","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:13","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"a","nameLocation":"3620:1:13","nodeType":"VariableDeclaration","scope":3200,"src":"3612:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"b","nameLocation":"3631:1:13","nodeType":"VariableDeclaration","scope":3200,"src":"3623:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:13"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3200,"src":"3657:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3241,"nodeType":"FunctionDefinition","src":"3969:704:13","nodes":[],"body":{"id":3240,"nodeType":"Block","src":"4040:633:13","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3210,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"4054:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3221,"nodeType":"IfStatement","src":"4050:150:13","trueBody":{"id":3220,"nodeType":"Block","src":"4062:138:13","statements":[{"expression":{"arguments":[{"expression":{"id":3216,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4166:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1706_$","typeString":"type(library Panic)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"4166:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3213,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4154:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1706_$","typeString":"type(library Panic)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1705,"src":"4154:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3219,"nodeType":"ExpressionStatement","src":"4154:35:13"}]}},{"id":3239,"nodeType":"UncheckedBlock","src":"4583:84:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3224,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4630:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3222,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"4614:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"4614:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4641:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"4650:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3209,"id":3238,"nodeType":"Return","src":"4607:49:13"}]}]},"documentation":{"id":3201,"nodeType":"StructuredDocumentation","src":"3754:210:13","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:13","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"a","nameLocation":"3994:1:13","nodeType":"VariableDeclaration","scope":3241,"src":"3986:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"b","nameLocation":"4005:1:13","nodeType":"VariableDeclaration","scope":3241,"src":"3997:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:13"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3241,"src":"4031:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3378,"nodeType":"FunctionDefinition","src":"4996:4226:13","nodes":[],"body":{"id":3377,"nodeType":"Block","src":"5094:4128:13","nodes":[],"statements":[{"id":3376,"nodeType":"UncheckedBlock","src":"5104:4112:13","statements":[{"assignments":[3254],"declarations":[{"constant":false,"id":3254,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:13","nodeType":"VariableDeclaration","scope":3376,"src":"5433:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3258,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"5449:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3256,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"5453:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:13"},{"assignments":[3260],"declarations":[{"constant":false,"id":3260,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:13","nodeType":"VariableDeclaration","scope":3376,"src":"5513:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3261,"nodeType":"VariableDeclarationStatement","src":"5513:13:13"},{"AST":{"nativeSrc":"5593:122:13","nodeType":"YulBlock","src":"5593:122:13","statements":[{"nativeSrc":"5611:30:13","nodeType":"YulVariableDeclaration","src":"5611:30:13","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:13","nodeType":"YulIdentifier","src":"5628:1:13"},{"name":"y","nativeSrc":"5631:1:13","nodeType":"YulIdentifier","src":"5631:1:13"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:13","nodeType":"YulLiteral","src":"5638:1:13","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:13","nodeType":"YulIdentifier","src":"5634:3:13"},"nativeSrc":"5634:6:13","nodeType":"YulFunctionCall","src":"5634:6:13"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:13","nodeType":"YulIdentifier","src":"5621:6:13"},"nativeSrc":"5621:20:13","nodeType":"YulFunctionCall","src":"5621:20:13"},"variables":[{"name":"mm","nativeSrc":"5615:2:13","nodeType":"YulTypedName","src":"5615:2:13","type":""}]},{"nativeSrc":"5658:43:13","nodeType":"YulAssignment","src":"5658:43:13","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:13","nodeType":"YulIdentifier","src":"5675:2:13"},{"name":"prod0","nativeSrc":"5679:5:13","nodeType":"YulIdentifier","src":"5679:5:13"}],"functionName":{"name":"sub","nativeSrc":"5671:3:13","nodeType":"YulIdentifier","src":"5671:3:13"},"nativeSrc":"5671:14:13","nodeType":"YulFunctionCall","src":"5671:14:13"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:13","nodeType":"YulIdentifier","src":"5690:2:13"},{"name":"prod0","nativeSrc":"5694:5:13","nodeType":"YulIdentifier","src":"5694:5:13"}],"functionName":{"name":"lt","nativeSrc":"5687:2:13","nodeType":"YulIdentifier","src":"5687:2:13"},"nativeSrc":"5687:13:13","nodeType":"YulFunctionCall","src":"5687:13:13"}],"functionName":{"name":"sub","nativeSrc":"5667:3:13","nodeType":"YulIdentifier","src":"5667:3:13"},"nativeSrc":"5667:34:13","nodeType":"YulFunctionCall","src":"5667:34:13"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:13","nodeType":"YulIdentifier","src":"5658:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3254,"isOffset":false,"isSlot":false,"src":"5679:5:13","valueSize":1},{"declaration":3254,"isOffset":false,"isSlot":false,"src":"5694:5:13","valueSize":1},{"declaration":3260,"isOffset":false,"isSlot":false,"src":"5658:5:13","valueSize":1},{"declaration":3244,"isOffset":false,"isSlot":false,"src":"5628:1:13","valueSize":1},{"declaration":3246,"isOffset":false,"isSlot":false,"src":"5631:1:13","valueSize":1}],"id":3262,"nodeType":"InlineAssembly","src":"5584:131:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"5796:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3271,"nodeType":"IfStatement","src":"5792:368:13","trueBody":{"id":3270,"nodeType":"Block","src":"5808:352:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"6126:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3267,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"6134:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3252,"id":3269,"nodeType":"Return","src":"6119:26:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"6270:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3273,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"6285:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3290,"nodeType":"IfStatement","src":"6266:143:13","trueBody":{"id":3289,"nodeType":"Block","src":"6292:117:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"6330:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3282,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"6348:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1706_$","typeString":"type(library Panic)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"6348:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3284,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"6372:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1706_$","typeString":"type(library Panic)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:13","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1669,"src":"6372:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3278,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"6322:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3275,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"6310:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1706_$","typeString":"type(library Panic)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1705,"src":"6310:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3288,"nodeType":"ExpressionStatement","src":"6310:84:13"}]}},{"assignments":[3292],"declarations":[{"constant":false,"id":3292,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:13","nodeType":"VariableDeclaration","scope":3376,"src":"6664:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3293,"nodeType":"VariableDeclarationStatement","src":"6664:17:13"},{"AST":{"nativeSrc":"6704:291:13","nodeType":"YulBlock","src":"6704:291:13","statements":[{"nativeSrc":"6773:38:13","nodeType":"YulAssignment","src":"6773:38:13","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:13","nodeType":"YulIdentifier","src":"6793:1:13"},{"name":"y","nativeSrc":"6796:1:13","nodeType":"YulIdentifier","src":"6796:1:13"},{"name":"denominator","nativeSrc":"6799:11:13","nodeType":"YulIdentifier","src":"6799:11:13"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:13","nodeType":"YulIdentifier","src":"6786:6:13"},"nativeSrc":"6786:25:13","nodeType":"YulFunctionCall","src":"6786:25:13"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:13","nodeType":"YulIdentifier","src":"6773:9:13"}]},{"nativeSrc":"6893:41:13","nodeType":"YulAssignment","src":"6893:41:13","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:13","nodeType":"YulIdentifier","src":"6906:5:13"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:13","nodeType":"YulIdentifier","src":"6916:9:13"},{"name":"prod0","nativeSrc":"6927:5:13","nodeType":"YulIdentifier","src":"6927:5:13"}],"functionName":{"name":"gt","nativeSrc":"6913:2:13","nodeType":"YulIdentifier","src":"6913:2:13"},"nativeSrc":"6913:20:13","nodeType":"YulFunctionCall","src":"6913:20:13"}],"functionName":{"name":"sub","nativeSrc":"6902:3:13","nodeType":"YulIdentifier","src":"6902:3:13"},"nativeSrc":"6902:32:13","nodeType":"YulFunctionCall","src":"6902:32:13"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:13","nodeType":"YulIdentifier","src":"6893:5:13"}]},{"nativeSrc":"6951:30:13","nodeType":"YulAssignment","src":"6951:30:13","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:13","nodeType":"YulIdentifier","src":"6964:5:13"},{"name":"remainder","nativeSrc":"6971:9:13","nodeType":"YulIdentifier","src":"6971:9:13"}],"functionName":{"name":"sub","nativeSrc":"6960:3:13","nodeType":"YulIdentifier","src":"6960:3:13"},"nativeSrc":"6960:21:13","nodeType":"YulFunctionCall","src":"6960:21:13"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:13","nodeType":"YulIdentifier","src":"6951:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3248,"isOffset":false,"isSlot":false,"src":"6799:11:13","valueSize":1},{"declaration":3254,"isOffset":false,"isSlot":false,"src":"6927:5:13","valueSize":1},{"declaration":3254,"isOffset":false,"isSlot":false,"src":"6951:5:13","valueSize":1},{"declaration":3254,"isOffset":false,"isSlot":false,"src":"6964:5:13","valueSize":1},{"declaration":3260,"isOffset":false,"isSlot":false,"src":"6893:5:13","valueSize":1},{"declaration":3260,"isOffset":false,"isSlot":false,"src":"6906:5:13","valueSize":1},{"declaration":3292,"isOffset":false,"isSlot":false,"src":"6773:9:13","valueSize":1},{"declaration":3292,"isOffset":false,"isSlot":false,"src":"6916:9:13","valueSize":1},{"declaration":3292,"isOffset":false,"isSlot":false,"src":"6971:9:13","valueSize":1},{"declaration":3244,"isOffset":false,"isSlot":false,"src":"6793:1:13","valueSize":1},{"declaration":3246,"isOffset":false,"isSlot":false,"src":"6796:1:13","valueSize":1}],"id":3294,"nodeType":"InlineAssembly","src":"6695:300:13"},{"assignments":[3296],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"twos","nameLocation":"7207:4:13","nodeType":"VariableDeclaration","scope":3376,"src":"7199:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3303,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"7214:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3299,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"7233:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:13"},{"AST":{"nativeSrc":"7268:366:13","nodeType":"YulBlock","src":"7268:366:13","statements":[{"nativeSrc":"7333:37:13","nodeType":"YulAssignment","src":"7333:37:13","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:13","nodeType":"YulIdentifier","src":"7352:11:13"},{"name":"twos","nativeSrc":"7365:4:13","nodeType":"YulIdentifier","src":"7365:4:13"}],"functionName":{"name":"div","nativeSrc":"7348:3:13","nodeType":"YulIdentifier","src":"7348:3:13"},"nativeSrc":"7348:22:13","nodeType":"YulFunctionCall","src":"7348:22:13"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:13","nodeType":"YulIdentifier","src":"7333:11:13"}]},{"nativeSrc":"7437:25:13","nodeType":"YulAssignment","src":"7437:25:13","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:13","nodeType":"YulIdentifier","src":"7450:5:13"},{"name":"twos","nativeSrc":"7457:4:13","nodeType":"YulIdentifier","src":"7457:4:13"}],"functionName":{"name":"div","nativeSrc":"7446:3:13","nodeType":"YulIdentifier","src":"7446:3:13"},"nativeSrc":"7446:16:13","nodeType":"YulFunctionCall","src":"7446:16:13"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:13","nodeType":"YulIdentifier","src":"7437:5:13"}]},{"nativeSrc":"7581:39:13","nodeType":"YulAssignment","src":"7581:39:13","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:13","nodeType":"YulLiteral","src":"7601:1:13","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:13","nodeType":"YulIdentifier","src":"7604:4:13"}],"functionName":{"name":"sub","nativeSrc":"7597:3:13","nodeType":"YulIdentifier","src":"7597:3:13"},"nativeSrc":"7597:12:13","nodeType":"YulFunctionCall","src":"7597:12:13"},{"name":"twos","nativeSrc":"7611:4:13","nodeType":"YulIdentifier","src":"7611:4:13"}],"functionName":{"name":"div","nativeSrc":"7593:3:13","nodeType":"YulIdentifier","src":"7593:3:13"},"nativeSrc":"7593:23:13","nodeType":"YulFunctionCall","src":"7593:23:13"},{"kind":"number","nativeSrc":"7618:1:13","nodeType":"YulLiteral","src":"7618:1:13","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:13","nodeType":"YulIdentifier","src":"7589:3:13"},"nativeSrc":"7589:31:13","nodeType":"YulFunctionCall","src":"7589:31:13"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:13","nodeType":"YulIdentifier","src":"7581:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3248,"isOffset":false,"isSlot":false,"src":"7333:11:13","valueSize":1},{"declaration":3248,"isOffset":false,"isSlot":false,"src":"7352:11:13","valueSize":1},{"declaration":3254,"isOffset":false,"isSlot":false,"src":"7437:5:13","valueSize":1},{"declaration":3254,"isOffset":false,"isSlot":false,"src":"7450:5:13","valueSize":1},{"declaration":3296,"isOffset":false,"isSlot":false,"src":"7365:4:13","valueSize":1},{"declaration":3296,"isOffset":false,"isSlot":false,"src":"7457:4:13","valueSize":1},{"declaration":3296,"isOffset":false,"isSlot":false,"src":"7581:4:13","valueSize":1},{"declaration":3296,"isOffset":false,"isSlot":false,"src":"7604:4:13","valueSize":1},{"declaration":3296,"isOffset":false,"isSlot":false,"src":"7611:4:13","valueSize":1}],"id":3304,"nodeType":"InlineAssembly","src":"7259:375:13"},{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3305,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"7700:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"7709:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3307,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"7717:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3310,"nodeType":"ExpressionStatement","src":"7700:21:13"},{"assignments":[3312],"declarations":[{"constant":false,"id":3312,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:13","nodeType":"VariableDeclaration","scope":3376,"src":"8056:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3319,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3314,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"8079:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:13"},{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8312:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"8327:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3323,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8341:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"8312:36:13"},{"expression":{"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3328,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8382:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"8397:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3331,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8411:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3335,"nodeType":"ExpressionStatement","src":"8382:36:13"},{"expression":{"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3336,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8454:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"8469:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3339,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8483:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ExpressionStatement","src":"8454:36:13"},{"expression":{"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3344,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8525:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"8540:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3347,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8554:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3351,"nodeType":"ExpressionStatement","src":"8525:36:13"},{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3352,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8598:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"8613:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3355,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8627:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"8598:36:13"},{"expression":{"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3360,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8672:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"8687:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3363,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8701:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3367,"nodeType":"ExpressionStatement","src":"8672:36:13"},{"expression":{"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"9154:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"9163:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3370,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"9171:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3373,"nodeType":"ExpressionStatement","src":"9154:24:13"},{"expression":{"id":3374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"9199:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3252,"id":3375,"nodeType":"Return","src":"9192:13:13"}]}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"4679:312:13","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:13","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"x","nameLocation":"5020:1:13","nodeType":"VariableDeclaration","scope":3378,"src":"5012:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"y","nameLocation":"5031:1:13","nodeType":"VariableDeclaration","scope":3378,"src":"5023:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:13","nodeType":"VariableDeclaration","scope":3378,"src":"5034:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:13"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"result","nameLocation":"5086:6:13","nodeType":"VariableDeclaration","scope":3378,"src":"5078:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3415,"nodeType":"FunctionDefinition","src":"9351:238:13","nodes":[],"body":{"id":3414,"nodeType":"Block","src":"9461:128:13","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3394,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"9485:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3395,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"9488:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3396,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9491:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3393,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3378,3415],"referencedDeclaration":3378,"src":"9478:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3401,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9539:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}],"id":3400,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"9522:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3404,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"9559:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3405,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"9562:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3406,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9565:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3403,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:13","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3398,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"9506:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"9506:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3392,"id":3413,"nodeType":"Return","src":"9471:111:13"}]},"documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"9228:118:13","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:13","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"x","nameLocation":"9375:1:13","nodeType":"VariableDeclaration","scope":3415,"src":"9367:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"y","nameLocation":"9386:1:13","nodeType":"VariableDeclaration","scope":3415,"src":"9378:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:13","nodeType":"VariableDeclaration","scope":3415,"src":"9389:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:13","nodeType":"VariableDeclaration","scope":3415,"src":"9410:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"},"typeName":{"id":3387,"nodeType":"UserDefinedTypeName","pathNode":{"id":3386,"name":"Rounding","nameLocations":["9410:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"9410:8:13"},"referencedDeclaration":2954,"src":"9410:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:13"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3415,"src":"9452:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3390,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3512,"nodeType":"FunctionDefinition","src":"10153:1919:13","nodes":[],"body":{"id":3511,"nodeType":"Block","src":"10223:1849:13","nodes":[],"statements":[{"id":3510,"nodeType":"UncheckedBlock","src":"10233:1833:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"10261:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3430,"nodeType":"IfStatement","src":"10257:20:13","trueBody":{"expression":{"hexValue":"30","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3424,"id":3429,"nodeType":"Return","src":"10269:8:13"}},{"assignments":[3432],"declarations":[{"constant":false,"id":3432,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:13","nodeType":"VariableDeclaration","scope":3510,"src":"10748:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3436,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"10768:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3434,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"10772:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:13"},{"assignments":[3438],"declarations":[{"constant":false,"id":3438,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:13","nodeType":"VariableDeclaration","scope":3510,"src":"10787:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3440,"initialValue":{"id":3439,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"10801:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:13"},{"assignments":[3442],"declarations":[{"constant":false,"id":3442,"mutability":"mutable","name":"x","nameLocation":"10945:1:13","nodeType":"VariableDeclaration","scope":3510,"src":"10938:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3441,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3444,"initialValue":{"hexValue":"30","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:13"},{"assignments":[3446],"declarations":[{"constant":false,"id":3446,"mutability":"mutable","name":"y","nameLocation":"10971:1:13","nodeType":"VariableDeclaration","scope":3510,"src":"10964:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3445,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3448,"initialValue":{"hexValue":"31","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:13"},{"body":{"id":3485,"nodeType":"Block","src":"11014:882:13","statements":[{"assignments":[3453],"declarations":[{"constant":false,"id":3453,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:13","nodeType":"VariableDeclaration","scope":3485,"src":"11032:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3457,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3454,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"11051:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3455,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"11057:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:13"},{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3458,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"11086:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3459,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"11091:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3460,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3461,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"11191:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3462,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"11436:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3463,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"11442:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3464,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"11454:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3469,"nodeType":"ExpressionStatement","src":"11085:395:13"},{"expression":{"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3470,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"11500:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3471,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"11503:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3472,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3473,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"11585:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3474,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"11839:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3475,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"11843:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3478,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"11854:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3476,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:13","typeDescriptions":{}}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3484,"nodeType":"ExpressionStatement","src":"11499:382:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"10998:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3486,"nodeType":"WhileStatement","src":"10991:905:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"11914:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3492,"nodeType":"IfStatement","src":"11910:22:13","trueBody":{"expression":{"hexValue":"30","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3424,"id":3491,"nodeType":"Return","src":"11924:8:13"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"11983:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3497,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"11990:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:13","subExpression":{"id":3500,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"12003:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3498,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:13","typeDescriptions":{}}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3506,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"12015:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:13","typeDescriptions":{}}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3493,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"11975:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3424,"id":3509,"nodeType":"Return","src":"11968:50:13"}]}]},"documentation":{"id":3416,"nodeType":"StructuredDocumentation","src":"9595:553:13","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:13","parameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"a","nameLocation":"10177:1:13","nodeType":"VariableDeclaration","scope":3512,"src":"10169:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3420,"mutability":"mutable","name":"n","nameLocation":"10188:1:13","nodeType":"VariableDeclaration","scope":3512,"src":"10180:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:13"},"returnParameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3512,"src":"10214:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3533,"nodeType":"FunctionDefinition","src":"12597:157:13","nodes":[],"body":{"id":3532,"nodeType":"Block","src":"12672:82:13","nodes":[],"statements":[{"id":3531,"nodeType":"UncheckedBlock","src":"12682:66:13","statements":[{"expression":{"arguments":[{"id":3524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"12725:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"12728:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3528,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"12735:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3522,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"12713:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4548_$","typeString":"type(library Math)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:13","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3569,"src":"12713:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3521,"id":3530,"nodeType":"Return","src":"12706:31:13"}]}]},"documentation":{"id":3513,"nodeType":"StructuredDocumentation","src":"12078:514:13","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:13","parameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"a","nameLocation":"12626:1:13","nodeType":"VariableDeclaration","scope":3533,"src":"12618:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3517,"mutability":"mutable","name":"p","nameLocation":"12637:1:13","nodeType":"VariableDeclaration","scope":3533,"src":"12629:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:13"},"returnParameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3533,"src":"12663:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:13"},"scope":4548,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":3569,"nodeType":"FunctionDefinition","src":"13443:255:13","nodes":[],"body":{"id":3568,"nodeType":"Block","src":"13524:174:13","nodes":[],"statements":[{"assignments":[3546,3548],"declarations":[{"constant":false,"id":3546,"mutability":"mutable","name":"success","nameLocation":"13540:7:13","nodeType":"VariableDeclaration","scope":3568,"src":"13535:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3545,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"result","nameLocation":"13557:6:13","nodeType":"VariableDeclaration","scope":3568,"src":"13549:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3554,"initialValue":{"arguments":[{"id":3550,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"13577:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3551,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"13580:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3552,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"13583:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3549,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3593,3675],"referencedDeclaration":3593,"src":"13567:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:13"},{"condition":{"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:13","subExpression":{"id":3555,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"13600:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3565,"nodeType":"IfStatement","src":"13595:74:13","trueBody":{"id":3564,"nodeType":"Block","src":"13609:60:13","statements":[{"expression":{"arguments":[{"expression":{"id":3560,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"13635:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1706_$","typeString":"type(library Panic)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"13635:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3557,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"13623:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1706_$","typeString":"type(library Panic)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1705,"src":"13623:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3563,"nodeType":"ExpressionStatement","src":"13623:35:13"}]}},{"expression":{"id":3566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"13685:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3544,"id":3567,"nodeType":"Return","src":"13678:13:13"}]},"documentation":{"id":3534,"nodeType":"StructuredDocumentation","src":"12760:678:13","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:13","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"b","nameLocation":"13467:1:13","nodeType":"VariableDeclaration","scope":3569,"src":"13459:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3538,"mutability":"mutable","name":"e","nameLocation":"13478:1:13","nodeType":"VariableDeclaration","scope":3569,"src":"13470:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"m","nameLocation":"13489:1:13","nodeType":"VariableDeclaration","scope":3569,"src":"13481:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:13"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3569,"src":"13515:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:13"},"scope":4548,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":3593,"nodeType":"FunctionDefinition","src":"14447:1598:13","nodes":[],"body":{"id":3592,"nodeType":"Block","src":"14552:1493:13","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3583,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"14566:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3590,"nodeType":"IfStatement","src":"14562:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3582,"id":3589,"nodeType":"Return","src":"14574:17:13"}},{"AST":{"nativeSrc":"14626:1413:13","nodeType":"YulBlock","src":"14626:1413:13","statements":[{"nativeSrc":"14640:22:13","nodeType":"YulVariableDeclaration","src":"14640:22:13","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:13","nodeType":"YulLiteral","src":"14657:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:13","nodeType":"YulIdentifier","src":"14651:5:13"},"nativeSrc":"14651:11:13","nodeType":"YulFunctionCall","src":"14651:11:13"},"variables":[{"name":"ptr","nativeSrc":"14644:3:13","nodeType":"YulTypedName","src":"14644:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:13","nodeType":"YulIdentifier","src":"15570:3:13"},{"kind":"number","nativeSrc":"15575:4:13","nodeType":"YulLiteral","src":"15575:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:13","nodeType":"YulIdentifier","src":"15563:6:13"},"nativeSrc":"15563:17:13","nodeType":"YulFunctionCall","src":"15563:17:13"},"nativeSrc":"15563:17:13","nodeType":"YulExpressionStatement","src":"15563:17:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:13","nodeType":"YulIdentifier","src":"15604:3:13"},{"kind":"number","nativeSrc":"15609:4:13","nodeType":"YulLiteral","src":"15609:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:13","nodeType":"YulIdentifier","src":"15600:3:13"},"nativeSrc":"15600:14:13","nodeType":"YulFunctionCall","src":"15600:14:13"},{"kind":"number","nativeSrc":"15616:4:13","nodeType":"YulLiteral","src":"15616:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:13","nodeType":"YulIdentifier","src":"15593:6:13"},"nativeSrc":"15593:28:13","nodeType":"YulFunctionCall","src":"15593:28:13"},"nativeSrc":"15593:28:13","nodeType":"YulExpressionStatement","src":"15593:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:13","nodeType":"YulIdentifier","src":"15645:3:13"},{"kind":"number","nativeSrc":"15650:4:13","nodeType":"YulLiteral","src":"15650:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:13","nodeType":"YulIdentifier","src":"15641:3:13"},"nativeSrc":"15641:14:13","nodeType":"YulFunctionCall","src":"15641:14:13"},{"kind":"number","nativeSrc":"15657:4:13","nodeType":"YulLiteral","src":"15657:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:13","nodeType":"YulIdentifier","src":"15634:6:13"},"nativeSrc":"15634:28:13","nodeType":"YulFunctionCall","src":"15634:28:13"},"nativeSrc":"15634:28:13","nodeType":"YulExpressionStatement","src":"15634:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:13","nodeType":"YulIdentifier","src":"15686:3:13"},{"kind":"number","nativeSrc":"15691:4:13","nodeType":"YulLiteral","src":"15691:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:13","nodeType":"YulIdentifier","src":"15682:3:13"},"nativeSrc":"15682:14:13","nodeType":"YulFunctionCall","src":"15682:14:13"},{"name":"b","nativeSrc":"15698:1:13","nodeType":"YulIdentifier","src":"15698:1:13"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:13","nodeType":"YulIdentifier","src":"15675:6:13"},"nativeSrc":"15675:25:13","nodeType":"YulFunctionCall","src":"15675:25:13"},"nativeSrc":"15675:25:13","nodeType":"YulExpressionStatement","src":"15675:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:13","nodeType":"YulIdentifier","src":"15724:3:13"},{"kind":"number","nativeSrc":"15729:4:13","nodeType":"YulLiteral","src":"15729:4:13","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:13","nodeType":"YulIdentifier","src":"15720:3:13"},"nativeSrc":"15720:14:13","nodeType":"YulFunctionCall","src":"15720:14:13"},{"name":"e","nativeSrc":"15736:1:13","nodeType":"YulIdentifier","src":"15736:1:13"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:13","nodeType":"YulIdentifier","src":"15713:6:13"},"nativeSrc":"15713:25:13","nodeType":"YulFunctionCall","src":"15713:25:13"},"nativeSrc":"15713:25:13","nodeType":"YulExpressionStatement","src":"15713:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:13","nodeType":"YulIdentifier","src":"15762:3:13"},{"kind":"number","nativeSrc":"15767:4:13","nodeType":"YulLiteral","src":"15767:4:13","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:13","nodeType":"YulIdentifier","src":"15758:3:13"},"nativeSrc":"15758:14:13","nodeType":"YulFunctionCall","src":"15758:14:13"},{"name":"m","nativeSrc":"15774:1:13","nodeType":"YulIdentifier","src":"15774:1:13"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:13","nodeType":"YulIdentifier","src":"15751:6:13"},"nativeSrc":"15751:25:13","nodeType":"YulFunctionCall","src":"15751:25:13"},"nativeSrc":"15751:25:13","nodeType":"YulExpressionStatement","src":"15751:25:13"},{"nativeSrc":"15938:57:13","nodeType":"YulAssignment","src":"15938:57:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:13","nodeType":"YulIdentifier","src":"15960:3:13"},"nativeSrc":"15960:5:13","nodeType":"YulFunctionCall","src":"15960:5:13"},{"kind":"number","nativeSrc":"15967:4:13","nodeType":"YulLiteral","src":"15967:4:13","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:13","nodeType":"YulIdentifier","src":"15973:3:13"},{"kind":"number","nativeSrc":"15978:4:13","nodeType":"YulLiteral","src":"15978:4:13","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:13","nodeType":"YulLiteral","src":"15984:4:13","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:13","nodeType":"YulLiteral","src":"15990:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:13","nodeType":"YulIdentifier","src":"15949:10:13"},"nativeSrc":"15949:46:13","nodeType":"YulFunctionCall","src":"15949:46:13"},"variableNames":[{"name":"success","nativeSrc":"15938:7:13","nodeType":"YulIdentifier","src":"15938:7:13"}]},{"nativeSrc":"16008:21:13","nodeType":"YulAssignment","src":"16008:21:13","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:13","nodeType":"YulLiteral","src":"16024:4:13","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:13","nodeType":"YulIdentifier","src":"16018:5:13"},"nativeSrc":"16018:11:13","nodeType":"YulFunctionCall","src":"16018:11:13"},"variableNames":[{"name":"result","nativeSrc":"16008:6:13","nodeType":"YulIdentifier","src":"16008:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3572,"isOffset":false,"isSlot":false,"src":"15698:1:13","valueSize":1},{"declaration":3574,"isOffset":false,"isSlot":false,"src":"15736:1:13","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"15774:1:13","valueSize":1},{"declaration":3581,"isOffset":false,"isSlot":false,"src":"16008:6:13","valueSize":1},{"declaration":3579,"isOffset":false,"isSlot":false,"src":"15938:7:13","valueSize":1}],"flags":["memory-safe"],"id":3591,"nodeType":"InlineAssembly","src":"14601:1438:13"}]},"documentation":{"id":3570,"nodeType":"StructuredDocumentation","src":"13704:738:13","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:13","parameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3572,"mutability":"mutable","name":"b","nameLocation":"14474:1:13","nodeType":"VariableDeclaration","scope":3593,"src":"14466:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3574,"mutability":"mutable","name":"e","nameLocation":"14485:1:13","nodeType":"VariableDeclaration","scope":3593,"src":"14477:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3576,"mutability":"mutable","name":"m","nameLocation":"14496:1:13","nodeType":"VariableDeclaration","scope":3593,"src":"14488:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:13"},"returnParameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"success","nameLocation":"14527:7:13","nodeType":"VariableDeclaration","scope":3593,"src":"14522:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3578,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"result","nameLocation":"14544:6:13","nodeType":"VariableDeclaration","scope":3593,"src":"14536:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:13"},"scope":4548,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":3629,"nodeType":"FunctionDefinition","src":"16141:280:13","nodes":[],"body":{"id":3628,"nodeType":"Block","src":"16242:179:13","nodes":[],"statements":[{"assignments":[3606,3608],"declarations":[{"constant":false,"id":3606,"mutability":"mutable","name":"success","nameLocation":"16258:7:13","nodeType":"VariableDeclaration","scope":3628,"src":"16253:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3605,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3608,"mutability":"mutable","name":"result","nameLocation":"16280:6:13","nodeType":"VariableDeclaration","scope":3628,"src":"16267:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3607,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3614,"initialValue":{"arguments":[{"id":3610,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"16300:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3611,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"16303:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3612,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"16306:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3609,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3593,3675],"referencedDeclaration":3675,"src":"16290:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:13"},{"condition":{"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:13","subExpression":{"id":3615,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"16323:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3625,"nodeType":"IfStatement","src":"16318:74:13","trueBody":{"id":3624,"nodeType":"Block","src":"16332:60:13","statements":[{"expression":{"arguments":[{"expression":{"id":3620,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"16358:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1706_$","typeString":"type(library Panic)"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"16358:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3617,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"16346:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1706_$","typeString":"type(library Panic)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1705,"src":"16346:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3623,"nodeType":"ExpressionStatement","src":"16346:35:13"}]}},{"expression":{"id":3626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"16408:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3604,"id":3627,"nodeType":"Return","src":"16401:13:13"}]},"documentation":{"id":3594,"nodeType":"StructuredDocumentation","src":"16051:85:13","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:13","parameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"b","nameLocation":"16170:1:13","nodeType":"VariableDeclaration","scope":3629,"src":"16157:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3595,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3598,"mutability":"mutable","name":"e","nameLocation":"16186:1:13","nodeType":"VariableDeclaration","scope":3629,"src":"16173:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3597,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3600,"mutability":"mutable","name":"m","nameLocation":"16202:1:13","nodeType":"VariableDeclaration","scope":3629,"src":"16189:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3599,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:13"},"returnParameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3629,"src":"16228:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3602,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:13"},"scope":4548,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":3675,"nodeType":"FunctionDefinition","src":"16520:926:13","nodes":[],"body":{"id":3674,"nodeType":"Block","src":"16675:771:13","nodes":[],"statements":[{"condition":{"arguments":[{"id":3644,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"16700:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3643,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"16689:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3653,"nodeType":"IfStatement","src":"16685:47:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3647,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3642,"id":3652,"nodeType":"Return","src":"16704:28:13"}},{"assignments":[3655],"declarations":[{"constant":false,"id":3655,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:13","nodeType":"VariableDeclaration","scope":3674,"src":"16743:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3658,"initialValue":{"expression":{"id":3656,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"16758:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:13","memberName":"length","nodeType":"MemberAccess","src":"16758:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:13"},{"expression":{"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"16848:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3662,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"16874:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:13","memberName":"length","nodeType":"MemberAccess","src":"16874:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3664,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"16884:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:13","memberName":"length","nodeType":"MemberAccess","src":"16884:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3666,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"16894:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"16900:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3668,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"16903:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3669,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"16906:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3660,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3672,"nodeType":"ExpressionStatement","src":"16848:60:13"},{"AST":{"nativeSrc":"16944:496:13","nodeType":"YulBlock","src":"16944:496:13","statements":[{"nativeSrc":"16958:32:13","nodeType":"YulVariableDeclaration","src":"16958:32:13","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:13","nodeType":"YulIdentifier","src":"16977:6:13"},{"kind":"number","nativeSrc":"16985:4:13","nodeType":"YulLiteral","src":"16985:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:13","nodeType":"YulIdentifier","src":"16973:3:13"},"nativeSrc":"16973:17:13","nodeType":"YulFunctionCall","src":"16973:17:13"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:13","nodeType":"YulTypedName","src":"16962:7:13","type":""}]},{"nativeSrc":"17080:73:13","nodeType":"YulAssignment","src":"17080:73:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:13","nodeType":"YulIdentifier","src":"17102:3:13"},"nativeSrc":"17102:5:13","nodeType":"YulFunctionCall","src":"17102:5:13"},{"kind":"number","nativeSrc":"17109:4:13","nodeType":"YulLiteral","src":"17109:4:13","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:13","nodeType":"YulIdentifier","src":"17115:7:13"},{"arguments":[{"name":"result","nativeSrc":"17130:6:13","nodeType":"YulIdentifier","src":"17130:6:13"}],"functionName":{"name":"mload","nativeSrc":"17124:5:13","nodeType":"YulIdentifier","src":"17124:5:13"},"nativeSrc":"17124:13:13","nodeType":"YulFunctionCall","src":"17124:13:13"},{"name":"dataPtr","nativeSrc":"17139:7:13","nodeType":"YulIdentifier","src":"17139:7:13"},{"name":"mLen","nativeSrc":"17148:4:13","nodeType":"YulIdentifier","src":"17148:4:13"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:13","nodeType":"YulIdentifier","src":"17091:10:13"},"nativeSrc":"17091:62:13","nodeType":"YulFunctionCall","src":"17091:62:13"},"variableNames":[{"name":"success","nativeSrc":"17080:7:13","nodeType":"YulIdentifier","src":"17080:7:13"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:13","nodeType":"YulIdentifier","src":"17309:6:13"},{"name":"mLen","nativeSrc":"17317:4:13","nodeType":"YulIdentifier","src":"17317:4:13"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:13","nodeType":"YulIdentifier","src":"17302:6:13"},"nativeSrc":"17302:20:13","nodeType":"YulFunctionCall","src":"17302:20:13"},"nativeSrc":"17302:20:13","nodeType":"YulExpressionStatement","src":"17302:20:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:13","nodeType":"YulLiteral","src":"17405:4:13","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:13","nodeType":"YulIdentifier","src":"17415:7:13"},{"name":"mLen","nativeSrc":"17424:4:13","nodeType":"YulIdentifier","src":"17424:4:13"}],"functionName":{"name":"add","nativeSrc":"17411:3:13","nodeType":"YulIdentifier","src":"17411:3:13"},"nativeSrc":"17411:18:13","nodeType":"YulFunctionCall","src":"17411:18:13"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:13","nodeType":"YulIdentifier","src":"17398:6:13"},"nativeSrc":"17398:32:13","nodeType":"YulFunctionCall","src":"17398:32:13"},"nativeSrc":"17398:32:13","nodeType":"YulExpressionStatement","src":"17398:32:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":3655,"isOffset":false,"isSlot":false,"src":"17148:4:13","valueSize":1},{"declaration":3655,"isOffset":false,"isSlot":false,"src":"17317:4:13","valueSize":1},{"declaration":3655,"isOffset":false,"isSlot":false,"src":"17424:4:13","valueSize":1},{"declaration":3641,"isOffset":false,"isSlot":false,"src":"16977:6:13","valueSize":1},{"declaration":3641,"isOffset":false,"isSlot":false,"src":"17130:6:13","valueSize":1},{"declaration":3641,"isOffset":false,"isSlot":false,"src":"17309:6:13","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"17080:7:13","valueSize":1}],"flags":["memory-safe"],"id":3673,"nodeType":"InlineAssembly","src":"16919:521:13"}]},"documentation":{"id":3630,"nodeType":"StructuredDocumentation","src":"16427:88:13","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:13","parameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3632,"mutability":"mutable","name":"b","nameLocation":"16561:1:13","nodeType":"VariableDeclaration","scope":3675,"src":"16548:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3631,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"e","nameLocation":"16585:1:13","nodeType":"VariableDeclaration","scope":3675,"src":"16572:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3633,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3636,"mutability":"mutable","name":"m","nameLocation":"16609:1:13","nodeType":"VariableDeclaration","scope":3675,"src":"16596:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3635,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:13"},"returnParameters":{"id":3642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"success","nameLocation":"16645:7:13","nodeType":"VariableDeclaration","scope":3675,"src":"16640:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3638,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3641,"mutability":"mutable","name":"result","nameLocation":"16667:6:13","nodeType":"VariableDeclaration","scope":3675,"src":"16654:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3640,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:13"},"scope":4548,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":3708,"nodeType":"FunctionDefinition","src":"17529:248:13","nodes":[],"body":{"id":3707,"nodeType":"Block","src":"17601:176:13","nodes":[],"statements":[{"body":{"id":3703,"nodeType":"Block","src":"17658:92:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3694,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"17676:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3696,"indexExpression":{"id":3695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"17686:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3702,"nodeType":"IfStatement","src":"17672:68:13","trueBody":{"id":3701,"nodeType":"Block","src":"17695:45:13","statements":[{"expression":{"hexValue":"66616c7365","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3682,"id":3700,"nodeType":"Return","src":"17713:12:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"17631:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3688,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"17635:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:13","memberName":"length","nodeType":"MemberAccess","src":"17635:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3704,"initializationExpression":{"assignments":[3684],"declarations":[{"constant":false,"id":3684,"mutability":"mutable","name":"i","nameLocation":"17624:1:13","nodeType":"VariableDeclaration","scope":3704,"src":"17616:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3686,"initialValue":{"hexValue":"30","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:13","subExpression":{"id":3691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"17655:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3693,"nodeType":"ExpressionStatement","src":"17653:3:13"},"nodeType":"ForStatement","src":"17611:139:13"},{"expression":{"hexValue":"74727565","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3682,"id":3706,"nodeType":"Return","src":"17759:11:13"}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"17452:72:13","text":" @dev Returns whether the provided byte array is zero."},"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:13","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:13","nodeType":"VariableDeclaration","scope":3708,"src":"17549:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3677,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:13"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3708,"src":"17595:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3680,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"private"},{"id":3927,"nodeType":"FunctionDefinition","src":"18080:5181:13","nodes":[],"body":{"id":3926,"nodeType":"Block","src":"18137:5124:13","nodes":[],"statements":[{"id":3925,"nodeType":"UncheckedBlock","src":"18147:5108:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3716,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"18241:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3722,"nodeType":"IfStatement","src":"18237:53:13","trueBody":{"id":3721,"nodeType":"Block","src":"18249:41:13","statements":[{"expression":{"id":3719,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"18274:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3715,"id":3720,"nodeType":"Return","src":"18267:8:13"}]}},{"assignments":[3724],"declarations":[{"constant":false,"id":3724,"mutability":"mutable","name":"aa","nameLocation":"19225:2:13","nodeType":"VariableDeclaration","scope":3925,"src":"19217:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3726,"initialValue":{"id":3725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"19230:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:13"},{"assignments":[3728],"declarations":[{"constant":false,"id":3728,"mutability":"mutable","name":"xn","nameLocation":"19253:2:13","nodeType":"VariableDeclaration","scope":3925,"src":"19245:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3730,"initialValue":{"hexValue":"31","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19278:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3746,"nodeType":"IfStatement","src":"19274:92:13","trueBody":{"id":3745,"nodeType":"Block","src":"19296:70:13","statements":[{"expression":{"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3737,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19314:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3740,"nodeType":"ExpressionStatement","src":"19314:10:13"},{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3741,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"19342:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3744,"nodeType":"ExpressionStatement","src":"19342:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3747,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19383:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3762,"nodeType":"IfStatement","src":"19379:90:13","trueBody":{"id":3761,"nodeType":"Block","src":"19400:69:13","statements":[{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3753,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19418:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ExpressionStatement","src":"19418:9:13"},{"expression":{"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3757,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"19445:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3760,"nodeType":"ExpressionStatement","src":"19445:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3763,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19486:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"IfStatement","src":"19482:90:13","trueBody":{"id":3777,"nodeType":"Block","src":"19503:69:13","statements":[{"expression":{"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3769,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19521:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3772,"nodeType":"ExpressionStatement","src":"19521:9:13"},{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3773,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"19548:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3776,"nodeType":"ExpressionStatement","src":"19548:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19589:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3794,"nodeType":"IfStatement","src":"19585:89:13","trueBody":{"id":3793,"nodeType":"Block","src":"19606:68:13","statements":[{"expression":{"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3785,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19624:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3788,"nodeType":"ExpressionStatement","src":"19624:9:13"},{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3789,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"19651:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3792,"nodeType":"ExpressionStatement","src":"19651:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19691:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3810,"nodeType":"IfStatement","src":"19687:87:13","trueBody":{"id":3809,"nodeType":"Block","src":"19707:67:13","statements":[{"expression":{"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3801,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19725:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3804,"nodeType":"ExpressionStatement","src":"19725:8:13"},{"expression":{"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3805,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"19751:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3808,"nodeType":"ExpressionStatement","src":"19751:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19791:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3815,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3826,"nodeType":"IfStatement","src":"19787:87:13","trueBody":{"id":3825,"nodeType":"Block","src":"19807:67:13","statements":[{"expression":{"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3817,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19825:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3820,"nodeType":"ExpressionStatement","src":"19825:8:13"},{"expression":{"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3821,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"19851:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3824,"nodeType":"ExpressionStatement","src":"19851:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3827,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"19891:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3838,"nodeType":"IfStatement","src":"19887:61:13","trueBody":{"id":3837,"nodeType":"Block","src":"19907:41:13","statements":[{"expression":{"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3833,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"19925:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3836,"nodeType":"ExpressionStatement","src":"19925:8:13"}]}},{"expression":{"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3839,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"20368:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3841,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"20378:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3843,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3847,"nodeType":"ExpressionStatement","src":"20368:18:13"},{"expression":{"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3848,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22273:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3849,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22279:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"22284:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3851,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22288:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3858,"nodeType":"ExpressionStatement","src":"22273:23:13"},{"expression":{"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3859,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22382:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22388:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"22393:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3862,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22397:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3869,"nodeType":"ExpressionStatement","src":"22382:23:13"},{"expression":{"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3870,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22493:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22499:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3872,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"22504:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3873,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22508:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3880,"nodeType":"ExpressionStatement","src":"22493:23:13"},{"expression":{"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3881,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22602:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22608:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"22613:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3884,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22617:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3891,"nodeType":"ExpressionStatement","src":"22602:23:13"},{"expression":{"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3892,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22712:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3893,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22718:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"22723:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3895,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22727:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3902,"nodeType":"ExpressionStatement","src":"22712:23:13"},{"expression":{"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3903,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22822:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22828:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3905,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"22833:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3906,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"22837:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3909,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3913,"nodeType":"ExpressionStatement","src":"22822:23:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"23211:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"23232:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"23237:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3919,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"23241:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3915,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"23216:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"23216:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3715,"id":3924,"nodeType":"Return","src":"23204:40:13"}]}]},"documentation":{"id":3709,"nodeType":"StructuredDocumentation","src":"17783:292:13","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:13","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"a","nameLocation":"18102:1:13","nodeType":"VariableDeclaration","scope":3927,"src":"18094:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:13"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3927,"src":"18128:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3961,"nodeType":"FunctionDefinition","src":"23358:247:13","nodes":[],"body":{"id":3960,"nodeType":"Block","src":"23434:171:13","nodes":[],"statements":[{"id":3959,"nodeType":"UncheckedBlock","src":"23444:155:13","statements":[{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"result","nameLocation":"23476:6:13","nodeType":"VariableDeclaration","scope":3959,"src":"23468:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3943,"initialValue":{"arguments":[{"id":3941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"23490:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3940,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3927,3961],"referencedDeclaration":3927,"src":"23485:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"23513:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3948,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"23555:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}],"id":3947,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"23538:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"23568:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"23577:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3953,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"23586:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3945,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"23522:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"23522:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3937,"id":3958,"nodeType":"Return","src":"23506:82:13"}]}]},"documentation":{"id":3928,"nodeType":"StructuredDocumentation","src":"23267:86:13","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:13","parameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"a","nameLocation":"23380:1:13","nodeType":"VariableDeclaration","scope":3961,"src":"23372:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:13","nodeType":"VariableDeclaration","scope":3961,"src":"23383:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"},"typeName":{"id":3932,"nodeType":"UserDefinedTypeName","pathNode":{"id":3931,"name":"Rounding","nameLocations":["23383:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"23383:8:13"},"referencedDeclaration":2954,"src":"23383:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:13"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3961,"src":"23425:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4157,"nodeType":"FunctionDefinition","src":"23735:1042:13","nodes":[],"body":{"id":4156,"nodeType":"Block","src":"23796:981:13","nodes":[],"statements":[{"assignments":[3970],"declarations":[{"constant":false,"id":3970,"mutability":"mutable","name":"result","nameLocation":"23814:6:13","nodeType":"VariableDeclaration","scope":4156,"src":"23806:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3972,"initialValue":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:13"},{"assignments":[3974],"declarations":[{"constant":false,"id":3974,"mutability":"mutable","name":"exp","nameLocation":"23842:3:13","nodeType":"VariableDeclaration","scope":4156,"src":"23834:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3975,"nodeType":"VariableDeclarationStatement","src":"23834:11:13"},{"id":4153,"nodeType":"UncheckedBlock","src":"23855:893:13","statements":[{"expression":{"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3976,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"23879:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"23907:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3978,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"23891:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"23891:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3991,"nodeType":"ExpressionStatement","src":"23879:51:13"},{"expression":{"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"23944:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3993,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"23954:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3995,"nodeType":"ExpressionStatement","src":"23944:13:13"},{"expression":{"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"23971:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3997,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"23981:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3999,"nodeType":"ExpressionStatement","src":"23971:13:13"},{"expression":{"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4000,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"23999:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24026:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4002,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"24010:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"24010:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4015,"nodeType":"ExpressionStatement","src":"23999:49:13"},{"expression":{"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24062:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4017,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24072:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4019,"nodeType":"ExpressionStatement","src":"24062:13:13"},{"expression":{"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24089:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4021,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24099:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4023,"nodeType":"ExpressionStatement","src":"24089:13:13"},{"expression":{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4024,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24117:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24144:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4026,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"24128:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"24128:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4039,"nodeType":"ExpressionStatement","src":"24117:49:13"},{"expression":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24180:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4041,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24190:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4043,"nodeType":"ExpressionStatement","src":"24180:13:13"},{"expression":{"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24207:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4045,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24217:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4047,"nodeType":"ExpressionStatement","src":"24207:13:13"},{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4048,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24235:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24262:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:13","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4050,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"24246:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"24246:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4063,"nodeType":"ExpressionStatement","src":"24235:49:13"},{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24298:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4065,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24308:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4067,"nodeType":"ExpressionStatement","src":"24298:13:13"},{"expression":{"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24325:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4069,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24335:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4071,"nodeType":"ExpressionStatement","src":"24325:13:13"},{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4072,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24353:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4074,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"24363:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"24363:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4087,"nodeType":"ExpressionStatement","src":"24353:47:13"},{"expression":{"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24414:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4089,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24424:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4091,"nodeType":"ExpressionStatement","src":"24414:13:13"},{"expression":{"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24441:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4093,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24451:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4095,"nodeType":"ExpressionStatement","src":"24441:13:13"},{"expression":{"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4096,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24469:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24495:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4098,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"24479:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"24479:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4111,"nodeType":"ExpressionStatement","src":"24469:47:13"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24530:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4113,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24540:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"24530:13:13"},{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24557:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4117,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24567:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4119,"nodeType":"ExpressionStatement","src":"24557:13:13"},{"expression":{"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4120,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24585:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24611:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4122,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"24595:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"24595:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4135,"nodeType":"ExpressionStatement","src":"24585:47:13"},{"expression":{"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24646:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4137,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24656:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4139,"nodeType":"ExpressionStatement","src":"24646:13:13"},{"expression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24673:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4141,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24683:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4143,"nodeType":"ExpressionStatement","src":"24673:13:13"},{"expression":{"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24701:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"24727:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4145,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"24711:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"24711:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4152,"nodeType":"ExpressionStatement","src":"24701:36:13"}]},{"expression":{"id":4154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24764:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3968,"id":4155,"nodeType":"Return","src":"24757:13:13"}]},"documentation":{"id":3962,"nodeType":"StructuredDocumentation","src":"23611:119:13","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:13","parameters":{"id":3965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3964,"mutability":"mutable","name":"value","nameLocation":"23757:5:13","nodeType":"VariableDeclaration","scope":4157,"src":"23749:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3963,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:13"},"returnParameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"23787:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4191,"nodeType":"FunctionDefinition","src":"24930:255:13","nodes":[],"body":{"id":4190,"nodeType":"Block","src":"25010:175:13","nodes":[],"statements":[{"id":4189,"nodeType":"UncheckedBlock","src":"25020:159:13","statements":[{"assignments":[4169],"declarations":[{"constant":false,"id":4169,"mutability":"mutable","name":"result","nameLocation":"25052:6:13","nodeType":"VariableDeclaration","scope":4189,"src":"25044:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4173,"initialValue":{"arguments":[{"id":4171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"25066:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4170,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4157,4191],"referencedDeclaration":4157,"src":"25061:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"25093:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4178,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"25135:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}],"id":4177,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"25118:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"25153:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"25162:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4175,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"25102:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"25102:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4167,"id":4188,"nodeType":"Return","src":"25086:82:13"}]}]},"documentation":{"id":4158,"nodeType":"StructuredDocumentation","src":"24783:142:13","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:13","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"value","nameLocation":"24952:5:13","nodeType":"VariableDeclaration","scope":4191,"src":"24944:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4159,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:13","nodeType":"VariableDeclaration","scope":4191,"src":"24959:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"},"typeName":{"id":4162,"nodeType":"UserDefinedTypeName","pathNode":{"id":4161,"name":"Rounding","nameLocations":["24959:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"24959:8:13"},"referencedDeclaration":2954,"src":"24959:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:13"},"returnParameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4191,"src":"25001:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4165,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4320,"nodeType":"FunctionDefinition","src":"25316:916:13","nodes":[],"body":{"id":4319,"nodeType":"Block","src":"25378:854:13","nodes":[],"statements":[{"assignments":[4200],"declarations":[{"constant":false,"id":4200,"mutability":"mutable","name":"result","nameLocation":"25396:6:13","nodeType":"VariableDeclaration","scope":4319,"src":"25388:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4202,"initialValue":{"hexValue":"30","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:13"},{"id":4316,"nodeType":"UncheckedBlock","src":"25416:787:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"25444:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4219,"nodeType":"IfStatement","src":"25440:103:13","trueBody":{"id":4218,"nodeType":"Block","src":"25463:80:13","statements":[{"expression":{"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"25481:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4213,"nodeType":"ExpressionStatement","src":"25481:17:13"},{"expression":{"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"25516:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4217,"nodeType":"ExpressionStatement","src":"25516:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"25560:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4236,"nodeType":"IfStatement","src":"25556:103:13","trueBody":{"id":4235,"nodeType":"Block","src":"25579:80:13","statements":[{"expression":{"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"25597:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4230,"nodeType":"ExpressionStatement","src":"25597:17:13"},{"expression":{"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"25632:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4234,"nodeType":"ExpressionStatement","src":"25632:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"25676:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4253,"nodeType":"IfStatement","src":"25672:103:13","trueBody":{"id":4252,"nodeType":"Block","src":"25695:80:13","statements":[{"expression":{"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"25713:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4247,"nodeType":"ExpressionStatement","src":"25713:17:13"},{"expression":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"25748:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4251,"nodeType":"ExpressionStatement","src":"25748:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"25792:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4270,"nodeType":"IfStatement","src":"25788:100:13","trueBody":{"id":4269,"nodeType":"Block","src":"25810:78:13","statements":[{"expression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"25828:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4264,"nodeType":"ExpressionStatement","src":"25828:16:13"},{"expression":{"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"25862:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4268,"nodeType":"ExpressionStatement","src":"25862:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"25905:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4287,"nodeType":"IfStatement","src":"25901:100:13","trueBody":{"id":4286,"nodeType":"Block","src":"25923:78:13","statements":[{"expression":{"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"25941:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4281,"nodeType":"ExpressionStatement","src":"25941:16:13"},{"expression":{"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"25975:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4285,"nodeType":"ExpressionStatement","src":"25975:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"26018:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4304,"nodeType":"IfStatement","src":"26014:100:13","trueBody":{"id":4303,"nodeType":"Block","src":"26036:78:13","statements":[{"expression":{"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"26054:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4298,"nodeType":"ExpressionStatement","src":"26054:16:13"},{"expression":{"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"26088:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4302,"nodeType":"ExpressionStatement","src":"26088:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"26131:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4315,"nodeType":"IfStatement","src":"26127:66:13","trueBody":{"id":4314,"nodeType":"Block","src":"26149:44:13","statements":[{"expression":{"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"26167:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4313,"nodeType":"ExpressionStatement","src":"26167:11:13"}]}}]},{"expression":{"id":4317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"26219:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4198,"id":4318,"nodeType":"Return","src":"26212:13:13"}]},"documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"25191:120:13","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:13","parameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"value","nameLocation":"25339:5:13","nodeType":"VariableDeclaration","scope":4320,"src":"25331:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:13"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4320,"src":"25369:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4354,"nodeType":"FunctionDefinition","src":"26386:258:13","nodes":[],"body":{"id":4353,"nodeType":"Block","src":"26467:177:13","nodes":[],"statements":[{"id":4352,"nodeType":"UncheckedBlock","src":"26477:161:13","statements":[{"assignments":[4332],"declarations":[{"constant":false,"id":4332,"mutability":"mutable","name":"result","nameLocation":"26509:6:13","nodeType":"VariableDeclaration","scope":4352,"src":"26501:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4336,"initialValue":{"arguments":[{"id":4334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"26524:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4333,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4320,4354],"referencedDeclaration":4320,"src":"26518:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"26551:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4341,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"26593:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}],"id":4340,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"26576:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"26612:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"26621:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4338,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"26560:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"26560:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4330,"id":4351,"nodeType":"Return","src":"26544:83:13"}]}]},"documentation":{"id":4321,"nodeType":"StructuredDocumentation","src":"26238:143:13","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:13","parameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4323,"mutability":"mutable","name":"value","nameLocation":"26409:5:13","nodeType":"VariableDeclaration","scope":4354,"src":"26401:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4326,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:13","nodeType":"VariableDeclaration","scope":4354,"src":"26416:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"},"typeName":{"id":4325,"nodeType":"UserDefinedTypeName","pathNode":{"id":4324,"name":"Rounding","nameLocations":["26416:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"26416:8:13"},"referencedDeclaration":2954,"src":"26416:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:13"},"returnParameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4354,"src":"26458:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4491,"nodeType":"FunctionDefinition","src":"26901:737:13","nodes":[],"body":{"id":4490,"nodeType":"Block","src":"26964:674:13","nodes":[],"statements":[{"assignments":[4363],"declarations":[{"constant":false,"id":4363,"mutability":"mutable","name":"result","nameLocation":"26982:6:13","nodeType":"VariableDeclaration","scope":4490,"src":"26974:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4365,"initialValue":{"hexValue":"30","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:13"},{"assignments":[4367],"declarations":[{"constant":false,"id":4367,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:13","nodeType":"VariableDeclaration","scope":4490,"src":"27002:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4366,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4368,"nodeType":"VariableDeclarationStatement","src":"27002:12:13"},{"id":4487,"nodeType":"UncheckedBlock","src":"27024:585:13","statements":[{"expression":{"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4369,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27048:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27071:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4370,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"27055:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"27055:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4382,"nodeType":"ExpressionStatement","src":"27048:46:13"},{"expression":{"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27108:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4384,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27118:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4388,"nodeType":"ExpressionStatement","src":"27108:20:13"},{"expression":{"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"27142:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27152:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4394,"nodeType":"ExpressionStatement","src":"27142:19:13"},{"expression":{"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4395,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27176:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27199:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4396,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"27183:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"27183:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4408,"nodeType":"ExpressionStatement","src":"27176:45:13"},{"expression":{"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27235:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27245:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4414,"nodeType":"ExpressionStatement","src":"27235:19:13"},{"expression":{"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"27268:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27278:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4420,"nodeType":"ExpressionStatement","src":"27268:18:13"},{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4421,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27301:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27324:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4422,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"27308:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"27308:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4434,"nodeType":"ExpressionStatement","src":"27301:45:13"},{"expression":{"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27360:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4436,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27370:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4440,"nodeType":"ExpressionStatement","src":"27360:19:13"},{"expression":{"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"27393:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27403:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4446,"nodeType":"ExpressionStatement","src":"27393:18:13"},{"expression":{"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4447,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27426:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27449:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:13","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4448,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"27433:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"27433:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4460,"nodeType":"ExpressionStatement","src":"27426:45:13"},{"expression":{"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27485:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4462,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27495:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4466,"nodeType":"ExpressionStatement","src":"27485:19:13"},{"expression":{"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"27518:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4468,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27528:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4472,"nodeType":"ExpressionStatement","src":"27518:18:13"},{"expression":{"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4473,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"27551:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"27577:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4474,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"27561:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"27561:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4486,"nodeType":"ExpressionStatement","src":"27551:47:13"}]},{"expression":{"id":4488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"27625:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4361,"id":4489,"nodeType":"Return","src":"27618:13:13"}]},"documentation":{"id":4355,"nodeType":"StructuredDocumentation","src":"26650:246:13","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:13","parameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"value","nameLocation":"26925:5:13","nodeType":"VariableDeclaration","scope":4491,"src":"26917:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:13"},"returnParameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4491,"src":"26955:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4528,"nodeType":"FunctionDefinition","src":"27793:266:13","nodes":[],"body":{"id":4527,"nodeType":"Block","src":"27875:184:13","nodes":[],"statements":[{"id":4526,"nodeType":"UncheckedBlock","src":"27885:168:13","statements":[{"assignments":[4503],"declarations":[{"constant":false,"id":4503,"mutability":"mutable","name":"result","nameLocation":"27917:6:13","nodeType":"VariableDeclaration","scope":4526,"src":"27909:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4507,"initialValue":{"arguments":[{"id":4505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"27933:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4504,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4491,4528],"referencedDeclaration":4491,"src":"27926:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"27960:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4512,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"28002:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}],"id":4511,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"27985:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"28021:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"28036:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4509,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"27969:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"27969:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4501,"id":4525,"nodeType":"Return","src":"27953:89:13"}]}]},"documentation":{"id":4492,"nodeType":"StructuredDocumentation","src":"27644:144:13","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:13","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"value","nameLocation":"27817:5:13","nodeType":"VariableDeclaration","scope":4528,"src":"27809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4497,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:13","nodeType":"VariableDeclaration","scope":4528,"src":"27824:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"},"typeName":{"id":4496,"nodeType":"UserDefinedTypeName","pathNode":{"id":4495,"name":"Rounding","nameLocations":["27824:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"27824:8:13"},"referencedDeclaration":2954,"src":"27824:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:13"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4528,"src":"27866:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4547,"nodeType":"FunctionDefinition","src":"28183:122:13","nodes":[],"body":{"id":4546,"nodeType":"Block","src":"28257:48:13","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4539,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"28280:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}],"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4537,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:13","typeDescriptions":{}}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4536,"id":4545,"nodeType":"Return","src":"28267:31:13"}]},"documentation":{"id":4529,"nodeType":"StructuredDocumentation","src":"28065:113:13","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:13","parameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:13","nodeType":"VariableDeclaration","scope":4547,"src":"28209:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"},"typeName":{"id":4531,"nodeType":"UserDefinedTypeName","pathNode":{"id":4530,"name":"Rounding","nameLocations":["28209:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"28209:8:13"},"referencedDeclaration":2954,"src":"28209:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:13"},"returnParameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4547,"src":"28251:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4534,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:13"},"scope":4548,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2949,"nodeType":"StructuredDocumentation","src":"207:73:13","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"linearizedBaseContracts":[4548],"name":"Math","nameLocation":"289:4:13","scope":4549,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol":{"id":14,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","id":6314,"exportedSymbols":{"SafeCast":[6313]},"nodeType":"SourceUnit","src":"192:34751:14","nodes":[{"id":4550,"nodeType":"PragmaDirective","src":"192:24:14","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":6313,"nodeType":"ContractDefinition","src":"769:34173:14","nodes":[{"id":4558,"nodeType":"ErrorDefinition","src":"865:64:14","nodes":[],"documentation":{"id":4552,"nodeType":"StructuredDocumentation","src":"792:68:14","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:14","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"bits","nameLocation":"908:4:14","nodeType":"VariableDeclaration","scope":4558,"src":"902:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4553,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"value","nameLocation":"922:5:14","nodeType":"VariableDeclaration","scope":4558,"src":"914:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:14"}},{"id":4563,"nodeType":"ErrorDefinition","src":"1015:48:14","nodes":[],"documentation":{"id":4559,"nodeType":"StructuredDocumentation","src":"935:75:14","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:14","parameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"value","nameLocation":"1056:5:14","nodeType":"VariableDeclaration","scope":4563,"src":"1049:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4560,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:14"}},{"id":4570,"nodeType":"ErrorDefinition","src":"1141:62:14","nodes":[],"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"1069:67:14","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:14","parameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4566,"mutability":"mutable","name":"bits","nameLocation":"1183:4:14","nodeType":"VariableDeclaration","scope":4570,"src":"1177:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4565,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4568,"mutability":"mutable","name":"value","nameLocation":"1196:5:14","nodeType":"VariableDeclaration","scope":4570,"src":"1189:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4567,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:14"}},{"id":4575,"nodeType":"ErrorDefinition","src":"1289:49:14","nodes":[],"documentation":{"id":4571,"nodeType":"StructuredDocumentation","src":"1209:75:14","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:14","parameters":{"id":4574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"value","nameLocation":"1331:5:14","nodeType":"VariableDeclaration","scope":4575,"src":"1323:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:14"}},{"id":4603,"nodeType":"FunctionDefinition","src":"1629:218:14","nodes":[],"body":{"id":4602,"nodeType":"Block","src":"1695:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"1709:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4585,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4584,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:14","memberName":"max","nodeType":"MemberAccess","src":"1717:17:14","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4596,"nodeType":"IfStatement","src":"1705:105:14","trueBody":{"id":4595,"nodeType":"Block","src":"1736:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:14","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"1793:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4590,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"1757:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4594,"nodeType":"RevertStatement","src":"1750:49:14"}]}},{"expression":{"arguments":[{"id":4599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"1834:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4597,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:14","typeDescriptions":{}}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4582,"id":4601,"nodeType":"Return","src":"1819:21:14"}]},"documentation":{"id":4576,"nodeType":"StructuredDocumentation","src":"1344:280:14","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:14","parameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"value","nameLocation":"1656:5:14","nodeType":"VariableDeclaration","scope":4603,"src":"1648:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:14"},"returnParameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4603,"src":"1686:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4580,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:14","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4631,"nodeType":"FunctionDefinition","src":"2138:218:14","nodes":[],"body":{"id":4630,"nodeType":"Block","src":"2204:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"2218:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4613,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4612,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:14","memberName":"max","nodeType":"MemberAccess","src":"2226:17:14","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4624,"nodeType":"IfStatement","src":"2214:105:14","trueBody":{"id":4623,"nodeType":"Block","src":"2245:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:14","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"2302:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4618,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"2266:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4622,"nodeType":"RevertStatement","src":"2259:49:14"}]}},{"expression":{"arguments":[{"id":4627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"2343:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4625,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:14","typeDescriptions":{}}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4610,"id":4629,"nodeType":"Return","src":"2328:21:14"}]},"documentation":{"id":4604,"nodeType":"StructuredDocumentation","src":"1853:280:14","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:14","parameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"value","nameLocation":"2165:5:14","nodeType":"VariableDeclaration","scope":4631,"src":"2157:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:14"},"returnParameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4631,"src":"2195:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4608,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:14","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4659,"nodeType":"FunctionDefinition","src":"2647:218:14","nodes":[],"body":{"id":4658,"nodeType":"Block","src":"2713:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"2727:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4641,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4640,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:14","memberName":"max","nodeType":"MemberAccess","src":"2735:17:14","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4652,"nodeType":"IfStatement","src":"2723:105:14","trueBody":{"id":4651,"nodeType":"Block","src":"2754:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"2811:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4646,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"2775:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4650,"nodeType":"RevertStatement","src":"2768:49:14"}]}},{"expression":{"arguments":[{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"2852:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4653,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:14","typeDescriptions":{}}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4638,"id":4657,"nodeType":"Return","src":"2837:21:14"}]},"documentation":{"id":4632,"nodeType":"StructuredDocumentation","src":"2362:280:14","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:14","parameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"mutability":"mutable","name":"value","nameLocation":"2674:5:14","nodeType":"VariableDeclaration","scope":4659,"src":"2666:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:14"},"returnParameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4659,"src":"2704:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4636,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:14","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4687,"nodeType":"FunctionDefinition","src":"3156:218:14","nodes":[],"body":{"id":4686,"nodeType":"Block","src":"3222:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"3236:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4669,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4668,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:14","memberName":"max","nodeType":"MemberAccess","src":"3244:17:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4680,"nodeType":"IfStatement","src":"3232:105:14","trueBody":{"id":4679,"nodeType":"Block","src":"3263:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:14","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"3320:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4674,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"3284:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4678,"nodeType":"RevertStatement","src":"3277:49:14"}]}},{"expression":{"arguments":[{"id":4683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"3361:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4681,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:14","typeDescriptions":{}}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4666,"id":4685,"nodeType":"Return","src":"3346:21:14"}]},"documentation":{"id":4660,"nodeType":"StructuredDocumentation","src":"2871:280:14","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:14","parameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"value","nameLocation":"3183:5:14","nodeType":"VariableDeclaration","scope":4687,"src":"3175:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:14"},"returnParameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4687,"src":"3213:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4664,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4715,"nodeType":"FunctionDefinition","src":"3665:218:14","nodes":[],"body":{"id":4714,"nodeType":"Block","src":"3731:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"3745:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4697,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:14","memberName":"max","nodeType":"MemberAccess","src":"3753:17:14","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4708,"nodeType":"IfStatement","src":"3741:105:14","trueBody":{"id":4707,"nodeType":"Block","src":"3772:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:14","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"3829:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4702,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"3793:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4706,"nodeType":"RevertStatement","src":"3786:49:14"}]}},{"expression":{"arguments":[{"id":4711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"3870:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4709,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:14","typeDescriptions":{}}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4694,"id":4713,"nodeType":"Return","src":"3855:21:14"}]},"documentation":{"id":4688,"nodeType":"StructuredDocumentation","src":"3380:280:14","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:14","parameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"value","nameLocation":"3692:5:14","nodeType":"VariableDeclaration","scope":4715,"src":"3684:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:14"},"returnParameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4715,"src":"3722:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4692,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:14","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4743,"nodeType":"FunctionDefinition","src":"4174:218:14","nodes":[],"body":{"id":4742,"nodeType":"Block","src":"4240:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"4254:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4725,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4724,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:14","memberName":"max","nodeType":"MemberAccess","src":"4262:17:14","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4736,"nodeType":"IfStatement","src":"4250:105:14","trueBody":{"id":4735,"nodeType":"Block","src":"4281:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:14","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"4338:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4730,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"4302:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4734,"nodeType":"RevertStatement","src":"4295:49:14"}]}},{"expression":{"arguments":[{"id":4739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"4379:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4737,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:14","typeDescriptions":{}}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4722,"id":4741,"nodeType":"Return","src":"4364:21:14"}]},"documentation":{"id":4716,"nodeType":"StructuredDocumentation","src":"3889:280:14","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:14","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"value","nameLocation":"4201:5:14","nodeType":"VariableDeclaration","scope":4743,"src":"4193:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4717,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:14"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4743,"src":"4231:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4720,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:14","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4771,"nodeType":"FunctionDefinition","src":"4683:218:14","nodes":[],"body":{"id":4770,"nodeType":"Block","src":"4749:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"4763:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4753,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4752,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:14","memberName":"max","nodeType":"MemberAccess","src":"4771:17:14","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4764,"nodeType":"IfStatement","src":"4759:105:14","trueBody":{"id":4763,"nodeType":"Block","src":"4790:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:14","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"4847:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4758,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"4811:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4762,"nodeType":"RevertStatement","src":"4804:49:14"}]}},{"expression":{"arguments":[{"id":4767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"4888:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4765,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:14","typeDescriptions":{}}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4750,"id":4769,"nodeType":"Return","src":"4873:21:14"}]},"documentation":{"id":4744,"nodeType":"StructuredDocumentation","src":"4398:280:14","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:14","parameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"value","nameLocation":"4710:5:14","nodeType":"VariableDeclaration","scope":4771,"src":"4702:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4745,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:14"},"returnParameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4771,"src":"4740:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4748,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:14","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4799,"nodeType":"FunctionDefinition","src":"5192:218:14","nodes":[],"body":{"id":4798,"nodeType":"Block","src":"5258:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"5272:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4781,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4780,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:14","memberName":"max","nodeType":"MemberAccess","src":"5280:17:14","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4792,"nodeType":"IfStatement","src":"5268:105:14","trueBody":{"id":4791,"nodeType":"Block","src":"5299:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:14","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"5356:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4786,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"5320:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4790,"nodeType":"RevertStatement","src":"5313:49:14"}]}},{"expression":{"arguments":[{"id":4795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"5397:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4793,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:14","typeDescriptions":{}}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4778,"id":4797,"nodeType":"Return","src":"5382:21:14"}]},"documentation":{"id":4772,"nodeType":"StructuredDocumentation","src":"4907:280:14","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:14","parameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"value","nameLocation":"5219:5:14","nodeType":"VariableDeclaration","scope":4799,"src":"5211:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:14"},"returnParameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4799,"src":"5249:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4776,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:14","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4827,"nodeType":"FunctionDefinition","src":"5701:218:14","nodes":[],"body":{"id":4826,"nodeType":"Block","src":"5767:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"5781:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4809,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4808,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:14","memberName":"max","nodeType":"MemberAccess","src":"5789:17:14","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4820,"nodeType":"IfStatement","src":"5777:105:14","trueBody":{"id":4819,"nodeType":"Block","src":"5808:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:14","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"5865:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4814,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"5829:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4818,"nodeType":"RevertStatement","src":"5822:49:14"}]}},{"expression":{"arguments":[{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"5906:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4821,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:14","typeDescriptions":{}}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4806,"id":4825,"nodeType":"Return","src":"5891:21:14"}]},"documentation":{"id":4800,"nodeType":"StructuredDocumentation","src":"5416:280:14","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:14","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"value","nameLocation":"5728:5:14","nodeType":"VariableDeclaration","scope":4827,"src":"5720:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:14"},"returnParameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4827,"src":"5758:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4804,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:14","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4855,"nodeType":"FunctionDefinition","src":"6210:218:14","nodes":[],"body":{"id":4854,"nodeType":"Block","src":"6276:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"6290:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4837,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4836,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:14","memberName":"max","nodeType":"MemberAccess","src":"6298:17:14","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4848,"nodeType":"IfStatement","src":"6286:105:14","trueBody":{"id":4847,"nodeType":"Block","src":"6317:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:14","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"6374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4842,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"6338:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4846,"nodeType":"RevertStatement","src":"6331:49:14"}]}},{"expression":{"arguments":[{"id":4851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"6415:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4849,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:14","typeDescriptions":{}}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4834,"id":4853,"nodeType":"Return","src":"6400:21:14"}]},"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"5925:280:14","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:14","parameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"value","nameLocation":"6237:5:14","nodeType":"VariableDeclaration","scope":4855,"src":"6229:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:14"},"returnParameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4855,"src":"6267:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4832,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:14","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4883,"nodeType":"FunctionDefinition","src":"6719:218:14","nodes":[],"body":{"id":4882,"nodeType":"Block","src":"6785:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"6799:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4865,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4864,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:14","memberName":"max","nodeType":"MemberAccess","src":"6807:17:14","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4876,"nodeType":"IfStatement","src":"6795:105:14","trueBody":{"id":4875,"nodeType":"Block","src":"6826:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:14","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"6883:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4870,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"6847:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4874,"nodeType":"RevertStatement","src":"6840:49:14"}]}},{"expression":{"arguments":[{"id":4879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"6924:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4877,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:14","typeDescriptions":{}}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4862,"id":4881,"nodeType":"Return","src":"6909:21:14"}]},"documentation":{"id":4856,"nodeType":"StructuredDocumentation","src":"6434:280:14","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:14","parameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"value","nameLocation":"6746:5:14","nodeType":"VariableDeclaration","scope":4883,"src":"6738:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:14"},"returnParameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4883,"src":"6776:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4860,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:14","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4911,"nodeType":"FunctionDefinition","src":"7228:218:14","nodes":[],"body":{"id":4910,"nodeType":"Block","src":"7294:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"7308:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4893,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4892,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:14","memberName":"max","nodeType":"MemberAccess","src":"7316:17:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4904,"nodeType":"IfStatement","src":"7304:105:14","trueBody":{"id":4903,"nodeType":"Block","src":"7335:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:14","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"7392:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4898,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"7356:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4902,"nodeType":"RevertStatement","src":"7349:49:14"}]}},{"expression":{"arguments":[{"id":4907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"7433:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4905,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:14","typeDescriptions":{}}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4890,"id":4909,"nodeType":"Return","src":"7418:21:14"}]},"documentation":{"id":4884,"nodeType":"StructuredDocumentation","src":"6943:280:14","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:14","parameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4886,"mutability":"mutable","name":"value","nameLocation":"7255:5:14","nodeType":"VariableDeclaration","scope":4911,"src":"7247:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4885,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:14"},"returnParameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4911,"src":"7285:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4888,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4939,"nodeType":"FunctionDefinition","src":"7737:218:14","nodes":[],"body":{"id":4938,"nodeType":"Block","src":"7803:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"7817:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4921,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4920,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:14","memberName":"max","nodeType":"MemberAccess","src":"7825:17:14","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4932,"nodeType":"IfStatement","src":"7813:105:14","trueBody":{"id":4931,"nodeType":"Block","src":"7844:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:14","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"7901:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4926,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"7865:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4930,"nodeType":"RevertStatement","src":"7858:49:14"}]}},{"expression":{"arguments":[{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"7942:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4933,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:14","typeDescriptions":{}}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4918,"id":4937,"nodeType":"Return","src":"7927:21:14"}]},"documentation":{"id":4912,"nodeType":"StructuredDocumentation","src":"7452:280:14","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:14","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"value","nameLocation":"7764:5:14","nodeType":"VariableDeclaration","scope":4939,"src":"7756:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:14"},"returnParameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4939,"src":"7794:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4916,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:14","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4967,"nodeType":"FunctionDefinition","src":"8246:218:14","nodes":[],"body":{"id":4966,"nodeType":"Block","src":"8312:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"8326:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4949,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4948,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:14","memberName":"max","nodeType":"MemberAccess","src":"8334:17:14","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4960,"nodeType":"IfStatement","src":"8322:105:14","trueBody":{"id":4959,"nodeType":"Block","src":"8353:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:14","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"8410:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4954,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"8374:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4958,"nodeType":"RevertStatement","src":"8367:49:14"}]}},{"expression":{"arguments":[{"id":4963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"8451:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4961,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:14","typeDescriptions":{}}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4946,"id":4965,"nodeType":"Return","src":"8436:21:14"}]},"documentation":{"id":4940,"nodeType":"StructuredDocumentation","src":"7961:280:14","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:14","parameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"value","nameLocation":"8273:5:14","nodeType":"VariableDeclaration","scope":4967,"src":"8265:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4941,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:14"},"returnParameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4967,"src":"8303:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4944,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:14","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":4995,"nodeType":"FunctionDefinition","src":"8755:218:14","nodes":[],"body":{"id":4994,"nodeType":"Block","src":"8821:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"8835:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4977,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4976,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:14","memberName":"max","nodeType":"MemberAccess","src":"8843:17:14","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4988,"nodeType":"IfStatement","src":"8831:105:14","trueBody":{"id":4987,"nodeType":"Block","src":"8862:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:14","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"8919:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4982,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"8883:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4986,"nodeType":"RevertStatement","src":"8876:49:14"}]}},{"expression":{"arguments":[{"id":4991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"8960:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4989,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:14","typeDescriptions":{}}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4974,"id":4993,"nodeType":"Return","src":"8945:21:14"}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"8470:280:14","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:14","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"value","nameLocation":"8782:5:14","nodeType":"VariableDeclaration","scope":4995,"src":"8774:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:14"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4995,"src":"8812:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4972,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:14","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5023,"nodeType":"FunctionDefinition","src":"9264:218:14","nodes":[],"body":{"id":5022,"nodeType":"Block","src":"9330:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"9344:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5005,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5004,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:14","memberName":"max","nodeType":"MemberAccess","src":"9352:17:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5016,"nodeType":"IfStatement","src":"9340:105:14","trueBody":{"id":5015,"nodeType":"Block","src":"9371:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"9428:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5010,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"9392:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5014,"nodeType":"RevertStatement","src":"9385:49:14"}]}},{"expression":{"arguments":[{"id":5019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"9469:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5017,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:14","typeDescriptions":{}}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5002,"id":5021,"nodeType":"Return","src":"9454:21:14"}]},"documentation":{"id":4996,"nodeType":"StructuredDocumentation","src":"8979:280:14","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:14","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"value","nameLocation":"9291:5:14","nodeType":"VariableDeclaration","scope":5023,"src":"9283:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:14"},"returnParameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5023,"src":"9321:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5000,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5051,"nodeType":"FunctionDefinition","src":"9773:218:14","nodes":[],"body":{"id":5050,"nodeType":"Block","src":"9839:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"9853:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5033,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5032,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:14","memberName":"max","nodeType":"MemberAccess","src":"9861:17:14","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"IfStatement","src":"9849:105:14","trueBody":{"id":5043,"nodeType":"Block","src":"9880:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:14","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"9937:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5038,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"9901:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5042,"nodeType":"RevertStatement","src":"9894:49:14"}]}},{"expression":{"arguments":[{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"9978:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5045,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:14","typeDescriptions":{}}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5030,"id":5049,"nodeType":"Return","src":"9963:21:14"}]},"documentation":{"id":5024,"nodeType":"StructuredDocumentation","src":"9488:280:14","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:14","parameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"value","nameLocation":"9800:5:14","nodeType":"VariableDeclaration","scope":5051,"src":"9792:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:14"},"returnParameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5051,"src":"9830:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5028,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:14","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5079,"nodeType":"FunctionDefinition","src":"10282:218:14","nodes":[],"body":{"id":5078,"nodeType":"Block","src":"10348:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"10362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5061,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:14","memberName":"max","nodeType":"MemberAccess","src":"10370:17:14","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5072,"nodeType":"IfStatement","src":"10358:105:14","trueBody":{"id":5071,"nodeType":"Block","src":"10389:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:14","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"10446:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5066,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"10410:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5070,"nodeType":"RevertStatement","src":"10403:49:14"}]}},{"expression":{"arguments":[{"id":5075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"10487:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5073,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:14","typeDescriptions":{}}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5058,"id":5077,"nodeType":"Return","src":"10472:21:14"}]},"documentation":{"id":5052,"nodeType":"StructuredDocumentation","src":"9997:280:14","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:14","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"value","nameLocation":"10309:5:14","nodeType":"VariableDeclaration","scope":5079,"src":"10301:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:14"},"returnParameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5079,"src":"10339:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5056,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:14","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5107,"nodeType":"FunctionDefinition","src":"10791:218:14","nodes":[],"body":{"id":5106,"nodeType":"Block","src":"10857:152:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"10871:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5089,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5088,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:14","memberName":"max","nodeType":"MemberAccess","src":"10879:17:14","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5100,"nodeType":"IfStatement","src":"10867:105:14","trueBody":{"id":5099,"nodeType":"Block","src":"10898:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:14","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"10955:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5094,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"10919:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5098,"nodeType":"RevertStatement","src":"10912:49:14"}]}},{"expression":{"arguments":[{"id":5103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"10996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5101,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:14","typeDescriptions":{}}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5086,"id":5105,"nodeType":"Return","src":"10981:21:14"}]},"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"10506:280:14","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:14","parameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"value","nameLocation":"10818:5:14","nodeType":"VariableDeclaration","scope":5107,"src":"10810:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:14"},"returnParameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"10848:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5084,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:14","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5135,"nodeType":"FunctionDefinition","src":"11296:213:14","nodes":[],"body":{"id":5134,"nodeType":"Block","src":"11360:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"11374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5117,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:14","memberName":"max","nodeType":"MemberAccess","src":"11382:16:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5128,"nodeType":"IfStatement","src":"11370:103:14","trueBody":{"id":5127,"nodeType":"Block","src":"11400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"11456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5122,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"11421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5126,"nodeType":"RevertStatement","src":"11414:48:14"}]}},{"expression":{"arguments":[{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"11496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5129,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:14","typeDescriptions":{}}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5114,"id":5133,"nodeType":"Return","src":"11482:20:14"}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"11015:276:14","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:14","parameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"value","nameLocation":"11322:5:14","nodeType":"VariableDeclaration","scope":5135,"src":"11314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:14"},"returnParameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5135,"src":"11352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5112,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5163,"nodeType":"FunctionDefinition","src":"11796:213:14","nodes":[],"body":{"id":5162,"nodeType":"Block","src":"11860:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"11874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5145,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5144,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:14","memberName":"max","nodeType":"MemberAccess","src":"11882:16:14","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5156,"nodeType":"IfStatement","src":"11870:103:14","trueBody":{"id":5155,"nodeType":"Block","src":"11900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"11956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5150,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"11921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5154,"nodeType":"RevertStatement","src":"11914:48:14"}]}},{"expression":{"arguments":[{"id":5159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"11996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5157,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:14","typeDescriptions":{}}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5142,"id":5161,"nodeType":"Return","src":"11982:20:14"}]},"documentation":{"id":5136,"nodeType":"StructuredDocumentation","src":"11515:276:14","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:14","parameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"value","nameLocation":"11822:5:14","nodeType":"VariableDeclaration","scope":5163,"src":"11814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5137,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:14"},"returnParameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5163,"src":"11852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5140,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:14","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5191,"nodeType":"FunctionDefinition","src":"12296:213:14","nodes":[],"body":{"id":5190,"nodeType":"Block","src":"12360:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"12374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5173,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:14","memberName":"max","nodeType":"MemberAccess","src":"12382:16:14","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5184,"nodeType":"IfStatement","src":"12370:103:14","trueBody":{"id":5183,"nodeType":"Block","src":"12400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"12456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5178,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"12421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5182,"nodeType":"RevertStatement","src":"12414:48:14"}]}},{"expression":{"arguments":[{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"12496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5185,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:14","typeDescriptions":{}}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5170,"id":5189,"nodeType":"Return","src":"12482:20:14"}]},"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"12015:276:14","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:14","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"value","nameLocation":"12322:5:14","nodeType":"VariableDeclaration","scope":5191,"src":"12314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:14"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5191,"src":"12352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5168,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:14","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5219,"nodeType":"FunctionDefinition","src":"12796:213:14","nodes":[],"body":{"id":5218,"nodeType":"Block","src":"12860:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"12874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5201,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:14","memberName":"max","nodeType":"MemberAccess","src":"12882:16:14","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5212,"nodeType":"IfStatement","src":"12870:103:14","trueBody":{"id":5211,"nodeType":"Block","src":"12900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"12956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"12921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5210,"nodeType":"RevertStatement","src":"12914:48:14"}]}},{"expression":{"arguments":[{"id":5215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"12996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5213,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:14","typeDescriptions":{}}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5198,"id":5217,"nodeType":"Return","src":"12982:20:14"}]},"documentation":{"id":5192,"nodeType":"StructuredDocumentation","src":"12515:276:14","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:14","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"value","nameLocation":"12822:5:14","nodeType":"VariableDeclaration","scope":5219,"src":"12814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:14"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5219,"src":"12852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5196,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:14","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5247,"nodeType":"FunctionDefinition","src":"13296:213:14","nodes":[],"body":{"id":5246,"nodeType":"Block","src":"13360:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"13374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5229,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5228,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:14","memberName":"max","nodeType":"MemberAccess","src":"13382:16:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5240,"nodeType":"IfStatement","src":"13370:103:14","trueBody":{"id":5239,"nodeType":"Block","src":"13400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"13456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5234,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"13421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5238,"nodeType":"RevertStatement","src":"13414:48:14"}]}},{"expression":{"arguments":[{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"13496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5241,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:14","typeDescriptions":{}}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5226,"id":5245,"nodeType":"Return","src":"13482:20:14"}]},"documentation":{"id":5220,"nodeType":"StructuredDocumentation","src":"13015:276:14","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:14","parameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"value","nameLocation":"13322:5:14","nodeType":"VariableDeclaration","scope":5247,"src":"13314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:14"},"returnParameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5247,"src":"13352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5224,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5275,"nodeType":"FunctionDefinition","src":"13796:213:14","nodes":[],"body":{"id":5274,"nodeType":"Block","src":"13860:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"13874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5257,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:14","memberName":"max","nodeType":"MemberAccess","src":"13882:16:14","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5268,"nodeType":"IfStatement","src":"13870:103:14","trueBody":{"id":5267,"nodeType":"Block","src":"13900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"13956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5262,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"13921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5266,"nodeType":"RevertStatement","src":"13914:48:14"}]}},{"expression":{"arguments":[{"id":5271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"13996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5269,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:14","typeDescriptions":{}}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5254,"id":5273,"nodeType":"Return","src":"13982:20:14"}]},"documentation":{"id":5248,"nodeType":"StructuredDocumentation","src":"13515:276:14","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:14","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"value","nameLocation":"13822:5:14","nodeType":"VariableDeclaration","scope":5275,"src":"13814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5249,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:14"},"returnParameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5275,"src":"13852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5252,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:14","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5303,"nodeType":"FunctionDefinition","src":"14296:213:14","nodes":[],"body":{"id":5302,"nodeType":"Block","src":"14360:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"14374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5285,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5284,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:14","memberName":"max","nodeType":"MemberAccess","src":"14382:16:14","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5296,"nodeType":"IfStatement","src":"14370:103:14","trueBody":{"id":5295,"nodeType":"Block","src":"14400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"14456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5290,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"14421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5294,"nodeType":"RevertStatement","src":"14414:48:14"}]}},{"expression":{"arguments":[{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"14496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5297,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:14","typeDescriptions":{}}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5282,"id":5301,"nodeType":"Return","src":"14482:20:14"}]},"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"14015:276:14","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:14","parameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"value","nameLocation":"14322:5:14","nodeType":"VariableDeclaration","scope":5303,"src":"14314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5277,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:14"},"returnParameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5303,"src":"14352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5280,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:14","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5331,"nodeType":"FunctionDefinition","src":"14796:213:14","nodes":[],"body":{"id":5330,"nodeType":"Block","src":"14860:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"14874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5313,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:14","memberName":"max","nodeType":"MemberAccess","src":"14882:16:14","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5324,"nodeType":"IfStatement","src":"14870:103:14","trueBody":{"id":5323,"nodeType":"Block","src":"14900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"14956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5318,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"14921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5322,"nodeType":"RevertStatement","src":"14914:48:14"}]}},{"expression":{"arguments":[{"id":5327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"14996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5325,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:14","typeDescriptions":{}}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5310,"id":5329,"nodeType":"Return","src":"14982:20:14"}]},"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"14515:276:14","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:14","parameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"value","nameLocation":"14822:5:14","nodeType":"VariableDeclaration","scope":5331,"src":"14814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:14"},"returnParameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5331,"src":"14852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5308,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:14","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5359,"nodeType":"FunctionDefinition","src":"15296:213:14","nodes":[],"body":{"id":5358,"nodeType":"Block","src":"15360:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"15374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5341,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5340,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:14","memberName":"max","nodeType":"MemberAccess","src":"15382:16:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5352,"nodeType":"IfStatement","src":"15370:103:14","trueBody":{"id":5351,"nodeType":"Block","src":"15400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"15456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5346,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"15421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5350,"nodeType":"RevertStatement","src":"15414:48:14"}]}},{"expression":{"arguments":[{"id":5355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"15496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5353,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:14","typeDescriptions":{}}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5338,"id":5357,"nodeType":"Return","src":"15482:20:14"}]},"documentation":{"id":5332,"nodeType":"StructuredDocumentation","src":"15015:276:14","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:14","parameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"value","nameLocation":"15322:5:14","nodeType":"VariableDeclaration","scope":5359,"src":"15314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5333,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:14"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5359,"src":"15352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5336,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5387,"nodeType":"FunctionDefinition","src":"15796:213:14","nodes":[],"body":{"id":5386,"nodeType":"Block","src":"15860:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"15874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5369,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5368,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:14","memberName":"max","nodeType":"MemberAccess","src":"15882:16:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5380,"nodeType":"IfStatement","src":"15870:103:14","trueBody":{"id":5379,"nodeType":"Block","src":"15900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"15956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5374,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"15921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5378,"nodeType":"RevertStatement","src":"15914:48:14"}]}},{"expression":{"arguments":[{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"15996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5381,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:14","typeDescriptions":{}}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5366,"id":5385,"nodeType":"Return","src":"15982:20:14"}]},"documentation":{"id":5360,"nodeType":"StructuredDocumentation","src":"15515:276:14","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:14","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"value","nameLocation":"15822:5:14","nodeType":"VariableDeclaration","scope":5387,"src":"15814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:14"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5387,"src":"15852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5364,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5415,"nodeType":"FunctionDefinition","src":"16296:213:14","nodes":[],"body":{"id":5414,"nodeType":"Block","src":"16360:149:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"16374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5397,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5396,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:14","memberName":"max","nodeType":"MemberAccess","src":"16382:16:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5408,"nodeType":"IfStatement","src":"16370:103:14","trueBody":{"id":5407,"nodeType":"Block","src":"16400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"16456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5402,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"16421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5406,"nodeType":"RevertStatement","src":"16414:48:14"}]}},{"expression":{"arguments":[{"id":5411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"16496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5409,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:14","typeDescriptions":{}}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5394,"id":5413,"nodeType":"Return","src":"16482:20:14"}]},"documentation":{"id":5388,"nodeType":"StructuredDocumentation","src":"16015:276:14","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:14","parameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"value","nameLocation":"16322:5:14","nodeType":"VariableDeclaration","scope":5415,"src":"16314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:14"},"returnParameters":{"id":5394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5415,"src":"16352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5392,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5443,"nodeType":"FunctionDefinition","src":"16792:208:14","nodes":[],"body":{"id":5442,"nodeType":"Block","src":"16854:146:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"16868:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5425,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:14","memberName":"max","nodeType":"MemberAccess","src":"16876:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5436,"nodeType":"IfStatement","src":"16864:101:14","trueBody":{"id":5435,"nodeType":"Block","src":"16893:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"16948:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5430,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"16914:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5434,"nodeType":"RevertStatement","src":"16907:47:14"}]}},{"expression":{"arguments":[{"id":5439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"16987:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5437,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:14","typeDescriptions":{}}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5422,"id":5441,"nodeType":"Return","src":"16974:19:14"}]},"documentation":{"id":5416,"nodeType":"StructuredDocumentation","src":"16515:272:14","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:14","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5418,"mutability":"mutable","name":"value","nameLocation":"16817:5:14","nodeType":"VariableDeclaration","scope":5443,"src":"16809:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:14"},"returnParameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5443,"src":"16847:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5420,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5466,"nodeType":"FunctionDefinition","src":"17171:193:14","nodes":[],"body":{"id":5465,"nodeType":"Block","src":"17236:128:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"17250:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5459,"nodeType":"IfStatement","src":"17246:81:14","trueBody":{"id":5458,"nodeType":"Block","src":"17261:66:14","statements":[{"errorCall":{"arguments":[{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"17310:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5454,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"17282:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5457,"nodeType":"RevertStatement","src":"17275:41:14"}]}},{"expression":{"arguments":[{"id":5462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"17351:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:14","typeDescriptions":{}}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5450,"id":5464,"nodeType":"Return","src":"17336:21:14"}]},"documentation":{"id":5444,"nodeType":"StructuredDocumentation","src":"17006:160:14","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:14","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"value","nameLocation":"17197:5:14","nodeType":"VariableDeclaration","scope":5466,"src":"17190:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5445,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:14"},"returnParameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5466,"src":"17227:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5492,"nodeType":"FunctionDefinition","src":"17687:224:14","nodes":[],"body":{"id":5491,"nodeType":"Block","src":"17761:150:14","nodes":[],"statements":[{"expression":{"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5474,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"17771:10:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"17791:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5475,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:14","typeDescriptions":{}}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5480,"nodeType":"ExpressionStatement","src":"17771:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5481,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"17811:10:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"17825:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5490,"nodeType":"IfStatement","src":"17807:98:14","trueBody":{"id":5489,"nodeType":"Block","src":"17832:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:14","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"17888:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5484,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"17853:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5488,"nodeType":"RevertStatement","src":"17846:48:14"}]}}]},"documentation":{"id":5467,"nodeType":"StructuredDocumentation","src":"17370:312:14","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:14","parameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"value","nameLocation":"17712:5:14","nodeType":"VariableDeclaration","scope":5492,"src":"17705:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5468,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:14"},"returnParameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:14","nodeType":"VariableDeclaration","scope":5492,"src":"17742:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5471,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5518,"nodeType":"FunctionDefinition","src":"18234:224:14","nodes":[],"body":{"id":5517,"nodeType":"Block","src":"18308:150:14","nodes":[],"statements":[{"expression":{"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5500,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"18318:10:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"18338:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5501,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:14","typeDescriptions":{}}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5506,"nodeType":"ExpressionStatement","src":"18318:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5507,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"18358:10:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"18372:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5516,"nodeType":"IfStatement","src":"18354:98:14","trueBody":{"id":5515,"nodeType":"Block","src":"18379:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:14","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"18435:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5510,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"18400:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5514,"nodeType":"RevertStatement","src":"18393:48:14"}]}}]},"documentation":{"id":5493,"nodeType":"StructuredDocumentation","src":"17917:312:14","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:14","parameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"value","nameLocation":"18259:5:14","nodeType":"VariableDeclaration","scope":5518,"src":"18252:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5494,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:14"},"returnParameters":{"id":5499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5498,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:14","nodeType":"VariableDeclaration","scope":5518,"src":"18289:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5497,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5544,"nodeType":"FunctionDefinition","src":"18781:224:14","nodes":[],"body":{"id":5543,"nodeType":"Block","src":"18855:150:14","nodes":[],"statements":[{"expression":{"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5526,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"18865:10:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"18885:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5527,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:14","typeDescriptions":{}}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5532,"nodeType":"ExpressionStatement","src":"18865:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5533,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"18905:10:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"18919:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5542,"nodeType":"IfStatement","src":"18901:98:14","trueBody":{"id":5541,"nodeType":"Block","src":"18926:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:14","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"18982:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5536,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"18947:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5540,"nodeType":"RevertStatement","src":"18940:48:14"}]}}]},"documentation":{"id":5519,"nodeType":"StructuredDocumentation","src":"18464:312:14","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:14","parameters":{"id":5522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"value","nameLocation":"18806:5:14","nodeType":"VariableDeclaration","scope":5544,"src":"18799:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5520,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:14"},"returnParameters":{"id":5525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5524,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:14","nodeType":"VariableDeclaration","scope":5544,"src":"18836:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5523,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5570,"nodeType":"FunctionDefinition","src":"19328:224:14","nodes":[],"body":{"id":5569,"nodeType":"Block","src":"19402:150:14","nodes":[],"statements":[{"expression":{"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5552,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"19412:10:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"19432:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5553,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:14","typeDescriptions":{}}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5558,"nodeType":"ExpressionStatement","src":"19412:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5559,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"19452:10:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"19466:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5568,"nodeType":"IfStatement","src":"19448:98:14","trueBody":{"id":5567,"nodeType":"Block","src":"19473:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:14","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"19529:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5562,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"19494:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5566,"nodeType":"RevertStatement","src":"19487:48:14"}]}}]},"documentation":{"id":5545,"nodeType":"StructuredDocumentation","src":"19011:312:14","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:14","parameters":{"id":5548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"value","nameLocation":"19353:5:14","nodeType":"VariableDeclaration","scope":5570,"src":"19346:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5546,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:14"},"returnParameters":{"id":5551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5550,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:14","nodeType":"VariableDeclaration","scope":5570,"src":"19383:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5549,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5596,"nodeType":"FunctionDefinition","src":"19875:224:14","nodes":[],"body":{"id":5595,"nodeType":"Block","src":"19949:150:14","nodes":[],"statements":[{"expression":{"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5578,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"19959:10:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"19979:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5579,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:14","typeDescriptions":{}}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5584,"nodeType":"ExpressionStatement","src":"19959:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5585,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"19999:10:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"20013:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5594,"nodeType":"IfStatement","src":"19995:98:14","trueBody":{"id":5593,"nodeType":"Block","src":"20020:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:14","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"20076:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5588,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"20041:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5592,"nodeType":"RevertStatement","src":"20034:48:14"}]}}]},"documentation":{"id":5571,"nodeType":"StructuredDocumentation","src":"19558:312:14","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:14","parameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"value","nameLocation":"19900:5:14","nodeType":"VariableDeclaration","scope":5596,"src":"19893:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5572,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:14"},"returnParameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:14","nodeType":"VariableDeclaration","scope":5596,"src":"19930:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5575,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5622,"nodeType":"FunctionDefinition","src":"20422:224:14","nodes":[],"body":{"id":5621,"nodeType":"Block","src":"20496:150:14","nodes":[],"statements":[{"expression":{"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5604,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"20506:10:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"20526:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5605,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:14","typeDescriptions":{}}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5610,"nodeType":"ExpressionStatement","src":"20506:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5611,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"20546:10:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"20560:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5620,"nodeType":"IfStatement","src":"20542:98:14","trueBody":{"id":5619,"nodeType":"Block","src":"20567:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:14","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"20623:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5614,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"20588:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5618,"nodeType":"RevertStatement","src":"20581:48:14"}]}}]},"documentation":{"id":5597,"nodeType":"StructuredDocumentation","src":"20105:312:14","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:14","parameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"value","nameLocation":"20447:5:14","nodeType":"VariableDeclaration","scope":5622,"src":"20440:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5598,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:14"},"returnParameters":{"id":5603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5602,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:14","nodeType":"VariableDeclaration","scope":5622,"src":"20477:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5601,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5648,"nodeType":"FunctionDefinition","src":"20969:224:14","nodes":[],"body":{"id":5647,"nodeType":"Block","src":"21043:150:14","nodes":[],"statements":[{"expression":{"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5630,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"21053:10:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"21073:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5631,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:14","typeDescriptions":{}}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5636,"nodeType":"ExpressionStatement","src":"21053:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"21093:10:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"21107:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5646,"nodeType":"IfStatement","src":"21089:98:14","trueBody":{"id":5645,"nodeType":"Block","src":"21114:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:14","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"21170:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5640,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"21135:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5644,"nodeType":"RevertStatement","src":"21128:48:14"}]}}]},"documentation":{"id":5623,"nodeType":"StructuredDocumentation","src":"20652:312:14","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:14","parameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"value","nameLocation":"20994:5:14","nodeType":"VariableDeclaration","scope":5648,"src":"20987:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5624,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:14"},"returnParameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:14","nodeType":"VariableDeclaration","scope":5648,"src":"21024:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5627,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5674,"nodeType":"FunctionDefinition","src":"21516:224:14","nodes":[],"body":{"id":5673,"nodeType":"Block","src":"21590:150:14","nodes":[],"statements":[{"expression":{"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5656,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"21600:10:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"21620:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5657,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:14","typeDescriptions":{}}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5662,"nodeType":"ExpressionStatement","src":"21600:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5663,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"21640:10:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"21654:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5672,"nodeType":"IfStatement","src":"21636:98:14","trueBody":{"id":5671,"nodeType":"Block","src":"21661:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:14","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"21717:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5666,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"21682:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5670,"nodeType":"RevertStatement","src":"21675:48:14"}]}}]},"documentation":{"id":5649,"nodeType":"StructuredDocumentation","src":"21199:312:14","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:14","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"value","nameLocation":"21541:5:14","nodeType":"VariableDeclaration","scope":5674,"src":"21534:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5650,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:14"},"returnParameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:14","nodeType":"VariableDeclaration","scope":5674,"src":"21571:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5653,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5700,"nodeType":"FunctionDefinition","src":"22063:224:14","nodes":[],"body":{"id":5699,"nodeType":"Block","src":"22137:150:14","nodes":[],"statements":[{"expression":{"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5682,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"22147:10:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"22167:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5683,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:14","typeDescriptions":{}}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5688,"nodeType":"ExpressionStatement","src":"22147:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5689,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"22187:10:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"22201:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5698,"nodeType":"IfStatement","src":"22183:98:14","trueBody":{"id":5697,"nodeType":"Block","src":"22208:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:14","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"22264:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5692,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22229:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5696,"nodeType":"RevertStatement","src":"22222:48:14"}]}}]},"documentation":{"id":5675,"nodeType":"StructuredDocumentation","src":"21746:312:14","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:14","parameters":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5677,"mutability":"mutable","name":"value","nameLocation":"22088:5:14","nodeType":"VariableDeclaration","scope":5700,"src":"22081:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5676,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:14"},"returnParameters":{"id":5681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5680,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:14","nodeType":"VariableDeclaration","scope":5700,"src":"22118:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5679,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5726,"nodeType":"FunctionDefinition","src":"22610:224:14","nodes":[],"body":{"id":5725,"nodeType":"Block","src":"22684:150:14","nodes":[],"statements":[{"expression":{"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5708,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"22694:10:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"22714:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5709,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:14","typeDescriptions":{}}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5714,"nodeType":"ExpressionStatement","src":"22694:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"22734:10:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"22748:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5724,"nodeType":"IfStatement","src":"22730:98:14","trueBody":{"id":5723,"nodeType":"Block","src":"22755:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"22811:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5718,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22776:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5722,"nodeType":"RevertStatement","src":"22769:48:14"}]}}]},"documentation":{"id":5701,"nodeType":"StructuredDocumentation","src":"22293:312:14","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:14","parameters":{"id":5704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5703,"mutability":"mutable","name":"value","nameLocation":"22635:5:14","nodeType":"VariableDeclaration","scope":5726,"src":"22628:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5702,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:14"},"returnParameters":{"id":5707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5706,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:14","nodeType":"VariableDeclaration","scope":5726,"src":"22665:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5705,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5752,"nodeType":"FunctionDefinition","src":"23157:224:14","nodes":[],"body":{"id":5751,"nodeType":"Block","src":"23231:150:14","nodes":[],"statements":[{"expression":{"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5734,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"23241:10:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"23261:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5735,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:14","typeDescriptions":{}}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5740,"nodeType":"ExpressionStatement","src":"23241:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5741,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"23281:10:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"23295:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5750,"nodeType":"IfStatement","src":"23277:98:14","trueBody":{"id":5749,"nodeType":"Block","src":"23302:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:14","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"23358:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5744,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"23323:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5748,"nodeType":"RevertStatement","src":"23316:48:14"}]}}]},"documentation":{"id":5727,"nodeType":"StructuredDocumentation","src":"22840:312:14","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:14","parameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"value","nameLocation":"23182:5:14","nodeType":"VariableDeclaration","scope":5752,"src":"23175:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5728,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:14"},"returnParameters":{"id":5733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5732,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:14","nodeType":"VariableDeclaration","scope":5752,"src":"23212:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5731,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5778,"nodeType":"FunctionDefinition","src":"23704:224:14","nodes":[],"body":{"id":5777,"nodeType":"Block","src":"23778:150:14","nodes":[],"statements":[{"expression":{"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5760,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"23788:10:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"23808:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5761,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:14","typeDescriptions":{}}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5766,"nodeType":"ExpressionStatement","src":"23788:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5767,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"23828:10:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"23842:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5776,"nodeType":"IfStatement","src":"23824:98:14","trueBody":{"id":5775,"nodeType":"Block","src":"23849:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:14","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"23905:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5770,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"23870:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5774,"nodeType":"RevertStatement","src":"23863:48:14"}]}}]},"documentation":{"id":5753,"nodeType":"StructuredDocumentation","src":"23387:312:14","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:14","parameters":{"id":5756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5755,"mutability":"mutable","name":"value","nameLocation":"23729:5:14","nodeType":"VariableDeclaration","scope":5778,"src":"23722:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5754,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:14"},"returnParameters":{"id":5759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5758,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:14","nodeType":"VariableDeclaration","scope":5778,"src":"23759:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5757,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5804,"nodeType":"FunctionDefinition","src":"24251:224:14","nodes":[],"body":{"id":5803,"nodeType":"Block","src":"24325:150:14","nodes":[],"statements":[{"expression":{"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5786,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"24335:10:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5781,"src":"24355:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5787,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:14","typeDescriptions":{}}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5792,"nodeType":"ExpressionStatement","src":"24335:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5793,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"24375:10:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5781,"src":"24389:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5802,"nodeType":"IfStatement","src":"24371:98:14","trueBody":{"id":5801,"nodeType":"Block","src":"24396:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:14","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5781,"src":"24452:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5796,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"24417:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5800,"nodeType":"RevertStatement","src":"24410:48:14"}]}}]},"documentation":{"id":5779,"nodeType":"StructuredDocumentation","src":"23934:312:14","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:14","parameters":{"id":5782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5781,"mutability":"mutable","name":"value","nameLocation":"24276:5:14","nodeType":"VariableDeclaration","scope":5804,"src":"24269:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5780,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:14"},"returnParameters":{"id":5785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5784,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:14","nodeType":"VariableDeclaration","scope":5804,"src":"24306:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5783,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5830,"nodeType":"FunctionDefinition","src":"24798:224:14","nodes":[],"body":{"id":5829,"nodeType":"Block","src":"24872:150:14","nodes":[],"statements":[{"expression":{"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5812,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"24882:10:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"24902:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5813,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:14","typeDescriptions":{}}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5818,"nodeType":"ExpressionStatement","src":"24882:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5819,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"24922:10:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"24936:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5828,"nodeType":"IfStatement","src":"24918:98:14","trueBody":{"id":5827,"nodeType":"Block","src":"24943:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:14","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"24999:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5822,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"24964:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5826,"nodeType":"RevertStatement","src":"24957:48:14"}]}}]},"documentation":{"id":5805,"nodeType":"StructuredDocumentation","src":"24481:312:14","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:14","parameters":{"id":5808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5807,"mutability":"mutable","name":"value","nameLocation":"24823:5:14","nodeType":"VariableDeclaration","scope":5830,"src":"24816:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5806,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:14"},"returnParameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5810,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:14","nodeType":"VariableDeclaration","scope":5830,"src":"24853:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5809,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5856,"nodeType":"FunctionDefinition","src":"25345:224:14","nodes":[],"body":{"id":5855,"nodeType":"Block","src":"25419:150:14","nodes":[],"statements":[{"expression":{"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5838,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"25429:10:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"25449:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5839,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:14","typeDescriptions":{}}},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5844,"nodeType":"ExpressionStatement","src":"25429:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5845,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"25469:10:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"25483:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5854,"nodeType":"IfStatement","src":"25465:98:14","trueBody":{"id":5853,"nodeType":"Block","src":"25490:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:14","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"25546:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5848,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"25511:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5852,"nodeType":"RevertStatement","src":"25504:48:14"}]}}]},"documentation":{"id":5831,"nodeType":"StructuredDocumentation","src":"25028:312:14","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:14","parameters":{"id":5834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5833,"mutability":"mutable","name":"value","nameLocation":"25370:5:14","nodeType":"VariableDeclaration","scope":5856,"src":"25363:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5832,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:14"},"returnParameters":{"id":5837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5836,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:14","nodeType":"VariableDeclaration","scope":5856,"src":"25400:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5835,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5882,"nodeType":"FunctionDefinition","src":"25892:224:14","nodes":[],"body":{"id":5881,"nodeType":"Block","src":"25966:150:14","nodes":[],"statements":[{"expression":{"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5864,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"25976:10:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"25996:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5865,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:14","typeDescriptions":{}}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5870,"nodeType":"ExpressionStatement","src":"25976:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5871,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"26016:10:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"26030:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5880,"nodeType":"IfStatement","src":"26012:98:14","trueBody":{"id":5879,"nodeType":"Block","src":"26037:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"26093:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5874,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"26058:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5878,"nodeType":"RevertStatement","src":"26051:48:14"}]}}]},"documentation":{"id":5857,"nodeType":"StructuredDocumentation","src":"25575:312:14","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:14","parameters":{"id":5860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5859,"mutability":"mutable","name":"value","nameLocation":"25917:5:14","nodeType":"VariableDeclaration","scope":5882,"src":"25910:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5858,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:14"},"returnParameters":{"id":5863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5862,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:14","nodeType":"VariableDeclaration","scope":5882,"src":"25947:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5861,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5908,"nodeType":"FunctionDefinition","src":"26439:224:14","nodes":[],"body":{"id":5907,"nodeType":"Block","src":"26513:150:14","nodes":[],"statements":[{"expression":{"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5890,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"26523:10:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"26543:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5891,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:14","typeDescriptions":{}}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5896,"nodeType":"ExpressionStatement","src":"26523:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5897,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"26563:10:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"26577:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5906,"nodeType":"IfStatement","src":"26559:98:14","trueBody":{"id":5905,"nodeType":"Block","src":"26584:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:14","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"26640:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5900,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"26605:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5904,"nodeType":"RevertStatement","src":"26598:48:14"}]}}]},"documentation":{"id":5883,"nodeType":"StructuredDocumentation","src":"26122:312:14","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:14","parameters":{"id":5886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5885,"mutability":"mutable","name":"value","nameLocation":"26464:5:14","nodeType":"VariableDeclaration","scope":5908,"src":"26457:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5884,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:14"},"returnParameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:14","nodeType":"VariableDeclaration","scope":5908,"src":"26494:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5887,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5934,"nodeType":"FunctionDefinition","src":"26986:224:14","nodes":[],"body":{"id":5933,"nodeType":"Block","src":"27060:150:14","nodes":[],"statements":[{"expression":{"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5916,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"27070:10:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"27090:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5917,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:14","typeDescriptions":{}}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5922,"nodeType":"ExpressionStatement","src":"27070:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5923,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"27110:10:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"27124:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5932,"nodeType":"IfStatement","src":"27106:98:14","trueBody":{"id":5931,"nodeType":"Block","src":"27131:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:14","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"27187:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5926,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27152:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5930,"nodeType":"RevertStatement","src":"27145:48:14"}]}}]},"documentation":{"id":5909,"nodeType":"StructuredDocumentation","src":"26669:312:14","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:14","parameters":{"id":5912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5911,"mutability":"mutable","name":"value","nameLocation":"27011:5:14","nodeType":"VariableDeclaration","scope":5934,"src":"27004:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5910,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:14"},"returnParameters":{"id":5915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5914,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:14","nodeType":"VariableDeclaration","scope":5934,"src":"27041:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5913,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5960,"nodeType":"FunctionDefinition","src":"27533:224:14","nodes":[],"body":{"id":5959,"nodeType":"Block","src":"27607:150:14","nodes":[],"statements":[{"expression":{"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5942,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"27617:10:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"27637:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5943,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:14","typeDescriptions":{}}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5948,"nodeType":"ExpressionStatement","src":"27617:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5949,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"27657:10:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"27671:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5958,"nodeType":"IfStatement","src":"27653:98:14","trueBody":{"id":5957,"nodeType":"Block","src":"27678:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:14","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"27734:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5952,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27699:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5956,"nodeType":"RevertStatement","src":"27692:48:14"}]}}]},"documentation":{"id":5935,"nodeType":"StructuredDocumentation","src":"27216:312:14","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:14","parameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"value","nameLocation":"27558:5:14","nodeType":"VariableDeclaration","scope":5960,"src":"27551:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5936,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:14"},"returnParameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5940,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:14","nodeType":"VariableDeclaration","scope":5960,"src":"27588:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5939,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5986,"nodeType":"FunctionDefinition","src":"28075:220:14","nodes":[],"body":{"id":5985,"nodeType":"Block","src":"28147:148:14","nodes":[],"statements":[{"expression":{"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5968,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"28157:10:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"28176:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5969,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:14","typeDescriptions":{}}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5974,"nodeType":"ExpressionStatement","src":"28157:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5975,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"28196:10:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"28210:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5984,"nodeType":"IfStatement","src":"28192:97:14","trueBody":{"id":5983,"nodeType":"Block","src":"28217:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"28272:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5978,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"28238:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5982,"nodeType":"RevertStatement","src":"28231:47:14"}]}}]},"documentation":{"id":5961,"nodeType":"StructuredDocumentation","src":"27763:307:14","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:14","parameters":{"id":5964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"value","nameLocation":"28099:5:14","nodeType":"VariableDeclaration","scope":5986,"src":"28092:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5962,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:14"},"returnParameters":{"id":5967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5966,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:14","nodeType":"VariableDeclaration","scope":5986,"src":"28129:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5965,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6012,"nodeType":"FunctionDefinition","src":"28613:220:14","nodes":[],"body":{"id":6011,"nodeType":"Block","src":"28685:148:14","nodes":[],"statements":[{"expression":{"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5994,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"28695:10:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"28714:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5995,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:14","typeDescriptions":{}}},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6000,"nodeType":"ExpressionStatement","src":"28695:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6001,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"28734:10:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"28748:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6010,"nodeType":"IfStatement","src":"28730:97:14","trueBody":{"id":6009,"nodeType":"Block","src":"28755:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:14","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"28810:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6004,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"28776:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6008,"nodeType":"RevertStatement","src":"28769:47:14"}]}}]},"documentation":{"id":5987,"nodeType":"StructuredDocumentation","src":"28301:307:14","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:14","parameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"value","nameLocation":"28637:5:14","nodeType":"VariableDeclaration","scope":6012,"src":"28630:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5988,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:14"},"returnParameters":{"id":5993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5992,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:14","nodeType":"VariableDeclaration","scope":6012,"src":"28667:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5991,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6038,"nodeType":"FunctionDefinition","src":"29151:220:14","nodes":[],"body":{"id":6037,"nodeType":"Block","src":"29223:148:14","nodes":[],"statements":[{"expression":{"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6020,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"29233:10:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"29252:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6021,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:14","typeDescriptions":{}}},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6026,"nodeType":"ExpressionStatement","src":"29233:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6027,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"29272:10:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"29286:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6036,"nodeType":"IfStatement","src":"29268:97:14","trueBody":{"id":6035,"nodeType":"Block","src":"29293:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:14","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"29348:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6030,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"29314:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6034,"nodeType":"RevertStatement","src":"29307:47:14"}]}}]},"documentation":{"id":6013,"nodeType":"StructuredDocumentation","src":"28839:307:14","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:14","parameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"value","nameLocation":"29175:5:14","nodeType":"VariableDeclaration","scope":6038,"src":"29168:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6014,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:14"},"returnParameters":{"id":6019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6018,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:14","nodeType":"VariableDeclaration","scope":6038,"src":"29205:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6017,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6064,"nodeType":"FunctionDefinition","src":"29689:220:14","nodes":[],"body":{"id":6063,"nodeType":"Block","src":"29761:148:14","nodes":[],"statements":[{"expression":{"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6046,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"29771:10:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29790:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6047,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:14","typeDescriptions":{}}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6052,"nodeType":"ExpressionStatement","src":"29771:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6053,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"29810:10:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29824:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6062,"nodeType":"IfStatement","src":"29806:97:14","trueBody":{"id":6061,"nodeType":"Block","src":"29831:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:14","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"29886:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6056,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"29852:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6060,"nodeType":"RevertStatement","src":"29845:47:14"}]}}]},"documentation":{"id":6039,"nodeType":"StructuredDocumentation","src":"29377:307:14","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:14","parameters":{"id":6042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6041,"mutability":"mutable","name":"value","nameLocation":"29713:5:14","nodeType":"VariableDeclaration","scope":6064,"src":"29706:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6040,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:14"},"returnParameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6044,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:14","nodeType":"VariableDeclaration","scope":6064,"src":"29743:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6043,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6090,"nodeType":"FunctionDefinition","src":"30227:220:14","nodes":[],"body":{"id":6089,"nodeType":"Block","src":"30299:148:14","nodes":[],"statements":[{"expression":{"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"30309:10:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"30328:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6073,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:14","typeDescriptions":{}}},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6078,"nodeType":"ExpressionStatement","src":"30309:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6079,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"30348:10:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"30362:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6088,"nodeType":"IfStatement","src":"30344:97:14","trueBody":{"id":6087,"nodeType":"Block","src":"30369:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"30424:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6082,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"30390:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6086,"nodeType":"RevertStatement","src":"30383:47:14"}]}}]},"documentation":{"id":6065,"nodeType":"StructuredDocumentation","src":"29915:307:14","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:14","parameters":{"id":6068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6067,"mutability":"mutable","name":"value","nameLocation":"30251:5:14","nodeType":"VariableDeclaration","scope":6090,"src":"30244:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6066,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:14"},"returnParameters":{"id":6071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6070,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:14","nodeType":"VariableDeclaration","scope":6090,"src":"30281:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6069,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6116,"nodeType":"FunctionDefinition","src":"30765:220:14","nodes":[],"body":{"id":6115,"nodeType":"Block","src":"30837:148:14","nodes":[],"statements":[{"expression":{"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6098,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"30847:10:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"30866:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6099,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:14","typeDescriptions":{}}},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6104,"nodeType":"ExpressionStatement","src":"30847:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"30886:10:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"30900:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6114,"nodeType":"IfStatement","src":"30882:97:14","trueBody":{"id":6113,"nodeType":"Block","src":"30907:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:14","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"30962:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6108,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"30928:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6112,"nodeType":"RevertStatement","src":"30921:47:14"}]}}]},"documentation":{"id":6091,"nodeType":"StructuredDocumentation","src":"30453:307:14","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:14","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"value","nameLocation":"30789:5:14","nodeType":"VariableDeclaration","scope":6116,"src":"30782:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6092,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:14"},"returnParameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:14","nodeType":"VariableDeclaration","scope":6116,"src":"30819:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6095,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6142,"nodeType":"FunctionDefinition","src":"31303:220:14","nodes":[],"body":{"id":6141,"nodeType":"Block","src":"31375:148:14","nodes":[],"statements":[{"expression":{"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6124,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"31385:10:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"31404:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6125,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:14","typeDescriptions":{}}},"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6130,"nodeType":"ExpressionStatement","src":"31385:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6131,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"31424:10:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"31438:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6140,"nodeType":"IfStatement","src":"31420:97:14","trueBody":{"id":6139,"nodeType":"Block","src":"31445:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"31500:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6134,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"31466:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6138,"nodeType":"RevertStatement","src":"31459:47:14"}]}}]},"documentation":{"id":6117,"nodeType":"StructuredDocumentation","src":"30991:307:14","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:14","parameters":{"id":6120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6119,"mutability":"mutable","name":"value","nameLocation":"31327:5:14","nodeType":"VariableDeclaration","scope":6142,"src":"31320:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6118,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:14"},"returnParameters":{"id":6123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6122,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:14","nodeType":"VariableDeclaration","scope":6142,"src":"31357:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6121,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6168,"nodeType":"FunctionDefinition","src":"31841:220:14","nodes":[],"body":{"id":6167,"nodeType":"Block","src":"31913:148:14","nodes":[],"statements":[{"expression":{"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6150,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"31923:10:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"31942:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6151,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:14","typeDescriptions":{}}},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6156,"nodeType":"ExpressionStatement","src":"31923:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"31962:10:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"31976:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6166,"nodeType":"IfStatement","src":"31958:97:14","trueBody":{"id":6165,"nodeType":"Block","src":"31983:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"32038:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6160,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"32004:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6164,"nodeType":"RevertStatement","src":"31997:47:14"}]}}]},"documentation":{"id":6143,"nodeType":"StructuredDocumentation","src":"31529:307:14","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:14","parameters":{"id":6146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6145,"mutability":"mutable","name":"value","nameLocation":"31865:5:14","nodeType":"VariableDeclaration","scope":6168,"src":"31858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6144,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:14"},"returnParameters":{"id":6149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6148,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:14","nodeType":"VariableDeclaration","scope":6168,"src":"31895:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6147,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6194,"nodeType":"FunctionDefinition","src":"32379:220:14","nodes":[],"body":{"id":6193,"nodeType":"Block","src":"32451:148:14","nodes":[],"statements":[{"expression":{"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"32461:10:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"32480:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6177,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:14","typeDescriptions":{}}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6182,"nodeType":"ExpressionStatement","src":"32461:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"32500:10:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"32514:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6192,"nodeType":"IfStatement","src":"32496:97:14","trueBody":{"id":6191,"nodeType":"Block","src":"32521:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"32576:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6186,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"32542:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6190,"nodeType":"RevertStatement","src":"32535:47:14"}]}}]},"documentation":{"id":6169,"nodeType":"StructuredDocumentation","src":"32067:307:14","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:14","parameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6171,"mutability":"mutable","name":"value","nameLocation":"32403:5:14","nodeType":"VariableDeclaration","scope":6194,"src":"32396:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6170,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:14"},"returnParameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:14","nodeType":"VariableDeclaration","scope":6194,"src":"32433:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6173,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6220,"nodeType":"FunctionDefinition","src":"32917:220:14","nodes":[],"body":{"id":6219,"nodeType":"Block","src":"32989:148:14","nodes":[],"statements":[{"expression":{"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"32999:10:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"33018:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6203,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:14","typeDescriptions":{}}},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6208,"nodeType":"ExpressionStatement","src":"32999:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"33038:10:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"33052:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6218,"nodeType":"IfStatement","src":"33034:97:14","trueBody":{"id":6217,"nodeType":"Block","src":"33059:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"33114:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6212,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"33080:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6216,"nodeType":"RevertStatement","src":"33073:47:14"}]}}]},"documentation":{"id":6195,"nodeType":"StructuredDocumentation","src":"32605:307:14","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:14","parameters":{"id":6198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"mutability":"mutable","name":"value","nameLocation":"32941:5:14","nodeType":"VariableDeclaration","scope":6220,"src":"32934:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6196,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:14"},"returnParameters":{"id":6201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6200,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:14","nodeType":"VariableDeclaration","scope":6220,"src":"32971:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6199,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6246,"nodeType":"FunctionDefinition","src":"33455:220:14","nodes":[],"body":{"id":6245,"nodeType":"Block","src":"33527:148:14","nodes":[],"statements":[{"expression":{"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6228,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"33537:10:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"33556:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6229,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:14","typeDescriptions":{}}},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6234,"nodeType":"ExpressionStatement","src":"33537:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"33576:10:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"33590:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6244,"nodeType":"IfStatement","src":"33572:97:14","trueBody":{"id":6243,"nodeType":"Block","src":"33597:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"33652:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6238,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"33618:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6242,"nodeType":"RevertStatement","src":"33611:47:14"}]}}]},"documentation":{"id":6221,"nodeType":"StructuredDocumentation","src":"33143:307:14","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:14","parameters":{"id":6224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6223,"mutability":"mutable","name":"value","nameLocation":"33479:5:14","nodeType":"VariableDeclaration","scope":6246,"src":"33472:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6222,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:14"},"returnParameters":{"id":6227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6226,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:14","nodeType":"VariableDeclaration","scope":6246,"src":"33509:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6225,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6272,"nodeType":"FunctionDefinition","src":"33988:216:14","nodes":[],"body":{"id":6271,"nodeType":"Block","src":"34058:146:14","nodes":[],"statements":[{"expression":{"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6254,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"34068:10:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"34086:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6255,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:14","typeDescriptions":{}}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6260,"nodeType":"ExpressionStatement","src":"34068:24:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"34106:10:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"34120:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6270,"nodeType":"IfStatement","src":"34102:96:14","trueBody":{"id":6269,"nodeType":"Block","src":"34127:71:14","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"34181:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6264,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"34148:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6268,"nodeType":"RevertStatement","src":"34141:46:14"}]}}]},"documentation":{"id":6247,"nodeType":"StructuredDocumentation","src":"33681:302:14","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:14","parameters":{"id":6250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6249,"mutability":"mutable","name":"value","nameLocation":"34011:5:14","nodeType":"VariableDeclaration","scope":6272,"src":"34004:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6248,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:14"},"returnParameters":{"id":6253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:14","nodeType":"VariableDeclaration","scope":6272,"src":"34041:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6251,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6302,"nodeType":"FunctionDefinition","src":"34380:314:14","nodes":[],"body":{"id":6301,"nodeType":"Block","src":"34444:250:14","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"34557:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6284,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6283,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:14","memberName":"max","nodeType":"MemberAccess","src":"34573:16:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6281,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:14","typeDescriptions":{}}},"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6295,"nodeType":"IfStatement","src":"34553:105:14","trueBody":{"id":6294,"nodeType":"Block","src":"34592:66:14","statements":[{"errorCall":{"arguments":[{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"34641:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6290,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"34613:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6293,"nodeType":"RevertStatement","src":"34606:41:14"}]}},{"expression":{"arguments":[{"id":6298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"34681:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6296,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:14","typeDescriptions":{}}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6279,"id":6300,"nodeType":"Return","src":"34667:20:14"}]},"documentation":{"id":6273,"nodeType":"StructuredDocumentation","src":"34210:165:14","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:14","parameters":{"id":6276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6275,"mutability":"mutable","name":"value","nameLocation":"34406:5:14","nodeType":"VariableDeclaration","scope":6302,"src":"34398:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6274,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:14"},"returnParameters":{"id":6279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6302,"src":"34436:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6277,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6312,"nodeType":"FunctionDefinition","src":"34795:145:14","nodes":[],"body":{"id":6311,"nodeType":"Block","src":"34853:87:14","nodes":[],"statements":[{"AST":{"nativeSrc":"34888:46:14","nodeType":"YulBlock","src":"34888:46:14","statements":[{"nativeSrc":"34902:22:14","nodeType":"YulAssignment","src":"34902:22:14","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:14","nodeType":"YulIdentifier","src":"34921:1:14"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:14","nodeType":"YulIdentifier","src":"34914:6:14"},"nativeSrc":"34914:9:14","nodeType":"YulFunctionCall","src":"34914:9:14"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:14","nodeType":"YulIdentifier","src":"34907:6:14"},"nativeSrc":"34907:17:14","nodeType":"YulFunctionCall","src":"34907:17:14"},"variableNames":[{"name":"u","nativeSrc":"34902:1:14","nodeType":"YulIdentifier","src":"34902:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6305,"isOffset":false,"isSlot":false,"src":"34921:1:14","valueSize":1},{"declaration":6308,"isOffset":false,"isSlot":false,"src":"34902:1:14","valueSize":1}],"flags":["memory-safe"],"id":6310,"nodeType":"InlineAssembly","src":"34863:71:14"}]},"documentation":{"id":6303,"nodeType":"StructuredDocumentation","src":"34700:90:14","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:14","parameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6305,"mutability":"mutable","name":"b","nameLocation":"34816:1:14","nodeType":"VariableDeclaration","scope":6312,"src":"34811:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6304,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:14"},"returnParameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"u","nameLocation":"34850:1:14","nodeType":"VariableDeclaration","scope":6312,"src":"34842:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6307,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:14"},"scope":6313,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4551,"nodeType":"StructuredDocumentation","src":"218:550:14","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"linearizedBaseContracts":[6313],"name":"SafeCast","nameLocation":"777:8:14","scope":6314,"usedErrors":[4558,4563,4570,4575],"usedEvents":[]}],"license":"MIT"}},"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":15,"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol","id":6458,"exportedSymbols":{"SafeCast":[6313],"SignedMath":[6457]},"nodeType":"SourceUnit","src":"109:2504:15","nodes":[{"id":6315,"nodeType":"PragmaDirective","src":"109:24:15","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":6317,"nodeType":"ImportDirective","src":"135:40:15","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","nameLocation":"-1:-1:-1","scope":6458,"sourceUnit":6314,"symbolAliases":[{"foreign":{"id":6316,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"143:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":6457,"nodeType":"ContractDefinition","src":"258:2354:15","nodes":[{"id":6348,"nodeType":"FunctionDefinition","src":"662:299:15","nodes":[],"body":{"id":6347,"nodeType":"Block","src":"746:215:15","nodes":[],"statements":[{"id":6346,"nodeType":"UncheckedBlock","src":"756:199:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"894:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"900:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6332,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"904:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6339,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"932:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6337,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"916:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6313_$","typeString":"type(library SafeCast)"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6312,"src":"916:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6335,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:15","typeDescriptions":{}}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6329,"id":6345,"nodeType":"Return","src":"887:57:15"}]}]},"documentation":{"id":6319,"nodeType":"StructuredDocumentation","src":"283:374:15","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:15","parameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6321,"mutability":"mutable","name":"condition","nameLocation":"684:9:15","nodeType":"VariableDeclaration","scope":6348,"src":"679:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6320,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6323,"mutability":"mutable","name":"a","nameLocation":"702:1:15","nodeType":"VariableDeclaration","scope":6348,"src":"695:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6322,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6325,"mutability":"mutable","name":"b","nameLocation":"712:1:15","nodeType":"VariableDeclaration","scope":6348,"src":"705:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6324,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:15"},"returnParameters":{"id":6329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6348,"src":"738:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6327,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:15"},"scope":6457,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6367,"nodeType":"FunctionDefinition","src":"1038:108:15","nodes":[],"body":{"id":6366,"nodeType":"Block","src":"1102:44:15","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6359,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"1127:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6360,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"1131:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"1134:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"1137:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6358,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"1119:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6357,"id":6365,"nodeType":"Return","src":"1112:27:15"}]},"documentation":{"id":6349,"nodeType":"StructuredDocumentation","src":"967:66:15","text":" @dev Returns the largest of two signed numbers."},"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:15","parameters":{"id":6354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6351,"mutability":"mutable","name":"a","nameLocation":"1058:1:15","nodeType":"VariableDeclaration","scope":6367,"src":"1051:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6350,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6353,"mutability":"mutable","name":"b","nameLocation":"1068:1:15","nodeType":"VariableDeclaration","scope":6367,"src":"1061:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6352,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:15"},"returnParameters":{"id":6357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6367,"src":"1094:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6355,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:15"},"scope":6457,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6386,"nodeType":"FunctionDefinition","src":"1224:108:15","nodes":[],"body":{"id":6385,"nodeType":"Block","src":"1288:44:15","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"1313:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6379,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"1317:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"1320:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6382,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"1323:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6377,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"1305:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6376,"id":6384,"nodeType":"Return","src":"1298:27:15"}]},"documentation":{"id":6368,"nodeType":"StructuredDocumentation","src":"1152:67:15","text":" @dev Returns the smallest of two signed numbers."},"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:15","parameters":{"id":6373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"a","nameLocation":"1244:1:15","nodeType":"VariableDeclaration","scope":6386,"src":"1237:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6369,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6372,"mutability":"mutable","name":"b","nameLocation":"1254:1:15","nodeType":"VariableDeclaration","scope":6386,"src":"1247:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6371,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:15"},"returnParameters":{"id":6376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6386,"src":"1280:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6374,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:15"},"scope":6457,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6430,"nodeType":"FunctionDefinition","src":"1469:230:15","nodes":[],"body":{"id":6429,"nodeType":"Block","src":"1537:162:15","nodes":[],"statements":[{"assignments":[6397],"declarations":[{"constant":false,"id":6397,"mutability":"mutable","name":"x","nameLocation":"1606:1:15","nodeType":"VariableDeclaration","scope":6429,"src":"1599:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6396,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6410,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"1611:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"1615:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"1622:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"1626:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:15"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6411,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1651:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6416,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1671:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:15","typeDescriptions":{}}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6412,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:15","typeDescriptions":{}}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6421,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"1685:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6422,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"1689:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6395,"id":6428,"nodeType":"Return","src":"1644:48:15"}]},"documentation":{"id":6387,"nodeType":"StructuredDocumentation","src":"1338:126:15","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:15","parameters":{"id":6392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"a","nameLocation":"1493:1:15","nodeType":"VariableDeclaration","scope":6430,"src":"1486:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6388,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6391,"mutability":"mutable","name":"b","nameLocation":"1503:1:15","nodeType":"VariableDeclaration","scope":6430,"src":"1496:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6390,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:15"},"returnParameters":{"id":6395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6430,"src":"1529:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6393,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:15"},"scope":6457,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":6456,"nodeType":"FunctionDefinition","src":"1788:822:15","nodes":[],"body":{"id":6455,"nodeType":"Block","src":"1843:767:15","nodes":[],"statements":[{"id":6454,"nodeType":"UncheckedBlock","src":"1853:751:15","statements":[{"assignments":[6439],"declarations":[{"constant":false,"id":6439,"mutability":"mutable","name":"mask","nameLocation":"2424:4:15","nodeType":"VariableDeclaration","scope":6454,"src":"2417:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6438,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6443,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6440,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"2431:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6446,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"2576:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6447,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"2580:4:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6450,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"2588:4:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:15","typeDescriptions":{}}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6437,"id":6453,"nodeType":"Return","src":"2560:33:15"}]}]},"documentation":{"id":6431,"nodeType":"StructuredDocumentation","src":"1705:78:15","text":" @dev Returns the absolute unsigned value of a signed value."},"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:15","parameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"n","nameLocation":"1808:1:15","nodeType":"VariableDeclaration","scope":6456,"src":"1801:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6432,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:15"},"returnParameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6456,"src":"1834:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:15"},"scope":6457,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6318,"nodeType":"StructuredDocumentation","src":"177:80:15","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"linearizedBaseContracts":[6457],"name":"SignedMath","nameLocation":"266:10:15","scope":6458,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"src/JBProjects.sol":{"id":16,"ast":{"absolutePath":"src/JBProjects.sol","id":6670,"exportedSymbols":{"Context":[1654],"ERC2771Context":[427],"ERC721":[1384],"IERC165":[2942],"IJBProjects":[6717],"IJBTokenUriResolver":[6727],"JBProjects":[6669],"Ownable":[147]},"nodeType":"SourceUnit","src":"32:6042:16","nodes":[{"id":6459,"nodeType":"PragmaDirective","src":"32:23:16","nodes":[],"literals":["solidity","0.8",".23"]},{"id":6461,"nodeType":"ImportDirective","src":"57:67:16","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","nameLocation":"-1:-1:-1","scope":6670,"sourceUnit":148,"symbolAliases":[{"foreign":{"id":6460,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"65:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":6463,"nodeType":"ImportDirective","src":"125:81:16","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol","file":"@openzeppelin/contracts/metatx/ERC2771Context.sol","nameLocation":"-1:-1:-1","scope":6670,"sourceUnit":428,"symbolAliases":[{"foreign":{"id":6462,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"133:14:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":6466,"nodeType":"ImportDirective","src":"207:80:16","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","nameLocation":"-1:-1:-1","scope":6670,"sourceUnit":1385,"symbolAliases":[{"foreign":{"id":6464,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"215:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6465,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"223:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":6468,"nodeType":"ImportDirective","src":"288:80:16","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","nameLocation":"-1:-1:-1","scope":6670,"sourceUnit":2943,"symbolAliases":[{"foreign":{"id":6467,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"296:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":6470,"nodeType":"ImportDirective","src":"370:57:16","nodes":[],"absolutePath":"src/interfaces/IJBProjects.sol","file":"./interfaces/IJBProjects.sol","nameLocation":"-1:-1:-1","scope":6670,"sourceUnit":6718,"symbolAliases":[{"foreign":{"id":6469,"name":"IJBProjects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"378:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":6472,"nodeType":"ImportDirective","src":"428:73:16","nodes":[],"absolutePath":"src/interfaces/IJBTokenUriResolver.sol","file":"./interfaces/IJBTokenUriResolver.sol","nameLocation":"-1:-1:-1","scope":6670,"sourceUnit":6728,"symbolAliases":[{"foreign":{"id":6471,"name":"IJBTokenUriResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"436:19:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":6669,"nodeType":"ContractDefinition","src":"601:5472:16","nodes":[{"id":6485,"nodeType":"VariableDeclaration","src":"1161:29:16","nodes":[],"baseFunctions":[6697],"constant":false,"documentation":{"id":6482,"nodeType":"StructuredDocumentation","src":"910:246:16","text":"@notice The number of projects that have been created using this contract.\n @dev The count is incremented with each new project created.\n @dev The resulting ERC-721 token ID for each project is the newly incremented count value."},"functionSelector":"06661abd","mutability":"mutable","name":"count","nameLocation":"1185:5:16","overrides":{"id":6484,"nodeType":"OverrideSpecifier","overrides":[],"src":"1176:8:16"},"scope":6669,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"id":6490,"nodeType":"VariableDeclaration","src":"1271:52:16","nodes":[],"baseFunctions":[6703],"constant":false,"documentation":{"id":6486,"nodeType":"StructuredDocumentation","src":"1197:69:16","text":"@notice The contract resolving each project ID to its ERC721 URI."},"functionSelector":"e131fc0c","mutability":"mutable","name":"tokenUriResolver","nameLocation":"1307:16:16","overrides":{"id":6489,"nodeType":"OverrideSpecifier","overrides":[],"src":"1298:8:16"},"scope":6669,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"},"typeName":{"id":6488,"nodeType":"UserDefinedTypeName","pathNode":{"id":6487,"name":"IJBTokenUriResolver","nameLocations":["1271:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":6727,"src":"1271:19:16"},"referencedDeclaration":6727,"src":"1271:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"visibility":"public"},{"id":6523,"nodeType":"FunctionDefinition","src":"1850:326:16","nodes":[],"body":{"id":6522,"nodeType":"Block","src":"2074:102:16","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6510,"name":"feeProjectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"2088:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2115:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2107:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6511,"name":"address","nodeType":"ElementaryTypeName","src":"2107:7:16","typeDescriptions":{}}},"id":6514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2088:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6521,"nodeType":"IfStatement","src":"2084:86:16","trueBody":{"id":6520,"nodeType":"Block","src":"2119:51:16","statements":[{"expression":{"arguments":[{"id":6517,"name":"feeProjectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"2143:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6516,"name":"createFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"2133:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6519,"nodeType":"ExpressionStatement","src":"2133:26:16"}]}}]},"documentation":{"id":6491,"nodeType":"StructuredDocumentation","src":"1565:280:16","text":"@param owner The owner of the contract who can set metadata.\n @param feeProjectOwner The address that will receive the fee-project. If `address(0)` the fee-project will not\n be minted.\n @param trustedForwarder The trusted forwarder for the ERC2771Context."},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4a75696365626f782050726f6a65637473","id":6500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1973:19:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e5c5c1c4affeaeda2d3db263faddbd323c18ac7d44a6ca994665583d3b15dad","typeString":"literal_string \"Juicebox Projects\""},"value":"Juicebox Projects"},{"hexValue":"4a55494345424f58","id":6501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1994:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9cb984262c2a7edbfc9d5c579006a113063ce1c22795b2cb5b72123d15caf509","typeString":"literal_string \"JUICEBOX\""},"value":"JUICEBOX"}],"id":6502,"kind":"baseConstructorSpecifier","modifierName":{"id":6499,"name":"ERC721","nameLocations":["1966:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1384,"src":"1966:6:16"},"nodeType":"ModifierInvocation","src":"1966:39:16"},{"arguments":[{"id":6504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"2022:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6505,"kind":"baseConstructorSpecifier","modifierName":{"id":6503,"name":"Ownable","nameLocations":["2014:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2014:7:16"},"nodeType":"ModifierInvocation","src":"2014:14:16"},{"arguments":[{"id":6507,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"2052:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6508,"kind":"baseConstructorSpecifier","modifierName":{"id":6506,"name":"ERC2771Context","nameLocations":["2037:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":427,"src":"2037:14:16"},"nodeType":"ModifierInvocation","src":"2037:32:16"}],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":6498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"owner","nameLocation":"1879:5:16","nodeType":"VariableDeclaration","scope":6523,"src":"1871:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6492,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6495,"mutability":"mutable","name":"feeProjectOwner","nameLocation":"1902:15:16","nodeType":"VariableDeclaration","scope":6523,"src":"1894:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6494,"name":"address","nodeType":"ElementaryTypeName","src":"1894:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6497,"mutability":"mutable","name":"trustedForwarder","nameLocation":"1935:16:16","nodeType":"VariableDeclaration","scope":6523,"src":"1927:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6496,"name":"address","nodeType":"ElementaryTypeName","src":"1927:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1861:96:16"},"returnParameters":{"id":6509,"nodeType":"ParameterList","parameters":[],"src":"2074:0:16"},"scope":6669,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":6547,"nodeType":"FunctionDefinition","src":"2702:216:16","nodes":[],"body":{"id":6546,"nodeType":"Block","src":"2810:108:16","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6534,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"2827:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":6536,"name":"IJBProjects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"2847:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IJBProjects_$6717_$","typeString":"type(contract IJBProjects)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IJBProjects_$6717_$","typeString":"type(contract IJBProjects)"}],"id":6535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2842:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IJBProjects_$6717","typeString":"type(contract IJBProjects)"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2860:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"2842:29:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2827:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":6542,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"2899:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":6540,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2875:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_JBProjects_$6669_$","typeString":"type(contract super JBProjects)"}},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2881:17:16","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":528,"src":"2875:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2875:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2827:84:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6533,"id":6545,"nodeType":"Return","src":"2820:91:16"}]},"baseFunctions":[528,2941],"documentation":{"id":6524,"nodeType":"StructuredDocumentation","src":"2417:280:16","text":"@notice Indicates whether this contract adheres to the specified interface.\n @dev See {IERC165-supportsInterface}.\n @param interfaceId The ID of the interface to check for adherence to.\n @return A flag indicating if the provided interface ID is supported."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2711:17:16","overrides":{"id":6530,"nodeType":"OverrideSpecifier","overrides":[{"id":6528,"name":"IERC165","nameLocations":["2778:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"2778:7:16"},{"id":6529,"name":"ERC721","nameLocations":["2787:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1384,"src":"2787:6:16"}],"src":"2769:25:16"},"parameters":{"id":6527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"interfaceId","nameLocation":"2736:11:16","nodeType":"VariableDeclaration","scope":6547,"src":"2729:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6525,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2729:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2728:20:16"},"returnParameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6547,"src":"2804:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6531,"name":"bool","nodeType":"ElementaryTypeName","src":"2804:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2803:6:16"},"scope":6669,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":6578,"nodeType":"FunctionDefinition","src":"3143:391:16","nodes":[],"body":{"id":6577,"nodeType":"Block","src":"3225:309:16","nodes":[],"statements":[{"assignments":[6558],"declarations":[{"constant":false,"id":6558,"mutability":"mutable","name":"resolver","nameLocation":"3300:8:16","nodeType":"VariableDeclaration","scope":6577,"src":"3280:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"},"typeName":{"id":6557,"nodeType":"UserDefinedTypeName","pathNode":{"id":6556,"name":"IJBTokenUriResolver","nameLocations":["3280:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":6727,"src":"3280:19:16"},"referencedDeclaration":6727,"src":"3280:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"visibility":"internal"}],"id":6560,"initialValue":{"id":6559,"name":"tokenUriResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"3311:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"nodeType":"VariableDeclarationStatement","src":"3280:47:16"},{"condition":{"commonType":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6561,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"3393:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":6565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3433:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3425:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6563,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:16","typeDescriptions":{}}},"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6562,"name":"IJBTokenUriResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"3405:19:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IJBTokenUriResolver_$6727_$","typeString":"type(contract IJBTokenUriResolver)"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3405:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"src":"3393:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6571,"nodeType":"IfStatement","src":"3389:58:16","trueBody":{"expression":{"hexValue":"","id":6569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3445:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":6555,"id":6570,"nodeType":"Return","src":"3438:9:16"}},{"expression":{"arguments":[{"id":6574,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"3517:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6572,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"3501:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3510:6:16","memberName":"getUri","nodeType":"MemberAccess","referencedDeclaration":6726,"src":"3501:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view external returns (string memory)"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6555,"id":6576,"nodeType":"Return","src":"3494:33:16"}]},"baseFunctions":[623],"documentation":{"id":6548,"nodeType":"StructuredDocumentation","src":"2924:214:16","text":"@notice Returns the URI where the ERC-721 standard JSON of a project is hosted.\n @param projectId The ID of the project to get a URI of.\n @return The token URI to use for the provided `projectId`."},"functionSelector":"c87b56dd","implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3152:8:16","overrides":{"id":6552,"nodeType":"OverrideSpecifier","overrides":[],"src":"3192:8:16"},"parameters":{"id":6551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6550,"mutability":"mutable","name":"projectId","nameLocation":"3169:9:16","nodeType":"VariableDeclaration","scope":6578,"src":"3161:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6549,"name":"uint256","nodeType":"ElementaryTypeName","src":"3161:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3160:19:16"},"returnParameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6578,"src":"3210:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6553,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3209:15:16"},"scope":6669,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":6592,"nodeType":"FunctionDefinition","src":"3859:150:16","nodes":[],"body":{"id":6591,"nodeType":"Block","src":"3957:52:16","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6587,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3974:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_JBProjects_$6669_$","typeString":"type(contract super JBProjects)"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3980:20:16","memberName":"_contextSuffixLength","nodeType":"MemberAccess","referencedDeclaration":426,"src":"3974:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3974:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6586,"id":6590,"nodeType":"Return","src":"3967:35:16"}]},"baseFunctions":[426,1653],"documentation":{"id":6579,"nodeType":"StructuredDocumentation","src":"3775:79:16","text":"@dev `ERC-2771` specifies the context as being a single address (20 bytes)."},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"3868:20:16","overrides":{"id":6583,"nodeType":"OverrideSpecifier","overrides":[{"id":6581,"name":"ERC2771Context","nameLocations":["3914:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":427,"src":"3914:14:16"},{"id":6582,"name":"Context","nameLocations":["3930:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1654,"src":"3930:7:16"}],"src":"3905:33:16"},"parameters":{"id":6580,"nodeType":"ParameterList","parameters":[],"src":"3888:2:16"},"returnParameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6592,"src":"3948:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3948:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3947:9:16"},"scope":6669,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":6606,"nodeType":"FunctionDefinition","src":"4133:142:16","nodes":[],"body":{"id":6605,"nodeType":"Block","src":"4226:49:16","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6601,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"4243:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Context_$427_$","typeString":"type(contract ERC2771Context)"}},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4258:8:16","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":416,"src":"4243:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6600,"id":6604,"nodeType":"Return","src":"4236:32:16"}]},"baseFunctions":[416,1645],"documentation":{"id":6593,"nodeType":"StructuredDocumentation","src":"4015:113:16","text":"@notice The calldata. Preferred to use over `msg.data`.\n @return calldata The `msg.data` of this call."},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"4142:8:16","overrides":{"id":6597,"nodeType":"OverrideSpecifier","overrides":[{"id":6595,"name":"ERC2771Context","nameLocations":["4176:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":427,"src":"4176:14:16"},{"id":6596,"name":"Context","nameLocations":["4192:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1654,"src":"4192:7:16"}],"src":"4167:33:16"},"parameters":{"id":6594,"nodeType":"ParameterList","parameters":[],"src":"4150:2:16"},"returnParameters":{"id":6600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6606,"src":"4210:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6598,"name":"bytes","nodeType":"ElementaryTypeName","src":"4210:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4209:16:16"},"scope":6669,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":6620,"nodeType":"FunctionDefinition","src":"4412:146:16","nodes":[],"body":{"id":6619,"nodeType":"Block","src":"4507:51:16","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6615,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"4524:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Context_$427_$","typeString":"type(contract ERC2771Context)"}},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4539:10:16","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":375,"src":"4524:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4524:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6614,"id":6618,"nodeType":"Return","src":"4517:34:16"}]},"baseFunctions":[375,1636],"documentation":{"id":6607,"nodeType":"StructuredDocumentation","src":"4281:126:16","text":"@notice The message's sender. Preferred to use over `msg.sender`.\n @return sender The address which sent this call."},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"4421:10:16","overrides":{"id":6611,"nodeType":"OverrideSpecifier","overrides":[{"id":6609,"name":"ERC2771Context","nameLocations":["4457:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":427,"src":"4457:14:16"},{"id":6610,"name":"Context","nameLocations":["4473:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1654,"src":"4473:7:16"}],"src":"4448:33:16"},"parameters":{"id":6608,"nodeType":"ParameterList","parameters":[],"src":"4431:2:16"},"returnParameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6613,"mutability":"mutable","name":"sender","nameLocation":"4499:6:16","nodeType":"VariableDeclaration","scope":6620,"src":"4491:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6612,"name":"address","nodeType":"ElementaryTypeName","src":"4491:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4490:16:16"},"scope":6669,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":6641,"nodeType":"FunctionDefinition","src":"4948:245:16","nodes":[],"body":{"id":6640,"nodeType":"Block","src":"5035:158:16","nodes":[],"statements":[{"expression":{"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6630,"name":"tokenUriResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"5080:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6631,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"5099:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"src":"5080:27:16","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"id":6633,"nodeType":"ExpressionStatement","src":"5080:27:16"},{"eventCall":{"arguments":[{"id":6635,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"5154:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6636,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[6620],"referencedDeclaration":6620,"src":"5172:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6634,"name":"SetTokenUriResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"5123:19:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IJBTokenUriResolver_$6727_$_t_address_$returns$__$","typeString":"function (contract IJBTokenUriResolver,address)"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["5144:8:16","5164:6:16"],"names":["resolver","caller"],"nodeType":"FunctionCall","src":"5123:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6639,"nodeType":"EmitStatement","src":"5118:68:16"}]},"baseFunctions":[6716],"documentation":{"id":6621,"nodeType":"StructuredDocumentation","src":"4799:144:16","text":"@notice Sets the address of the resolver used to retrieve the tokenURI of projects.\n @param resolver The address of the new resolver."},"functionSelector":"2407497e","implemented":true,"kind":"function","modifiers":[{"id":6628,"kind":"modifierInvocation","modifierName":{"id":6627,"name":"onlyOwner","nameLocations":["5025:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5025:9:16"},"nodeType":"ModifierInvocation","src":"5025:9:16"}],"name":"setTokenUriResolver","nameLocation":"4957:19:16","overrides":{"id":6626,"nodeType":"OverrideSpecifier","overrides":[],"src":"5016:8:16"},"parameters":{"id":6625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"mutability":"mutable","name":"resolver","nameLocation":"4997:8:16","nodeType":"VariableDeclaration","scope":6641,"src":"4977:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"},"typeName":{"id":6623,"nodeType":"UserDefinedTypeName","pathNode":{"id":6622,"name":"IJBTokenUriResolver","nameLocations":["4977:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":6727,"src":"4977:19:16"},"referencedDeclaration":6727,"src":"4977:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"visibility":"internal"}],"src":"4976:30:16"},"returnParameters":{"id":6629,"nodeType":"ParameterList","parameters":[],"src":"5035:0:16"},"scope":6669,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":6668,"nodeType":"FunctionDefinition","src":"5746:325:16","nodes":[],"body":{"id":6667,"nodeType":"Block","src":"5824:247:16","nodes":[],"statements":[{"expression":{"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6650,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"5896:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5908:7:16","subExpression":{"id":6651,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"5910:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5896:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6654,"nodeType":"ExpressionStatement","src":"5896:19:16"},{"eventCall":{"arguments":[{"id":6656,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"5950:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6657,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"5968:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6658,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[6620],"referencedDeclaration":6620,"src":"5983:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5983:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6655,"name":"Create","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"5931:6:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["5939:9:16","5961:5:16","5975:6:16"],"names":["projectId","owner","caller"],"nodeType":"FunctionCall","src":"5931:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6661,"nodeType":"EmitStatement","src":"5926:71:16"},{"expression":{"arguments":[{"id":6663,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"6047:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6664,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"6054:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6662,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1062,1092],"referencedDeclaration":1062,"src":"6037:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6037:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6666,"nodeType":"ExpressionStatement","src":"6037:27:16"}]},"baseFunctions":[6710],"documentation":{"id":6642,"nodeType":"StructuredDocumentation","src":"5432:309:16","text":"@notice Create a new project for the specified owner, which mints an NFT (ERC-721) into their wallet.\n @dev Anyone can create a project on an owner's behalf.\n @param owner The address that will be the owner of the project.\n @return projectId The token ID of the newly created project."},"functionSelector":"c0715888","implemented":true,"kind":"function","modifiers":[],"name":"createFor","nameLocation":"5755:9:16","overrides":{"id":6646,"nodeType":"OverrideSpecifier","overrides":[],"src":"5787:8:16"},"parameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"owner","nameLocation":"5773:5:16","nodeType":"VariableDeclaration","scope":6668,"src":"5765:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6643,"name":"address","nodeType":"ElementaryTypeName","src":"5765:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5764:15:16"},"returnParameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"mutability":"mutable","name":"projectId","nameLocation":"5813:9:16","nodeType":"VariableDeclaration","scope":6668,"src":"5805:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6647,"name":"uint256","nodeType":"ElementaryTypeName","src":"5805:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5804:19:16"},"scope":6669,"stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"abstract":false,"baseContracts":[{"baseName":{"id":6474,"name":"ERC721","nameLocations":["624:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1384,"src":"624:6:16"},"id":6475,"nodeType":"InheritanceSpecifier","src":"624:6:16"},{"baseName":{"id":6476,"name":"ERC2771Context","nameLocations":["632:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":427,"src":"632:14:16"},"id":6477,"nodeType":"InheritanceSpecifier","src":"632:14:16"},{"baseName":{"id":6478,"name":"Ownable","nameLocations":["648:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"648:7:16"},"id":6479,"nodeType":"InheritanceSpecifier","src":"648:7:16"},{"baseName":{"id":6480,"name":"IJBProjects","nameLocations":["657:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":6717,"src":"657:11:16"},"id":6481,"nodeType":"InheritanceSpecifier","src":"657:11:16"}],"canonicalName":"JBProjects","contractDependencies":[],"contractKind":"contract","documentation":{"id":6473,"nodeType":"StructuredDocumentation","src":"503:98:16","text":"@notice Stores project ownership and metadata.\n @dev Projects are represented as ERC-721s."},"fullyImplemented":true,"linearizedBaseContracts":[6669,6717,147,427,1384,237,1547,1501,2930,2942,1654],"name":"JBProjects","nameLocation":"610:10:16","scope":6670,"usedErrors":[13,18,195,200,209,214,219,226,231,236],"usedEvents":[24,1400,1409,1418,6685,6692]}],"license":"MIT"}},"src/interfaces/IJBProjects.sol":{"id":17,"ast":{"absolutePath":"src/interfaces/IJBProjects.sol","id":6718,"exportedSymbols":{"IERC721":[1501],"IJBProjects":[6717],"IJBTokenUriResolver":[6727]},"nodeType":"SourceUnit","src":"32:652:17","nodes":[{"id":6671,"nodeType":"PragmaDirective","src":"32:23:17","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":6673,"nodeType":"ImportDirective","src":"57:73:17","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","nameLocation":"-1:-1:-1","scope":6718,"sourceUnit":1502,"symbolAliases":[{"foreign":{"id":6672,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"65:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":6675,"nodeType":"ImportDirective","src":"132:62:17","nodes":[],"absolutePath":"src/interfaces/IJBTokenUriResolver.sol","file":"./IJBTokenUriResolver.sol","nameLocation":"-1:-1:-1","scope":6718,"sourceUnit":6728,"symbolAliases":[{"foreign":{"id":6674,"name":"IJBTokenUriResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"140:19:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":6717,"nodeType":"ContractDefinition","src":"196:487:17","nodes":[{"id":6685,"nodeType":"EventDefinition","src":"235:79:17","nodes":[],"anonymous":false,"eventSelector":"365b3162cd780731fc55a794b59494d472bc2af701007f581843a70673814698","name":"Create","nameLocation":"241:6:17","parameters":{"id":6684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6679,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"264:9:17","nodeType":"VariableDeclaration","scope":6685,"src":"248:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6678,"name":"uint256","nodeType":"ElementaryTypeName","src":"248:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6681,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"291:5:17","nodeType":"VariableDeclaration","scope":6685,"src":"275:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6680,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6683,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"306:6:17","nodeType":"VariableDeclaration","scope":6685,"src":"298:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6682,"name":"address","nodeType":"ElementaryTypeName","src":"298:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"247:66:17"}},{"id":6692,"nodeType":"EventDefinition","src":"319:80:17","nodes":[],"anonymous":false,"eventSelector":"e7784d93cfbfa4408e19577e6cc0436f4dbb51214b70e100905dfce9def88c16","name":"SetTokenUriResolver","nameLocation":"325:19:17","parameters":{"id":6691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6688,"indexed":true,"mutability":"mutable","name":"resolver","nameLocation":"373:8:17","nodeType":"VariableDeclaration","scope":6692,"src":"345:36:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"},"typeName":{"id":6687,"nodeType":"UserDefinedTypeName","pathNode":{"id":6686,"name":"IJBTokenUriResolver","nameLocations":["345:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":6727,"src":"345:19:17"},"referencedDeclaration":6727,"src":"345:19:17","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"visibility":"internal"},{"constant":false,"id":6690,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"391:6:17","nodeType":"VariableDeclaration","scope":6692,"src":"383:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6689,"name":"address","nodeType":"ElementaryTypeName","src":"383:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"344:54:17"}},{"id":6697,"nodeType":"FunctionDefinition","src":"405:49:17","nodes":[],"functionSelector":"06661abd","implemented":false,"kind":"function","modifiers":[],"name":"count","nameLocation":"414:5:17","parameters":{"id":6693,"nodeType":"ParameterList","parameters":[],"src":"419:2:17"},"returnParameters":{"id":6696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6697,"src":"445:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6694,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"444:9:17"},"scope":6717,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":6703,"nodeType":"FunctionDefinition","src":"459:72:17","nodes":[],"functionSelector":"e131fc0c","implemented":false,"kind":"function","modifiers":[],"name":"tokenUriResolver","nameLocation":"468:16:17","parameters":{"id":6698,"nodeType":"ParameterList","parameters":[],"src":"484:2:17"},"returnParameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6703,"src":"510:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"},"typeName":{"id":6700,"nodeType":"UserDefinedTypeName","pathNode":{"id":6699,"name":"IJBTokenUriResolver","nameLocations":["510:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":6727,"src":"510:19:17"},"referencedDeclaration":6727,"src":"510:19:17","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"visibility":"internal"}],"src":"509:21:17"},"scope":6717,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":6710,"nodeType":"FunctionDefinition","src":"537:71:17","nodes":[],"functionSelector":"c0715888","implemented":false,"kind":"function","modifiers":[],"name":"createFor","nameLocation":"546:9:17","parameters":{"id":6706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"owner","nameLocation":"564:5:17","nodeType":"VariableDeclaration","scope":6710,"src":"556:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6704,"name":"address","nodeType":"ElementaryTypeName","src":"556:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"555:15:17"},"returnParameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6708,"mutability":"mutable","name":"projectId","nameLocation":"597:9:17","nodeType":"VariableDeclaration","scope":6710,"src":"589:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"588:19:17"},"scope":6717,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":6716,"nodeType":"FunctionDefinition","src":"613:68:17","nodes":[],"functionSelector":"2407497e","implemented":false,"kind":"function","modifiers":[],"name":"setTokenUriResolver","nameLocation":"622:19:17","parameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"resolver","nameLocation":"662:8:17","nodeType":"VariableDeclaration","scope":6716,"src":"642:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"},"typeName":{"id":6712,"nodeType":"UserDefinedTypeName","pathNode":{"id":6711,"name":"IJBTokenUriResolver","nameLocations":["642:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":6727,"src":"642:19:17"},"referencedDeclaration":6727,"src":"642:19:17","typeDescriptions":{"typeIdentifier":"t_contract$_IJBTokenUriResolver_$6727","typeString":"contract IJBTokenUriResolver"}},"visibility":"internal"}],"src":"641:30:17"},"returnParameters":{"id":6715,"nodeType":"ParameterList","parameters":[],"src":"680:0:17"},"scope":6717,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":6676,"name":"IERC721","nameLocations":["221:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":1501,"src":"221:7:17"},"id":6677,"nodeType":"InheritanceSpecifier","src":"221:7:17"}],"canonicalName":"IJBProjects","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[6717,1501,2942],"name":"IJBProjects","nameLocation":"206:11:17","scope":6718,"usedErrors":[],"usedEvents":[1400,1409,1418,6685,6692]}],"license":"MIT"}},"src/interfaces/IJBTokenUriResolver.sol":{"id":18,"ast":{"absolutePath":"src/interfaces/IJBTokenUriResolver.sol","id":6728,"exportedSymbols":{"IJBTokenUriResolver":[6727]},"nodeType":"SourceUnit","src":"32:146:18","nodes":[{"id":6719,"nodeType":"PragmaDirective","src":"32:23:18","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":6727,"nodeType":"ContractDefinition","src":"57:120:18","nodes":[{"id":6726,"nodeType":"FunctionDefinition","src":"93:82:18","nodes":[],"functionSelector":"da0544aa","implemented":false,"kind":"function","modifiers":[],"name":"getUri","nameLocation":"102:6:18","parameters":{"id":6722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6721,"mutability":"mutable","name":"projectId","nameLocation":"117:9:18","nodeType":"VariableDeclaration","scope":6726,"src":"109:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6720,"name":"uint256","nodeType":"ElementaryTypeName","src":"109:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108:19:18"},"returnParameters":{"id":6725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6724,"mutability":"mutable","name":"tokenUri","nameLocation":"165:8:18","nodeType":"VariableDeclaration","scope":6726,"src":"151:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6723,"name":"string","nodeType":"ElementaryTypeName","src":"151:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"150:24:18"},"scope":6727,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IJBTokenUriResolver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[6727],"name":"IJBTokenUriResolver","nameLocation":"67:19:18","scope":6728,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}}},"contracts":{"node_modules/@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]}},"storageLayout":{"storage":[{"astId":8,"contract":"node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}}}},"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"type":"error","name":"ERC1155InsufficientBalance","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"},{"name":"tokenId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC1155InvalidApprover","inputs":[{"name":"approver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1155InvalidArrayLength","inputs":[{"name":"idsLength","type":"uint256","internalType":"uint256"},{"name":"valuesLength","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC1155InvalidOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1155InvalidReceiver","inputs":[{"name":"receiver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1155InvalidSender","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1155MissingApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}]}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}}}},"IERC20Errors":{"abi":[{"type":"error","name":"ERC20InsufficientAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"allowance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC20InsufficientBalance","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC20InvalidApprover","inputs":[{"name":"approver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidReceiver","inputs":[{"name":"receiver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidSender","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidSpender","inputs":[{"name":"spender","type":"address","internalType":"address"}]}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}}}},"IERC721Errors":{"abi":[{"type":"error","name":"ERC721IncorrectOwner","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InsufficientApproval","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC721InvalidApprover","inputs":[{"name":"approver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidReceiver","inputs":[{"name":"receiver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidSender","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721NonexistentToken","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}]}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}}}}},"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol":{"ERC2771Context":{"abi":[{"type":"function","name":"isTrustedForwarder","inputs":[{"name":"forwarder","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"trustedForwarder","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Context variant with ERC-2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"_trustedForwarder\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":\"ERC2771Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Context variant with ERC-2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.","methods":{"constructor":{},"isTrustedForwarder(address)":{"details":"Indicates whether any particular address is the trusted forwarder."},"trustedForwarder()":{"details":"Returns the address of the trusted forwarder."}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isTrustedForwarder(address)":"572b6c05","trustedForwarder()":"7da0a877"}}}},"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"tokenURI","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"ERC721IncorrectOwner","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InsufficientApproval","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC721InvalidApprover","inputs":[{"name":"approver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidReceiver","inputs":[{"name":"receiver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidSender","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721NonexistentToken","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}]}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]}},"storageLayout":{"storage":[{"astId":460,"contract":"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":462,"contract":"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":466,"contract":"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":470,"contract":"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":474,"contract":"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":480,"contract":"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}}}},"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"operator","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"owner","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Required interface of an ERC-721 compliant contract.","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}}}},"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"type":"function","name":"onERC721Received","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC-721 token receiver interface"},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}}}},"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"operator","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"owner","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"tokenURI","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"See https://eips.ethereum.org/EIPS/eip-721","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension"},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}}}},"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._"},"evm":{"assembly":"    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":431:1911  library ERC721Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":431:1911  library ERC721Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209d4fa79535ce75545379e4db62f480bc28a17fe8b0f365ab44f0a606f9e86e1f64736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":431,"end":1911,"name":"PUSH #[$]","source":7,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":431,"end":1911,"name":"PUSH [$]","source":7,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"B"},{"begin":431,"end":1911,"name":"DUP3","source":7},{"begin":431,"end":1911,"name":"DUP3","source":7},{"begin":431,"end":1911,"name":"DUP3","source":7},{"begin":431,"end":1911,"name":"CODECOPY","source":7},{"begin":431,"end":1911,"name":"DUP1","source":7},{"begin":431,"end":1911,"name":"MLOAD","source":7},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"0"},{"begin":431,"end":1911,"name":"BYTE","source":7},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"73"},{"begin":431,"end":1911,"name":"EQ","source":7},{"begin":431,"end":1911,"name":"PUSH [tag]","source":7,"value":"1"},{"begin":431,"end":1911,"name":"JUMPI","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"4E487B71"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"0"},{"begin":431,"end":1911,"name":"MSTORE","source":7},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"0"},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"4"},{"begin":431,"end":1911,"name":"MSTORE","source":7},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"24"},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"0"},{"begin":431,"end":1911,"name":"REVERT","source":7},{"begin":431,"end":1911,"name":"tag","source":7,"value":"1"},{"begin":431,"end":1911,"name":"JUMPDEST","source":7},{"begin":431,"end":1911,"name":"ADDRESS","source":7},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"0"},{"begin":431,"end":1911,"name":"MSTORE","source":7},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"73"},{"begin":431,"end":1911,"name":"DUP2","source":7},{"begin":431,"end":1911,"name":"MSTORE8","source":7},{"begin":431,"end":1911,"name":"DUP3","source":7},{"begin":431,"end":1911,"name":"DUP2","source":7},{"begin":431,"end":1911,"name":"RETURN","source":7}],".data":{"0":{".auxdata":"a26469706673582212209d4fa79535ce75545379e4db62f480bc28a17fe8b0f365ab44f0a606f9e86e1f64736f6c63430008170033",".code":[{"begin":431,"end":1911,"name":"PUSHDEPLOYADDRESS","source":7},{"begin":431,"end":1911,"name":"ADDRESS","source":7},{"begin":431,"end":1911,"name":"EQ","source":7},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"80"},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"40"},{"begin":431,"end":1911,"name":"MSTORE","source":7},{"begin":431,"end":1911,"name":"PUSH","source":7,"value":"0"},{"begin":431,"end":1911,"name":"DUP1","source":7},{"begin":431,"end":1911,"name":"REVERT","source":7}]}},"sourceList":["node_modules/@openzeppelin/contracts/access/Ownable.sol","node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol","node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol","node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","node_modules/@openzeppelin/contracts/utils/Context.sol","node_modules/@openzeppelin/contracts/utils/Panic.sol","node_modules/@openzeppelin/contracts/utils/Strings.sol","node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","node_modules/@openzeppelin/contracts/utils/math/Math.sol","node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol","src/JBProjects.sol","src/interfaces/IJBProjects.sol","src/interfaces/IJBTokenUriResolver.sol","#utility.yul"]},"bytecode":{"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d4fa79535ce75545379e4db62f480bc28a17fe8b0f365ab44f0a606f9e86e1f64736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0x4F 0xA7 SWAP6 CALLDATALOAD 0xCE PUSH22 0x545379E4DB62F480BC28A17FE8B0F365AB44F0A606F9 0xE8 PUSH15 0x1F64736F6C63430008170033000000 ","sourceMap":"431:1480:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1480:7;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d4fa79535ce75545379e4db62f480bc28a17fe8b0f365ab44f0a606f9e86e1f64736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0x4F 0xA7 SWAP6 CALLDATALOAD 0xCE PUSH22 0x545379E4DB62F480BC28A17FE8B0F365AB44F0A606F9 0xE8 PUSH15 0x1F64736F6C63430008170033000000 ","sourceMap":"431:1480:7:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"external":{},"internal":{"checkOnERC721Received(address,address,address,uint256,bytes memory)":"infinite"}}}}},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts."},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}}}}},"node_modules/@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._"},"evm":{"assembly":"    /* \"node_modules/@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209694bc8ef913118aaa8b97f07805f3adebe47c548a1e04ef93ba12828946d9ed64736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":657,"end":1972,"name":"PUSH #[$]","source":9,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":657,"end":1972,"name":"PUSH [$]","source":9,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"B"},{"begin":657,"end":1972,"name":"DUP3","source":9},{"begin":657,"end":1972,"name":"DUP3","source":9},{"begin":657,"end":1972,"name":"DUP3","source":9},{"begin":657,"end":1972,"name":"CODECOPY","source":9},{"begin":657,"end":1972,"name":"DUP1","source":9},{"begin":657,"end":1972,"name":"MLOAD","source":9},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"0"},{"begin":657,"end":1972,"name":"BYTE","source":9},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"73"},{"begin":657,"end":1972,"name":"EQ","source":9},{"begin":657,"end":1972,"name":"PUSH [tag]","source":9,"value":"1"},{"begin":657,"end":1972,"name":"JUMPI","source":9},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"4E487B71"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"0"},{"begin":657,"end":1972,"name":"MSTORE","source":9},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"0"},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"4"},{"begin":657,"end":1972,"name":"MSTORE","source":9},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"24"},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"0"},{"begin":657,"end":1972,"name":"REVERT","source":9},{"begin":657,"end":1972,"name":"tag","source":9,"value":"1"},{"begin":657,"end":1972,"name":"JUMPDEST","source":9},{"begin":657,"end":1972,"name":"ADDRESS","source":9},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"0"},{"begin":657,"end":1972,"name":"MSTORE","source":9},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"73"},{"begin":657,"end":1972,"name":"DUP2","source":9},{"begin":657,"end":1972,"name":"MSTORE8","source":9},{"begin":657,"end":1972,"name":"DUP3","source":9},{"begin":657,"end":1972,"name":"DUP2","source":9},{"begin":657,"end":1972,"name":"RETURN","source":9}],".data":{"0":{".auxdata":"a26469706673582212209694bc8ef913118aaa8b97f07805f3adebe47c548a1e04ef93ba12828946d9ed64736f6c63430008170033",".code":[{"begin":657,"end":1972,"name":"PUSHDEPLOYADDRESS","source":9},{"begin":657,"end":1972,"name":"ADDRESS","source":9},{"begin":657,"end":1972,"name":"EQ","source":9},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"80"},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"40"},{"begin":657,"end":1972,"name":"MSTORE","source":9},{"begin":657,"end":1972,"name":"PUSH","source":9,"value":"0"},{"begin":657,"end":1972,"name":"DUP1","source":9},{"begin":657,"end":1972,"name":"REVERT","source":9}]}},"sourceList":["node_modules/@openzeppelin/contracts/access/Ownable.sol","node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol","node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol","node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","node_modules/@openzeppelin/contracts/utils/Context.sol","node_modules/@openzeppelin/contracts/utils/Panic.sol","node_modules/@openzeppelin/contracts/utils/Strings.sol","node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","node_modules/@openzeppelin/contracts/utils/math/Math.sol","node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol","src/JBProjects.sol","src/interfaces/IJBProjects.sol","src/interfaces/IJBTokenUriResolver.sol","#utility.yul"]},"bytecode":{"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209694bc8ef913118aaa8b97f07805f3adebe47c548a1e04ef93ba12828946d9ed64736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP5 0xBC DUP15 0xF9 SGT GT DUP11 0xAA DUP12 SWAP8 CREATE PUSH25 0x5F3ADEBE47C548A1E04EF93BA12828946D9ED64736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"657:1315:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:9;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209694bc8ef913118aaa8b97f07805f3adebe47c548a1e04ef93ba12828946d9ed64736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP5 0xBC DUP15 0xF9 SGT GT DUP11 0xAA DUP12 SWAP8 CREATE PUSH25 0x5F3ADEBE47C548A1E04EF93BA12828946D9ED64736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"657:1315:9:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"external":{},"internal":{"panic(uint256)":"infinite"}}}}},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"type":"error","name":"StringsInsufficientHexLength","inputs":[{"name":"value","type":"uint256","internalType":"uint256"},{"name":"length","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"StringsInvalidAddressFormat","inputs":[]},{"type":"error","name":"StringsInvalidChar","inputs":[]}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"String operations.","errors":{"StringsInsufficientHexLength(uint256,uint256)":[{"details":"The `value` string doesn't fit in the specified `length`."}],"StringsInvalidAddressFormat()":[{"details":"The string being parsed is not a properly formatted address."}],"StringsInvalidChar()":[{"details":"The string being parsed contains characters that are not in scope of the given base."}]}},"evm":{"assembly":"    /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":297:16838  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":297:16838  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220aa825eaef84d5ffe0aff264d1bb5979d14de3933bc9ac16460f03ef83bbce63164736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":297,"end":16838,"name":"PUSH #[$]","source":10,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":297,"end":16838,"name":"PUSH [$]","source":10,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"B"},{"begin":297,"end":16838,"name":"DUP3","source":10},{"begin":297,"end":16838,"name":"DUP3","source":10},{"begin":297,"end":16838,"name":"DUP3","source":10},{"begin":297,"end":16838,"name":"CODECOPY","source":10},{"begin":297,"end":16838,"name":"DUP1","source":10},{"begin":297,"end":16838,"name":"MLOAD","source":10},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"0"},{"begin":297,"end":16838,"name":"BYTE","source":10},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"73"},{"begin":297,"end":16838,"name":"EQ","source":10},{"begin":297,"end":16838,"name":"PUSH [tag]","source":10,"value":"1"},{"begin":297,"end":16838,"name":"JUMPI","source":10},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"4E487B71"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"0"},{"begin":297,"end":16838,"name":"MSTORE","source":10},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"0"},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"4"},{"begin":297,"end":16838,"name":"MSTORE","source":10},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"24"},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"0"},{"begin":297,"end":16838,"name":"REVERT","source":10},{"begin":297,"end":16838,"name":"tag","source":10,"value":"1"},{"begin":297,"end":16838,"name":"JUMPDEST","source":10},{"begin":297,"end":16838,"name":"ADDRESS","source":10},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"0"},{"begin":297,"end":16838,"name":"MSTORE","source":10},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"73"},{"begin":297,"end":16838,"name":"DUP2","source":10},{"begin":297,"end":16838,"name":"MSTORE8","source":10},{"begin":297,"end":16838,"name":"DUP3","source":10},{"begin":297,"end":16838,"name":"DUP2","source":10},{"begin":297,"end":16838,"name":"RETURN","source":10}],".data":{"0":{".auxdata":"a2646970667358221220aa825eaef84d5ffe0aff264d1bb5979d14de3933bc9ac16460f03ef83bbce63164736f6c63430008170033",".code":[{"begin":297,"end":16838,"name":"PUSHDEPLOYADDRESS","source":10},{"begin":297,"end":16838,"name":"ADDRESS","source":10},{"begin":297,"end":16838,"name":"EQ","source":10},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"80"},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"40"},{"begin":297,"end":16838,"name":"MSTORE","source":10},{"begin":297,"end":16838,"name":"PUSH","source":10,"value":"0"},{"begin":297,"end":16838,"name":"DUP1","source":10},{"begin":297,"end":16838,"name":"REVERT","source":10}]}},"sourceList":["node_modules/@openzeppelin/contracts/access/Ownable.sol","node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol","node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol","node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","node_modules/@openzeppelin/contracts/utils/Context.sol","node_modules/@openzeppelin/contracts/utils/Panic.sol","node_modules/@openzeppelin/contracts/utils/Strings.sol","node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","node_modules/@openzeppelin/contracts/utils/math/Math.sol","node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol","src/JBProjects.sol","src/interfaces/IJBProjects.sol","src/interfaces/IJBTokenUriResolver.sol","#utility.yul"]},"bytecode":{"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa825eaef84d5ffe0aff264d1bb5979d14de3933bc9ac16460f03ef83bbce63164736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP3 0x5E 0xAE 0xF8 0x4D PUSH0 INVALID EXP SELFDESTRUCT 0x26 0x4D SHL 0xB5 SWAP8 SWAP14 EQ 0xDE CODECOPY CALLER 0xBC SWAP11 0xC1 PUSH5 0x60F03EF83B 0xBC 0xE6 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"297:16541:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:16541:10;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa825eaef84d5ffe0aff264d1bb5979d14de3933bc9ac16460f03ef83bbce63164736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP3 0x5E 0xAE 0xF8 0x4D PUSH0 INVALID EXP SELFDESTRUCT 0x26 0x4D SHL 0xB5 SWAP8 SWAP14 EQ 0xDE CODECOPY CALLER 0xBC SWAP11 0xC1 PUSH5 0x60F03EF83B 0xBC 0xE6 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"297:16541:10:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"external":{},"internal":{"_tryParseChr(bytes1)":"infinite","_tryParseHexUintUncheckedBounds(string memory,uint256,uint256)":"infinite","_tryParseIntUncheckedBounds(string memory,uint256,uint256)":"infinite","_tryParseUintUncheckedBounds(string memory,uint256,uint256)":"infinite","_unsafeReadBytesOffset(bytes memory,uint256)":"infinite","equal(string memory,string memory)":"infinite","parseAddress(string memory)":"infinite","parseAddress(string memory,uint256,uint256)":"infinite","parseHexUint(string memory)":"infinite","parseHexUint(string memory,uint256,uint256)":"infinite","parseInt(string memory)":"infinite","parseInt(string memory,uint256,uint256)":"infinite","parseUint(string memory)":"infinite","parseUint(string memory,uint256,uint256)":"infinite","toChecksumHexString(address)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite","toStringSigned(int256)":"infinite","tryParseAddress(string memory)":"infinite","tryParseAddress(string memory,uint256,uint256)":"infinite","tryParseHexUint(string memory)":"infinite","tryParseHexUint(string memory,uint256,uint256)":"infinite","tryParseInt(string memory)":"infinite","tryParseInt(string memory,uint256,uint256)":"infinite","tryParseUint(string memory)":"infinite","tryParseUint(string memory,uint256,uint256)":"infinite"}}}}},"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}}}},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}}}},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Standard math utilities missing in the Solidity language."},"evm":{"assembly":"    /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220667aa2d581d7d6c67857af75d212f7a23bb02360bea3e6781a8f53e2d051acef64736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":281,"end":28307,"name":"PUSH #[$]","source":13,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":281,"end":28307,"name":"PUSH [$]","source":13,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"B"},{"begin":281,"end":28307,"name":"DUP3","source":13},{"begin":281,"end":28307,"name":"DUP3","source":13},{"begin":281,"end":28307,"name":"DUP3","source":13},{"begin":281,"end":28307,"name":"CODECOPY","source":13},{"begin":281,"end":28307,"name":"DUP1","source":13},{"begin":281,"end":28307,"name":"MLOAD","source":13},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"0"},{"begin":281,"end":28307,"name":"BYTE","source":13},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"73"},{"begin":281,"end":28307,"name":"EQ","source":13},{"begin":281,"end":28307,"name":"PUSH [tag]","source":13,"value":"1"},{"begin":281,"end":28307,"name":"JUMPI","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"4E487B71"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"0"},{"begin":281,"end":28307,"name":"MSTORE","source":13},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"0"},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"4"},{"begin":281,"end":28307,"name":"MSTORE","source":13},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"24"},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"0"},{"begin":281,"end":28307,"name":"REVERT","source":13},{"begin":281,"end":28307,"name":"tag","source":13,"value":"1"},{"begin":281,"end":28307,"name":"JUMPDEST","source":13},{"begin":281,"end":28307,"name":"ADDRESS","source":13},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"0"},{"begin":281,"end":28307,"name":"MSTORE","source":13},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"73"},{"begin":281,"end":28307,"name":"DUP2","source":13},{"begin":281,"end":28307,"name":"MSTORE8","source":13},{"begin":281,"end":28307,"name":"DUP3","source":13},{"begin":281,"end":28307,"name":"DUP2","source":13},{"begin":281,"end":28307,"name":"RETURN","source":13}],".data":{"0":{".auxdata":"a2646970667358221220667aa2d581d7d6c67857af75d212f7a23bb02360bea3e6781a8f53e2d051acef64736f6c63430008170033",".code":[{"begin":281,"end":28307,"name":"PUSHDEPLOYADDRESS","source":13},{"begin":281,"end":28307,"name":"ADDRESS","source":13},{"begin":281,"end":28307,"name":"EQ","source":13},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"80"},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"40"},{"begin":281,"end":28307,"name":"MSTORE","source":13},{"begin":281,"end":28307,"name":"PUSH","source":13,"value":"0"},{"begin":281,"end":28307,"name":"DUP1","source":13},{"begin":281,"end":28307,"name":"REVERT","source":13}]}},"sourceList":["node_modules/@openzeppelin/contracts/access/Ownable.sol","node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol","node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol","node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","node_modules/@openzeppelin/contracts/utils/Context.sol","node_modules/@openzeppelin/contracts/utils/Panic.sol","node_modules/@openzeppelin/contracts/utils/Strings.sol","node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","node_modules/@openzeppelin/contracts/utils/math/Math.sol","node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol","src/JBProjects.sol","src/interfaces/IJBProjects.sol","src/interfaces/IJBTokenUriResolver.sol","#utility.yul"]},"bytecode":{"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220667aa2d581d7d6c67857af75d212f7a23bb02360bea3e6781a8f53e2d051acef64736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x7AA2D581D7D6C6 PUSH25 0x57AF75D212F7A23BB02360BEA3E6781A8F53E2D051ACEF6473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"281:28026:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:13;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220667aa2d581d7d6c67857af75d212f7a23bb02360bea3e6781a8f53e2d051acef64736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x7AA2D581D7D6C6 PUSH25 0x57AF75D212F7A23BB02360BEA3E6781A8F53E2D051ACEF6473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"281:28026:13:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"external":{},"internal":{"_zeroBytes(bytes memory)":"infinite","average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","invMod(uint256,uint256)":"infinite","invModPrime(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","modExp(bytes memory,bytes memory,bytes memory)":"infinite","modExp(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite","ternary(bool,uint256,uint256)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryModExp(bytes memory,bytes memory,bytes memory)":"infinite","tryModExp(uint256,uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite","unsignedRoundsUp(enum Math.Rounding)":"infinite"}}}}},"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"type":"error","name":"SafeCastOverflowedIntDowncast","inputs":[{"name":"bits","type":"uint8","internalType":"uint8"},{"name":"value","type":"int256","internalType":"int256"}]},{"type":"error","name":"SafeCastOverflowedIntToUint","inputs":[{"name":"value","type":"int256","internalType":"int256"}]},{"type":"error","name":"SafeCastOverflowedUintDowncast","inputs":[{"name":"bits","type":"uint8","internalType":"uint8"},{"name":"value","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"SafeCastOverflowedUintToInt","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}]}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.","errors":{"SafeCastOverflowedIntDowncast(uint8,int256)":[{"details":"Value doesn't fit in an int of `bits` size."}],"SafeCastOverflowedIntToUint(int256)":[{"details":"An int value doesn't fit in an uint of `bits` size."}],"SafeCastOverflowedUintDowncast(uint8,uint256)":[{"details":"Value doesn't fit in an uint of `bits` size."}],"SafeCastOverflowedUintToInt(uint256)":[{"details":"An uint value doesn't fit in an int of `bits` size."}]}},"evm":{"assembly":"    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e1e65426258c6b911c0231ca2b12084f2aaccca9d6c05323471ca6442d5d5be64736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":769,"end":34942,"name":"PUSH #[$]","source":14,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":769,"end":34942,"name":"PUSH [$]","source":14,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"B"},{"begin":769,"end":34942,"name":"DUP3","source":14},{"begin":769,"end":34942,"name":"DUP3","source":14},{"begin":769,"end":34942,"name":"DUP3","source":14},{"begin":769,"end":34942,"name":"CODECOPY","source":14},{"begin":769,"end":34942,"name":"DUP1","source":14},{"begin":769,"end":34942,"name":"MLOAD","source":14},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"0"},{"begin":769,"end":34942,"name":"BYTE","source":14},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"73"},{"begin":769,"end":34942,"name":"EQ","source":14},{"begin":769,"end":34942,"name":"PUSH [tag]","source":14,"value":"1"},{"begin":769,"end":34942,"name":"JUMPI","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"4E487B71"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"0"},{"begin":769,"end":34942,"name":"MSTORE","source":14},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"0"},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"4"},{"begin":769,"end":34942,"name":"MSTORE","source":14},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"24"},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"0"},{"begin":769,"end":34942,"name":"REVERT","source":14},{"begin":769,"end":34942,"name":"tag","source":14,"value":"1"},{"begin":769,"end":34942,"name":"JUMPDEST","source":14},{"begin":769,"end":34942,"name":"ADDRESS","source":14},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"0"},{"begin":769,"end":34942,"name":"MSTORE","source":14},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"73"},{"begin":769,"end":34942,"name":"DUP2","source":14},{"begin":769,"end":34942,"name":"MSTORE8","source":14},{"begin":769,"end":34942,"name":"DUP3","source":14},{"begin":769,"end":34942,"name":"DUP2","source":14},{"begin":769,"end":34942,"name":"RETURN","source":14}],".data":{"0":{".auxdata":"a26469706673582212201e1e65426258c6b911c0231ca2b12084f2aaccca9d6c05323471ca6442d5d5be64736f6c63430008170033",".code":[{"begin":769,"end":34942,"name":"PUSHDEPLOYADDRESS","source":14},{"begin":769,"end":34942,"name":"ADDRESS","source":14},{"begin":769,"end":34942,"name":"EQ","source":14},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"80"},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"40"},{"begin":769,"end":34942,"name":"MSTORE","source":14},{"begin":769,"end":34942,"name":"PUSH","source":14,"value":"0"},{"begin":769,"end":34942,"name":"DUP1","source":14},{"begin":769,"end":34942,"name":"REVERT","source":14}]}},"sourceList":["node_modules/@openzeppelin/contracts/access/Ownable.sol","node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol","node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol","node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","node_modules/@openzeppelin/contracts/utils/Context.sol","node_modules/@openzeppelin/contracts/utils/Panic.sol","node_modules/@openzeppelin/contracts/utils/Strings.sol","node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","node_modules/@openzeppelin/contracts/utils/math/Math.sol","node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol","src/JBProjects.sol","src/interfaces/IJBProjects.sol","src/interfaces/IJBTokenUriResolver.sol","#utility.yul"]},"bytecode":{"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e1e65426258c6b911c0231ca2b12084f2aaccca9d6c05323471ca6442d5d5be64736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x1E PUSH6 0x426258C6B911 0xC0 0x23 SHR LOG2 0xB1 KECCAK256 DUP5 CALLCODE 0xAA 0xCC 0xCA SWAP14 PUSH13 0x5323471CA6442D5D5BE64736F PUSH13 0x63430008170033000000000000 ","sourceMap":"769:34173:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:14;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e1e65426258c6b911c0231ca2b12084f2aaccca9d6c05323471ca6442d5d5be64736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x1E PUSH6 0x426258C6B911 0xC0 0x23 SHR LOG2 0xB1 KECCAK256 DUP5 CALLCODE 0xAA 0xCC 0xCA SWAP14 PUSH13 0x5323471CA6442D5D5BE64736F PUSH13 0x63430008170033000000000000 ","sourceMap":"769:34173:14:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"external":{},"internal":{"toInt104(int256)":"infinite","toInt112(int256)":"infinite","toInt120(int256)":"infinite","toInt128(int256)":"infinite","toInt136(int256)":"infinite","toInt144(int256)":"infinite","toInt152(int256)":"infinite","toInt16(int256)":"infinite","toInt160(int256)":"infinite","toInt168(int256)":"infinite","toInt176(int256)":"infinite","toInt184(int256)":"infinite","toInt192(int256)":"infinite","toInt200(int256)":"infinite","toInt208(int256)":"infinite","toInt216(int256)":"infinite","toInt224(int256)":"infinite","toInt232(int256)":"infinite","toInt24(int256)":"infinite","toInt240(int256)":"infinite","toInt248(int256)":"infinite","toInt256(uint256)":"infinite","toInt32(int256)":"infinite","toInt40(int256)":"infinite","toInt48(int256)":"infinite","toInt56(int256)":"infinite","toInt64(int256)":"infinite","toInt72(int256)":"infinite","toInt8(int256)":"infinite","toInt80(int256)":"infinite","toInt88(int256)":"infinite","toInt96(int256)":"infinite","toUint(bool)":"infinite","toUint104(uint256)":"infinite","toUint112(uint256)":"infinite","toUint120(uint256)":"infinite","toUint128(uint256)":"infinite","toUint136(uint256)":"infinite","toUint144(uint256)":"infinite","toUint152(uint256)":"infinite","toUint16(uint256)":"infinite","toUint160(uint256)":"infinite","toUint168(uint256)":"infinite","toUint176(uint256)":"infinite","toUint184(uint256)":"infinite","toUint192(uint256)":"infinite","toUint200(uint256)":"infinite","toUint208(uint256)":"infinite","toUint216(uint256)":"infinite","toUint224(uint256)":"infinite","toUint232(uint256)":"infinite","toUint24(uint256)":"infinite","toUint240(uint256)":"infinite","toUint248(uint256)":"infinite","toUint256(int256)":"infinite","toUint32(uint256)":"infinite","toUint40(uint256)":"infinite","toUint48(uint256)":"infinite","toUint56(uint256)":"infinite","toUint64(uint256)":"infinite","toUint72(uint256)":"infinite","toUint8(uint256)":"infinite","toUint80(uint256)":"infinite","toUint88(uint256)":"infinite","toUint96(uint256)":"infinite"}}}}},"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Standard signed math utilities missing in the Solidity language."},"evm":{"assembly":"    /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e780ea14140e5f76fd1976764305c675b22e92c2682fcace833338c97df324164736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":258,"end":2612,"name":"PUSH #[$]","source":15,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":258,"end":2612,"name":"PUSH [$]","source":15,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"B"},{"begin":258,"end":2612,"name":"DUP3","source":15},{"begin":258,"end":2612,"name":"DUP3","source":15},{"begin":258,"end":2612,"name":"DUP3","source":15},{"begin":258,"end":2612,"name":"CODECOPY","source":15},{"begin":258,"end":2612,"name":"DUP1","source":15},{"begin":258,"end":2612,"name":"MLOAD","source":15},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"0"},{"begin":258,"end":2612,"name":"BYTE","source":15},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"73"},{"begin":258,"end":2612,"name":"EQ","source":15},{"begin":258,"end":2612,"name":"PUSH [tag]","source":15,"value":"1"},{"begin":258,"end":2612,"name":"JUMPI","source":15},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"4E487B71"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"0"},{"begin":258,"end":2612,"name":"MSTORE","source":15},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"0"},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"4"},{"begin":258,"end":2612,"name":"MSTORE","source":15},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"24"},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"0"},{"begin":258,"end":2612,"name":"REVERT","source":15},{"begin":258,"end":2612,"name":"tag","source":15,"value":"1"},{"begin":258,"end":2612,"name":"JUMPDEST","source":15},{"begin":258,"end":2612,"name":"ADDRESS","source":15},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"0"},{"begin":258,"end":2612,"name":"MSTORE","source":15},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"73"},{"begin":258,"end":2612,"name":"DUP2","source":15},{"begin":258,"end":2612,"name":"MSTORE8","source":15},{"begin":258,"end":2612,"name":"DUP3","source":15},{"begin":258,"end":2612,"name":"DUP2","source":15},{"begin":258,"end":2612,"name":"RETURN","source":15}],".data":{"0":{".auxdata":"a26469706673582212202e780ea14140e5f76fd1976764305c675b22e92c2682fcace833338c97df324164736f6c63430008170033",".code":[{"begin":258,"end":2612,"name":"PUSHDEPLOYADDRESS","source":15},{"begin":258,"end":2612,"name":"ADDRESS","source":15},{"begin":258,"end":2612,"name":"EQ","source":15},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"80"},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"40"},{"begin":258,"end":2612,"name":"MSTORE","source":15},{"begin":258,"end":2612,"name":"PUSH","source":15,"value":"0"},{"begin":258,"end":2612,"name":"DUP1","source":15},{"begin":258,"end":2612,"name":"REVERT","source":15}]}},"sourceList":["node_modules/@openzeppelin/contracts/access/Ownable.sol","node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol","node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol","node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","node_modules/@openzeppelin/contracts/utils/Context.sol","node_modules/@openzeppelin/contracts/utils/Panic.sol","node_modules/@openzeppelin/contracts/utils/Strings.sol","node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","node_modules/@openzeppelin/contracts/utils/math/Math.sol","node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol","src/JBProjects.sol","src/interfaces/IJBProjects.sol","src/interfaces/IJBTokenUriResolver.sol","#utility.yul"]},"bytecode":{"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e780ea14140e5f76fd1976764305c675b22e92c2682fcace833338c97df324164736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E PUSH25 0xEA14140E5F76FD1976764305C675B22E92C2682FCACE83333 DUP13 SWAP8 0xDF ORIGIN COINBASE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"258:2354:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:15;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e780ea14140e5f76fd1976764305c675b22e92c2682fcace833338c97df324164736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E PUSH25 0xEA14140E5F76FD1976764305C675B22E92C2682FCACE83333 DUP13 SWAP8 0xDF ORIGIN COINBASE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"258:2354:15:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"external":{},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite","ternary(bool,int256,int256)":"infinite"}}}}},"src/JBProjects.sol":{"JBProjects":{"abi":[{"type":"constructor","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"feeProjectOwner","type":"address","internalType":"address"},{"name":"trustedForwarder","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"count","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"createFor","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"projectId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isTrustedForwarder","inputs":[{"name":"forwarder","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTokenUriResolver","inputs":[{"name":"resolver","type":"address","internalType":"contract IJBTokenUriResolver"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"tokenURI","inputs":[{"name":"projectId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"tokenUriResolver","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IJBTokenUriResolver"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trustedForwarder","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Create","inputs":[{"name":"projectId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"caller","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SetTokenUriResolver","inputs":[{"name":"resolver","type":"address","indexed":true,"internalType":"contract IJBTokenUriResolver"},{"name":"caller","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"ERC721IncorrectOwner","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InsufficientApproval","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC721InvalidApprover","inputs":[{"name":"approver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidReceiver","inputs":[{"name":"receiver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidSender","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721NonexistentToken","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeProjectOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Create\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IJBTokenUriResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SetTokenUriResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IJBTokenUriResolver\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setTokenUriResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenUriResolver\",\"outputs\":[{\"internalType\":\"contract IJBTokenUriResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Projects are represented as ERC-721s.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"params\":{\"feeProjectOwner\":\"The address that will receive the fee-project. If `address(0)` the fee-project will not be minted.\",\"owner\":\"The owner of the contract who can set metadata.\",\"trustedForwarder\":\"The trusted forwarder for the ERC2771Context.\"}},\"createFor(address)\":{\"details\":\"Anyone can create a project on an owner's behalf.\",\"params\":{\"owner\":\"The address that will be the owner of the project.\"},\"returns\":{\"projectId\":\"The token ID of the newly created project.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setTokenUriResolver(address)\":{\"params\":{\"resolver\":\"The address of the new resolver.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\",\"params\":{\"interfaceId\":\"The ID of the interface to check for adherence to.\"},\"returns\":{\"_0\":\"A flag indicating if the provided interface ID is supported.\"}},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"params\":{\"projectId\":\"The ID of the project to get a URI of.\"},\"returns\":{\"_0\":\"The token URI to use for the provided `projectId`.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"count\":{\"details\":\"The count is incremented with each new project created.The resulting ERC-721 token ID for each project is the newly incremented count value.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"count()\":{\"notice\":\"The number of projects that have been created using this contract.\"},\"createFor(address)\":{\"notice\":\"Create a new project for the specified owner, which mints an NFT (ERC-721) into their wallet.\"},\"setTokenUriResolver(address)\":{\"notice\":\"Sets the address of the resolver used to retrieve the tokenURI of projects.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Indicates whether this contract adheres to the specified interface.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the URI where the ERC-721 standard JSON of a project is hosted.\"},\"tokenUriResolver()\":{\"notice\":\"The contract resolving each project ID to its ERC721 URI.\"}},\"notice\":\"Stores project ownership and metadata.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/JBProjects.sol\":\"JBProjects\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/JBProjects.sol\":{\"keccak256\":\"0xa4aab535e0401f9508347634f47d4060a2743f4e07eea8ee96f982626db66a0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf4bb9646c24bb1446365886308eeeb2f6c5411703cd44e79309465233d75ee4\",\"dweb:/ipfs/QmfRJ5z4PSxBUG7RETVz4fMrSDN2uudjs7L7zZN8Cp19yz\"]},\"src/interfaces/IJBProjects.sol\":{\"keccak256\":\"0x4ae42a9cc29b517b26d2b9b635deb82c16696b777deeca92dfcad33b0f81c0a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dcbd860e7d7f05232d90c5e9cfd3d01e2ce986ffcdb053473d8a4d387b1a48a\",\"dweb:/ipfs/QmWKWoSJJbVWDumbnzXJBJyXmAacgC97bxMtchh8te41bn\"]},\"src/interfaces/IJBTokenUriResolver.sol\":{\"keccak256\":\"0xfa5cb00dcd6085d1ef912d071fe73c63f9478a2cd0f9d8bddaf659b6af2d0967\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282e4e7c342d65f77cde0e9a08fcaf20ef5cf379c7a48b639842c0ffd0b2afb8\",\"dweb:/ipfs/QmbnN3PEQeZaXdPLT75V1J79kMg7KqSMru37RHrL3z8Yf2\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user","methods":{"count()":{"notice":"The number of projects that have been created using this contract."},"createFor(address)":{"notice":"Create a new project for the specified owner, which mints an NFT (ERC-721) into their wallet."},"setTokenUriResolver(address)":{"notice":"Sets the address of the resolver used to retrieve the tokenURI of projects."},"supportsInterface(bytes4)":{"notice":"Indicates whether this contract adheres to the specified interface."},"tokenURI(uint256)":{"notice":"Returns the URI where the ERC-721 standard JSON of a project is hosted."},"tokenUriResolver()":{"notice":"The contract resolving each project ID to its ERC721 URI."}},"notice":"Stores project ownership and metadata."},"devdoc":{"version":1,"kind":"dev","details":"Projects are represented as ERC-721s.","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"params":{"feeProjectOwner":"The address that will receive the fee-project. If `address(0)` the fee-project will not be minted.","owner":"The owner of the contract who can set metadata.","trustedForwarder":"The trusted forwarder for the ERC2771Context."}},"createFor(address)":{"details":"Anyone can create a project on an owner's behalf.","params":{"owner":"The address that will be the owner of the project."},"returns":{"projectId":"The token ID of the newly created project."}},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"isTrustedForwarder(address)":{"details":"Indicates whether any particular address is the trusted forwarder."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"setTokenUriResolver(address)":{"params":{"resolver":"The address of the new resolver."}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}.","params":{"interfaceId":"The ID of the interface to check for adherence to."},"returns":{"_0":"A flag indicating if the provided interface ID is supported."}},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"params":{"projectId":"The ID of the project to get a URI of."},"returns":{"_0":"The token URI to use for the provided `projectId`."}},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"trustedForwarder()":{"details":"Returns the address of the trusted forwarder."}},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]}},"storageLayout":{"storage":[{"astId":460,"contract":"src/JBProjects.sol:JBProjects","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":462,"contract":"src/JBProjects.sol:JBProjects","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":466,"contract":"src/JBProjects.sol:JBProjects","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":470,"contract":"src/JBProjects.sol:JBProjects","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":474,"contract":"src/JBProjects.sol:JBProjects","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":480,"contract":"src/JBProjects.sol:JBProjects","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":8,"contract":"src/JBProjects.sol:JBProjects","label":"_owner","offset":0,"slot":"6","type":"t_address"},{"astId":6485,"contract":"src/JBProjects.sol:JBProjects","label":"count","offset":0,"slot":"7","type":"t_uint256"},{"astId":6490,"contract":"src/JBProjects.sol:JBProjects","label":"tokenUriResolver","offset":0,"slot":"8","type":"t_contract(IJBTokenUriResolver)6727"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IJBTokenUriResolver)6727":{"encoding":"inplace","label":"contract IJBTokenUriResolver","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"assembly":"    /* \"src/JBProjects.sol\":601:6073  contract JBProjects is ERC721, ERC2771Context, Ownable, IJBProjects {... */\n  mstore(0x40, 0xa0)\n    /* \"src/JBProjects.sol\":1850:2176  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/JBProjects.sol\":2022:2027  owner */\n  dup3\n    /* \"src/JBProjects.sol\":2052:2068  trustedForwarder */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1380:1493  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x78, 0x4a75696365626f782050726f6a65637473)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc3, 0x094aa92868a849eb)\n  dup2\n  mstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1454:1459  name_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1446:1451  _name */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1446:1459  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1469:1476  _symbol */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1469:1486  _symbol = symbol_ */\n  tag_11\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  symbol_ */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1469:1476  _symbol */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1469:1486  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1500:1537  _trustedForwarder = trustedForwarder_ */\n  swap1\n  dup2\n  and\n  0x80\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3437:3488   */\n  mstore\n    /* \"#utility.yul\":3410:3428   */\n  0x24\n  add\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_18\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_17:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/JBProjects.sol\":2088:2117  feeProjectOwner != address(0) */\n  dup3\n  and\n  iszero\n    /* \"src/JBProjects.sol\":2084:2170  if (feeProjectOwner != address(0)) {... */\n  tag_20\n  jumpi\n    /* \"src/JBProjects.sol\":2133:2159  createFor(feeProjectOwner) */\n  tag_21\n    /* \"src/JBProjects.sol\":2143:2158  feeProjectOwner */\n  dup3\n    /* \"src/JBProjects.sol\":2133:2142  createFor */\n  tag_22\n    /* \"src/JBProjects.sol\":2133:2159  createFor(feeProjectOwner) */\n  jump\t// in\ntag_21:\n  pop\n    /* \"src/JBProjects.sol\":2084:2170  if (feeProjectOwner != address(0)) {... */\ntag_20:\n    /* \"src/JBProjects.sol\":1850:2176  constructor(... */\n  pop\n  pop\n  pop\n    /* \"src/JBProjects.sol\":601:6073  contract JBProjects is ERC721, ERC2771Context, Ownable, IJBProjects {... */\n  jump(tag_149)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"src/JBProjects.sol\":5746:6071  function createFor(address owner) public override returns (uint256 projectId) {... */\ntag_22:\n    /* \"src/JBProjects.sol\":5805:5822  uint256 projectId */\n  0x00\n    /* \"src/JBProjects.sol\":5910:5915  count */\n  0x07\n  0x00\n    /* \"src/JBProjects.sol\":5908:5915  ++count */\n  dup2\n  sload\n  tag_26\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  swap2\n  dup3\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/JBProjects.sol\":5931:5997  Create({projectId: projectId, owner: owner, caller: _msgSender()}) */\n  dup3\n  and\n    /* \"src/JBProjects.sol\":5908:5915  ++count */\n  dup2\n    /* \"src/JBProjects.sol\":5931:5997  Create({projectId: projectId, owner: owner, caller: _msgSender()}) */\n  0x365b3162cd780731fc55a794b59494d472bc2af701007f581843a70673814698\n    /* \"src/JBProjects.sol\":5983:5995  _msgSender() */\n  tag_28\n    /* \"src/JBProjects.sol\":5983:5993  _msgSender */\n  tag_29\n    /* \"src/JBProjects.sol\":5983:5995  _msgSender() */\n  jump\t// in\ntag_28:\n    /* \"src/JBProjects.sol\":5931:5997  Create({projectId: projectId, owner: owner, caller: _msgSender()}) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3455:3487   */\n  swap1\n  swap2\n  and\n    /* \"#utility.yul\":3437:3488   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3425:3427   */\n  0x20\n    /* \"#utility.yul\":3410:3428   */\n  add\n    /* \"src/JBProjects.sol\":5931:5997  Create({projectId: projectId, owner: owner, caller: _msgSender()}) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"src/JBProjects.sol\":6037:6064  _safeMint(owner, projectId) */\n  tag_31\n    /* \"src/JBProjects.sol\":6047:6052  owner */\n  dup3\n    /* \"src/JBProjects.sol\":6054:6063  projectId */\n  dup3\n    /* \"src/JBProjects.sol\":6037:6046  _safeMint */\n  tag_32\n    /* \"src/JBProjects.sol\":6037:6064  _safeMint(owner, projectId) */\n  jump\t// in\ntag_31:\n    /* \"src/JBProjects.sol\":5746:6071  function createFor(address owner) public override returns (uint256 projectId) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"src/JBProjects.sol\":4412:4558  function _msgSender() internal view override(ERC2771Context, Context) returns (address sender) {... */\ntag_29:\n    /* \"src/JBProjects.sol\":4491:4505  address sender */\n  0x00\n    /* \"src/JBProjects.sol\":4524:4551  ERC2771Context._msgSender() */\n  tag_34\n    /* \"src/JBProjects.sol\":4524:4549  ERC2771Context._msgSender */\n  tag_35\n    /* \"src/JBProjects.sol\":4524:4551  ERC2771Context._msgSender() */\n  jump\t// in\ntag_34:\n    /* \"src/JBProjects.sol\":4517:4551  return ERC2771Context._msgSender() */\n  swap1\n  pop\n    /* \"src/JBProjects.sol\":4412:4558  function _msgSender() internal view override(ERC2771Context, Context) returns (address sender) {... */\n  swap1\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10656:10756  function _safeMint(address to, uint256 tokenId) internal {... */\ntag_32:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10723:10749  _safeMint(to, tokenId, \"\") */\n  tag_37\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10733:10735  to */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10737:10744  tokenId */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10723:10749  _safeMint(to, tokenId, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10723:10732  _safeMint */\n  shl(0x20, tag_38)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10723:10749  _safeMint(to, tokenId, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10656:10756  function _safeMint(address to, uint256 tokenId) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2206:2635  function _msgSender() internal view virtual override returns (address) {... */\ntag_35:\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2268:2275  address */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2312:2320  msg.data */\n  calldatasize\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":3483:3485  20 */\n  0x14\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2433  isTrustedForwarder(msg.sender) */\n  tag_42\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2422:2432  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2421  isTrustedForwarder */\n  tag_43\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2433  isTrustedForwarder(msg.sender) */\n  jump\t// in\ntag_42:\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2474  isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength */\n  dup1\n  iszero\n  tag_44\n  jumpi\n  pop\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2455:2474  contextSuffixLength */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2437:2451  calldataLength */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2437:2474  calldataLength >= contextSuffixLength */\n  lt\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2474  isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength */\ntag_44:\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2399:2629  if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {... */\n  iszero\n  tag_45\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2513:2521  msg.data */\n  0x00\n  calldatasize\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2522:2558  calldataLength - contextSuffixLength */\n  tag_46\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2539:2558  contextSuffixLength */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2522:2536  calldataLength */\n  dup6\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2522:2558  calldataLength - contextSuffixLength */\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2513:2560  msg.data[calldataLength - contextSuffixLength:] */\n  tag_48\n  swap3\n  dup3\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2505:2561  bytes20(msg.data[calldataLength - contextSuffixLength:]) */\n  tag_50\n  swap2\n  tag_51\n  jump\t// in\ntag_50:\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2497:2562  address(bytes20(msg.data[calldataLength - contextSuffixLength:])) */\n  0x60\n  shr\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2490:2562  return address(bytes20(msg.data[calldataLength - contextSuffixLength:])) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2206:2635  function _msgSender() internal view virtual override returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2399:2629  if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {... */\ntag_45:\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2593:2618  return super._msgSender() */\n  swap3\n  pop\n  pop\n  pop\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2206:2635  function _msgSender() internal view virtual override returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10977:11184  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\ntag_38:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11071:11089  _mint(to, tokenId) */\n  tag_56\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11077:11079  to */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11081:11088  tokenId */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11071:11076  _mint */\n  tag_57\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11071:11089  _mint(to, tokenId) */\n  jump\t// in\ntag_56:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11099:11177  ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data) */\n  tag_58\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11133:11145  _msgSender() */\n  tag_59\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11133:11143  _msgSender */\n  tag_29\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11133:11145  _msgSender() */\n  jump\t// in\ntag_59:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11155:11156  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11159:11161  to */\n  dup6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11163:11170  tokenId */\n  dup6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11172:11176  data */\n  dup6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11099:11132  ERC721Utils.checkOnERC721Received */\n  tag_60\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11099:11177  ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data) */\n  jump\t// in\ntag_58:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10977:11184  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1832:1969  function isTrustedForwarder(address forwarder) public view virtual returns (bool) {... */\ntag_43:\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1908:1912  bool */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1944:1962  trustedForwarder() */\n  tag_65\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1707:1724  _trustedForwarder */\n  mload(0x80)\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1624:1731  function trustedForwarder() public view virtual returns (address) {... */\n  jump\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1944:1962  trustedForwarder() */\ntag_65:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1962  forwarder == trustedForwarder() */\n  and\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1940  forwarder */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1962  forwarder == trustedForwarder() */\n  and\n  eq\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1924:1962  return forwarder == trustedForwarder() */\n  swap1\n  pop\n    /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1832:1969  function isTrustedForwarder(address forwarder) public view virtual returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9978:10305  function _mint(address to, uint256 tokenId) internal {... */\ntag_57:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10045:10061  to == address(0) */\n  dup3\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10041:10128  if (to == address(0)) {... */\n  tag_69\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10084:10117  ERC721InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe1, 0x32505749)\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10115  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10084:10117  ERC721InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3437:3488   */\n  mstore\n    /* \"#utility.yul\":3410:3428   */\n  0x24\n  add\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10084:10117  ERC721InvalidReceiver(address(0)) */\n  tag_15\n    /* \"#utility.yul\":3291:3494   */\n  jump\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10041:10128  if (to == address(0)) {... */\ntag_69:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10137:10158  address previousOwner */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10161:10193  _update(to, tokenId, address(0)) */\n  tag_71\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10169:10171  to */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10173:10180  tokenId */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10137:10158  address previousOwner */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10161:10168  _update */\n  tag_72\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10161:10193  _update(to, tokenId, address(0)) */\n  jump\t// in\ntag_71:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10137:10193  address previousOwner = _update(to, tokenId, address(0)) */\n  swap1\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10207:10234  previousOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10203:10299  if (previousOwner != address(0)) {... */\n  tag_58\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10257:10288  ERC721InvalidSender(address(0)) */\n  mload(0x40)\n  shl(0xe1, 0x39e35637)\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10285:10286  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10257:10288  ERC721InvalidSender(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3437:3488   */\n  mstore\n    /* \"#utility.yul\":3410:3428   */\n  0x24\n  add\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10257:10288  ERC721InvalidSender(address(0)) */\n  tag_15\n    /* \"#utility.yul\":3291:3494   */\n  jump\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":985:1909  function checkOnERC721Received(... */\ntag_60:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1165:1179  to.code.length */\n  dup4\n  and\n  extcodesize\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1165:1183  to.code.length > 0 */\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1161:1903  if (to.code.length > 0) {... */\n  tag_91\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1203:1270  IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) */\n  mload(0x40)\n  shl(0xe1, 0x0a85bd01)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1203:1239  IERC721Receiver(to).onERC721Received */\n  dup5\n  and\n  swap1\n  0x150b7a02\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1203:1270  IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) */\n  tag_77\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1240:1248  operator */\n  dup9\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1250:1254  from */\n  dup9\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1256:1263  tokenId */\n  dup8\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1265:1269  data */\n  dup8\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1203:1270  IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) */\n  0x04\n  add\n  tag_78\n  jump\t// in\ntag_77:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_79\n  jumpi\n  pop\n  0x40\n  dup1\n  mload\n  0x1f\n  returndatasize\n  swap1\n  dup2\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  swap1\n  swap3\n  mstore\n  tag_80\n  swap2\n  dup2\n  add\n  swap1\n  tag_81\n  jump\t// in\ntag_80:\n  0x01\ntag_79:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1199:1893  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\n  tag_82\n  jumpi\n  returndatasize\n  dup1\n  dup1\n  iszero\n  tag_87\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_86)\ntag_87:\n  0x60\n  swap2\n  pop\ntag_86:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1560:1566  reason */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1560:1573  reason.length */\n  mload\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1577:1578  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1560:1578  reason.length == 0 */\n  sub\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1556:1879  if (reason.length == 0) {... */\n  tag_88\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1664:1703  IERC721Errors.ERC721InvalidReceiver(to) */\n  mload(0x40)\n  shl(0xe1, 0x32505749)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3455:3487   */\n  dup6\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1664:1703  IERC721Errors.ERC721InvalidReceiver(to) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3437:3488   */\n  mstore\n    /* \"#utility.yul\":3410:3428   */\n  0x24\n  add\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1664:1703  IERC721Errors.ERC721InvalidReceiver(to) */\n  tag_15\n    /* \"#utility.yul\":3291:3494   */\n  jump\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1556:1879  if (reason.length == 0) {... */\ntag_88:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1831:1837  reason */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1825:1838  mload(reason) */\n  mload\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1816:1822  reason */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1812:1814  32 */\n  0x20\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1808:1823  add(32, reason) */\n  add\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1801:1839  revert(add(32, reason), mload(reason)) */\n  revert\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1199:1893  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\ntag_82:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1317:1368  retval != IERC721Receiver.onERC721Received.selector */\n  dup2\n  and\n  shl(0xe1, 0x0a85bd01)\n  eq\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1313:1495  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n  tag_92\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1437:1476  IERC721Errors.ERC721InvalidReceiver(to) */\n  mload(0x40)\n  shl(0xe1, 0x32505749)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3455:3487   */\n  dup6\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1437:1476  IERC721Errors.ERC721InvalidReceiver(to) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3437:3488   */\n  mstore\n    /* \"#utility.yul\":3410:3428   */\n  0x24\n  add\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1437:1476  IERC721Errors.ERC721InvalidReceiver(to) */\n  tag_15\n    /* \"#utility.yul\":3291:3494   */\n  jump\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1313:1495  if (retval != IERC721Receiver.onERC721Received.selector) {... */\ntag_92:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1271:1509  returns (bytes4 retval) {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1199:1893  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\ntag_91:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":985:1909  function checkOnERC721Received(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8861:9656  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\ntag_72:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8947:8954  address */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n  dup3\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5831  _owners */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9058:9076  auth != address(0) */\n  dup4\n  and\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9054:9140  if (auth != address(0)) {... */\n  tag_100\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9129  _checkAuthorized(from, auth, tokenId) */\n  tag_100\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9109:9113  from */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9115:9119  auth */\n  dup5\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9121:9128  tokenId */\n  dup7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9108  _checkAuthorized */\n  tag_101\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9129  _checkAuthorized(from, auth, tokenId) */\n  jump\t// in\ntag_100:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9184:9202  from != address(0) */\n  dup2\n  and\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9180:9436  if (from != address(0)) {... */\n  tag_102\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9300:9348  _approve(address(0), tokenId, address(0), false) */\n  tag_103\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9317:9318  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9321:9328  tokenId */\n  dup6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9317:9318  0 */\n  dup2\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9300:9308  _approve */\n  tag_104\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9300:9348  _approve(address(0), tokenId, address(0), false) */\n  jump\t// in\ntag_103:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9406  _balances[from] */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9400  _balances */\n  0x03\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9406  _balances[from] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9411  _balances[from] -= 1 */\n  dup1\n  sload\n  not(0x00)\n  add\n  swap1\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9180:9436  if (from != address(0)) {... */\ntag_102:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9450:9466  to != address(0) */\n  dup6\n  and\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9446:9553  if (to != address(0)) {... */\n  tag_105\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9523  _balances[to] */\n  dup6\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9519  _balances */\n  0x03\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9523  _balances[to] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9528  _balances[to] += 1 */\n  dup1\n  sload\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9527:9528  1 */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9528  _balances[to] += 1 */\n  add\n  swap1\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9446:9553  if (to != address(0)) {... */\ntag_105:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9579  _owners[tokenId] */\n  0x00\n  dup5\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9570  _owners */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9579  _owners[tokenId] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9584  _owners[tokenId] = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup10\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9600:9627  Transfer(from, to, tokenId) */\n  swap2\n  mload\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9579  _owners[tokenId] */\n  dup8\n  swap4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9600:9627  Transfer(from, to, tokenId) */\n  swap2\n  dup6\n  and\n  swap2\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n  log4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9645:9649  from */\n  swap5\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8861:9656  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7105:7473  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\ntag_101:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7255  _isAuthorized(owner, spender, tokenId) */\n  tag_108\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7231:7236  owner */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7238:7245  spender */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7247:7254  tokenId */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7230  _isAuthorized */\n  tag_109\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7255  _isAuthorized(owner, spender, tokenId) */\n  jump\t// in\ntag_108:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7212:7467  if (!_isAuthorized(owner, spender, tokenId)) {... */\n  tag_58\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7275:7294  owner == address(0) */\n  dup4\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7271:7457  if (owner == address(0)) {... */\n  tag_111\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7352  ERC721NonexistentToken(tokenId) */\n  mload(0x40)\n  shl(0xe0, 0x7e273289)\n  dup2\n  mstore\n  0x04\n  dup2\n  add\n    /* \"#utility.yul\":5840:5865   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5813:5831   */\n  0x24\n  add\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7352  ERC721NonexistentToken(tokenId) */\n  tag_15\n    /* \"#utility.yul\":5694:5871   */\n  jump\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7271:7457  if (owner == address(0)) {... */\ntag_111:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7442  ERC721InsufficientApproval(spender, tokenId) */\n  mload(0x40)\n  shl(0xe0, 0x177e802f)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":6068:6100   */\n  dup4\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7442  ERC721InsufficientApproval(spender, tokenId) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6050:6101   */\n  mstore\n    /* \"#utility.yul\":6117:6135   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":6110:6144   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":6023:6041   */\n  0x44\n  add\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7442  ERC721InsufficientApproval(spender, tokenId) */\n  tag_15\n    /* \"#utility.yul\":5876:6150   */\n  jump\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14794:15456  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\ntag_104:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14954:14963  emitEvent */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14954:14985  emitEvent || auth != address(0) */\n  dup1\n  tag_118\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14967:14985  auth != address(0) */\n  dup3\n  and\n  iszero\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14954:14985  emitEvent || auth != address(0) */\ntag_118:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14950:15410  if (emitEvent || auth != address(0)) {... */\n  iszero\n  tag_119\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15001:15014  address owner */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15017:15039  _requireOwned(tokenId) */\n  tag_120\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15031:15038  tokenId */\n  dup5\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15017:15030  _requireOwned */\n  tag_121\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15017:15039  _requireOwned(tokenId) */\n  jump\t// in\ntag_120:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15001:15039  address owner = _requireOwned(tokenId) */\n  swap1\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15185  auth != address(0) */\n  dup4\n  and\n  iszero\n  dup1\n  iszero\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15202  auth != address(0) && owner != auth */\n  tag_122\n  jumpi\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15198:15202  auth */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15202  owner != auth */\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15194  owner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15202  owner != auth */\n  and\n  eq\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15202  auth != address(0) && owner != auth */\ntag_122:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15236  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n  dup1\n  iszero\n  tag_123\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n  dup1\n  dup3\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4015:4019  bool */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n  swap1\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4056  _operatorApprovals */\n  0x05\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4073  _operatorApprovals[owner][operator] */\n  swap4\n  dup8\n  and\n  dup4\n  mstore\n  swap3\n  swap1\n  mstore\n  keccak256\n  sload\n  0xff\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15206:15236  !isApprovedForAll(owner, auth) */\n  iszero\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15236  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\ntag_123:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15163:15305  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n  iszero\n  tag_126\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15263:15290  ERC721InvalidApprover(auth) */\n  mload(0x40)\n  shl(0xe0, 0xa9fbf51f)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3455:3487   */\n  dup5\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15263:15290  ERC721InvalidApprover(auth) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3437:3488   */\n  mstore\n    /* \"#utility.yul\":3410:3428   */\n  0x24\n  add\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15263:15290  ERC721InvalidApprover(auth) */\n  tag_15\n    /* \"#utility.yul\":3291:3494   */\n  jump\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15163:15305  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\ntag_126:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15323:15332  emitEvent */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15319:15400  if (emitEvent) {... */\n  iszero\n  tag_128\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15377:15384  tokenId */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15357:15385  Approval(owner, to, tokenId) */\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15366:15371  owner */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15357:15385  Approval(owner, to, tokenId) */\n  and\n  0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15319:15400  if (emitEvent) {... */\ntag_128:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14987:15410  {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14950:15410  if (emitEvent || auth != address(0)) {... */\ntag_119:\n  pop\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15444  _tokenApprovals[tokenId] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15435  _tokenApprovals */\n  0x04\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15444  _tokenApprovals[tokenId] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15449  _tokenApprovals[tokenId] = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14794:15456  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6401:6673  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\ntag_109:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6504:6508  bool */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6539:6560  spender != address(0) */\n  dup4\n  and\n  iszero\n  dup1\n  iszero\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6539:6666  spender != address(0) &&... */\n  tag_133\n  jumpi\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6586:6593  spender */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6593  owner == spender */\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6582  owner */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6593  owner == spender */\n  and\n  eq\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6629  owner == spender || isApprovedForAll(owner, spender) */\n  dup1\n  tag_132\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n  dup1\n  dup6\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4015:4019  bool */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n  swap1\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4056  _operatorApprovals */\n  0x05\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4073  _operatorApprovals[owner][operator] */\n  swap4\n  dup8\n  and\n  dup4\n  mstore\n  swap3\n  swap1\n  mstore\n  keccak256\n  sload\n  0xff\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6597:6629  isApprovedForAll(owner, spender) */\ntag_132:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6665  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n  dup1\n  tag_133\n  jumpi\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6033:6040  address */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n  dup3\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6074  _tokenApprovals */\n  0x04\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6665  _getApproved(tokenId) == spender */\n  dup5\n  dup2\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n  swap2\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6665  _getApproved(tokenId) == spender */\n  eq\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6665  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\ntag_133:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6520:6666  return... */\n  swap5\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6401:6673  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16212:16453  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\ntag_121:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16275:16282  address */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n  dup2\n  dup2\n  mstore\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5831  _owners */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16337:16425  if (owner == address(0)) {... */\n  tag_138\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16383:16414  ERC721NonexistentToken(tokenId) */\n  mload(0x40)\n  shl(0xe0, 0x7e273289)\n  dup2\n  mstore\n  0x04\n  dup2\n  add\n    /* \"#utility.yul\":5840:5865   */\n  dup5\n  swap1\n  mstore\n    /* \"#utility.yul\":5813:5831   */\n  0x24\n  add\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16383:16414  ERC721NonexistentToken(tokenId) */\n  tag_15\n    /* \"#utility.yul\":5694:5871   */\n  jump\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16337:16425  if (owner == address(0)) {... */\ntag_138:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16441:16446  owner */\n  swap3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16212:16453  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_142:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":196:574   */\ntag_3:\n    /* \"#utility.yul\":284:290   */\n  0x00\n    /* \"#utility.yul\":292:298   */\n  dup1\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":353:355   */\n  0x60\n    /* \"#utility.yul\":341:350   */\n  dup5\n    /* \"#utility.yul\":332:339   */\n  dup7\n    /* \"#utility.yul\":328:351   */\n  sub\n    /* \"#utility.yul\":324:356   */\n  slt\n    /* \"#utility.yul\":321:373   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":321:373   */\ntag_153:\n    /* \"#utility.yul\":392:432   */\n  tag_154\n    /* \"#utility.yul\":422:431   */\n  dup5\n    /* \"#utility.yul\":392:432   */\n  tag_142\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":382:432   */\n  swap3\n  pop\n    /* \"#utility.yul\":451:500   */\n  tag_155\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup6\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":451:500   */\n  tag_142\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":441:500   */\n  swap2\n  pop\n    /* \"#utility.yul\":519:568   */\n  tag_156\n    /* \"#utility.yul\":564:566   */\n  0x40\n    /* \"#utility.yul\":553:562   */\n  dup6\n    /* \"#utility.yul\":549:567   */\n  add\n    /* \"#utility.yul\":519:568   */\n  tag_142\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":509:568   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:574   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":579:706   */\ntag_143:\n    /* \"#utility.yul\":640:650   */\n  0x4e487b71\n    /* \"#utility.yul\":635:638   */\n  0xe0\n    /* \"#utility.yul\":631:651   */\n  shl\n    /* \"#utility.yul\":628:629   */\n  0x00\n    /* \"#utility.yul\":621:652   */\n  mstore\n    /* \"#utility.yul\":671:675   */\n  0x41\n    /* \"#utility.yul\":668:669   */\n  0x04\n    /* \"#utility.yul\":661:676   */\n  mstore\n    /* \"#utility.yul\":695:699   */\n  0x24\n    /* \"#utility.yul\":692:693   */\n  0x00\n    /* \"#utility.yul\":685:700   */\n  revert\n    /* \"#utility.yul\":711:1091   */\ntag_144:\n    /* \"#utility.yul\":790:791   */\n  0x01\n    /* \"#utility.yul\":786:798   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":833:845   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":854:915   */\n  tag_159\n  jumpi\n    /* \"#utility.yul\":908:912   */\n  0x7f\n    /* \"#utility.yul\":900:906   */\n  dup3\n    /* \"#utility.yul\":896:913   */\n  and\n    /* \"#utility.yul\":886:913   */\n  swap2\n  pop\n    /* \"#utility.yul\":854:915   */\ntag_159:\n    /* \"#utility.yul\":961:963   */\n  0x20\n    /* \"#utility.yul\":953:959   */\n  dup3\n    /* \"#utility.yul\":950:964   */\n  lt\n    /* \"#utility.yul\":930:948   */\n  dup2\n    /* \"#utility.yul\":927:965   */\n  sub\n    /* \"#utility.yul\":924:1085   */\n  tag_160\n  jumpi\n    /* \"#utility.yul\":1007:1017   */\n  0x4e487b71\n    /* \"#utility.yul\":1002:1005   */\n  0xe0\n    /* \"#utility.yul\":998:1018   */\n  shl\n    /* \"#utility.yul\":995:996   */\n  0x00\n    /* \"#utility.yul\":988:1019   */\n  mstore\n    /* \"#utility.yul\":1042:1046   */\n  0x22\n    /* \"#utility.yul\":1039:1040   */\n  0x04\n    /* \"#utility.yul\":1032:1047   */\n  mstore\n    /* \"#utility.yul\":1070:1074   */\n  0x24\n    /* \"#utility.yul\":1067:1068   */\n  0x00\n    /* \"#utility.yul\":1060:1075   */\n  revert\n    /* \"#utility.yul\":924:1085   */\ntag_160:\n  pop\n    /* \"#utility.yul\":711:1091   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1222:1765   */\ntag_146:\n    /* \"#utility.yul\":1324:1326   */\n  0x1f\n    /* \"#utility.yul\":1319:1322   */\n  dup3\n    /* \"#utility.yul\":1316:1327   */\n  gt\n    /* \"#utility.yul\":1313:1759   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1360:1361   */\n  0x00\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1382   */\n  0x00\n    /* \"#utility.yul\":1374:1390   */\n  mstore\n    /* \"#utility.yul\":1428:1432   */\n  0x20\n    /* \"#utility.yul\":1425:1426   */\n  0x00\n    /* \"#utility.yul\":1415:1433   */\n  keccak256\n    /* \"#utility.yul\":1498:1500   */\n  0x1f\n    /* \"#utility.yul\":1486:1496   */\n  dup6\n    /* \"#utility.yul\":1482:1501   */\n  add\n    /* \"#utility.yul\":1479:1480   */\n  0x05\n    /* \"#utility.yul\":1475:1502   */\n  shr\n    /* \"#utility.yul\":1469:1473   */\n  dup2\n    /* \"#utility.yul\":1465:1503   */\n  add\n    /* \"#utility.yul\":1534:1538   */\n  0x20\n    /* \"#utility.yul\":1522:1532   */\n  dup7\n    /* \"#utility.yul\":1519:1539   */\n  lt\n    /* \"#utility.yul\":1516:1563   */\n  iszero\n  tag_164\n  jumpi\n  pop\n    /* \"#utility.yul\":1557:1561   */\n  dup1\n    /* \"#utility.yul\":1516:1563   */\ntag_164:\n    /* \"#utility.yul\":1612:1614   */\n  0x1f\n    /* \"#utility.yul\":1607:1610   */\n  dup6\n    /* \"#utility.yul\":1603:1615   */\n  add\n    /* \"#utility.yul\":1600:1601   */\n  0x05\n    /* \"#utility.yul\":1596:1616   */\n  shr\n    /* \"#utility.yul\":1590:1594   */\n  dup3\n    /* \"#utility.yul\":1586:1617   */\n  add\n    /* \"#utility.yul\":1576:1617   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1749   */\ntag_165:\n    /* \"#utility.yul\":1685:1687   */\n  dup2\n    /* \"#utility.yul\":1678:1683   */\n  dup2\n    /* \"#utility.yul\":1675:1688   */\n  lt\n    /* \"#utility.yul\":1667:1749   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1730:1747   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1711:1712   */\n  0x01\n    /* \"#utility.yul\":1700:1713   */\n  add\n    /* \"#utility.yul\":1667:1749   */\n  jump(tag_165)\n    /* \"#utility.yul\":1941:3286   */\ntag_10:\n    /* \"#utility.yul\":2061:2071   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2083:2113   */\n  dup2\n  gt\n    /* \"#utility.yul\":2080:2136   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":2116:2134   */\n  tag_171\n  tag_143\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":2145:2242   */\n  tag_172\n    /* \"#utility.yul\":2235:2241   */\n  dup2\n    /* \"#utility.yul\":2195:2233   */\n  tag_173\n    /* \"#utility.yul\":2227:2231   */\n  dup5\n    /* \"#utility.yul\":2221:2232   */\n  sload\n    /* \"#utility.yul\":2195:2233   */\n  tag_144\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":2189:2193   */\n  dup5\n    /* \"#utility.yul\":2145:2242   */\n  tag_146\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":2297:2301   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2354:2356   */\n  0x1f\n    /* \"#utility.yul\":2343:2357   */\n  dup4\n  gt\n    /* \"#utility.yul\":2371:2372   */\n  0x01\n    /* \"#utility.yul\":2366:3029   */\n  dup2\n  eq\n  tag_175\n  jumpi\n    /* \"#utility.yul\":3073:3074   */\n  0x00\n    /* \"#utility.yul\":3090:3096   */\n  dup5\n    /* \"#utility.yul\":3087:3176   */\n  iszero\n  tag_176\n  jumpi\n  pop\n    /* \"#utility.yul\":3142:3161   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3136:3162   */\n  mload\n    /* \"#utility.yul\":3087:3176   */\ntag_176:\n  not(0x00)\n    /* \"#utility.yul\":1898:1899   */\n  0x03\n    /* \"#utility.yul\":1894:1905   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1890:1914   */\n  shr\n    /* \"#utility.yul\":1886:1915   */\n  not\n    /* \"#utility.yul\":1876:1916   */\n  and\n    /* \"#utility.yul\":1922:1923   */\n  0x01\n    /* \"#utility.yul\":1918:1929   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1873:1930   */\n  or\n    /* \"#utility.yul\":3189:3270   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2336:3280   */\n  jump(tag_92)\n    /* \"#utility.yul\":2366:3029   */\ntag_175:\n    /* \"#utility.yul\":1169:1170   */\n  0x00\n    /* \"#utility.yul\":1162:1176   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1206:1210   */\n  0x20\n    /* \"#utility.yul\":1193:1211   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2402:2422   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2520:2756   */\ntag_179:\n    /* \"#utility.yul\":2534:2541   */\n  dup3\n    /* \"#utility.yul\":2531:2532   */\n  dup2\n    /* \"#utility.yul\":2528:2542   */\n  lt\n    /* \"#utility.yul\":2520:2756   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":2623:2642   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2617:2643   */\n  mload\n    /* \"#utility.yul\":2602:2644   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2715:2742   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2683:2684   */\n  0x01\n    /* \"#utility.yul\":2671:2685   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2550:2569   */\n  dup5\n  add\n    /* \"#utility.yul\":2520:2756   */\n  jump(tag_179)\ntag_181:\n    /* \"#utility.yul\":2524:2527   */\n  pop\n    /* \"#utility.yul\":2784:2790   */\n  dup6\n    /* \"#utility.yul\":2775:2782   */\n  dup3\n    /* \"#utility.yul\":2772:2791   */\n  lt\n    /* \"#utility.yul\":2769:2970   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":2845:2864   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2839:2865   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2928:2929   */\n  0x03\n    /* \"#utility.yul\":2924:2938   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2940:2943   */\n  0xf8\n    /* \"#utility.yul\":2920:2944   */\n  and\n    /* \"#utility.yul\":2916:2953   */\n  shr\n    /* \"#utility.yul\":2912:2954   */\n  not\n    /* \"#utility.yul\":2897:2955   */\n  and\n    /* \"#utility.yul\":2882:2956   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2769:2970   */\ntag_182:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3016:3017   */\n  0x01\n    /* \"#utility.yul\":3000:3014   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2996:3018   */\n  add\n    /* \"#utility.yul\":2983:3019   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1941:3286   */\n  jump\t// out\n    /* \"#utility.yul\":3499:3626   */\ntag_148:\n    /* \"#utility.yul\":3560:3570   */\n  0x4e487b71\n    /* \"#utility.yul\":3555:3558   */\n  0xe0\n    /* \"#utility.yul\":3551:3571   */\n  shl\n    /* \"#utility.yul\":3548:3549   */\n  0x00\n    /* \"#utility.yul\":3541:3572   */\n  mstore\n    /* \"#utility.yul\":3591:3595   */\n  0x11\n    /* \"#utility.yul\":3588:3589   */\n  0x04\n    /* \"#utility.yul\":3581:3596   */\n  mstore\n    /* \"#utility.yul\":3615:3619   */\n  0x24\n    /* \"#utility.yul\":3612:3613   */\n  0x00\n    /* \"#utility.yul\":3605:3620   */\n  revert\n    /* \"#utility.yul\":3631:3766   */\ntag_27:\n    /* \"#utility.yul\":3670:3673   */\n  0x00\n    /* \"#utility.yul\":3691:3708   */\n  0x01\n  dup3\n  add\n    /* \"#utility.yul\":3688:3731   */\n  tag_187\n  jumpi\n    /* \"#utility.yul\":3711:3729   */\n  tag_187\n  tag_148\n  jump\t// in\ntag_187:\n  pop\n    /* \"#utility.yul\":3758:3759   */\n  0x01\n    /* \"#utility.yul\":3747:3760   */\n  add\n  swap1\n    /* \"#utility.yul\":3631:3766   */\n  jump\t// out\n    /* \"#utility.yul\":3771:3899   */\ntag_47:\n    /* \"#utility.yul\":3838:3847   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":3859:3870   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":3856:3893   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":3873:3891   */\n  tag_138\n  tag_148\n  jump\t// in\n    /* \"#utility.yul\":3904:4235   */\ntag_49:\n    /* \"#utility.yul\":4009:4018   */\n  0x00\n    /* \"#utility.yul\":4020:4029   */\n  dup1\n    /* \"#utility.yul\":4062:4070   */\n  dup6\n    /* \"#utility.yul\":4050:4060   */\n  dup6\n    /* \"#utility.yul\":4047:4071   */\n  gt\n    /* \"#utility.yul\":4044:4088   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":4084:4085   */\n  0x00\n    /* \"#utility.yul\":4081:4082   */\n  dup1\n    /* \"#utility.yul\":4074:4086   */\n  revert\n    /* \"#utility.yul\":4044:4088   */\ntag_192:\n    /* \"#utility.yul\":4113:4119   */\n  dup4\n    /* \"#utility.yul\":4103:4111   */\n  dup7\n    /* \"#utility.yul\":4100:4120   */\n  gt\n    /* \"#utility.yul\":4097:4137   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":4133:4134   */\n  0x00\n    /* \"#utility.yul\":4130:4131   */\n  dup1\n    /* \"#utility.yul\":4123:4135   */\n  revert\n    /* \"#utility.yul\":4097:4137   */\ntag_193:\n  pop\n  pop\n    /* \"#utility.yul\":4159:4182   */\n  dup3\n  add\n  swap4\n    /* \"#utility.yul\":4204:4229   */\n  swap2\n  swap1\n  swap3\n  sub\n  swap2\n  pop\n    /* \"#utility.yul\":3904:4235   */\n  jump\t// out\n    /* \"#utility.yul\":4240:4569   */\ntag_51:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"#utility.yul\":4361:4380   */\n  dup2\n  calldataload\n    /* \"#utility.yul\":4440:4451   */\n  dup2\n  dup2\n  and\n  swap2\n    /* \"#utility.yul\":4471:4473   */\n  0x14\n    /* \"#utility.yul\":4463:4474   */\n  dup6\n  lt\n    /* \"#utility.yul\":4460:4563   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":4550:4552   */\n  dup1\n    /* \"#utility.yul\":4544:4546   */\n  dup2\n    /* \"#utility.yul\":4537:4540   */\n  dup7\n    /* \"#utility.yul\":4533:4535   */\n  0x14\n    /* \"#utility.yul\":4529:4541   */\n  sub\n    /* \"#utility.yul\":4526:4527   */\n  0x03\n    /* \"#utility.yul\":4522:4542   */\n  shl\n    /* \"#utility.yul\":4518:4547   */\n  shl\n    /* \"#utility.yul\":4514:4516   */\n  dup4\n    /* \"#utility.yul\":4510:4548   */\n  and\n    /* \"#utility.yul\":4506:4553   */\n  and\n    /* \"#utility.yul\":4497:4553   */\n  swap3\n  pop\n    /* \"#utility.yul\":4460:4563   */\ntag_195:\n  pop\n  pop\n    /* \"#utility.yul\":4240:4569   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4574:5394   */\ntag_78:\n    /* \"#utility.yul\":4768:4772   */\n  0x00\n    /* \"#utility.yul\":4814:4815   */\n  0x01\n    /* \"#utility.yul\":4810:4811   */\n  dup1\n    /* \"#utility.yul\":4805:4808   */\n  0xa0\n    /* \"#utility.yul\":4801:4812   */\n  shl\n    /* \"#utility.yul\":4797:4816   */\n  sub\n    /* \"#utility.yul\":4855:4857   */\n  dup1\n    /* \"#utility.yul\":4847:4853   */\n  dup8\n    /* \"#utility.yul\":4843:4858   */\n  and\n    /* \"#utility.yul\":4832:4841   */\n  dup4\n    /* \"#utility.yul\":4825:4859   */\n  mstore\n    /* \"#utility.yul\":4878:4880   */\n  0x20\n    /* \"#utility.yul\":4928:4930   */\n  dup2\n    /* \"#utility.yul\":4920:4926   */\n  dup8\n    /* \"#utility.yul\":4916:4931   */\n  and\n    /* \"#utility.yul\":4911:4913   */\n  0x20\n    /* \"#utility.yul\":4900:4909   */\n  dup6\n    /* \"#utility.yul\":4896:4914   */\n  add\n    /* \"#utility.yul\":4889:4932   */\n  mstore\n    /* \"#utility.yul\":4968:4974   */\n  dup6\n    /* \"#utility.yul\":4963:4965   */\n  0x40\n    /* \"#utility.yul\":4952:4961   */\n  dup6\n    /* \"#utility.yul\":4948:4966   */\n  add\n    /* \"#utility.yul\":4941:4975   */\n  mstore\n    /* \"#utility.yul\":5011:5014   */\n  0x80\n    /* \"#utility.yul\":5006:5008   */\n  0x60\n    /* \"#utility.yul\":4995:5004   */\n  dup6\n    /* \"#utility.yul\":4991:5009   */\n  add\n    /* \"#utility.yul\":4984:5015   */\n  mstore\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5038:5051   */\n  mload\n    /* \"#utility.yul\":5024:5051   */\n  swap2\n  pop\n    /* \"#utility.yul\":5088:5094   */\n  dup2\n    /* \"#utility.yul\":5082:5085   */\n  0x80\n    /* \"#utility.yul\":5071:5080   */\n  dup6\n    /* \"#utility.yul\":5067:5086   */\n  add\n    /* \"#utility.yul\":5060:5095   */\n  mstore\n    /* \"#utility.yul\":5113:5114   */\n  0x00\n    /* \"#utility.yul\":5123:5264   */\ntag_197:\n    /* \"#utility.yul\":5137:5143   */\n  dup3\n    /* \"#utility.yul\":5134:5135   */\n  dup2\n    /* \"#utility.yul\":5131:5144   */\n  lt\n    /* \"#utility.yul\":5123:5264   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":5233:5247   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":5229:5252   */\n  dup3\n  add\n    /* \"#utility.yul\":5223:5253   */\n  mload\n    /* \"#utility.yul\":5198:5215   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":5217:5220   */\n  0xa0\n    /* \"#utility.yul\":5194:5221   */\n  add\n    /* \"#utility.yul\":5187:5254   */\n  mstore\n    /* \"#utility.yul\":5152:5162   */\n  dup2\n  add\n    /* \"#utility.yul\":5123:5264   */\n  jump(tag_197)\ntag_199:\n    /* \"#utility.yul\":5127:5130   */\n  pop\n  pop\n    /* \"#utility.yul\":5314:5315   */\n  0x00\n    /* \"#utility.yul\":5308:5311   */\n  0xa0\n    /* \"#utility.yul\":5299:5305   */\n  dup3\n    /* \"#utility.yul\":5288:5297   */\n  dup6\n    /* \"#utility.yul\":5284:5306   */\n  add\n    /* \"#utility.yul\":5280:5312   */\n  add\n    /* \"#utility.yul\":5273:5316   */\n  mstore\n    /* \"#utility.yul\":5384:5387   */\n  0xa0\n    /* \"#utility.yul\":5377:5379   */\n  0x1f\n    /* \"#utility.yul\":5373:5380   */\n  not\n    /* \"#utility.yul\":5368:5370   */\n  0x1f\n    /* \"#utility.yul\":5360:5366   */\n  dup4\n    /* \"#utility.yul\":5356:5371   */\n  add\n    /* \"#utility.yul\":5352:5381   */\n  and\n    /* \"#utility.yul\":5341:5350   */\n  dup5\n    /* \"#utility.yul\":5337:5382   */\n  add\n    /* \"#utility.yul\":5333:5388   */\n  add\n    /* \"#utility.yul\":5325:5388   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":4574:5394   */\n  swap6\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5399:5689   */\ntag_81:\n    /* \"#utility.yul\":5468:5474   */\n  0x00\n    /* \"#utility.yul\":5521:5523   */\n  0x20\n    /* \"#utility.yul\":5509:5518   */\n  dup3\n    /* \"#utility.yul\":5500:5507   */\n  dup5\n    /* \"#utility.yul\":5496:5519   */\n  sub\n    /* \"#utility.yul\":5492:5524   */\n  slt\n    /* \"#utility.yul\":5489:5541   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":5537:5538   */\n  0x00\n    /* \"#utility.yul\":5534:5535   */\n  dup1\n    /* \"#utility.yul\":5527:5539   */\n  revert\n    /* \"#utility.yul\":5489:5541   */\ntag_201:\n    /* \"#utility.yul\":5563:5579   */\n  dup2\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"#utility.yul\":5608:5640   */\n  dup2\n  and\n    /* \"#utility.yul\":5598:5641   */\n  dup2\n  eq\n    /* \"#utility.yul\":5588:5659   */\n  tag_202\n  jumpi\n    /* \"#utility.yul\":5655:5656   */\n  0x00\n    /* \"#utility.yul\":5652:5653   */\n  dup1\n    /* \"#utility.yul\":5645:5657   */\n  revert\n    /* \"#utility.yul\":5588:5659   */\ntag_202:\n    /* \"#utility.yul\":5678:5683   */\n  swap4\n    /* \"#utility.yul\":5399:5689   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5876:6150   */\ntag_149:\n    /* \"src/JBProjects.sol\":601:6073  contract JBProjects is ERC721, ERC2771Context, Ownable, IJBProjects {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x676d59fa2ffd6582a027f46129ae51e30d87ee3393d1d463bdc959072b6c2109\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/JBProjects.sol\":601:6073  contract JBProjects is ERC721, ERC2771Context, Ownable, IJBProjects {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc0715888\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe131fc0c\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7da0a877\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x23b872dd\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2407497e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x572b6c05\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06661abd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/JBProjects.sol\":2702:2918  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_3:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"src/JBProjects.sol\":2702:2918  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/JBProjects.sol\":1161:1190  uint256 public override count */\n    tag_4:\n      tag_34\n      sload(0x07)\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":738:763   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":726:728   */\n      0x20\n        /* \"#utility.yul\":711:729   */\n      add\n        /* \"src/JBProjects.sol\":1161:1190  uint256 public override count */\n      tag_32\n        /* \"#utility.yul\":592:769   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_6:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1879:1911   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1861:1912   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1849:1851   */\n      0x20\n        /* \"#utility.yul\":1834:1852   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_32\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_48\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"src/JBProjects.sol\":4948:5193  function setTokenUriResolver(IJBTokenUriResolver resolver) external override onlyOwner {... */\n    tag_9:\n      tag_48\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_48\n      tag_61\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1832:1969  function isTrustedForwarder(address forwarder) public view virtual returns (bool) {... */\n    tag_11:\n      tag_28\n      tag_64\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_64:\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1707:1724  _trustedForwarder */\n      immutable(\"0x676d59fa2ffd6582a027f46129ae51e30d87ee3393d1d463bdc959072b6c2109\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1962  forwarder == trustedForwarder() */\n      swap1\n      dup2\n      and\n      swap2\n      and\n      eq\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1832:1969  function isTrustedForwarder(address forwarder) public view virtual returns (bool) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2184:2302  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_12:\n      tag_42\n      tag_69\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_34\n      tag_73\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_48\n      tag_77\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1624:1731  function trustedForwarder() public view virtual returns (address) {... */\n    tag_15:\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1707:1724  _trustedForwarder */\n      immutable(\"0x676d59fa2ffd6582a027f46129ae51e30d87ee3393d1d463bdc959072b6c2109\")\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1624:1731  function trustedForwarder() public view virtual returns (address) {... */\n      jump(tag_42)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_42)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2517:2610  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_38\n      tag_85\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3717:3861  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_18:\n      tag_48\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4984:5217  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_19:\n      tag_48\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"src/JBProjects.sol\":5746:6071  function createFor(address owner) public override returns (uint256 projectId) {... */\n    tag_20:\n      tag_34\n      tag_96\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"src/JBProjects.sol\":3143:3534  function tokenURI(uint256 projectId) public view override returns (string memory) {... */\n    tag_21:\n      tag_38\n      tag_100\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"src/JBProjects.sol\":1271:1323  IJBTokenUriResolver public override tokenUriResolver */\n    tag_22:\n      sload(0x08)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_23:\n      tag_28\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_48\n      tag_113\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"src/JBProjects.sol\":2702:2918  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_31:\n        /* \"src/JBProjects.sol\":2804:2808  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"src/JBProjects.sol\":2827:2871  interfaceId == type(IJBProjects).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x0321f747)\n      eq\n      dup1\n        /* \"src/JBProjects.sol\":2827:2911  interfaceId == type(IJBProjects).interfaceId || super.supportsInterface(interfaceId) */\n      tag_117\n      jumpi\n      pop\n        /* \"src/JBProjects.sol\":2875:2911  super.supportsInterface(interfaceId) */\n      tag_117\n        /* \"src/JBProjects.sol\":2899:2910  interfaceId */\n      dup3\n        /* \"src/JBProjects.sol\":2875:2898  super.supportsInterface */\n      tag_118\n        /* \"src/JBProjects.sol\":2875:2911  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_117:\n        /* \"src/JBProjects.sol\":2820:2911  return interfaceId == type(IJBProjects).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"src/JBProjects.sol\":2702:2918  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2409:2422  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2441:2446  _name */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2434:2446  return _name */\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_121\n      jump\t// in\n    tag_122:\n      dup1\n      iszero\n      tag_123\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_124\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_123)\n    tag_124:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_125:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_125\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_45:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3563:3570  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3582:3604  _requireOwned(tokenId) */\n      tag_127\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3596:3603  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3582:3595  _requireOwned */\n      tag_128\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3582:3604  _requireOwned(tokenId) */\n      jump\t// in\n    tag_127:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6033:6040  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6074  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3622:3643  _getApproved(tokenId) */\n      tag_117\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5963:6090  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_51:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3393:3428  _approve(to, tokenId, _msgSender()) */\n      tag_132\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3402:3404  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3406:3413  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3415:3427  _msgSender() */\n      tag_133\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3415:3425  _msgSender */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3415:3427  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3393:3401  _approve */\n      tag_135\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3393:3428  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_132:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4236:4252  to == address(0) */\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4232:4319  if (to == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4275:4308  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4305:4306  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4275:4308  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1861:1912   */\n      mstore\n        /* \"#utility.yul\":1834:1852   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4275:4308  ERC721InvalidReceiver(address(0)) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4232:4319  if (to == address(0)) {... */\n    tag_137:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4537:4558  address previousOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4561:4595  _update(to, tokenId, _msgSender()) */\n      tag_139\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4569:4571  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4573:4580  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4582:4594  _msgSender() */\n      tag_140\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4582:4592  _msgSender */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4582:4594  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4561:4568  _update */\n      tag_141\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4561:4595  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_139:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4537:4595  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4626:4630  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4609:4630  previousOwner != from */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4609:4622  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4609:4630  previousOwner != from */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4605:4714  if (previousOwner != from) {... */\n      tag_142\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4653:4703  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6689:6704   */\n      dup1\n      dup7\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4653:4703  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6671:6705   */\n      mstore\n        /* \"#utility.yul\":6721:6739   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6714:6748   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6784:6799   */\n      dup3\n      and\n        /* \"#utility.yul\":6764:6782   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6757:6800   */\n      mstore\n        /* \"#utility.yul\":6606:6624   */\n      0x64\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4653:4703  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_138\n        /* \"#utility.yul\":6431:6806   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4605:4714  if (previousOwner != from) {... */\n    tag_142:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4222:4720  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/JBProjects.sol\":4948:5193  function setTokenUriResolver(IJBTokenUriResolver resolver) external override onlyOwner {... */\n    tag_59:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_146\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_146:\n        /* \"src/JBProjects.sol\":5080:5096  tokenUriResolver */\n      0x08\n        /* \"src/JBProjects.sol\":5080:5107  tokenUriResolver = resolver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/JBProjects.sol\":5123:5186  SetTokenUriResolver({resolver: resolver, caller: _msgSender()}) */\n      0xe7784d93cfbfa4408e19577e6cc0436f4dbb51214b70e100905dfce9def88c16\n        /* \"src/JBProjects.sol\":5172:5184  _msgSender() */\n      tag_149\n        /* \"src/JBProjects.sol\":5172:5182  _msgSender */\n      tag_134\n        /* \"src/JBProjects.sol\":5172:5184  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"src/JBProjects.sol\":5123:5186  SetTokenUriResolver({resolver: resolver, caller: _msgSender()}) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1879:1911   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1861:1912   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1849:1851   */\n      0x20\n        /* \"#utility.yul\":1834:1852   */\n      add\n        /* \"src/JBProjects.sol\":5123:5186  SetTokenUriResolver({resolver: resolver, caller: _msgSender()}) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/JBProjects.sol\":4948:5193  function setTokenUriResolver(IJBTokenUriResolver resolver) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_62:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_152\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4889:4893  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4895:4897  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4899:4906  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4888  safeTransferFrom */\n      tag_94\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_152:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2184:2302  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_70:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2247:2254  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2273:2295  _requireOwned(tokenId) */\n      tag_117\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2287:2294  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2273:2286  _requireOwned */\n      tag_128\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2273:2295  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1982:1989  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2024  owner == address(0) */\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2088  if (owner == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2047:2077  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2074:2075  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2047:2077  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1861:1912   */\n      mstore\n        /* \"#utility.yul\":1834:1852   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2047:2077  ERC721InvalidOwner(address(0)) */\n      tag_138\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2088  if (owner == address(0)) {... */\n    tag_158:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2104:2120  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2104:2113  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2104:2120  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_77:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_161\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_163\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_163:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2517:2610  function symbol() public view virtual returns (string memory) {... */\n    tag_85:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2564:2577  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2596:2603  _symbol */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2589:2603  return _symbol */\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3717:3861  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_90:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3854  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_132\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3821:3833  _msgSender() */\n      tag_175\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3821:3831  _msgSender */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3821:3833  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3835:3843  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3845:3853  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3820  _setApprovalForAll */\n      tag_176\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3854  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4984:5217  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_94:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5097:5128  transferFrom(from, to, tokenId) */\n      tag_178\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5110:5114  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5116:5118  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5120:5127  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5097:5109  transferFrom */\n      tag_55\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5097:5128  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5138:5210  ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data) */\n      tag_142\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5184  _msgSender() */\n      tag_180\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5182  _msgSender */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5184  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5186:5190  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5192:5194  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5196:5203  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5205:5209  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5138:5171  ERC721Utils.checkOnERC721Received */\n      tag_181\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5138:5210  ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data) */\n      jump\t// in\n        /* \"src/JBProjects.sol\":5746:6071  function createFor(address owner) public override returns (uint256 projectId) {... */\n    tag_97:\n        /* \"src/JBProjects.sol\":5805:5822  uint256 projectId */\n      0x00\n        /* \"src/JBProjects.sol\":5910:5915  count */\n      0x07\n      0x00\n        /* \"src/JBProjects.sol\":5908:5915  ++count */\n      dup2\n      sload\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      swap2\n      dup3\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/JBProjects.sol\":5931:5997  Create({projectId: projectId, owner: owner, caller: _msgSender()}) */\n      dup3\n      and\n        /* \"src/JBProjects.sol\":5908:5915  ++count */\n      dup2\n        /* \"src/JBProjects.sol\":5931:5997  Create({projectId: projectId, owner: owner, caller: _msgSender()}) */\n      0x365b3162cd780731fc55a794b59494d472bc2af701007f581843a70673814698\n        /* \"src/JBProjects.sol\":5983:5995  _msgSender() */\n      tag_185\n        /* \"src/JBProjects.sol\":5983:5993  _msgSender */\n      tag_134\n        /* \"src/JBProjects.sol\":5983:5995  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"src/JBProjects.sol\":5931:5997  Create({projectId: projectId, owner: owner, caller: _msgSender()}) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1879:1911   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1861:1912   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1849:1851   */\n      0x20\n        /* \"#utility.yul\":1834:1852   */\n      add\n        /* \"src/JBProjects.sol\":5931:5997  Create({projectId: projectId, owner: owner, caller: _msgSender()}) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/JBProjects.sol\":6037:6064  _safeMint(owner, projectId) */\n      tag_187\n        /* \"src/JBProjects.sol\":6047:6052  owner */\n      dup3\n        /* \"src/JBProjects.sol\":6054:6063  projectId */\n      dup3\n        /* \"src/JBProjects.sol\":6037:6046  _safeMint */\n      tag_188\n        /* \"src/JBProjects.sol\":6037:6064  _safeMint(owner, projectId) */\n      jump\t// in\n    tag_187:\n        /* \"src/JBProjects.sol\":5746:6071  function createFor(address owner) public override returns (uint256 projectId) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/JBProjects.sol\":3143:3534  function tokenURI(uint256 projectId) public view override returns (string memory) {... */\n    tag_101:\n        /* \"src/JBProjects.sol\":3311:3327  tokenUriResolver */\n      sload(0x08)\n        /* \"src/JBProjects.sol\":3210:3223  string memory */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/JBProjects.sol\":3311:3327  tokenUriResolver */\n      and\n      dup1\n        /* \"src/JBProjects.sol\":3389:3447  if (resolver == IJBTokenUriResolver(address(0))) return \"\" */\n      tag_190\n      jumpi\n      pop\n      pop\n        /* \"src/JBProjects.sol\":3438:3447  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap2\n        /* \"src/JBProjects.sol\":3143:3534  function tokenURI(uint256 projectId) public view override returns (string memory) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"src/JBProjects.sol\":3389:3447  if (resolver == IJBTokenUriResolver(address(0))) return \"\" */\n    tag_190:\n        /* \"src/JBProjects.sol\":3501:3527  resolver.getUri(projectId) */\n      mload(0x40)\n      shl(0xe1, 0x6d02a255)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":738:763   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/JBProjects.sol\":3501:3516  resolver.getUri */\n      dup3\n      and\n      swap1\n      0xda0544aa\n      swap1\n        /* \"#utility.yul\":711:729   */\n      0x24\n      add\n        /* \"src/JBProjects.sol\":3501:3527  resolver.getUri(projectId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_194\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"src/JBProjects.sol\":3494:3527  return resolver.getUri(projectId) */\n      swap4\n        /* \"src/JBProjects.sol\":3143:3534  function tokenURI(uint256 projectId) public view override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4015:4019  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4056  _operatorApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4073  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_114:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_147\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1861:1912   */\n      mstore\n        /* \"#utility.yul\":1834:1852   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_138\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_200:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_202\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_202:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1560:1860  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_118:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1662:1666  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1737  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1801  interfaceId == type(IERC721).interfaceId ||... */\n      tag_204\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1753:1801  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1801  interfaceId == type(IERC721).interfaceId ||... */\n    tag_204:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1853  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_117\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1817:1853  super.supportsInterface(interfaceId) */\n      tag_117\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16212:16453  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_128:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16275:16282  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5831  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16337:16425  if (owner == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16383:16414  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":738:763   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":711:729   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16383:16414  ERC721NonexistentToken(tokenId) */\n      tag_138\n        /* \"#utility.yul\":592:769   */\n      jump\n        /* \"src/JBProjects.sol\":4412:4558  function _msgSender() internal view override(ERC2771Context, Context) returns (address sender) {... */\n    tag_134:\n        /* \"src/JBProjects.sol\":4491:4505  address sender */\n      0x00\n        /* \"src/JBProjects.sol\":4524:4551  ERC2771Context._msgSender() */\n      tag_215\n        /* \"src/JBProjects.sol\":4524:4549  ERC2771Context._msgSender */\n      tag_216\n        /* \"src/JBProjects.sol\":4524:4551  ERC2771Context._msgSender() */\n      jump\t// in\n    tag_215:\n        /* \"src/JBProjects.sol\":4517:4551  return ERC2771Context._msgSender() */\n      swap1\n      pop\n        /* \"src/JBProjects.sol\":4412:4558  function _msgSender() internal view override(ERC2771Context, Context) returns (address sender) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14492:14612  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_135:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14572:14605  _approve(to, tokenId, auth, true) */\n      tag_152\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14581:14583  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14585:14592  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14594:14598  auth */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14600:14604  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14572:14580  _approve */\n      tag_219\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14572:14605  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8861:9656  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_141:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8947:8954  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5831  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9058:9076  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9054:9140  if (auth != address(0)) {... */\n      tag_223\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9129  _checkAuthorized(from, auth, tokenId) */\n      tag_223\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9109:9113  from */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9115:9119  auth */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9121:9128  tokenId */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9108  _checkAuthorized */\n      tag_224\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9129  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9184:9202  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9180:9436  if (from != address(0)) {... */\n      tag_225\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9300:9348  _approve(address(0), tokenId, address(0), false) */\n      tag_226\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9317:9318  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9321:9328  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9338:9339  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9342:9347  false */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9300:9308  _approve */\n      tag_219\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9300:9348  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9406  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9400  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9406  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9411  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9180:9436  if (from != address(0)) {... */\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9450:9466  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9446:9553  if (to != address(0)) {... */\n      tag_227\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9523  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9519  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9523  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9528  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9527:9528  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9528  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9446:9553  if (to != address(0)) {... */\n    tag_227:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9579  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9570  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9579  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9584  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9600:9627  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9579  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9600:9627  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9645:9649  from */\n      swap5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8861:9656  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_147:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_229\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_230\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_163\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_232\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1879:1911   */\n      swap1\n      swap2\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1861:1912   */\n      mstore\n        /* \"#utility.yul\":1834:1852   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_138\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_164:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15665:15977  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15772:15794  operator == address(0) */\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15859  if (operator == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15817:15848  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1879:1911   */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15817:15848  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1861:1912   */\n      mstore\n        /* \"#utility.yul\":1834:1852   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15817:15848  ERC721InvalidOperator(operator) */\n      tag_138\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15859  if (operator == address(0)) {... */\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15893  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15886  _operatorApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15893  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15903  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15914  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15929:15970  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15929:15970  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15929:15970  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15665:15977  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":985:1909  function checkOnERC721Received(... */\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1165:1179  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1165:1183  to.code.length > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1161:1903  if (to.code.length > 0) {... */\n      tag_255\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1203:1270  IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1203:1239  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1203:1270  IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) */\n      tag_241\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1240:1248  operator */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1250:1254  from */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1256:1263  tokenId */\n      dup8\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1265:1269  data */\n      dup8\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1203:1270  IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) */\n      0x04\n      add\n      tag_242\n      jump\t// in\n    tag_241:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_243\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_244\n      swap2\n      dup2\n      add\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      0x01\n    tag_243:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1199:1893  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\n      tag_246\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_251\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_250)\n    tag_251:\n      0x60\n      swap2\n      pop\n    tag_250:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1560:1566  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1560:1573  reason.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1577:1578  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1560:1578  reason.length == 0 */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1556:1879  if (reason.length == 0) {... */\n      tag_252\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1664:1703  IERC721Errors.ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1879:1911   */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1664:1703  IERC721Errors.ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1861:1912   */\n      mstore\n        /* \"#utility.yul\":1834:1852   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1664:1703  IERC721Errors.ERC721InvalidReceiver(to) */\n      tag_138\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1556:1879  if (reason.length == 0) {... */\n    tag_252:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1831:1837  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1825:1838  mload(reason) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1816:1822  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1812:1814  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1808:1823  add(32, reason) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1801:1839  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1199:1893  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\n    tag_246:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1317:1368  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1313:1495  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_256\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1437:1476  IERC721Errors.ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1879:1911   */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1437:1476  IERC721Errors.ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1861:1912   */\n      mstore\n        /* \"#utility.yul\":1834:1852   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1437:1476  IERC721Errors.ERC721InvalidReceiver(to) */\n      tag_138\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1313:1495  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_256:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1271:1509  returns (bytes4 retval) {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1199:1893  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\n    tag_255:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":985:1909  function checkOnERC721Received(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10656:10756  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_188:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10723:10749  _safeMint(to, tokenId, \"\") */\n      tag_132\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10733:10735  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10737:10744  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10723:10749  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10723:10732  _safeMint */\n      tag_260\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10723:10749  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2206:2635  function _msgSender() internal view virtual override returns (address) {... */\n    tag_216:\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2268:2275  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2312:2320  msg.data */\n      calldatasize\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":3483:3485  20 */\n      0x14\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2422:2432  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1707:1724  _trustedForwarder */\n      immutable(\"0x676d59fa2ffd6582a027f46129ae51e30d87ee3393d1d463bdc959072b6c2109\")\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1962  forwarder == trustedForwarder() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2474  isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength */\n      dup1\n      iszero\n      tag_267\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2455:2474  contextSuffixLength */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2437:2451  calldataLength */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2437:2474  calldataLength >= contextSuffixLength */\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2474  isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength */\n    tag_267:\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2399:2629  if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2513:2521  msg.data */\n      0x00\n      calldatasize\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2522:2558  calldataLength - contextSuffixLength */\n      tag_269\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2539:2558  contextSuffixLength */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2522:2536  calldataLength */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2522:2558  calldataLength - contextSuffixLength */\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2513:2560  msg.data[calldataLength - contextSuffixLength:] */\n      tag_271\n      swap3\n      dup3\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2505:2561  bytes20(msg.data[calldataLength - contextSuffixLength:]) */\n      tag_273\n      swap2\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2497:2562  address(bytes20(msg.data[calldataLength - contextSuffixLength:])) */\n      0x60\n      shr\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2490:2562  return address(bytes20(msg.data[calldataLength - contextSuffixLength:])) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2206:2635  function _msgSender() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2399:2629  if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {... */\n    tag_268:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2593:2618  return super._msgSender() */\n      swap3\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol\":2206:2635  function _msgSender() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14794:15456  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_219:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14954:14963  emitEvent */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14954:14985  emitEvent || auth != address(0) */\n      dup1\n      tag_279\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14967:14985  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14954:14985  emitEvent || auth != address(0) */\n    tag_279:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14950:15410  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15001:15014  address owner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15017:15039  _requireOwned(tokenId) */\n      tag_281\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15031:15038  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15017:15030  _requireOwned */\n      tag_128\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15017:15039  _requireOwned(tokenId) */\n      jump\t// in\n    tag_281:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15001:15039  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15185  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15202  auth != address(0) && owner != auth */\n      tag_282\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15198:15202  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15202  owner != auth */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15194  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15202  owner != auth */\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15202  auth != address(0) && owner != auth */\n    tag_282:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15236  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_283\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15207:15236  isApprovedForAll(owner, auth) */\n      tag_284\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15224:15229  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15231:15235  auth */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15207:15223  isApprovedForAll */\n      tag_110\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15207:15236  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_284:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15206:15236  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15236  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_283:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15163:15305  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15263:15290  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1879:1911   */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15263:15290  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1861:1912   */\n      mstore\n        /* \"#utility.yul\":1834:1852   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15263:15290  ERC721InvalidApprover(auth) */\n      tag_138\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15163:15305  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_285:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15323:15332  emitEvent */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15319:15400  if (emitEvent) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15377:15384  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15357:15385  Approval(owner, to, tokenId) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15366:15371  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15357:15385  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15319:15400  if (emitEvent) {... */\n    tag_287:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14987:15410  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14950:15410  if (emitEvent || auth != address(0)) {... */\n    tag_280:\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15444  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15435  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15444  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15449  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14794:15456  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7105:7473  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_224:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7255  _isAuthorized(owner, spender, tokenId) */\n      tag_289\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7231:7236  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7238:7245  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7247:7254  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7230  _isAuthorized */\n      tag_290\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7255  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_289:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7212:7467  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_152\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7275:7294  owner == address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7271:7457  if (owner == address(0)) {... */\n      tag_292\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7352  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":738:763   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":711:729   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7352  ERC721NonexistentToken(tokenId) */\n      tag_138\n        /* \"#utility.yul\":592:769   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7271:7457  if (owner == address(0)) {... */\n    tag_292:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7442  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9487:9519   */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7442  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9469:9520   */\n      mstore\n        /* \"#utility.yul\":9536:9554   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9529:9563   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":9442:9460   */\n      0x44\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7442  ERC721InsufficientApproval(spender, tokenId) */\n      tag_138\n        /* \"#utility.yul\":9295:9569   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10977:11184  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_260:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11071:11089  _mint(to, tokenId) */\n      tag_298\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11077:11079  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11081:11088  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11071:11076  _mint */\n      tag_299\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11071:11089  _mint(to, tokenId) */\n      jump\t// in\n    tag_298:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11099:11177  ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data) */\n      tag_152\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11133:11145  _msgSender() */\n      tag_301\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11133:11143  _msgSender */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11133:11145  _msgSender() */\n      jump\t// in\n    tag_301:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11155:11156  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11159:11161  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11163:11170  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11172:11176  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11099:11132  ERC721Utils.checkOnERC721Received */\n      tag_181\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11099:11177  ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6401:6673  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_290:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6504:6508  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6539:6560  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6539:6666  spender != address(0) &&... */\n      tag_310\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6586:6593  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6593  owner == spender */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6582  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6593  owner == spender */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6629  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_309\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6597:6629  isApprovedForAll(owner, spender) */\n      tag_309\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6614:6619  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6597:6613  isApprovedForAll */\n      tag_110\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6597:6629  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_309:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6665  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_310\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6033:6040  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6074  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6665  _getApproved(tokenId) == spender */\n      dup5\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      swap2\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6665  _getApproved(tokenId) == spender */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6665  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_310:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6520:6666  return... */\n      swap5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6401:6673  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9978:10305  function _mint(address to, uint256 tokenId) internal {... */\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10045:10061  to == address(0) */\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10041:10128  if (to == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10084:10117  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10115  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10084:10117  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1861:1912   */\n      mstore\n        /* \"#utility.yul\":1834:1852   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10084:10117  ERC721InvalidReceiver(address(0)) */\n      tag_138\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10041:10128  if (to == address(0)) {... */\n    tag_313:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10137:10158  address previousOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10161:10193  _update(to, tokenId, address(0)) */\n      tag_315\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10169:10171  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10173:10180  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10190:10191  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10161:10168  _update */\n      tag_141\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10161:10193  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_315:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10137:10193  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10207:10234  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10203:10299  if (previousOwner != address(0)) {... */\n      tag_152\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10257:10288  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10285:10286  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10257:10288  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1861:1912   */\n      mstore\n        /* \"#utility.yul\":1834:1852   */\n      0x24\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10257:10288  ERC721InvalidSender(address(0)) */\n      tag_138\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"#utility.yul\":14:145   */\n    tag_319:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_30:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_331:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_194\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":774:1024   */\n    tag_320:\n        /* \"#utility.yul\":859:860   */\n      0x00\n        /* \"#utility.yul\":869:982   */\n    tag_336:\n        /* \"#utility.yul\":883:889   */\n      dup4\n        /* \"#utility.yul\":880:881   */\n      dup2\n        /* \"#utility.yul\":877:890   */\n      lt\n        /* \"#utility.yul\":869:982   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":959:970   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":953:971   */\n      mload\n        /* \"#utility.yul\":940:951   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":933:972   */\n      mstore\n        /* \"#utility.yul\":905:907   */\n      0x20\n        /* \"#utility.yul\":898:908   */\n      add\n        /* \"#utility.yul\":869:982   */\n      jump(tag_336)\n    tag_338:\n      pop\n      pop\n        /* \"#utility.yul\":1016:1017   */\n      0x00\n        /* \"#utility.yul\":998:1014   */\n      swap2\n      add\n        /* \"#utility.yul\":991:1018   */\n      mstore\n        /* \"#utility.yul\":774:1024   */\n      jump\t// out\n        /* \"#utility.yul\":1029:1300   */\n    tag_321:\n        /* \"#utility.yul\":1071:1074   */\n      0x00\n        /* \"#utility.yul\":1109:1114   */\n      dup2\n        /* \"#utility.yul\":1103:1115   */\n      mload\n        /* \"#utility.yul\":1136:1142   */\n      dup1\n        /* \"#utility.yul\":1131:1134   */\n      dup5\n        /* \"#utility.yul\":1124:1143   */\n      mstore\n        /* \"#utility.yul\":1152:1228   */\n      tag_340\n        /* \"#utility.yul\":1221:1227   */\n      dup2\n        /* \"#utility.yul\":1214:1218   */\n      0x20\n        /* \"#utility.yul\":1209:1212   */\n      dup7\n        /* \"#utility.yul\":1205:1219   */\n      add\n        /* \"#utility.yul\":1198:1202   */\n      0x20\n        /* \"#utility.yul\":1191:1196   */\n      dup7\n        /* \"#utility.yul\":1187:1203   */\n      add\n        /* \"#utility.yul\":1152:1228   */\n      tag_320\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1282:1284   */\n      0x1f\n        /* \"#utility.yul\":1261:1276   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1257:1286   */\n      and\n        /* \"#utility.yul\":1248:1287   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1289:1293   */\n      0x20\n        /* \"#utility.yul\":1244:1294   */\n      add\n      swap3\n        /* \"#utility.yul\":1029:1300   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1305:1525   */\n    tag_41:\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup2\n        /* \"#utility.yul\":1436:1457   */\n      mstore\n        /* \"#utility.yul\":1417:1421   */\n      0x00\n        /* \"#utility.yul\":1474:1519   */\n      tag_194\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1504:1513   */\n      dup4\n        /* \"#utility.yul\":1500:1518   */\n      add\n        /* \"#utility.yul\":1492:1498   */\n      dup5\n        /* \"#utility.yul\":1474:1519   */\n      tag_321\n      jump\t// in\n        /* \"#utility.yul\":1530:1710   */\n    tag_44:\n        /* \"#utility.yul\":1589:1595   */\n      0x00\n        /* \"#utility.yul\":1642:1644   */\n      0x20\n        /* \"#utility.yul\":1630:1639   */\n      dup3\n        /* \"#utility.yul\":1621:1628   */\n      dup5\n        /* \"#utility.yul\":1617:1640   */\n      sub\n        /* \"#utility.yul\":1613:1645   */\n      slt\n        /* \"#utility.yul\":1610:1662   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":1658:1659   */\n      0x00\n        /* \"#utility.yul\":1655:1656   */\n      dup1\n        /* \"#utility.yul\":1648:1660   */\n      revert\n        /* \"#utility.yul\":1610:1662   */\n    tag_344:\n      pop\n        /* \"#utility.yul\":1681:1704   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1530:1710   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1923:2054   */\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1998:2029   */\n      dup2\n      and\n        /* \"#utility.yul\":1988:2030   */\n      dup2\n      eq\n        /* \"#utility.yul\":1978:2048   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2044:2045   */\n      0x00\n        /* \"#utility.yul\":2041:2042   */\n      dup1\n        /* \"#utility.yul\":2034:2046   */\n      revert\n        /* \"#utility.yul\":2059:2374   */\n    tag_50:\n        /* \"#utility.yul\":2127:2133   */\n      0x00\n        /* \"#utility.yul\":2135:2141   */\n      dup1\n        /* \"#utility.yul\":2188:2190   */\n      0x40\n        /* \"#utility.yul\":2176:2185   */\n      dup4\n        /* \"#utility.yul\":2167:2174   */\n      dup6\n        /* \"#utility.yul\":2163:2186   */\n      sub\n        /* \"#utility.yul\":2159:2191   */\n      slt\n        /* \"#utility.yul\":2156:2208   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":2204:2205   */\n      0x00\n        /* \"#utility.yul\":2201:2202   */\n      dup1\n        /* \"#utility.yul\":2194:2206   */\n      revert\n        /* \"#utility.yul\":2156:2208   */\n    tag_349:\n        /* \"#utility.yul\":2243:2252   */\n      dup3\n        /* \"#utility.yul\":2230:2253   */\n      calldataload\n        /* \"#utility.yul\":2262:2293   */\n      tag_350\n        /* \"#utility.yul\":2287:2292   */\n      dup2\n        /* \"#utility.yul\":2262:2293   */\n      tag_322\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2312:2317   */\n      swap5\n        /* \"#utility.yul\":2364:2366   */\n      0x20\n        /* \"#utility.yul\":2349:2367   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2336:2368   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2059:2374   */\n      jump\t// out\n        /* \"#utility.yul\":2379:2835   */\n    tag_54:\n        /* \"#utility.yul\":2456:2462   */\n      0x00\n        /* \"#utility.yul\":2464:2470   */\n      dup1\n        /* \"#utility.yul\":2472:2478   */\n      0x00\n        /* \"#utility.yul\":2525:2527   */\n      0x60\n        /* \"#utility.yul\":2513:2522   */\n      dup5\n        /* \"#utility.yul\":2504:2511   */\n      dup7\n        /* \"#utility.yul\":2500:2523   */\n      sub\n        /* \"#utility.yul\":2496:2528   */\n      slt\n        /* \"#utility.yul\":2493:2545   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2541:2542   */\n      0x00\n        /* \"#utility.yul\":2538:2539   */\n      dup1\n        /* \"#utility.yul\":2531:2543   */\n      revert\n        /* \"#utility.yul\":2493:2545   */\n    tag_352:\n        /* \"#utility.yul\":2580:2589   */\n      dup4\n        /* \"#utility.yul\":2567:2590   */\n      calldataload\n        /* \"#utility.yul\":2599:2630   */\n      tag_353\n        /* \"#utility.yul\":2624:2629   */\n      dup2\n        /* \"#utility.yul\":2599:2630   */\n      tag_322\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2649:2654   */\n      swap3\n      pop\n        /* \"#utility.yul\":2706:2708   */\n      0x20\n        /* \"#utility.yul\":2691:2709   */\n      dup5\n      add\n        /* \"#utility.yul\":2678:2710   */\n      calldataload\n        /* \"#utility.yul\":2719:2752   */\n      tag_354\n        /* \"#utility.yul\":2678:2710   */\n      dup2\n        /* \"#utility.yul\":2719:2752   */\n      tag_322\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2379:2835   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2771:2778   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2825:2827   */\n      0x40\n        /* \"#utility.yul\":2810:2828   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2797:2829   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2379:2835   */\n      jump\t// out\n        /* \"#utility.yul\":2840:3115   */\n    tag_58:\n        /* \"#utility.yul\":2927:2933   */\n      0x00\n        /* \"#utility.yul\":2980:2982   */\n      0x20\n        /* \"#utility.yul\":2968:2977   */\n      dup3\n        /* \"#utility.yul\":2959:2966   */\n      dup5\n        /* \"#utility.yul\":2955:2978   */\n      sub\n        /* \"#utility.yul\":2951:2983   */\n      slt\n        /* \"#utility.yul\":2948:3000   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":2996:2997   */\n      0x00\n        /* \"#utility.yul\":2993:2994   */\n      dup1\n        /* \"#utility.yul\":2986:2998   */\n      revert\n        /* \"#utility.yul\":2948:3000   */\n    tag_356:\n        /* \"#utility.yul\":3035:3044   */\n      dup2\n        /* \"#utility.yul\":3022:3045   */\n      calldataload\n        /* \"#utility.yul\":3054:3085   */\n      tag_194\n        /* \"#utility.yul\":3079:3084   */\n      dup2\n        /* \"#utility.yul\":3054:3085   */\n      tag_322\n      jump\t// in\n        /* \"#utility.yul\":3372:3788   */\n    tag_89:\n        /* \"#utility.yul\":3437:3443   */\n      0x00\n        /* \"#utility.yul\":3445:3451   */\n      dup1\n        /* \"#utility.yul\":3498:3500   */\n      0x40\n        /* \"#utility.yul\":3486:3495   */\n      dup4\n        /* \"#utility.yul\":3477:3484   */\n      dup6\n        /* \"#utility.yul\":3473:3496   */\n      sub\n        /* \"#utility.yul\":3469:3501   */\n      slt\n        /* \"#utility.yul\":3466:3518   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3466:3518   */\n    tag_362:\n        /* \"#utility.yul\":3553:3562   */\n      dup3\n        /* \"#utility.yul\":3540:3563   */\n      calldataload\n        /* \"#utility.yul\":3572:3603   */\n      tag_363\n        /* \"#utility.yul\":3597:3602   */\n      dup2\n        /* \"#utility.yul\":3572:3603   */\n      tag_322\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3622:3627   */\n      swap2\n      pop\n        /* \"#utility.yul\":3679:3681   */\n      0x20\n        /* \"#utility.yul\":3664:3682   */\n      dup4\n      add\n        /* \"#utility.yul\":3651:3683   */\n      calldataload\n        /* \"#utility.yul\":3721:3736   */\n      dup1\n      iszero\n        /* \"#utility.yul\":3714:3737   */\n      iszero\n        /* \"#utility.yul\":3702:3738   */\n      dup2\n      eq\n        /* \"#utility.yul\":3692:3756   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":3752:3753   */\n      0x00\n        /* \"#utility.yul\":3749:3750   */\n      dup1\n        /* \"#utility.yul\":3742:3754   */\n      revert\n        /* \"#utility.yul\":3692:3756   */\n    tag_364:\n        /* \"#utility.yul\":3775:3782   */\n      dup1\n        /* \"#utility.yul\":3765:3782   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3372:3788   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3793:3920   */\n    tag_323:\n        /* \"#utility.yul\":3854:3864   */\n      0x4e487b71\n        /* \"#utility.yul\":3849:3852   */\n      0xe0\n        /* \"#utility.yul\":3845:3865   */\n      shl\n        /* \"#utility.yul\":3842:3843   */\n      0x00\n        /* \"#utility.yul\":3835:3866   */\n      mstore\n        /* \"#utility.yul\":3885:3889   */\n      0x41\n        /* \"#utility.yul\":3882:3883   */\n      0x04\n        /* \"#utility.yul\":3875:3890   */\n      mstore\n        /* \"#utility.yul\":3909:3913   */\n      0x24\n        /* \"#utility.yul\":3906:3907   */\n      0x00\n        /* \"#utility.yul\":3899:3914   */\n      revert\n        /* \"#utility.yul\":3925:4200   */\n    tag_324:\n        /* \"#utility.yul\":3996:3998   */\n      0x40\n        /* \"#utility.yul\":3990:3999   */\n      mload\n        /* \"#utility.yul\":4061:4063   */\n      0x1f\n        /* \"#utility.yul\":4042:4055   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4038:4065   */\n      and\n        /* \"#utility.yul\":4026:4066   */\n      dup2\n      add\n        /* \"#utility.yul\":4096:4114   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4081:4115   */\n      dup2\n      gt\n        /* \"#utility.yul\":4117:4139   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":4078:4140   */\n      or\n        /* \"#utility.yul\":4075:4163   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":4143:4161   */\n      tag_368\n      tag_323\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4179:4181   */\n      0x40\n        /* \"#utility.yul\":4172:4194   */\n      mstore\n        /* \"#utility.yul\":3925:4200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4205:4391   */\n    tag_325:\n        /* \"#utility.yul\":4253:4257   */\n      0x00\n        /* \"#utility.yul\":4286:4304   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4278:4284   */\n      dup3\n        /* \"#utility.yul\":4275:4305   */\n      gt\n        /* \"#utility.yul\":4272:4328   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":4308:4326   */\n      tag_371\n      tag_323\n      jump\t// in\n    tag_371:\n      pop\n        /* \"#utility.yul\":4374:4376   */\n      0x1f\n        /* \"#utility.yul\":4353:4368   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4349:4378   */\n      and\n        /* \"#utility.yul\":4380:4384   */\n      0x20\n        /* \"#utility.yul\":4345:4385   */\n      add\n      swap1\n        /* \"#utility.yul\":4205:4391   */\n      jump\t// out\n        /* \"#utility.yul\":4396:5412   */\n    tag_93:\n        /* \"#utility.yul\":4491:4497   */\n      0x00\n        /* \"#utility.yul\":4499:4505   */\n      dup1\n        /* \"#utility.yul\":4507:4513   */\n      0x00\n        /* \"#utility.yul\":4515:4521   */\n      dup1\n        /* \"#utility.yul\":4568:4571   */\n      0x80\n        /* \"#utility.yul\":4556:4565   */\n      dup6\n        /* \"#utility.yul\":4547:4554   */\n      dup8\n        /* \"#utility.yul\":4543:4566   */\n      sub\n        /* \"#utility.yul\":4539:4572   */\n      slt\n        /* \"#utility.yul\":4536:4589   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":4585:4586   */\n      0x00\n        /* \"#utility.yul\":4582:4583   */\n      dup1\n        /* \"#utility.yul\":4575:4587   */\n      revert\n        /* \"#utility.yul\":4536:4589   */\n    tag_373:\n        /* \"#utility.yul\":4624:4633   */\n      dup5\n        /* \"#utility.yul\":4611:4634   */\n      calldataload\n        /* \"#utility.yul\":4643:4674   */\n      tag_374\n        /* \"#utility.yul\":4668:4673   */\n      dup2\n        /* \"#utility.yul\":4643:4674   */\n      tag_322\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4693:4698   */\n      swap4\n      pop\n        /* \"#utility.yul\":4750:4752   */\n      0x20\n        /* \"#utility.yul\":4735:4753   */\n      dup6\n      add\n        /* \"#utility.yul\":4722:4754   */\n      calldataload\n        /* \"#utility.yul\":4763:4796   */\n      tag_375\n        /* \"#utility.yul\":4722:4754   */\n      dup2\n        /* \"#utility.yul\":4763:4796   */\n      tag_322\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4815:4822   */\n      swap3\n      pop\n        /* \"#utility.yul\":4869:4871   */\n      0x40\n        /* \"#utility.yul\":4854:4872   */\n      dup6\n      add\n        /* \"#utility.yul\":4841:4873   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4924:4926   */\n      0x60\n        /* \"#utility.yul\":4909:4927   */\n      dup6\n      add\n        /* \"#utility.yul\":4896:4928   */\n      calldataload\n        /* \"#utility.yul\":4951:4969   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4940:4970   */\n      dup2\n      gt\n        /* \"#utility.yul\":4937:4987   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":4983:4984   */\n      0x00\n        /* \"#utility.yul\":4980:4981   */\n      dup1\n        /* \"#utility.yul\":4973:4985   */\n      revert\n        /* \"#utility.yul\":4937:4987   */\n    tag_376:\n        /* \"#utility.yul\":5006:5028   */\n      dup6\n      add\n        /* \"#utility.yul\":5059:5063   */\n      0x1f\n        /* \"#utility.yul\":5051:5064   */\n      dup2\n      add\n        /* \"#utility.yul\":5047:5074   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5037:5092   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":5088:5089   */\n      0x00\n        /* \"#utility.yul\":5085:5086   */\n      dup1\n        /* \"#utility.yul\":5078:5090   */\n      revert\n        /* \"#utility.yul\":5037:5092   */\n    tag_377:\n        /* \"#utility.yul\":5124:5126   */\n      dup1\n        /* \"#utility.yul\":5111:5127   */\n      calldataload\n        /* \"#utility.yul\":5149:5197   */\n      tag_378\n        /* \"#utility.yul\":5165:5196   */\n      tag_379\n        /* \"#utility.yul\":5193:5195   */\n      dup3\n        /* \"#utility.yul\":5165:5196   */\n      tag_325\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5149:5197   */\n      tag_324\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5220:5222   */\n      dup2\n        /* \"#utility.yul\":5213:5218   */\n      dup2\n        /* \"#utility.yul\":5206:5223   */\n      mstore\n        /* \"#utility.yul\":5260:5267   */\n      dup9\n        /* \"#utility.yul\":5255:5257   */\n      0x20\n        /* \"#utility.yul\":5250:5252   */\n      dup4\n        /* \"#utility.yul\":5246:5248   */\n      dup6\n        /* \"#utility.yul\":5242:5253   */\n      add\n        /* \"#utility.yul\":5238:5258   */\n      add\n        /* \"#utility.yul\":5235:5268   */\n      gt\n        /* \"#utility.yul\":5232:5285   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":5281:5282   */\n      0x00\n        /* \"#utility.yul\":5278:5279   */\n      dup1\n        /* \"#utility.yul\":5271:5283   */\n      revert\n        /* \"#utility.yul\":5232:5285   */\n    tag_380:\n        /* \"#utility.yul\":5336:5338   */\n      dup2\n        /* \"#utility.yul\":5331:5333   */\n      0x20\n        /* \"#utility.yul\":5327:5329   */\n      dup5\n        /* \"#utility.yul\":5323:5334   */\n      add\n        /* \"#utility.yul\":5318:5320   */\n      0x20\n        /* \"#utility.yul\":5311:5316   */\n      dup4\n        /* \"#utility.yul\":5307:5321   */\n      add\n        /* \"#utility.yul\":5294:5339   */\n      calldatacopy\n        /* \"#utility.yul\":5380:5381   */\n      0x00\n        /* \"#utility.yul\":5375:5377   */\n      0x20\n        /* \"#utility.yul\":5370:5372   */\n      dup4\n        /* \"#utility.yul\":5363:5368   */\n      dup4\n        /* \"#utility.yul\":5359:5373   */\n      add\n        /* \"#utility.yul\":5355:5378   */\n      add\n        /* \"#utility.yul\":5348:5382   */\n      mstore\n        /* \"#utility.yul\":5401:5406   */\n      dup1\n        /* \"#utility.yul\":5391:5406   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4396:5412   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5653:6041   */\n    tag_109:\n        /* \"#utility.yul\":5721:5727   */\n      0x00\n        /* \"#utility.yul\":5729:5735   */\n      dup1\n        /* \"#utility.yul\":5782:5784   */\n      0x40\n        /* \"#utility.yul\":5770:5779   */\n      dup4\n        /* \"#utility.yul\":5761:5768   */\n      dup6\n        /* \"#utility.yul\":5757:5780   */\n      sub\n        /* \"#utility.yul\":5753:5785   */\n      slt\n        /* \"#utility.yul\":5750:5802   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":5798:5799   */\n      0x00\n        /* \"#utility.yul\":5795:5796   */\n      dup1\n        /* \"#utility.yul\":5788:5800   */\n      revert\n        /* \"#utility.yul\":5750:5802   */\n    tag_383:\n        /* \"#utility.yul\":5837:5846   */\n      dup3\n        /* \"#utility.yul\":5824:5847   */\n      calldataload\n        /* \"#utility.yul\":5856:5887   */\n      tag_384\n        /* \"#utility.yul\":5881:5886   */\n      dup2\n        /* \"#utility.yul\":5856:5887   */\n      tag_322\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5906:5911   */\n      swap2\n      pop\n        /* \"#utility.yul\":5963:5965   */\n      0x20\n        /* \"#utility.yul\":5948:5966   */\n      dup4\n      add\n        /* \"#utility.yul\":5935:5967   */\n      calldataload\n        /* \"#utility.yul\":5976:6009   */\n      tag_364\n        /* \"#utility.yul\":5935:5967   */\n      dup2\n        /* \"#utility.yul\":5976:6009   */\n      tag_322\n      jump\t// in\n        /* \"#utility.yul\":6046:6426   */\n    tag_121:\n        /* \"#utility.yul\":6125:6126   */\n      0x01\n        /* \"#utility.yul\":6121:6133   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6168:6180   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6189:6250   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":6243:6247   */\n      0x7f\n        /* \"#utility.yul\":6235:6241   */\n      dup3\n        /* \"#utility.yul\":6231:6248   */\n      and\n        /* \"#utility.yul\":6221:6248   */\n      swap2\n      pop\n        /* \"#utility.yul\":6189:6250   */\n    tag_387:\n        /* \"#utility.yul\":6296:6298   */\n      0x20\n        /* \"#utility.yul\":6288:6294   */\n      dup3\n        /* \"#utility.yul\":6285:6299   */\n      lt\n        /* \"#utility.yul\":6265:6283   */\n      dup2\n        /* \"#utility.yul\":6262:6300   */\n      sub\n        /* \"#utility.yul\":6259:6420   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":6342:6352   */\n      0x4e487b71\n        /* \"#utility.yul\":6337:6340   */\n      0xe0\n        /* \"#utility.yul\":6333:6353   */\n      shl\n        /* \"#utility.yul\":6330:6331   */\n      0x00\n        /* \"#utility.yul\":6323:6354   */\n      mstore\n        /* \"#utility.yul\":6377:6381   */\n      0x22\n        /* \"#utility.yul\":6374:6375   */\n      0x04\n        /* \"#utility.yul\":6367:6382   */\n      mstore\n        /* \"#utility.yul\":6405:6409   */\n      0x24\n        /* \"#utility.yul\":6402:6403   */\n      0x00\n        /* \"#utility.yul\":6395:6410   */\n      revert\n        /* \"#utility.yul\":6259:6420   */\n    tag_388:\n      pop\n        /* \"#utility.yul\":6046:6426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:6938   */\n    tag_326:\n        /* \"#utility.yul\":6872:6882   */\n      0x4e487b71\n        /* \"#utility.yul\":6867:6870   */\n      0xe0\n        /* \"#utility.yul\":6863:6883   */\n      shl\n        /* \"#utility.yul\":6860:6861   */\n      0x00\n        /* \"#utility.yul\":6853:6884   */\n      mstore\n        /* \"#utility.yul\":6903:6907   */\n      0x11\n        /* \"#utility.yul\":6900:6901   */\n      0x04\n        /* \"#utility.yul\":6893:6908   */\n      mstore\n        /* \"#utility.yul\":6927:6931   */\n      0x24\n        /* \"#utility.yul\":6924:6925   */\n      0x00\n        /* \"#utility.yul\":6917:6932   */\n      revert\n        /* \"#utility.yul\":6943:7078   */\n    tag_184:\n        /* \"#utility.yul\":6982:6985   */\n      0x00\n        /* \"#utility.yul\":7003:7020   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7000:7043   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":7023:7041   */\n      tag_393\n      tag_326\n      jump\t// in\n    tag_393:\n      pop\n        /* \"#utility.yul\":7070:7071   */\n      0x01\n        /* \"#utility.yul\":7059:7072   */\n      add\n      swap1\n        /* \"#utility.yul\":6943:7078   */\n      jump\t// out\n        /* \"#utility.yul\":7083:7731   */\n    tag_195:\n        /* \"#utility.yul\":7163:7169   */\n      0x00\n        /* \"#utility.yul\":7216:7218   */\n      0x20\n        /* \"#utility.yul\":7204:7213   */\n      dup3\n        /* \"#utility.yul\":7195:7202   */\n      dup5\n        /* \"#utility.yul\":7191:7214   */\n      sub\n        /* \"#utility.yul\":7187:7219   */\n      slt\n        /* \"#utility.yul\":7184:7236   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":7232:7233   */\n      0x00\n        /* \"#utility.yul\":7229:7230   */\n      dup1\n        /* \"#utility.yul\":7222:7234   */\n      revert\n        /* \"#utility.yul\":7184:7236   */\n    tag_395:\n        /* \"#utility.yul\":7265:7274   */\n      dup2\n        /* \"#utility.yul\":7259:7275   */\n      mload\n        /* \"#utility.yul\":7298:7316   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7290:7296   */\n      dup2\n        /* \"#utility.yul\":7287:7317   */\n      gt\n        /* \"#utility.yul\":7284:7334   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":7330:7331   */\n      0x00\n        /* \"#utility.yul\":7327:7328   */\n      dup1\n        /* \"#utility.yul\":7320:7332   */\n      revert\n        /* \"#utility.yul\":7284:7334   */\n    tag_396:\n        /* \"#utility.yul\":7353:7375   */\n      dup3\n      add\n        /* \"#utility.yul\":7406:7410   */\n      0x1f\n        /* \"#utility.yul\":7398:7411   */\n      dup2\n      add\n        /* \"#utility.yul\":7394:7421   */\n      dup5\n      sgt\n        /* \"#utility.yul\":7384:7439   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":7435:7436   */\n      0x00\n        /* \"#utility.yul\":7432:7433   */\n      dup1\n        /* \"#utility.yul\":7425:7437   */\n      revert\n        /* \"#utility.yul\":7384:7439   */\n    tag_397:\n        /* \"#utility.yul\":7464:7466   */\n      dup1\n        /* \"#utility.yul\":7458:7467   */\n      mload\n        /* \"#utility.yul\":7489:7537   */\n      tag_398\n        /* \"#utility.yul\":7505:7536   */\n      tag_379\n        /* \"#utility.yul\":7533:7535   */\n      dup3\n        /* \"#utility.yul\":7505:7536   */\n      tag_325\n      jump\t// in\n        /* \"#utility.yul\":7489:7537   */\n    tag_398:\n        /* \"#utility.yul\":7560:7562   */\n      dup2\n        /* \"#utility.yul\":7553:7558   */\n      dup2\n        /* \"#utility.yul\":7546:7563   */\n      mstore\n        /* \"#utility.yul\":7600:7607   */\n      dup6\n        /* \"#utility.yul\":7595:7597   */\n      0x20\n        /* \"#utility.yul\":7590:7592   */\n      dup4\n        /* \"#utility.yul\":7586:7588   */\n      dup6\n        /* \"#utility.yul\":7582:7593   */\n      add\n        /* \"#utility.yul\":7578:7598   */\n      add\n        /* \"#utility.yul\":7575:7608   */\n      gt\n        /* \"#utility.yul\":7572:7625   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":7621:7622   */\n      0x00\n        /* \"#utility.yul\":7618:7619   */\n      dup1\n        /* \"#utility.yul\":7611:7623   */\n      revert\n        /* \"#utility.yul\":7572:7625   */\n    tag_400:\n        /* \"#utility.yul\":7634:7701   */\n      tag_401\n        /* \"#utility.yul\":7698:7700   */\n      dup3\n        /* \"#utility.yul\":7693:7695   */\n      0x20\n        /* \"#utility.yul\":7686:7691   */\n      dup4\n        /* \"#utility.yul\":7682:7696   */\n      add\n        /* \"#utility.yul\":7677:7679   */\n      0x20\n        /* \"#utility.yul\":7673:7675   */\n      dup7\n        /* \"#utility.yul\":7669:7680   */\n      add\n        /* \"#utility.yul\":7634:7701   */\n      tag_320\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7720:7725   */\n      swap6\n        /* \"#utility.yul\":7083:7731   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7736:8225   */\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8005:8020   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":7987:8021   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8057:8072   */\n      dup5\n      and\n        /* \"#utility.yul\":8052:8054   */\n      0x20\n        /* \"#utility.yul\":8037:8055   */\n      dup3\n      add\n        /* \"#utility.yul\":8030:8073   */\n      mstore\n        /* \"#utility.yul\":8104:8106   */\n      0x40\n        /* \"#utility.yul\":8089:8107   */\n      dup2\n      add\n        /* \"#utility.yul\":8082:8116   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8152:8155   */\n      0x80\n        /* \"#utility.yul\":8147:8149   */\n      0x60\n        /* \"#utility.yul\":8132:8150   */\n      dup3\n      add\n        /* \"#utility.yul\":8125:8156   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7930:7934   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8173:8219   */\n      tag_403\n      swap1\n        /* \"#utility.yul\":8199:8218   */\n      dup4\n      add\n        /* \"#utility.yul\":8191:8197   */\n      dup5\n        /* \"#utility.yul\":8173:8219   */\n      tag_321\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":8165:8219   */\n      swap7\n        /* \"#utility.yul\":7736:8225   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8230:8479   */\n    tag_245:\n        /* \"#utility.yul\":8299:8305   */\n      0x00\n        /* \"#utility.yul\":8352:8354   */\n      0x20\n        /* \"#utility.yul\":8340:8349   */\n      dup3\n        /* \"#utility.yul\":8331:8338   */\n      dup5\n        /* \"#utility.yul\":8327:8350   */\n      sub\n        /* \"#utility.yul\":8323:8355   */\n      slt\n        /* \"#utility.yul\":8320:8372   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":8368:8369   */\n      0x00\n        /* \"#utility.yul\":8365:8366   */\n      dup1\n        /* \"#utility.yul\":8358:8370   */\n      revert\n        /* \"#utility.yul\":8320:8372   */\n    tag_405:\n        /* \"#utility.yul\":8400:8409   */\n      dup2\n        /* \"#utility.yul\":8394:8410   */\n      mload\n        /* \"#utility.yul\":8419:8449   */\n      tag_194\n        /* \"#utility.yul\":8443:8448   */\n      dup2\n        /* \"#utility.yul\":8419:8449   */\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":8484:8612   */\n    tag_270:\n        /* \"#utility.yul\":8551:8560   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8572:8583   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8569:8606   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":8586:8604   */\n      tag_117\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":8617:8948   */\n    tag_272:\n        /* \"#utility.yul\":8722:8731   */\n      0x00\n        /* \"#utility.yul\":8733:8742   */\n      dup1\n        /* \"#utility.yul\":8775:8783   */\n      dup6\n        /* \"#utility.yul\":8763:8773   */\n      dup6\n        /* \"#utility.yul\":8760:8784   */\n      gt\n        /* \"#utility.yul\":8757:8801   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":8797:8798   */\n      0x00\n        /* \"#utility.yul\":8794:8795   */\n      dup1\n        /* \"#utility.yul\":8787:8799   */\n      revert\n        /* \"#utility.yul\":8757:8801   */\n    tag_411:\n        /* \"#utility.yul\":8826:8832   */\n      dup4\n        /* \"#utility.yul\":8816:8824   */\n      dup7\n        /* \"#utility.yul\":8813:8833   */\n      gt\n        /* \"#utility.yul\":8810:8850   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":8846:8847   */\n      0x00\n        /* \"#utility.yul\":8843:8844   */\n      dup1\n        /* \"#utility.yul\":8836:8848   */\n      revert\n        /* \"#utility.yul\":8810:8850   */\n    tag_412:\n      pop\n      pop\n        /* \"#utility.yul\":8872:8895   */\n      dup3\n      add\n      swap4\n        /* \"#utility.yul\":8917:8942   */\n      swap2\n      swap1\n      swap3\n      sub\n      swap2\n      pop\n        /* \"#utility.yul\":8617:8948   */\n      jump\t// out\n        /* \"#utility.yul\":8953:9290   */\n    tag_274:\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":9074:9093   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":9161:9172   */\n      dup2\n      dup2\n      and\n      swap2\n        /* \"#utility.yul\":9192:9194   */\n      0x14\n        /* \"#utility.yul\":9184:9195   */\n      dup6\n      lt\n        /* \"#utility.yul\":9181:9284   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":9271:9273   */\n      dup1\n        /* \"#utility.yul\":9265:9267   */\n      dup2\n        /* \"#utility.yul\":9258:9261   */\n      dup7\n        /* \"#utility.yul\":9254:9256   */\n      0x14\n        /* \"#utility.yul\":9250:9262   */\n      sub\n        /* \"#utility.yul\":9247:9248   */\n      0x03\n        /* \"#utility.yul\":9243:9263   */\n      shl\n        /* \"#utility.yul\":9239:9268   */\n      shl\n        /* \"#utility.yul\":9235:9237   */\n      dup4\n        /* \"#utility.yul\":9231:9269   */\n      and\n        /* \"#utility.yul\":9227:9274   */\n      and\n        /* \"#utility.yul\":9218:9274   */\n      swap3\n      pop\n        /* \"#utility.yul\":9181:9284   */\n    tag_414:\n      pop\n      pop\n        /* \"#utility.yul\":8953:9290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f9fdd7264436db6a85a4d456887bfa9d3924cb95373a4e5fc40c6b371f983b1064736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"A0"},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"40"},{"begin":601,"end":6073,"name":"MSTORE","source":16},{"begin":1850,"end":2176,"name":"CALLVALUE","source":16},{"begin":1850,"end":2176,"name":"DUP1","source":16},{"begin":1850,"end":2176,"name":"ISZERO","source":16},{"begin":1850,"end":2176,"name":"PUSH [tag]","source":16,"value":"1"},{"begin":1850,"end":2176,"name":"JUMPI","source":16},{"begin":1850,"end":2176,"name":"PUSH","source":16,"value":"0"},{"begin":1850,"end":2176,"name":"DUP1","source":16},{"begin":1850,"end":2176,"name":"REVERT","source":16},{"begin":1850,"end":2176,"name":"tag","source":16,"value":"1"},{"begin":1850,"end":2176,"name":"JUMPDEST","source":16},{"begin":1850,"end":2176,"name":"POP","source":16},{"begin":1850,"end":2176,"name":"PUSH","source":16,"value":"40"},{"begin":1850,"end":2176,"name":"MLOAD","source":16},{"begin":1850,"end":2176,"name":"PUSHSIZE","source":16},{"begin":1850,"end":2176,"name":"CODESIZE","source":16},{"begin":1850,"end":2176,"name":"SUB","source":16},{"begin":1850,"end":2176,"name":"DUP1","source":16},{"begin":1850,"end":2176,"name":"PUSHSIZE","source":16},{"begin":1850,"end":2176,"name":"DUP4","source":16},{"begin":1850,"end":2176,"name":"CODECOPY","source":16},{"begin":1850,"end":2176,"name":"DUP2","source":16},{"begin":1850,"end":2176,"name":"ADD","source":16},{"begin":1850,"end":2176,"name":"PUSH","source":16,"value":"40"},{"begin":1850,"end":2176,"name":"DUP2","source":16},{"begin":1850,"end":2176,"name":"SWAP1","source":16},{"begin":1850,"end":2176,"name":"MSTORE","source":16},{"begin":1850,"end":2176,"name":"PUSH [tag]","source":16,"value":"2"},{"begin":1850,"end":2176,"name":"SWAP2","source":16},{"begin":1850,"end":2176,"name":"PUSH [tag]","source":16,"value":"3"},{"begin":1850,"end":2176,"jumpType":"[in]","name":"JUMP","source":16},{"begin":1850,"end":2176,"name":"tag","source":16,"value":"2"},{"begin":1850,"end":2176,"name":"JUMPDEST","source":16},{"begin":2022,"end":2027,"name":"DUP3","source":16},{"begin":2052,"end":2068,"name":"DUP2","source":16},{"begin":1380,"end":1493,"name":"PUSH","source":3,"value":"40"},{"begin":1380,"end":1493,"name":"MLOAD","source":3},{"begin":1380,"end":1493,"name":"DUP1","source":3},{"begin":1380,"end":1493,"name":"PUSH","source":3,"value":"40"},{"begin":1380,"end":1493,"name":"ADD","source":3},{"begin":1380,"end":1493,"name":"PUSH","source":3,"value":"40"},{"begin":1380,"end":1493,"name":"MSTORE","source":3},{"begin":1380,"end":1493,"name":"DUP1","source":3},{"begin":1380,"end":1493,"name":"PUSH","source":3,"value":"11"},{"begin":1380,"end":1493,"name":"DUP2","source":3},{"begin":1380,"end":1493,"name":"MSTORE","source":3},{"begin":1380,"end":1493,"name":"PUSH","source":3,"value":"20"},{"begin":1380,"end":1493,"name":"ADD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"4A75696365626F782050726F6A65637473"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"78"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1380,"end":1493,"name":"DUP2","source":3},{"begin":1380,"end":1493,"name":"MSTORE","source":3},{"begin":1380,"end":1493,"name":"POP","source":3},{"begin":1380,"end":1493,"name":"PUSH","source":3,"value":"40"},{"begin":1380,"end":1493,"name":"MLOAD","source":3},{"begin":1380,"end":1493,"name":"DUP1","source":3},{"begin":1380,"end":1493,"name":"PUSH","source":3,"value":"40"},{"begin":1380,"end":1493,"name":"ADD","source":3},{"begin":1380,"end":1493,"name":"PUSH","source":3,"value":"40"},{"begin":1380,"end":1493,"name":"MSTORE","source":3},{"begin":1380,"end":1493,"name":"DUP1","source":3},{"begin":1380,"end":1493,"name":"PUSH","source":3,"value":"8"},{"begin":1380,"end":1493,"name":"DUP2","source":3},{"begin":1380,"end":1493,"name":"MSTORE","source":3},{"begin":1380,"end":1493,"name":"PUSH","source":3,"value":"20"},{"begin":1380,"end":1493,"name":"ADD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"94AA92868A849EB"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"C3"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1380,"end":1493,"name":"DUP2","source":3},{"begin":1380,"end":1493,"name":"MSTORE","source":3},{"begin":1380,"end":1493,"name":"POP","source":3},{"begin":1454,"end":1459,"name":"DUP2","source":3},{"begin":1446,"end":1451,"name":"PUSH","source":3,"value":"0"},{"begin":1446,"end":1459,"name":"SWAP1","source":3},{"begin":1446,"end":1459,"name":"DUP2","source":3},{"begin":1446,"end":1459,"name":"PUSH [tag]","source":3,"value":"9"},{"begin":1446,"end":1459,"name":"SWAP2","source":3},{"begin":1446,"end":1459,"name":"SWAP1","source":3},{"begin":1446,"end":1459,"name":"PUSH [tag]","source":3,"value":"10"},{"begin":1446,"end":1459,"jumpType":"[in]","name":"JUMP","source":3},{"begin":1446,"end":1459,"name":"tag","source":3,"value":"9"},{"begin":1446,"end":1459,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1469,"end":1476,"name":"PUSH","source":3,"value":"1"},{"begin":1469,"end":1486,"name":"PUSH [tag]","source":3,"value":"11"},{"begin":1479,"end":1486,"name":"DUP3","source":3},{"begin":1469,"end":1476,"name":"DUP3","source":3},{"begin":1469,"end":1486,"name":"PUSH [tag]","source":3,"value":"10"},{"begin":1469,"end":1486,"jumpType":"[in]","name":"JUMP","source":3},{"begin":1469,"end":1486,"name":"tag","source":3,"value":"11"},{"begin":1469,"end":1486,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1500,"end":1537,"name":"SWAP1","source":2},{"begin":1500,"end":1537,"name":"DUP2","source":2},{"begin":1500,"end":1537,"name":"AND","source":2},{"begin":1500,"end":1537,"name":"PUSH","source":2,"value":"80"},{"begin":1500,"end":1537,"name":"MSTORE","source":2},{"begin":1273,"end":1299,"name":"DUP2","source":0},{"begin":1273,"end":1299,"name":"AND","source":0},{"begin":1269,"end":1364,"name":"PUSH [tag]","source":0,"value":"14"},{"begin":1269,"end":1364,"name":"JUMPI","source":0},{"begin":1322,"end":1353,"name":"PUSH","source":0,"value":"40"},{"begin":1322,"end":1353,"name":"MLOAD","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1E4FBDF7"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1322,"end":1353,"name":"DUP2","source":0},{"begin":1322,"end":1353,"name":"MSTORE","source":0},{"begin":1350,"end":1351,"name":"PUSH","source":0,"value":"0"},{"begin":1322,"end":1353,"name":"PUSH","source":0,"value":"4"},{"begin":1322,"end":1353,"name":"DUP3","source":0},{"begin":1322,"end":1353,"name":"ADD","source":0},{"begin":3437,"end":3488,"name":"MSTORE","source":19},{"begin":3410,"end":3428,"name":"PUSH","source":19,"value":"24"},{"begin":3410,"end":3428,"name":"ADD","source":19},{"begin":1322,"end":1353,"name":"tag","source":0,"value":"15"},{"begin":1322,"end":1353,"name":"JUMPDEST","source":0},{"begin":1322,"end":1353,"name":"PUSH","source":0,"value":"40"},{"begin":1322,"end":1353,"name":"MLOAD","source":0},{"begin":1322,"end":1353,"name":"DUP1","source":0},{"begin":1322,"end":1353,"name":"SWAP2","source":0},{"begin":1322,"end":1353,"name":"SUB","source":0},{"begin":1322,"end":1353,"name":"SWAP1","source":0},{"begin":1322,"end":1353,"name":"REVERT","source":0},{"begin":1269,"end":1364,"name":"tag","source":0,"value":"14"},{"begin":1269,"end":1364,"name":"JUMPDEST","source":0},{"begin":1373,"end":1405,"name":"PUSH [tag]","source":0,"value":"17"},{"begin":1392,"end":1404,"name":"DUP2","source":0},{"begin":1373,"end":1391,"name":"PUSH [tag]","source":0,"value":"18"},{"begin":1373,"end":1405,"jumpType":"[in]","name":"JUMP","source":0},{"begin":1373,"end":1405,"name":"tag","source":0,"value":"17"},{"begin":1373,"end":1405,"name":"JUMPDEST","source":0},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2088,"end":2117,"name":"DUP3","source":16},{"begin":2088,"end":2117,"modifierDepth":3,"name":"AND","source":16},{"begin":2088,"end":2117,"name":"ISZERO","source":16},{"begin":2084,"end":2170,"modifierDepth":3,"name":"PUSH [tag]","source":16,"value":"20"},{"begin":2084,"end":2170,"modifierDepth":3,"name":"JUMPI","source":16},{"begin":2133,"end":2159,"modifierDepth":3,"name":"PUSH [tag]","source":16,"value":"21"},{"begin":2143,"end":2158,"name":"DUP3","source":16},{"begin":2133,"end":2142,"modifierDepth":3,"name":"PUSH [tag]","source":16,"value":"22"},{"begin":2133,"end":2159,"jumpType":"[in]","modifierDepth":3,"name":"JUMP","source":16},{"begin":2133,"end":2159,"modifierDepth":3,"name":"tag","source":16,"value":"21"},{"begin":2133,"end":2159,"modifierDepth":3,"name":"JUMPDEST","source":16},{"begin":2133,"end":2159,"modifierDepth":3,"name":"POP","source":16},{"begin":2084,"end":2170,"modifierDepth":3,"name":"tag","source":16,"value":"20"},{"begin":2084,"end":2170,"modifierDepth":3,"name":"JUMPDEST","source":16},{"begin":1850,"end":2176,"name":"POP","source":16},{"begin":1850,"end":2176,"name":"POP","source":16},{"begin":1850,"end":2176,"name":"POP","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"149"},{"begin":601,"end":6073,"name":"JUMP","source":16},{"begin":2912,"end":3099,"name":"tag","source":0,"value":"18"},{"begin":2912,"end":3099,"name":"JUMPDEST","source":0},{"begin":3004,"end":3010,"name":"PUSH","source":0,"value":"6"},{"begin":3004,"end":3010,"name":"DUP1","source":0},{"begin":3004,"end":3010,"name":"SLOAD","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3020,"end":3037,"name":"DUP4","source":0},{"begin":3020,"end":3037,"name":"DUP2","source":0},{"begin":3020,"end":3037,"name":"AND","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":3020,"end":3037,"name":"DUP4","source":0},{"begin":3020,"end":3037,"name":"AND","source":0},{"begin":3020,"end":3037,"name":"DUP2","source":0},{"begin":3020,"end":3037,"name":"OR","source":0},{"begin":3020,"end":3037,"name":"SWAP1","source":0},{"begin":3020,"end":3037,"name":"SWAP4","source":0},{"begin":3020,"end":3037,"name":"SSTORE","source":0},{"begin":3052,"end":3092,"name":"PUSH","source":0,"value":"40"},{"begin":3052,"end":3092,"name":"MLOAD","source":0},{"begin":3004,"end":3010,"name":"SWAP2","source":0},{"begin":3004,"end":3010,"name":"AND","source":0},{"begin":3004,"end":3010,"name":"SWAP2","source":0},{"begin":3020,"end":3037,"name":"SWAP1","source":0},{"begin":3004,"end":3010,"name":"DUP3","source":0},{"begin":3004,"end":3010,"name":"SWAP1","source":0},{"begin":3052,"end":3092,"name":"PUSH","source":0,"value":"8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"},{"begin":3052,"end":3092,"name":"SWAP1","source":0},{"begin":2985,"end":3001,"name":"PUSH","source":0,"value":"0"},{"begin":2985,"end":3001,"name":"SWAP1","source":0},{"begin":3052,"end":3092,"name":"LOG3","source":0},{"begin":2975,"end":3099,"name":"POP","source":0},{"begin":2912,"end":3099,"name":"POP","source":0},{"begin":2912,"end":3099,"jumpType":"[out]","name":"JUMP","source":0},{"begin":5746,"end":6071,"name":"tag","source":16,"value":"22"},{"begin":5746,"end":6071,"name":"JUMPDEST","source":16},{"begin":5805,"end":5822,"name":"PUSH","source":16,"value":"0"},{"begin":5910,"end":5915,"name":"PUSH","source":16,"value":"7"},{"begin":5910,"end":5915,"name":"PUSH","source":16,"value":"0"},{"begin":5908,"end":5915,"name":"DUP2","source":16},{"begin":5908,"end":5915,"name":"SLOAD","source":16},{"begin":5908,"end":5915,"name":"PUSH [tag]","source":16,"value":"26"},{"begin":5908,"end":5915,"name":"SWAP1","source":16},{"begin":5908,"end":5915,"name":"PUSH [tag]","source":16,"value":"27"},{"begin":5908,"end":5915,"jumpType":"[in]","name":"JUMP","source":16},{"begin":5908,"end":5915,"name":"tag","source":16,"value":"26"},{"begin":5908,"end":5915,"name":"JUMPDEST","source":16},{"begin":5908,"end":5915,"name":"SWAP2","source":16},{"begin":5908,"end":5915,"name":"DUP3","source":16},{"begin":5908,"end":5915,"name":"SWAP1","source":16},{"begin":5908,"end":5915,"name":"SSTORE","source":16},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":5908,"end":5915,"name":"SWAP1","source":16},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5931,"end":5997,"name":"DUP3","source":16},{"begin":5931,"end":5997,"name":"AND","source":16},{"begin":5908,"end":5915,"name":"DUP2","source":16},{"begin":5931,"end":5997,"name":"PUSH","source":16,"value":"365B3162CD780731FC55A794B59494D472BC2AF701007F581843A70673814698"},{"begin":5983,"end":5995,"name":"PUSH [tag]","source":16,"value":"28"},{"begin":5983,"end":5993,"name":"PUSH [tag]","source":16,"value":"29"},{"begin":5983,"end":5995,"jumpType":"[in]","name":"JUMP","source":16},{"begin":5983,"end":5995,"name":"tag","source":16,"value":"28"},{"begin":5983,"end":5995,"name":"JUMPDEST","source":16},{"begin":5931,"end":5997,"name":"PUSH","source":16,"value":"40"},{"begin":5931,"end":5997,"name":"MLOAD","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3455,"end":3487,"name":"SWAP1","source":19},{"begin":3455,"end":3487,"name":"SWAP2","source":19},{"begin":3455,"end":3487,"name":"AND","source":19},{"begin":3437,"end":3488,"name":"DUP2","source":19},{"begin":3437,"end":3488,"name":"MSTORE","source":19},{"begin":3425,"end":3427,"name":"PUSH","source":19,"value":"20"},{"begin":3410,"end":3428,"name":"ADD","source":19},{"begin":5931,"end":5997,"name":"PUSH","source":16,"value":"40"},{"begin":5931,"end":5997,"name":"MLOAD","source":16},{"begin":5931,"end":5997,"name":"DUP1","source":16},{"begin":5931,"end":5997,"name":"SWAP2","source":16},{"begin":5931,"end":5997,"name":"SUB","source":16},{"begin":5931,"end":5997,"name":"SWAP1","source":16},{"begin":5931,"end":5997,"name":"LOG3","source":16},{"begin":6037,"end":6064,"name":"PUSH [tag]","source":16,"value":"31"},{"begin":6047,"end":6052,"name":"DUP3","source":16},{"begin":6054,"end":6063,"name":"DUP3","source":16},{"begin":6037,"end":6046,"name":"PUSH [tag]","source":16,"value":"32"},{"begin":6037,"end":6064,"jumpType":"[in]","name":"JUMP","source":16},{"begin":6037,"end":6064,"name":"tag","source":16,"value":"31"},{"begin":6037,"end":6064,"name":"JUMPDEST","source":16},{"begin":5746,"end":6071,"name":"SWAP2","source":16},{"begin":5746,"end":6071,"name":"SWAP1","source":16},{"begin":5746,"end":6071,"name":"POP","source":16},{"begin":5746,"end":6071,"jumpType":"[out]","name":"JUMP","source":16},{"begin":4412,"end":4558,"name":"tag","source":16,"value":"29"},{"begin":4412,"end":4558,"name":"JUMPDEST","source":16},{"begin":4491,"end":4505,"name":"PUSH","source":16,"value":"0"},{"begin":4524,"end":4551,"name":"PUSH [tag]","source":16,"value":"34"},{"begin":4524,"end":4549,"name":"PUSH [tag]","source":16,"value":"35"},{"begin":4524,"end":4551,"jumpType":"[in]","name":"JUMP","source":16},{"begin":4524,"end":4551,"name":"tag","source":16,"value":"34"},{"begin":4524,"end":4551,"name":"JUMPDEST","source":16},{"begin":4517,"end":4551,"name":"SWAP1","source":16},{"begin":4517,"end":4551,"name":"POP","source":16},{"begin":4412,"end":4558,"name":"SWAP1","source":16},{"begin":4412,"end":4558,"jumpType":"[out]","name":"JUMP","source":16},{"begin":10656,"end":10756,"name":"tag","source":3,"value":"32"},{"begin":10656,"end":10756,"name":"JUMPDEST","source":3},{"begin":10723,"end":10749,"name":"PUSH [tag]","source":3,"value":"37"},{"begin":10733,"end":10735,"name":"DUP3","source":3},{"begin":10737,"end":10744,"name":"DUP3","source":3},{"begin":10723,"end":10749,"name":"PUSH","source":3,"value":"40"},{"begin":10723,"end":10749,"name":"MLOAD","source":3},{"begin":10723,"end":10749,"name":"DUP1","source":3},{"begin":10723,"end":10749,"name":"PUSH","source":3,"value":"20"},{"begin":10723,"end":10749,"name":"ADD","source":3},{"begin":10723,"end":10749,"name":"PUSH","source":3,"value":"40"},{"begin":10723,"end":10749,"name":"MSTORE","source":3},{"begin":10723,"end":10749,"name":"DUP1","source":3},{"begin":10723,"end":10749,"name":"PUSH","source":3,"value":"0"},{"begin":10723,"end":10749,"name":"DUP2","source":3},{"begin":10723,"end":10749,"name":"MSTORE","source":3},{"begin":10723,"end":10749,"name":"POP","source":3},{"begin":10723,"end":10732,"name":"PUSH [tag]","source":3,"value":"38"},{"begin":10723,"end":10732,"name":"PUSH","source":3,"value":"20"},{"begin":10723,"end":10732,"name":"SHL","source":3},{"begin":10723,"end":10749,"name":"PUSH","source":3,"value":"20"},{"begin":10723,"end":10749,"name":"SHR","source":3},{"begin":10723,"end":10749,"jumpType":"[in]","name":"JUMP","source":3},{"begin":10723,"end":10749,"name":"tag","source":3,"value":"37"},{"begin":10723,"end":10749,"name":"JUMPDEST","source":3},{"begin":10656,"end":10756,"name":"POP","source":3},{"begin":10656,"end":10756,"name":"POP","source":3},{"begin":10656,"end":10756,"jumpType":"[out]","name":"JUMP","source":3},{"begin":2206,"end":2635,"name":"tag","source":2,"value":"35"},{"begin":2206,"end":2635,"name":"JUMPDEST","source":2},{"begin":2268,"end":2275,"name":"PUSH","source":2,"value":"0"},{"begin":2312,"end":2320,"name":"CALLDATASIZE","source":2},{"begin":3483,"end":3485,"name":"PUSH","source":2,"value":"14"},{"begin":2403,"end":2433,"name":"PUSH [tag]","source":2,"value":"42"},{"begin":2422,"end":2432,"name":"CALLER","source":2},{"begin":2403,"end":2421,"name":"PUSH [tag]","source":2,"value":"43"},{"begin":2403,"end":2433,"jumpType":"[in]","name":"JUMP","source":2},{"begin":2403,"end":2433,"name":"tag","source":2,"value":"42"},{"begin":2403,"end":2433,"name":"JUMPDEST","source":2},{"begin":2403,"end":2474,"name":"DUP1","source":2},{"begin":2403,"end":2474,"name":"ISZERO","source":2},{"begin":2403,"end":2474,"name":"PUSH [tag]","source":2,"value":"44"},{"begin":2403,"end":2474,"name":"JUMPI","source":2},{"begin":2403,"end":2474,"name":"POP","source":2},{"begin":2455,"end":2474,"name":"DUP1","source":2},{"begin":2437,"end":2451,"name":"DUP3","source":2},{"begin":2437,"end":2474,"name":"LT","source":2},{"begin":2437,"end":2474,"name":"ISZERO","source":2},{"begin":2403,"end":2474,"name":"tag","source":2,"value":"44"},{"begin":2403,"end":2474,"name":"JUMPDEST","source":2},{"begin":2399,"end":2629,"name":"ISZERO","source":2},{"begin":2399,"end":2629,"name":"PUSH [tag]","source":2,"value":"45"},{"begin":2399,"end":2629,"name":"JUMPI","source":2},{"begin":2513,"end":2521,"name":"PUSH","source":2,"value":"0"},{"begin":2513,"end":2521,"name":"CALLDATASIZE","source":2},{"begin":2522,"end":2558,"name":"PUSH [tag]","source":2,"value":"46"},{"begin":2539,"end":2558,"name":"DUP4","source":2},{"begin":2522,"end":2536,"name":"DUP6","source":2},{"begin":2522,"end":2558,"name":"PUSH [tag]","source":2,"value":"47"},{"begin":2522,"end":2558,"jumpType":"[in]","name":"JUMP","source":2},{"begin":2522,"end":2558,"name":"tag","source":2,"value":"46"},{"begin":2522,"end":2558,"name":"JUMPDEST","source":2},{"begin":2513,"end":2560,"name":"PUSH [tag]","source":2,"value":"48"},{"begin":2513,"end":2560,"name":"SWAP3","source":2},{"begin":2513,"end":2560,"name":"DUP3","source":2},{"begin":2513,"end":2560,"name":"SWAP1","source":2},{"begin":2513,"end":2560,"name":"PUSH [tag]","source":2,"value":"49"},{"begin":2513,"end":2560,"jumpType":"[in]","name":"JUMP","source":2},{"begin":2513,"end":2560,"name":"tag","source":2,"value":"48"},{"begin":2513,"end":2560,"name":"JUMPDEST","source":2},{"begin":2505,"end":2561,"name":"PUSH [tag]","source":2,"value":"50"},{"begin":2505,"end":2561,"name":"SWAP2","source":2},{"begin":2505,"end":2561,"name":"PUSH [tag]","source":2,"value":"51"},{"begin":2505,"end":2561,"jumpType":"[in]","name":"JUMP","source":2},{"begin":2505,"end":2561,"name":"tag","source":2,"value":"50"},{"begin":2505,"end":2561,"name":"JUMPDEST","source":2},{"begin":2497,"end":2562,"name":"PUSH","source":2,"value":"60"},{"begin":2497,"end":2562,"name":"SHR","source":2},{"begin":2490,"end":2562,"name":"SWAP3","source":2},{"begin":2490,"end":2562,"name":"POP","source":2},{"begin":2490,"end":2562,"name":"POP","source":2},{"begin":2490,"end":2562,"name":"POP","source":2},{"begin":2206,"end":2635,"name":"SWAP1","source":2},{"begin":2206,"end":2635,"jumpType":"[out]","name":"JUMP","source":2},{"begin":2399,"end":2629,"name":"tag","source":2,"value":"45"},{"begin":2399,"end":2629,"name":"JUMPDEST","source":2},{"begin":735,"end":745,"name":"CALLER","source":8},{"begin":2593,"end":2618,"name":"SWAP3","source":2},{"begin":2593,"end":2618,"name":"POP","source":2},{"begin":2593,"end":2618,"name":"POP","source":2},{"begin":2593,"end":2618,"name":"POP","source":2},{"begin":2206,"end":2635,"name":"SWAP1","source":2},{"begin":2206,"end":2635,"jumpType":"[out]","name":"JUMP","source":2},{"begin":10977,"end":11184,"name":"tag","source":3,"value":"38"},{"begin":10977,"end":11184,"name":"JUMPDEST","source":3},{"begin":11071,"end":11089,"name":"PUSH [tag]","source":3,"value":"56"},{"begin":11077,"end":11079,"name":"DUP4","source":3},{"begin":11081,"end":11088,"name":"DUP4","source":3},{"begin":11071,"end":11076,"name":"PUSH [tag]","source":3,"value":"57"},{"begin":11071,"end":11089,"jumpType":"[in]","name":"JUMP","source":3},{"begin":11071,"end":11089,"name":"tag","source":3,"value":"56"},{"begin":11071,"end":11089,"name":"JUMPDEST","source":3},{"begin":11099,"end":11177,"name":"PUSH [tag]","source":3,"value":"58"},{"begin":11133,"end":11145,"name":"PUSH [tag]","source":3,"value":"59"},{"begin":11133,"end":11143,"name":"PUSH [tag]","source":3,"value":"29"},{"begin":11133,"end":11145,"jumpType":"[in]","name":"JUMP","source":3},{"begin":11133,"end":11145,"name":"tag","source":3,"value":"59"},{"begin":11133,"end":11145,"name":"JUMPDEST","source":3},{"begin":11155,"end":11156,"name":"PUSH","source":3,"value":"0"},{"begin":11159,"end":11161,"name":"DUP6","source":3},{"begin":11163,"end":11170,"name":"DUP6","source":3},{"begin":11172,"end":11176,"name":"DUP6","source":3},{"begin":11099,"end":11132,"name":"PUSH [tag]","source":3,"value":"60"},{"begin":11099,"end":11177,"jumpType":"[in]","name":"JUMP","source":3},{"begin":11099,"end":11177,"name":"tag","source":3,"value":"58"},{"begin":11099,"end":11177,"name":"JUMPDEST","source":3},{"begin":10977,"end":11184,"name":"POP","source":3},{"begin":10977,"end":11184,"name":"POP","source":3},{"begin":10977,"end":11184,"name":"POP","source":3},{"begin":10977,"end":11184,"jumpType":"[out]","name":"JUMP","source":3},{"begin":1832,"end":1969,"name":"tag","source":2,"value":"43"},{"begin":1832,"end":1969,"name":"JUMPDEST","source":2},{"begin":1908,"end":1912,"name":"PUSH","source":2,"value":"0"},{"begin":1944,"end":1962,"name":"PUSH [tag]","source":2,"value":"65"},{"begin":1707,"end":1724,"name":"PUSH","source":2,"value":"80"},{"begin":1707,"end":1724,"name":"MLOAD","source":2},{"begin":1707,"end":1724,"name":"SWAP1","source":2},{"begin":1624,"end":1731,"name":"JUMP","source":2},{"begin":1944,"end":1962,"name":"tag","source":2,"value":"65"},{"begin":1944,"end":1962,"name":"JUMPDEST","source":2},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1931,"end":1962,"name":"AND","source":2},{"begin":1931,"end":1940,"name":"DUP3","source":2},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1931,"end":1962,"name":"AND","source":2},{"begin":1931,"end":1962,"name":"EQ","source":2},{"begin":1924,"end":1962,"name":"SWAP1","source":2},{"begin":1924,"end":1962,"name":"POP","source":2},{"begin":1832,"end":1969,"name":"SWAP2","source":2},{"begin":1832,"end":1969,"name":"SWAP1","source":2},{"begin":1832,"end":1969,"name":"POP","source":2},{"begin":1832,"end":1969,"jumpType":"[out]","name":"JUMP","source":2},{"begin":9978,"end":10305,"name":"tag","source":3,"value":"57"},{"begin":9978,"end":10305,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":10045,"end":10061,"name":"DUP3","source":3},{"begin":10045,"end":10061,"name":"AND","source":3},{"begin":10041,"end":10128,"name":"PUSH [tag]","source":3,"value":"69"},{"begin":10041,"end":10128,"name":"JUMPI","source":3},{"begin":10084,"end":10117,"name":"PUSH","source":3,"value":"40"},{"begin":10084,"end":10117,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"32505749"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":10084,"end":10117,"name":"DUP2","source":3},{"begin":10084,"end":10117,"name":"MSTORE","source":3},{"begin":10114,"end":10115,"name":"PUSH","source":3,"value":"0"},{"begin":10084,"end":10117,"name":"PUSH","source":3,"value":"4"},{"begin":10084,"end":10117,"name":"DUP3","source":3},{"begin":10084,"end":10117,"name":"ADD","source":3},{"begin":3437,"end":3488,"name":"MSTORE","source":19},{"begin":3410,"end":3428,"name":"PUSH","source":19,"value":"24"},{"begin":3410,"end":3428,"name":"ADD","source":19},{"begin":10084,"end":10117,"name":"PUSH [tag]","source":3,"value":"15"},{"begin":3291,"end":3494,"name":"JUMP","source":19},{"begin":10041,"end":10128,"name":"tag","source":3,"value":"69"},{"begin":10041,"end":10128,"name":"JUMPDEST","source":3},{"begin":10137,"end":10158,"name":"PUSH","source":3,"value":"0"},{"begin":10161,"end":10193,"name":"PUSH [tag]","source":3,"value":"71"},{"begin":10169,"end":10171,"name":"DUP4","source":3},{"begin":10173,"end":10180,"name":"DUP4","source":3},{"begin":10137,"end":10158,"name":"DUP4","source":3},{"begin":10161,"end":10168,"name":"PUSH [tag]","source":3,"value":"72"},{"begin":10161,"end":10193,"jumpType":"[in]","name":"JUMP","source":3},{"begin":10161,"end":10193,"name":"tag","source":3,"value":"71"},{"begin":10161,"end":10193,"name":"JUMPDEST","source":3},{"begin":10137,"end":10193,"name":"SWAP1","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":10207,"end":10234,"name":"DUP2","source":3},{"begin":10207,"end":10234,"name":"AND","source":3},{"begin":10207,"end":10234,"name":"ISZERO","source":3},{"begin":10203,"end":10299,"name":"PUSH [tag]","source":3,"value":"58"},{"begin":10203,"end":10299,"name":"JUMPI","source":3},{"begin":10257,"end":10288,"name":"PUSH","source":3,"value":"40"},{"begin":10257,"end":10288,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"39E35637"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":10257,"end":10288,"name":"DUP2","source":3},{"begin":10257,"end":10288,"name":"MSTORE","source":3},{"begin":10285,"end":10286,"name":"PUSH","source":3,"value":"0"},{"begin":10257,"end":10288,"name":"PUSH","source":3,"value":"4"},{"begin":10257,"end":10288,"name":"DUP3","source":3},{"begin":10257,"end":10288,"name":"ADD","source":3},{"begin":3437,"end":3488,"name":"MSTORE","source":19},{"begin":3410,"end":3428,"name":"PUSH","source":19,"value":"24"},{"begin":3410,"end":3428,"name":"ADD","source":19},{"begin":10257,"end":10288,"name":"PUSH [tag]","source":3,"value":"15"},{"begin":3291,"end":3494,"name":"JUMP","source":19},{"begin":985,"end":1909,"name":"tag","source":7,"value":"60"},{"begin":985,"end":1909,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1165,"end":1179,"name":"DUP4","source":7},{"begin":1165,"end":1179,"name":"AND","source":7},{"begin":1165,"end":1179,"name":"EXTCODESIZE","source":7},{"begin":1165,"end":1183,"name":"ISZERO","source":7},{"begin":1161,"end":1903,"name":"PUSH [tag]","source":7,"value":"91"},{"begin":1161,"end":1903,"name":"JUMPI","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"40"},{"begin":1203,"end":1270,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A85BD01"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1203,"end":1270,"name":"DUP2","source":7},{"begin":1203,"end":1270,"name":"MSTORE","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1203,"end":1239,"name":"DUP5","source":7},{"begin":1203,"end":1239,"name":"AND","source":7},{"begin":1203,"end":1239,"name":"SWAP1","source":7},{"begin":1203,"end":1239,"name":"PUSH","source":7,"value":"150B7A02"},{"begin":1203,"end":1239,"name":"SWAP1","source":7},{"begin":1203,"end":1270,"name":"PUSH [tag]","source":7,"value":"77"},{"begin":1203,"end":1270,"name":"SWAP1","source":7},{"begin":1240,"end":1248,"name":"DUP9","source":7},{"begin":1240,"end":1248,"name":"SWAP1","source":7},{"begin":1250,"end":1254,"name":"DUP9","source":7},{"begin":1250,"end":1254,"name":"SWAP1","source":7},{"begin":1256,"end":1263,"name":"DUP8","source":7},{"begin":1256,"end":1263,"name":"SWAP1","source":7},{"begin":1265,"end":1269,"name":"DUP8","source":7},{"begin":1265,"end":1269,"name":"SWAP1","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"4"},{"begin":1203,"end":1270,"name":"ADD","source":7},{"begin":1203,"end":1270,"name":"PUSH [tag]","source":7,"value":"78"},{"begin":1203,"end":1270,"jumpType":"[in]","name":"JUMP","source":7},{"begin":1203,"end":1270,"name":"tag","source":7,"value":"77"},{"begin":1203,"end":1270,"name":"JUMPDEST","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"20"},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"40"},{"begin":1203,"end":1270,"name":"MLOAD","source":7},{"begin":1203,"end":1270,"name":"DUP1","source":7},{"begin":1203,"end":1270,"name":"DUP4","source":7},{"begin":1203,"end":1270,"name":"SUB","source":7},{"begin":1203,"end":1270,"name":"DUP2","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"0"},{"begin":1203,"end":1270,"name":"DUP8","source":7},{"begin":1203,"end":1270,"name":"GAS","source":7},{"begin":1203,"end":1270,"name":"CALL","source":7},{"begin":1203,"end":1270,"name":"SWAP3","source":7},{"begin":1203,"end":1270,"name":"POP","source":7},{"begin":1203,"end":1270,"name":"POP","source":7},{"begin":1203,"end":1270,"name":"POP","source":7},{"begin":1203,"end":1270,"name":"DUP1","source":7},{"begin":1203,"end":1270,"name":"ISZERO","source":7},{"begin":1203,"end":1270,"name":"PUSH [tag]","source":7,"value":"79"},{"begin":1203,"end":1270,"name":"JUMPI","source":7},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"40"},{"begin":1203,"end":1270,"name":"DUP1","source":7},{"begin":1203,"end":1270,"name":"MLOAD","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"1F"},{"begin":1203,"end":1270,"name":"RETURNDATASIZE","source":7},{"begin":1203,"end":1270,"name":"SWAP1","source":7},{"begin":1203,"end":1270,"name":"DUP2","source":7},{"begin":1203,"end":1270,"name":"ADD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1F"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":1203,"end":1270,"name":"AND","source":7},{"begin":1203,"end":1270,"name":"DUP3","source":7},{"begin":1203,"end":1270,"name":"ADD","source":7},{"begin":1203,"end":1270,"name":"SWAP1","source":7},{"begin":1203,"end":1270,"name":"SWAP3","source":7},{"begin":1203,"end":1270,"name":"MSTORE","source":7},{"begin":1203,"end":1270,"name":"PUSH [tag]","source":7,"value":"80"},{"begin":1203,"end":1270,"name":"SWAP2","source":7},{"begin":1203,"end":1270,"name":"DUP2","source":7},{"begin":1203,"end":1270,"name":"ADD","source":7},{"begin":1203,"end":1270,"name":"SWAP1","source":7},{"begin":1203,"end":1270,"name":"PUSH [tag]","source":7,"value":"81"},{"begin":1203,"end":1270,"jumpType":"[in]","name":"JUMP","source":7},{"begin":1203,"end":1270,"name":"tag","source":7,"value":"80"},{"begin":1203,"end":1270,"name":"JUMPDEST","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"1"},{"begin":1203,"end":1270,"name":"tag","source":7,"value":"79"},{"begin":1203,"end":1270,"name":"JUMPDEST","source":7},{"begin":1199,"end":1893,"name":"PUSH [tag]","source":7,"value":"82"},{"begin":1199,"end":1893,"name":"JUMPI","source":7},{"begin":1199,"end":1893,"name":"RETURNDATASIZE","source":7},{"begin":1199,"end":1893,"name":"DUP1","source":7},{"begin":1199,"end":1893,"name":"DUP1","source":7},{"begin":1199,"end":1893,"name":"ISZERO","source":7},{"begin":1199,"end":1893,"name":"PUSH [tag]","source":7,"value":"87"},{"begin":1199,"end":1893,"name":"JUMPI","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"40"},{"begin":1199,"end":1893,"name":"MLOAD","source":7},{"begin":1199,"end":1893,"name":"SWAP2","source":7},{"begin":1199,"end":1893,"name":"POP","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"1F"},{"begin":1199,"end":1893,"name":"NOT","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"3F"},{"begin":1199,"end":1893,"name":"RETURNDATASIZE","source":7},{"begin":1199,"end":1893,"name":"ADD","source":7},{"begin":1199,"end":1893,"name":"AND","source":7},{"begin":1199,"end":1893,"name":"DUP3","source":7},{"begin":1199,"end":1893,"name":"ADD","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"40"},{"begin":1199,"end":1893,"name":"MSTORE","source":7},{"begin":1199,"end":1893,"name":"RETURNDATASIZE","source":7},{"begin":1199,"end":1893,"name":"DUP3","source":7},{"begin":1199,"end":1893,"name":"MSTORE","source":7},{"begin":1199,"end":1893,"name":"RETURNDATASIZE","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"0"},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"20"},{"begin":1199,"end":1893,"name":"DUP5","source":7},{"begin":1199,"end":1893,"name":"ADD","source":7},{"begin":1199,"end":1893,"name":"RETURNDATACOPY","source":7},{"begin":1199,"end":1893,"name":"PUSH [tag]","source":7,"value":"86"},{"begin":1199,"end":1893,"name":"JUMP","source":7},{"begin":1199,"end":1893,"name":"tag","source":7,"value":"87"},{"begin":1199,"end":1893,"name":"JUMPDEST","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"60"},{"begin":1199,"end":1893,"name":"SWAP2","source":7},{"begin":1199,"end":1893,"name":"POP","source":7},{"begin":1199,"end":1893,"name":"tag","source":7,"value":"86"},{"begin":1199,"end":1893,"name":"JUMPDEST","source":7},{"begin":1199,"end":1893,"name":"POP","source":7},{"begin":1560,"end":1566,"name":"DUP1","source":7},{"begin":1560,"end":1573,"name":"MLOAD","source":7},{"begin":1577,"end":1578,"name":"PUSH","source":7,"value":"0"},{"begin":1560,"end":1578,"name":"SUB","source":7},{"begin":1556,"end":1879,"name":"PUSH [tag]","source":7,"value":"88"},{"begin":1556,"end":1879,"name":"JUMPI","source":7},{"begin":1664,"end":1703,"name":"PUSH","source":7,"value":"40"},{"begin":1664,"end":1703,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"32505749"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1664,"end":1703,"name":"DUP2","source":7},{"begin":1664,"end":1703,"name":"MSTORE","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3455,"end":3487,"name":"DUP6","source":19},{"begin":3455,"end":3487,"name":"AND","source":19},{"begin":1664,"end":1703,"name":"PUSH","source":7,"value":"4"},{"begin":1664,"end":1703,"name":"DUP3","source":7},{"begin":1664,"end":1703,"name":"ADD","source":7},{"begin":3437,"end":3488,"name":"MSTORE","source":19},{"begin":3410,"end":3428,"name":"PUSH","source":19,"value":"24"},{"begin":3410,"end":3428,"name":"ADD","source":19},{"begin":1664,"end":1703,"name":"PUSH [tag]","source":7,"value":"15"},{"begin":3291,"end":3494,"name":"JUMP","source":19},{"begin":1556,"end":1879,"name":"tag","source":7,"value":"88"},{"begin":1556,"end":1879,"name":"JUMPDEST","source":7},{"begin":1831,"end":1837,"name":"DUP1","source":7},{"begin":1825,"end":1838,"name":"MLOAD","source":7},{"begin":1816,"end":1822,"name":"DUP2","source":7},{"begin":1812,"end":1814,"name":"PUSH","source":7,"value":"20"},{"begin":1808,"end":1823,"name":"ADD","source":7},{"begin":1801,"end":1839,"name":"REVERT","source":7},{"begin":1199,"end":1893,"name":"tag","source":7,"value":"82"},{"begin":1199,"end":1893,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":1317,"end":1368,"name":"DUP2","source":7},{"begin":1317,"end":1368,"name":"AND","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A85BD01"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1317,"end":1368,"name":"EQ","source":7},{"begin":1313,"end":1495,"name":"PUSH [tag]","source":7,"value":"92"},{"begin":1313,"end":1495,"name":"JUMPI","source":7},{"begin":1437,"end":1476,"name":"PUSH","source":7,"value":"40"},{"begin":1437,"end":1476,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"32505749"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1437,"end":1476,"name":"DUP2","source":7},{"begin":1437,"end":1476,"name":"MSTORE","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3455,"end":3487,"name":"DUP6","source":19},{"begin":3455,"end":3487,"name":"AND","source":19},{"begin":1437,"end":1476,"name":"PUSH","source":7,"value":"4"},{"begin":1437,"end":1476,"name":"DUP3","source":7},{"begin":1437,"end":1476,"name":"ADD","source":7},{"begin":3437,"end":3488,"name":"MSTORE","source":19},{"begin":3410,"end":3428,"name":"PUSH","source":19,"value":"24"},{"begin":3410,"end":3428,"name":"ADD","source":19},{"begin":1437,"end":1476,"name":"PUSH [tag]","source":7,"value":"15"},{"begin":3291,"end":3494,"name":"JUMP","source":19},{"begin":1313,"end":1495,"name":"tag","source":7,"value":"92"},{"begin":1313,"end":1495,"name":"JUMPDEST","source":7},{"begin":1271,"end":1509,"name":"POP","source":7},{"begin":1199,"end":1893,"name":"tag","source":7,"value":"91"},{"begin":1199,"end":1893,"name":"JUMPDEST","source":7},{"begin":985,"end":1909,"name":"POP","source":7},{"begin":985,"end":1909,"name":"POP","source":7},{"begin":985,"end":1909,"name":"POP","source":7},{"begin":985,"end":1909,"name":"POP","source":7},{"begin":985,"end":1909,"name":"POP","source":7},{"begin":985,"end":1909,"jumpType":"[out]","name":"JUMP","source":7},{"begin":8861,"end":9656,"name":"tag","source":3,"value":"72"},{"begin":8861,"end":9656,"name":"JUMPDEST","source":3},{"begin":8947,"end":8954,"name":"PUSH","source":3,"value":"0"},{"begin":5824,"end":5840,"name":"DUP3","source":3},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"MSTORE","source":3},{"begin":5824,"end":5831,"name":"PUSH","source":3,"value":"2"},{"begin":5824,"end":5840,"name":"PUSH","source":3,"value":"20"},{"begin":5824,"end":5840,"name":"MSTORE","source":3},{"begin":5824,"end":5840,"name":"PUSH","source":3,"value":"40"},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"KECCAK256","source":3},{"begin":5824,"end":5840,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5824,"end":5840,"name":"SWAP1","source":3},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"AND","source":3},{"begin":5824,"end":5840,"name":"SWAP1","source":3},{"begin":9058,"end":9076,"name":"DUP4","source":3},{"begin":9058,"end":9076,"name":"AND","source":3},{"begin":9058,"end":9076,"name":"ISZERO","source":3},{"begin":9054,"end":9140,"name":"PUSH [tag]","source":3,"value":"100"},{"begin":9054,"end":9140,"name":"JUMPI","source":3},{"begin":9092,"end":9129,"name":"PUSH [tag]","source":3,"value":"100"},{"begin":9109,"end":9113,"name":"DUP2","source":3},{"begin":9115,"end":9119,"name":"DUP5","source":3},{"begin":9121,"end":9128,"name":"DUP7","source":3},{"begin":9092,"end":9108,"name":"PUSH [tag]","source":3,"value":"101"},{"begin":9092,"end":9129,"jumpType":"[in]","name":"JUMP","source":3},{"begin":9092,"end":9129,"name":"tag","source":3,"value":"100"},{"begin":9092,"end":9129,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9184,"end":9202,"name":"DUP2","source":3},{"begin":9184,"end":9202,"name":"AND","source":3},{"begin":9184,"end":9202,"name":"ISZERO","source":3},{"begin":9180,"end":9436,"name":"PUSH [tag]","source":3,"value":"102"},{"begin":9180,"end":9436,"name":"JUMPI","source":3},{"begin":9300,"end":9348,"name":"PUSH [tag]","source":3,"value":"103"},{"begin":9317,"end":9318,"name":"PUSH","source":3,"value":"0"},{"begin":9321,"end":9328,"name":"DUP6","source":3},{"begin":9317,"end":9318,"name":"DUP2","source":3},{"begin":9317,"end":9318,"name":"DUP1","source":3},{"begin":9300,"end":9308,"name":"PUSH [tag]","source":3,"value":"104"},{"begin":9300,"end":9348,"jumpType":"[in]","name":"JUMP","source":3},{"begin":9300,"end":9348,"name":"tag","source":3,"value":"103"},{"begin":9300,"end":9348,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9391,"end":9406,"name":"DUP2","source":3},{"begin":9391,"end":9406,"name":"AND","source":3},{"begin":9391,"end":9406,"name":"PUSH","source":3,"value":"0"},{"begin":9391,"end":9406,"name":"SWAP1","source":3},{"begin":9391,"end":9406,"name":"DUP2","source":3},{"begin":9391,"end":9406,"name":"MSTORE","source":3},{"begin":9391,"end":9400,"name":"PUSH","source":3,"value":"3"},{"begin":9391,"end":9406,"name":"PUSH","source":3,"value":"20"},{"begin":9391,"end":9406,"name":"MSTORE","source":3},{"begin":9391,"end":9406,"name":"PUSH","source":3,"value":"40"},{"begin":9391,"end":9406,"name":"SWAP1","source":3},{"begin":9391,"end":9406,"name":"KECCAK256","source":3},{"begin":9391,"end":9411,"name":"DUP1","source":3},{"begin":9391,"end":9411,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":9391,"end":9411,"name":"ADD","source":3},{"begin":9391,"end":9411,"name":"SWAP1","source":3},{"begin":9391,"end":9411,"name":"SSTORE","source":3},{"begin":9180,"end":9436,"name":"tag","source":3,"value":"102"},{"begin":9180,"end":9436,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9450,"end":9466,"name":"DUP6","source":3},{"begin":9450,"end":9466,"name":"AND","source":3},{"begin":9450,"end":9466,"name":"ISZERO","source":3},{"begin":9446,"end":9553,"name":"PUSH [tag]","source":3,"value":"105"},{"begin":9446,"end":9553,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9510,"end":9523,"name":"DUP6","source":3},{"begin":9510,"end":9523,"name":"AND","source":3},{"begin":9510,"end":9523,"name":"PUSH","source":3,"value":"0"},{"begin":9510,"end":9523,"name":"SWAP1","source":3},{"begin":9510,"end":9523,"name":"DUP2","source":3},{"begin":9510,"end":9523,"name":"MSTORE","source":3},{"begin":9510,"end":9519,"name":"PUSH","source":3,"value":"3"},{"begin":9510,"end":9523,"name":"PUSH","source":3,"value":"20"},{"begin":9510,"end":9523,"name":"MSTORE","source":3},{"begin":9510,"end":9523,"name":"PUSH","source":3,"value":"40"},{"begin":9510,"end":9523,"name":"SWAP1","source":3},{"begin":9510,"end":9523,"name":"KECCAK256","source":3},{"begin":9510,"end":9528,"name":"DUP1","source":3},{"begin":9510,"end":9528,"name":"SLOAD","source":3},{"begin":9527,"end":9528,"name":"PUSH","source":3,"value":"1"},{"begin":9510,"end":9528,"name":"ADD","source":3},{"begin":9510,"end":9528,"name":"SWAP1","source":3},{"begin":9510,"end":9528,"name":"SSTORE","source":3},{"begin":9446,"end":9553,"name":"tag","source":3,"value":"105"},{"begin":9446,"end":9553,"name":"JUMPDEST","source":3},{"begin":9563,"end":9579,"name":"PUSH","source":3,"value":"0"},{"begin":9563,"end":9579,"name":"DUP5","source":3},{"begin":9563,"end":9579,"name":"DUP2","source":3},{"begin":9563,"end":9579,"name":"MSTORE","source":3},{"begin":9563,"end":9570,"name":"PUSH","source":3,"value":"2"},{"begin":9563,"end":9579,"name":"PUSH","source":3,"value":"20"},{"begin":9563,"end":9579,"name":"MSTORE","source":3},{"begin":9563,"end":9579,"name":"PUSH","source":3,"value":"40"},{"begin":9563,"end":9579,"name":"DUP1","source":3},{"begin":9563,"end":9579,"name":"DUP3","source":3},{"begin":9563,"end":9579,"name":"KECCAK256","source":3},{"begin":9563,"end":9584,"name":"DUP1","source":3},{"begin":9563,"end":9584,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":9563,"end":9584,"name":"AND","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9563,"end":9584,"name":"DUP10","source":3},{"begin":9563,"end":9584,"name":"DUP2","source":3},{"begin":9563,"end":9584,"name":"AND","source":3},{"begin":9563,"end":9584,"name":"SWAP2","source":3},{"begin":9563,"end":9584,"name":"DUP3","source":3},{"begin":9563,"end":9584,"name":"OR","source":3},{"begin":9563,"end":9584,"name":"SWAP1","source":3},{"begin":9563,"end":9584,"name":"SWAP3","source":3},{"begin":9563,"end":9584,"name":"SSTORE","source":3},{"begin":9600,"end":9627,"name":"SWAP2","source":3},{"begin":9600,"end":9627,"name":"MLOAD","source":3},{"begin":9563,"end":9579,"name":"DUP8","source":3},{"begin":9563,"end":9579,"name":"SWAP4","source":3},{"begin":9600,"end":9627,"name":"SWAP2","source":3},{"begin":9600,"end":9627,"name":"DUP6","source":3},{"begin":9600,"end":9627,"name":"AND","source":3},{"begin":9600,"end":9627,"name":"SWAP2","source":3},{"begin":9600,"end":9627,"name":"PUSH","source":3,"value":"DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"},{"begin":9600,"end":9627,"name":"SWAP2","source":3},{"begin":9600,"end":9627,"name":"LOG4","source":3},{"begin":9645,"end":9649,"name":"SWAP5","source":3},{"begin":8861,"end":9656,"name":"SWAP4","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":8861,"end":9656,"jumpType":"[out]","name":"JUMP","source":3},{"begin":7105,"end":7473,"name":"tag","source":3,"value":"101"},{"begin":7105,"end":7473,"name":"JUMPDEST","source":3},{"begin":7217,"end":7255,"name":"PUSH [tag]","source":3,"value":"108"},{"begin":7231,"end":7236,"name":"DUP4","source":3},{"begin":7238,"end":7245,"name":"DUP4","source":3},{"begin":7247,"end":7254,"name":"DUP4","source":3},{"begin":7217,"end":7230,"name":"PUSH [tag]","source":3,"value":"109"},{"begin":7217,"end":7255,"jumpType":"[in]","name":"JUMP","source":3},{"begin":7217,"end":7255,"name":"tag","source":3,"value":"108"},{"begin":7217,"end":7255,"name":"JUMPDEST","source":3},{"begin":7212,"end":7467,"name":"PUSH [tag]","source":3,"value":"58"},{"begin":7212,"end":7467,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":7275,"end":7294,"name":"DUP4","source":3},{"begin":7275,"end":7294,"name":"AND","source":3},{"begin":7271,"end":7457,"name":"PUSH [tag]","source":3,"value":"111"},{"begin":7271,"end":7457,"name":"JUMPI","source":3},{"begin":7321,"end":7352,"name":"PUSH","source":3,"value":"40"},{"begin":7321,"end":7352,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"7E273289"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":7321,"end":7352,"name":"DUP2","source":3},{"begin":7321,"end":7352,"name":"MSTORE","source":3},{"begin":7321,"end":7352,"name":"PUSH","source":3,"value":"4"},{"begin":7321,"end":7352,"name":"DUP2","source":3},{"begin":7321,"end":7352,"name":"ADD","source":3},{"begin":5840,"end":5865,"name":"DUP3","source":19},{"begin":5840,"end":5865,"name":"SWAP1","source":19},{"begin":5840,"end":5865,"name":"MSTORE","source":19},{"begin":5813,"end":5831,"name":"PUSH","source":19,"value":"24"},{"begin":5813,"end":5831,"name":"ADD","source":19},{"begin":7321,"end":7352,"name":"PUSH [tag]","source":3,"value":"15"},{"begin":5694,"end":5871,"name":"JUMP","source":19},{"begin":7271,"end":7457,"name":"tag","source":3,"value":"111"},{"begin":7271,"end":7457,"name":"JUMPDEST","source":3},{"begin":7398,"end":7442,"name":"PUSH","source":3,"value":"40"},{"begin":7398,"end":7442,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"177E802F"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":7398,"end":7442,"name":"DUP2","source":3},{"begin":7398,"end":7442,"name":"MSTORE","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6068,"end":6100,"name":"DUP4","source":19},{"begin":6068,"end":6100,"name":"AND","source":19},{"begin":7398,"end":7442,"name":"PUSH","source":3,"value":"4"},{"begin":7398,"end":7442,"name":"DUP3","source":3},{"begin":7398,"end":7442,"name":"ADD","source":3},{"begin":6050,"end":6101,"name":"MSTORE","source":19},{"begin":6117,"end":6135,"name":"PUSH","source":19,"value":"24"},{"begin":6117,"end":6135,"name":"DUP2","source":19},{"begin":6117,"end":6135,"name":"ADD","source":19},{"begin":6110,"end":6144,"name":"DUP3","source":19},{"begin":6110,"end":6144,"name":"SWAP1","source":19},{"begin":6110,"end":6144,"name":"MSTORE","source":19},{"begin":6023,"end":6041,"name":"PUSH","source":19,"value":"44"},{"begin":6023,"end":6041,"name":"ADD","source":19},{"begin":7398,"end":7442,"name":"PUSH [tag]","source":3,"value":"15"},{"begin":5876,"end":6150,"name":"JUMP","source":19},{"begin":14794,"end":15456,"name":"tag","source":3,"value":"104"},{"begin":14794,"end":15456,"name":"JUMPDEST","source":3},{"begin":14954,"end":14963,"name":"DUP1","source":3},{"begin":14954,"end":14985,"name":"DUP1","source":3},{"begin":14954,"end":14985,"name":"PUSH [tag]","source":3,"value":"118"},{"begin":14954,"end":14985,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":14967,"end":14985,"name":"DUP3","source":3},{"begin":14967,"end":14985,"name":"AND","source":3},{"begin":14967,"end":14985,"name":"ISZERO","source":3},{"begin":14967,"end":14985,"name":"ISZERO","source":3},{"begin":14954,"end":14985,"name":"tag","source":3,"value":"118"},{"begin":14954,"end":14985,"name":"JUMPDEST","source":3},{"begin":14950,"end":15410,"name":"ISZERO","source":3},{"begin":14950,"end":15410,"name":"PUSH [tag]","source":3,"value":"119"},{"begin":14950,"end":15410,"name":"JUMPI","source":3},{"begin":15001,"end":15014,"name":"PUSH","source":3,"value":"0"},{"begin":15017,"end":15039,"name":"PUSH [tag]","source":3,"value":"120"},{"begin":15031,"end":15038,"name":"DUP5","source":3},{"begin":15017,"end":15030,"name":"PUSH [tag]","source":3,"value":"121"},{"begin":15017,"end":15039,"jumpType":"[in]","name":"JUMP","source":3},{"begin":15017,"end":15039,"name":"tag","source":3,"value":"120"},{"begin":15017,"end":15039,"name":"JUMPDEST","source":3},{"begin":15001,"end":15039,"name":"SWAP1","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15167,"end":15185,"name":"DUP4","source":3},{"begin":15167,"end":15185,"name":"AND","source":3},{"begin":15167,"end":15185,"name":"ISZERO","source":3},{"begin":15167,"end":15185,"name":"DUP1","source":3},{"begin":15167,"end":15185,"name":"ISZERO","source":3},{"begin":15167,"end":15185,"name":"SWAP1","source":3},{"begin":15167,"end":15202,"name":"PUSH [tag]","source":3,"value":"122"},{"begin":15167,"end":15202,"name":"JUMPI","source":3},{"begin":15167,"end":15202,"name":"POP","source":3},{"begin":15198,"end":15202,"name":"DUP3","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15189,"end":15202,"name":"AND","source":3},{"begin":15189,"end":15194,"name":"DUP2","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15189,"end":15202,"name":"AND","source":3},{"begin":15189,"end":15202,"name":"EQ","source":3},{"begin":15189,"end":15202,"name":"ISZERO","source":3},{"begin":15167,"end":15202,"name":"tag","source":3,"value":"122"},{"begin":15167,"end":15202,"name":"JUMPDEST","source":3},{"begin":15167,"end":15236,"name":"DUP1","source":3},{"begin":15167,"end":15236,"name":"ISZERO","source":3},{"begin":15167,"end":15236,"name":"PUSH [tag]","source":3,"value":"123"},{"begin":15167,"end":15236,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4038,"end":4063,"name":"DUP1","source":3},{"begin":4038,"end":4063,"name":"DUP3","source":3},{"begin":4038,"end":4063,"name":"AND","source":3},{"begin":4015,"end":4019,"name":"PUSH","source":3,"value":"0"},{"begin":4038,"end":4063,"name":"SWAP1","source":3},{"begin":4038,"end":4063,"name":"DUP2","source":3},{"begin":4038,"end":4063,"name":"MSTORE","source":3},{"begin":4038,"end":4056,"name":"PUSH","source":3,"value":"5"},{"begin":4038,"end":4063,"name":"PUSH","source":3,"value":"20"},{"begin":4038,"end":4063,"name":"SWAP1","source":3},{"begin":4038,"end":4063,"name":"DUP2","source":3},{"begin":4038,"end":4063,"name":"MSTORE","source":3},{"begin":4038,"end":4063,"name":"PUSH","source":3,"value":"40"},{"begin":4038,"end":4063,"name":"DUP1","source":3},{"begin":4038,"end":4063,"name":"DUP4","source":3},{"begin":4038,"end":4063,"name":"KECCAK256","source":3},{"begin":4038,"end":4073,"name":"SWAP4","source":3},{"begin":4038,"end":4073,"name":"DUP8","source":3},{"begin":4038,"end":4073,"name":"AND","source":3},{"begin":4038,"end":4073,"name":"DUP4","source":3},{"begin":4038,"end":4073,"name":"MSTORE","source":3},{"begin":4038,"end":4073,"name":"SWAP3","source":3},{"begin":4038,"end":4073,"name":"SWAP1","source":3},{"begin":4038,"end":4073,"name":"MSTORE","source":3},{"begin":4038,"end":4073,"name":"KECCAK256","source":3},{"begin":4038,"end":4073,"name":"SLOAD","source":3},{"begin":4038,"end":4073,"name":"PUSH","source":3,"value":"FF"},{"begin":4038,"end":4073,"name":"AND","source":3},{"begin":15206,"end":15236,"name":"ISZERO","source":3},{"begin":15167,"end":15236,"name":"tag","source":3,"value":"123"},{"begin":15167,"end":15236,"name":"JUMPDEST","source":3},{"begin":15163,"end":15305,"name":"ISZERO","source":3},{"begin":15163,"end":15305,"name":"PUSH [tag]","source":3,"value":"126"},{"begin":15163,"end":15305,"name":"JUMPI","source":3},{"begin":15263,"end":15290,"name":"PUSH","source":3,"value":"40"},{"begin":15263,"end":15290,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A9FBF51F"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":15263,"end":15290,"name":"DUP2","source":3},{"begin":15263,"end":15290,"name":"MSTORE","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3455,"end":3487,"name":"DUP5","source":19},{"begin":3455,"end":3487,"name":"AND","source":19},{"begin":15263,"end":15290,"name":"PUSH","source":3,"value":"4"},{"begin":15263,"end":15290,"name":"DUP3","source":3},{"begin":15263,"end":15290,"name":"ADD","source":3},{"begin":3437,"end":3488,"name":"MSTORE","source":19},{"begin":3410,"end":3428,"name":"PUSH","source":19,"value":"24"},{"begin":3410,"end":3428,"name":"ADD","source":19},{"begin":15263,"end":15290,"name":"PUSH [tag]","source":3,"value":"15"},{"begin":3291,"end":3494,"name":"JUMP","source":19},{"begin":15163,"end":15305,"name":"tag","source":3,"value":"126"},{"begin":15163,"end":15305,"name":"JUMPDEST","source":3},{"begin":15323,"end":15332,"name":"DUP2","source":3},{"begin":15319,"end":15400,"name":"ISZERO","source":3},{"begin":15319,"end":15400,"name":"PUSH [tag]","source":3,"value":"128"},{"begin":15319,"end":15400,"name":"JUMPI","source":3},{"begin":15377,"end":15384,"name":"DUP4","source":3},{"begin":15373,"end":15375,"name":"DUP6","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15357,"end":15385,"name":"AND","source":3},{"begin":15366,"end":15371,"name":"DUP3","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15357,"end":15385,"name":"AND","source":3},{"begin":15357,"end":15385,"name":"PUSH","source":3,"value":"8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"},{"begin":15357,"end":15385,"name":"PUSH","source":3,"value":"40"},{"begin":15357,"end":15385,"name":"MLOAD","source":3},{"begin":15357,"end":15385,"name":"PUSH","source":3,"value":"40"},{"begin":15357,"end":15385,"name":"MLOAD","source":3},{"begin":15357,"end":15385,"name":"DUP1","source":3},{"begin":15357,"end":15385,"name":"SWAP2","source":3},{"begin":15357,"end":15385,"name":"SUB","source":3},{"begin":15357,"end":15385,"name":"SWAP1","source":3},{"begin":15357,"end":15385,"name":"LOG4","source":3},{"begin":15319,"end":15400,"name":"tag","source":3,"value":"128"},{"begin":15319,"end":15400,"name":"JUMPDEST","source":3},{"begin":14987,"end":15410,"name":"POP","source":3},{"begin":14950,"end":15410,"name":"tag","source":3,"value":"119"},{"begin":14950,"end":15410,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":15420,"end":15444,"name":"PUSH","source":3,"value":"0"},{"begin":15420,"end":15444,"name":"SWAP1","source":3},{"begin":15420,"end":15444,"name":"DUP2","source":3},{"begin":15420,"end":15444,"name":"MSTORE","source":3},{"begin":15420,"end":15435,"name":"PUSH","source":3,"value":"4"},{"begin":15420,"end":15444,"name":"PUSH","source":3,"value":"20"},{"begin":15420,"end":15444,"name":"MSTORE","source":3},{"begin":15420,"end":15444,"name":"PUSH","source":3,"value":"40"},{"begin":15420,"end":15444,"name":"SWAP1","source":3},{"begin":15420,"end":15444,"name":"KECCAK256","source":3},{"begin":15420,"end":15449,"name":"DUP1","source":3},{"begin":15420,"end":15449,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":15420,"end":15449,"name":"AND","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15420,"end":15449,"name":"SWAP3","source":3},{"begin":15420,"end":15449,"name":"SWAP1","source":3},{"begin":15420,"end":15449,"name":"SWAP3","source":3},{"begin":15420,"end":15449,"name":"AND","source":3},{"begin":15420,"end":15449,"name":"SWAP2","source":3},{"begin":15420,"end":15449,"name":"SWAP1","source":3},{"begin":15420,"end":15449,"name":"SWAP2","source":3},{"begin":15420,"end":15449,"name":"OR","source":3},{"begin":15420,"end":15449,"name":"SWAP1","source":3},{"begin":15420,"end":15449,"name":"SSTORE","source":3},{"begin":14794,"end":15456,"jumpType":"[out]","name":"JUMP","source":3},{"begin":6401,"end":6673,"name":"tag","source":3,"value":"109"},{"begin":6401,"end":6673,"name":"JUMPDEST","source":3},{"begin":6504,"end":6508,"name":"PUSH","source":3,"value":"0"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6539,"end":6560,"name":"DUP4","source":3},{"begin":6539,"end":6560,"name":"AND","source":3},{"begin":6539,"end":6560,"name":"ISZERO","source":3},{"begin":6539,"end":6560,"name":"DUP1","source":3},{"begin":6539,"end":6560,"name":"ISZERO","source":3},{"begin":6539,"end":6560,"name":"SWAP1","source":3},{"begin":6539,"end":6666,"name":"PUSH [tag]","source":3,"value":"133"},{"begin":6539,"end":6666,"name":"JUMPI","source":3},{"begin":6539,"end":6666,"name":"POP","source":3},{"begin":6586,"end":6593,"name":"DUP3","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6577,"end":6593,"name":"AND","source":3},{"begin":6577,"end":6582,"name":"DUP5","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6577,"end":6593,"name":"AND","source":3},{"begin":6577,"end":6593,"name":"EQ","source":3},{"begin":6577,"end":6629,"name":"DUP1","source":3},{"begin":6577,"end":6629,"name":"PUSH [tag]","source":3,"value":"132"},{"begin":6577,"end":6629,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4038,"end":4063,"name":"DUP1","source":3},{"begin":4038,"end":4063,"name":"DUP6","source":3},{"begin":4038,"end":4063,"name":"AND","source":3},{"begin":4015,"end":4019,"name":"PUSH","source":3,"value":"0"},{"begin":4038,"end":4063,"name":"SWAP1","source":3},{"begin":4038,"end":4063,"name":"DUP2","source":3},{"begin":4038,"end":4063,"name":"MSTORE","source":3},{"begin":4038,"end":4056,"name":"PUSH","source":3,"value":"5"},{"begin":4038,"end":4063,"name":"PUSH","source":3,"value":"20"},{"begin":4038,"end":4063,"name":"SWAP1","source":3},{"begin":4038,"end":4063,"name":"DUP2","source":3},{"begin":4038,"end":4063,"name":"MSTORE","source":3},{"begin":4038,"end":4063,"name":"PUSH","source":3,"value":"40"},{"begin":4038,"end":4063,"name":"DUP1","source":3},{"begin":4038,"end":4063,"name":"DUP4","source":3},{"begin":4038,"end":4063,"name":"KECCAK256","source":3},{"begin":4038,"end":4073,"name":"SWAP4","source":3},{"begin":4038,"end":4073,"name":"DUP8","source":3},{"begin":4038,"end":4073,"name":"AND","source":3},{"begin":4038,"end":4073,"name":"DUP4","source":3},{"begin":4038,"end":4073,"name":"MSTORE","source":3},{"begin":4038,"end":4073,"name":"SWAP3","source":3},{"begin":4038,"end":4073,"name":"SWAP1","source":3},{"begin":4038,"end":4073,"name":"MSTORE","source":3},{"begin":4038,"end":4073,"name":"KECCAK256","source":3},{"begin":4038,"end":4073,"name":"SLOAD","source":3},{"begin":4038,"end":4073,"name":"PUSH","source":3,"value":"FF"},{"begin":4038,"end":4073,"name":"AND","source":3},{"begin":6597,"end":6629,"name":"tag","source":3,"value":"132"},{"begin":6597,"end":6629,"name":"JUMPDEST","source":3},{"begin":6577,"end":6665,"name":"DUP1","source":3},{"begin":6577,"end":6665,"name":"PUSH [tag]","source":3,"value":"133"},{"begin":6577,"end":6665,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6033,"end":6040,"name":"PUSH","source":3,"value":"0"},{"begin":6059,"end":6083,"name":"DUP3","source":3},{"begin":6059,"end":6083,"name":"DUP2","source":3},{"begin":6059,"end":6083,"name":"MSTORE","source":3},{"begin":6059,"end":6074,"name":"PUSH","source":3,"value":"4"},{"begin":6059,"end":6083,"name":"PUSH","source":3,"value":"20"},{"begin":6059,"end":6083,"name":"MSTORE","source":3},{"begin":6059,"end":6083,"name":"PUSH","source":3,"value":"40"},{"begin":6059,"end":6083,"name":"SWAP1","source":3},{"begin":6059,"end":6083,"name":"KECCAK256","source":3},{"begin":6059,"end":6083,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6633,"end":6665,"name":"DUP5","source":3},{"begin":6633,"end":6665,"name":"DUP2","source":3},{"begin":6633,"end":6665,"name":"AND","source":3},{"begin":6059,"end":6083,"name":"SWAP2","source":3},{"begin":6059,"end":6083,"name":"AND","source":3},{"begin":6633,"end":6665,"name":"EQ","source":3},{"begin":6577,"end":6665,"name":"tag","source":3,"value":"133"},{"begin":6577,"end":6665,"name":"JUMPDEST","source":3},{"begin":6520,"end":6666,"name":"SWAP5","source":3},{"begin":6401,"end":6673,"name":"SWAP4","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6401,"end":6673,"jumpType":"[out]","name":"JUMP","source":3},{"begin":16212,"end":16453,"name":"tag","source":3,"value":"121"},{"begin":16212,"end":16453,"name":"JUMPDEST","source":3},{"begin":16275,"end":16282,"name":"PUSH","source":3,"value":"0"},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"MSTORE","source":3},{"begin":5824,"end":5831,"name":"PUSH","source":3,"value":"2"},{"begin":5824,"end":5840,"name":"PUSH","source":3,"value":"20"},{"begin":5824,"end":5840,"name":"MSTORE","source":3},{"begin":5824,"end":5840,"name":"PUSH","source":3,"value":"40"},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"KECCAK256","source":3},{"begin":5824,"end":5840,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5824,"end":5840,"name":"AND","source":3},{"begin":5824,"end":5840,"name":"DUP1","source":3},{"begin":16337,"end":16425,"name":"PUSH [tag]","source":3,"value":"138"},{"begin":16337,"end":16425,"name":"JUMPI","source":3},{"begin":16383,"end":16414,"name":"PUSH","source":3,"value":"40"},{"begin":16383,"end":16414,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"7E273289"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":16383,"end":16414,"name":"DUP2","source":3},{"begin":16383,"end":16414,"name":"MSTORE","source":3},{"begin":16383,"end":16414,"name":"PUSH","source":3,"value":"4"},{"begin":16383,"end":16414,"name":"DUP2","source":3},{"begin":16383,"end":16414,"name":"ADD","source":3},{"begin":5840,"end":5865,"name":"DUP5","source":19},{"begin":5840,"end":5865,"name":"SWAP1","source":19},{"begin":5840,"end":5865,"name":"MSTORE","source":19},{"begin":5813,"end":5831,"name":"PUSH","source":19,"value":"24"},{"begin":5813,"end":5831,"name":"ADD","source":19},{"begin":16383,"end":16414,"name":"PUSH [tag]","source":3,"value":"15"},{"begin":5694,"end":5871,"name":"JUMP","source":19},{"begin":16337,"end":16425,"name":"tag","source":3,"value":"138"},{"begin":16337,"end":16425,"name":"JUMPDEST","source":3},{"begin":16441,"end":16446,"name":"SWAP3","source":3},{"begin":16212,"end":16453,"name":"SWAP2","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":16212,"end":16453,"jumpType":"[out]","name":"JUMP","source":3},{"begin":14,"end":191,"name":"tag","source":19,"value":"142"},{"begin":14,"end":191,"name":"JUMPDEST","source":19},{"begin":93,"end":106,"name":"DUP1","source":19},{"begin":93,"end":106,"name":"MLOAD","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":135,"end":166,"name":"DUP2","source":19},{"begin":135,"end":166,"name":"AND","source":19},{"begin":125,"end":167,"name":"DUP2","source":19},{"begin":125,"end":167,"name":"EQ","source":19},{"begin":115,"end":185,"name":"PUSH [tag]","source":19,"value":"31"},{"begin":115,"end":185,"name":"JUMPI","source":19},{"begin":181,"end":182,"name":"PUSH","source":19,"value":"0"},{"begin":178,"end":179,"name":"DUP1","source":19},{"begin":171,"end":183,"name":"REVERT","source":19},{"begin":196,"end":574,"name":"tag","source":19,"value":"3"},{"begin":196,"end":574,"name":"JUMPDEST","source":19},{"begin":284,"end":290,"name":"PUSH","source":19,"value":"0"},{"begin":292,"end":298,"name":"DUP1","source":19},{"begin":300,"end":306,"name":"PUSH","source":19,"value":"0"},{"begin":353,"end":355,"name":"PUSH","source":19,"value":"60"},{"begin":341,"end":350,"name":"DUP5","source":19},{"begin":332,"end":339,"name":"DUP7","source":19},{"begin":328,"end":351,"name":"SUB","source":19},{"begin":324,"end":356,"name":"SLT","source":19},{"begin":321,"end":373,"name":"ISZERO","source":19},{"begin":321,"end":373,"name":"PUSH [tag]","source":19,"value":"153"},{"begin":321,"end":373,"name":"JUMPI","source":19},{"begin":369,"end":370,"name":"PUSH","source":19,"value":"0"},{"begin":366,"end":367,"name":"DUP1","source":19},{"begin":359,"end":371,"name":"REVERT","source":19},{"begin":321,"end":373,"name":"tag","source":19,"value":"153"},{"begin":321,"end":373,"name":"JUMPDEST","source":19},{"begin":392,"end":432,"name":"PUSH [tag]","source":19,"value":"154"},{"begin":422,"end":431,"name":"DUP5","source":19},{"begin":392,"end":432,"name":"PUSH [tag]","source":19,"value":"142"},{"begin":392,"end":432,"jumpType":"[in]","name":"JUMP","source":19},{"begin":392,"end":432,"name":"tag","source":19,"value":"154"},{"begin":392,"end":432,"name":"JUMPDEST","source":19},{"begin":382,"end":432,"name":"SWAP3","source":19},{"begin":382,"end":432,"name":"POP","source":19},{"begin":451,"end":500,"name":"PUSH [tag]","source":19,"value":"155"},{"begin":496,"end":498,"name":"PUSH","source":19,"value":"20"},{"begin":485,"end":494,"name":"DUP6","source":19},{"begin":481,"end":499,"name":"ADD","source":19},{"begin":451,"end":500,"name":"PUSH [tag]","source":19,"value":"142"},{"begin":451,"end":500,"jumpType":"[in]","name":"JUMP","source":19},{"begin":451,"end":500,"name":"tag","source":19,"value":"155"},{"begin":451,"end":500,"name":"JUMPDEST","source":19},{"begin":441,"end":500,"name":"SWAP2","source":19},{"begin":441,"end":500,"name":"POP","source":19},{"begin":519,"end":568,"name":"PUSH [tag]","source":19,"value":"156"},{"begin":564,"end":566,"name":"PUSH","source":19,"value":"40"},{"begin":553,"end":562,"name":"DUP6","source":19},{"begin":549,"end":567,"name":"ADD","source":19},{"begin":519,"end":568,"name":"PUSH [tag]","source":19,"value":"142"},{"begin":519,"end":568,"jumpType":"[in]","name":"JUMP","source":19},{"begin":519,"end":568,"name":"tag","source":19,"value":"156"},{"begin":519,"end":568,"name":"JUMPDEST","source":19},{"begin":509,"end":568,"name":"SWAP1","source":19},{"begin":509,"end":568,"name":"POP","source":19},{"begin":196,"end":574,"name":"SWAP3","source":19},{"begin":196,"end":574,"name":"POP","source":19},{"begin":196,"end":574,"name":"SWAP3","source":19},{"begin":196,"end":574,"name":"POP","source":19},{"begin":196,"end":574,"name":"SWAP3","source":19},{"begin":196,"end":574,"jumpType":"[out]","name":"JUMP","source":19},{"begin":579,"end":706,"name":"tag","source":19,"value":"143"},{"begin":579,"end":706,"name":"JUMPDEST","source":19},{"begin":640,"end":650,"name":"PUSH","source":19,"value":"4E487B71"},{"begin":635,"end":638,"name":"PUSH","source":19,"value":"E0"},{"begin":631,"end":651,"name":"SHL","source":19},{"begin":628,"end":629,"name":"PUSH","source":19,"value":"0"},{"begin":621,"end":652,"name":"MSTORE","source":19},{"begin":671,"end":675,"name":"PUSH","source":19,"value":"41"},{"begin":668,"end":669,"name":"PUSH","source":19,"value":"4"},{"begin":661,"end":676,"name":"MSTORE","source":19},{"begin":695,"end":699,"name":"PUSH","source":19,"value":"24"},{"begin":692,"end":693,"name":"PUSH","source":19,"value":"0"},{"begin":685,"end":700,"name":"REVERT","source":19},{"begin":711,"end":1091,"name":"tag","source":19,"value":"144"},{"begin":711,"end":1091,"name":"JUMPDEST","source":19},{"begin":790,"end":791,"name":"PUSH","source":19,"value":"1"},{"begin":786,"end":798,"name":"DUP2","source":19},{"begin":786,"end":798,"name":"DUP2","source":19},{"begin":786,"end":798,"name":"SHR","source":19},{"begin":786,"end":798,"name":"SWAP1","source":19},{"begin":833,"end":845,"name":"DUP3","source":19},{"begin":833,"end":845,"name":"AND","source":19},{"begin":833,"end":845,"name":"DUP1","source":19},{"begin":854,"end":915,"name":"PUSH [tag]","source":19,"value":"159"},{"begin":854,"end":915,"name":"JUMPI","source":19},{"begin":908,"end":912,"name":"PUSH","source":19,"value":"7F"},{"begin":900,"end":906,"name":"DUP3","source":19},{"begin":896,"end":913,"name":"AND","source":19},{"begin":886,"end":913,"name":"SWAP2","source":19},{"begin":886,"end":913,"name":"POP","source":19},{"begin":854,"end":915,"name":"tag","source":19,"value":"159"},{"begin":854,"end":915,"name":"JUMPDEST","source":19},{"begin":961,"end":963,"name":"PUSH","source":19,"value":"20"},{"begin":953,"end":959,"name":"DUP3","source":19},{"begin":950,"end":964,"name":"LT","source":19},{"begin":930,"end":948,"name":"DUP2","source":19},{"begin":927,"end":965,"name":"SUB","source":19},{"begin":924,"end":1085,"name":"PUSH [tag]","source":19,"value":"160"},{"begin":924,"end":1085,"name":"JUMPI","source":19},{"begin":1007,"end":1017,"name":"PUSH","source":19,"value":"4E487B71"},{"begin":1002,"end":1005,"name":"PUSH","source":19,"value":"E0"},{"begin":998,"end":1018,"name":"SHL","source":19},{"begin":995,"end":996,"name":"PUSH","source":19,"value":"0"},{"begin":988,"end":1019,"name":"MSTORE","source":19},{"begin":1042,"end":1046,"name":"PUSH","source":19,"value":"22"},{"begin":1039,"end":1040,"name":"PUSH","source":19,"value":"4"},{"begin":1032,"end":1047,"name":"MSTORE","source":19},{"begin":1070,"end":1074,"name":"PUSH","source":19,"value":"24"},{"begin":1067,"end":1068,"name":"PUSH","source":19,"value":"0"},{"begin":1060,"end":1075,"name":"REVERT","source":19},{"begin":924,"end":1085,"name":"tag","source":19,"value":"160"},{"begin":924,"end":1085,"name":"JUMPDEST","source":19},{"begin":924,"end":1085,"name":"POP","source":19},{"begin":711,"end":1091,"name":"SWAP2","source":19},{"begin":711,"end":1091,"name":"SWAP1","source":19},{"begin":711,"end":1091,"name":"POP","source":19},{"begin":711,"end":1091,"jumpType":"[out]","name":"JUMP","source":19},{"begin":1222,"end":1765,"name":"tag","source":19,"value":"146"},{"begin":1222,"end":1765,"name":"JUMPDEST","source":19},{"begin":1324,"end":1326,"name":"PUSH","source":19,"value":"1F"},{"begin":1319,"end":1322,"name":"DUP3","source":19},{"begin":1316,"end":1327,"name":"GT","source":19},{"begin":1313,"end":1759,"name":"ISZERO","source":19},{"begin":1313,"end":1759,"name":"PUSH [tag]","source":19,"value":"58"},{"begin":1313,"end":1759,"name":"JUMPI","source":19},{"begin":1360,"end":1361,"name":"PUSH","source":19,"value":"0"},{"begin":1384,"end":1389,"name":"DUP2","source":19},{"begin":1381,"end":1382,"name":"PUSH","source":19,"value":"0"},{"begin":1374,"end":1390,"name":"MSTORE","source":19},{"begin":1428,"end":1432,"name":"PUSH","source":19,"value":"20"},{"begin":1425,"end":1426,"name":"PUSH","source":19,"value":"0"},{"begin":1415,"end":1433,"name":"KECCAK256","source":19},{"begin":1498,"end":1500,"name":"PUSH","source":19,"value":"1F"},{"begin":1486,"end":1496,"name":"DUP6","source":19},{"begin":1482,"end":1501,"name":"ADD","source":19},{"begin":1479,"end":1480,"name":"PUSH","source":19,"value":"5"},{"begin":1475,"end":1502,"name":"SHR","source":19},{"begin":1469,"end":1473,"name":"DUP2","source":19},{"begin":1465,"end":1503,"name":"ADD","source":19},{"begin":1534,"end":1538,"name":"PUSH","source":19,"value":"20"},{"begin":1522,"end":1532,"name":"DUP7","source":19},{"begin":1519,"end":1539,"name":"LT","source":19},{"begin":1516,"end":1563,"name":"ISZERO","source":19},{"begin":1516,"end":1563,"name":"PUSH [tag]","source":19,"value":"164"},{"begin":1516,"end":1563,"name":"JUMPI","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1557,"end":1561,"name":"DUP1","source":19},{"begin":1516,"end":1563,"name":"tag","source":19,"value":"164"},{"begin":1516,"end":1563,"name":"JUMPDEST","source":19},{"begin":1612,"end":1614,"name":"PUSH","source":19,"value":"1F"},{"begin":1607,"end":1610,"name":"DUP6","source":19},{"begin":1603,"end":1615,"name":"ADD","source":19},{"begin":1600,"end":1601,"name":"PUSH","source":19,"value":"5"},{"begin":1596,"end":1616,"name":"SHR","source":19},{"begin":1590,"end":1594,"name":"DUP3","source":19},{"begin":1586,"end":1617,"name":"ADD","source":19},{"begin":1576,"end":1617,"name":"SWAP2","source":19},{"begin":1576,"end":1617,"name":"POP","source":19},{"begin":1667,"end":1749,"name":"tag","source":19,"value":"165"},{"begin":1667,"end":1749,"name":"JUMPDEST","source":19},{"begin":1685,"end":1687,"name":"DUP2","source":19},{"begin":1678,"end":1683,"name":"DUP2","source":19},{"begin":1675,"end":1688,"name":"LT","source":19},{"begin":1667,"end":1749,"name":"ISZERO","source":19},{"begin":1667,"end":1749,"name":"PUSH [tag]","source":19,"value":"92"},{"begin":1667,"end":1749,"name":"JUMPI","source":19},{"begin":1730,"end":1747,"name":"DUP3","source":19},{"begin":1730,"end":1747,"name":"DUP2","source":19},{"begin":1730,"end":1747,"name":"SSTORE","source":19},{"begin":1711,"end":1712,"name":"PUSH","source":19,"value":"1"},{"begin":1700,"end":1713,"name":"ADD","source":19},{"begin":1667,"end":1749,"name":"PUSH [tag]","source":19,"value":"165"},{"begin":1667,"end":1749,"name":"JUMP","source":19},{"begin":1941,"end":3286,"name":"tag","source":19,"value":"10"},{"begin":1941,"end":3286,"name":"JUMPDEST","source":19},{"begin":2061,"end":2071,"name":"DUP2","source":19},{"begin":2061,"end":2071,"name":"MLOAD","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"40"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2083,"end":2113,"name":"DUP2","source":19},{"begin":2083,"end":2113,"name":"GT","source":19},{"begin":2080,"end":2136,"name":"ISZERO","source":19},{"begin":2080,"end":2136,"name":"PUSH [tag]","source":19,"value":"171"},{"begin":2080,"end":2136,"name":"JUMPI","source":19},{"begin":2116,"end":2134,"name":"PUSH [tag]","source":19,"value":"171"},{"begin":2116,"end":2134,"name":"PUSH [tag]","source":19,"value":"143"},{"begin":2116,"end":2134,"jumpType":"[in]","name":"JUMP","source":19},{"begin":2116,"end":2134,"name":"tag","source":19,"value":"171"},{"begin":2116,"end":2134,"name":"JUMPDEST","source":19},{"begin":2145,"end":2242,"name":"PUSH [tag]","source":19,"value":"172"},{"begin":2235,"end":2241,"name":"DUP2","source":19},{"begin":2195,"end":2233,"name":"PUSH [tag]","source":19,"value":"173"},{"begin":2227,"end":2231,"name":"DUP5","source":19},{"begin":2221,"end":2232,"name":"SLOAD","source":19},{"begin":2195,"end":2233,"name":"PUSH [tag]","source":19,"value":"144"},{"begin":2195,"end":2233,"jumpType":"[in]","name":"JUMP","source":19},{"begin":2195,"end":2233,"name":"tag","source":19,"value":"173"},{"begin":2195,"end":2233,"name":"JUMPDEST","source":19},{"begin":2189,"end":2193,"name":"DUP5","source":19},{"begin":2145,"end":2242,"name":"PUSH [tag]","source":19,"value":"146"},{"begin":2145,"end":2242,"jumpType":"[in]","name":"JUMP","source":19},{"begin":2145,"end":2242,"name":"tag","source":19,"value":"172"},{"begin":2145,"end":2242,"name":"JUMPDEST","source":19},{"begin":2297,"end":2301,"name":"PUSH","source":19,"value":"20"},{"begin":2297,"end":2301,"name":"DUP1","source":19},{"begin":2354,"end":2356,"name":"PUSH","source":19,"value":"1F"},{"begin":2343,"end":2357,"name":"DUP4","source":19},{"begin":2343,"end":2357,"name":"GT","source":19},{"begin":2371,"end":2372,"name":"PUSH","source":19,"value":"1"},{"begin":2366,"end":3029,"name":"DUP2","source":19},{"begin":2366,"end":3029,"name":"EQ","source":19},{"begin":2366,"end":3029,"name":"PUSH [tag]","source":19,"value":"175"},{"begin":2366,"end":3029,"name":"JUMPI","source":19},{"begin":3073,"end":3074,"name":"PUSH","source":19,"value":"0"},{"begin":3090,"end":3096,"name":"DUP5","source":19},{"begin":3087,"end":3176,"name":"ISZERO","source":19},{"begin":3087,"end":3176,"name":"PUSH [tag]","source":19,"value":"176"},{"begin":3087,"end":3176,"name":"JUMPI","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3142,"end":3161,"name":"DUP6","source":19},{"begin":3142,"end":3161,"name":"DUP4","source":19},{"begin":3142,"end":3161,"name":"ADD","source":19},{"begin":3136,"end":3162,"name":"MLOAD","source":19},{"begin":3087,"end":3176,"name":"tag","source":19,"value":"176"},{"begin":3087,"end":3176,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":1898,"end":1899,"name":"PUSH","source":19,"value":"3"},{"begin":1894,"end":1905,"name":"DUP7","source":19},{"begin":1894,"end":1905,"name":"SWAP1","source":19},{"begin":1894,"end":1905,"name":"SHL","source":19},{"begin":1890,"end":1914,"name":"SHR","source":19},{"begin":1886,"end":1915,"name":"NOT","source":19},{"begin":1876,"end":1916,"name":"AND","source":19},{"begin":1922,"end":1923,"name":"PUSH","source":19,"value":"1"},{"begin":1918,"end":1929,"name":"DUP6","source":19},{"begin":1918,"end":1929,"name":"SWAP1","source":19},{"begin":1918,"end":1929,"name":"SHL","source":19},{"begin":1873,"end":1930,"name":"OR","source":19},{"begin":3189,"end":3270,"name":"DUP6","source":19},{"begin":3189,"end":3270,"name":"SSTORE","source":19},{"begin":2336,"end":3280,"name":"PUSH [tag]","source":19,"value":"92"},{"begin":2336,"end":3280,"name":"JUMP","source":19},{"begin":2366,"end":3029,"name":"tag","source":19,"value":"175"},{"begin":2366,"end":3029,"name":"JUMPDEST","source":19},{"begin":1169,"end":1170,"name":"PUSH","source":19,"value":"0"},{"begin":1162,"end":1176,"name":"DUP6","source":19},{"begin":1162,"end":1176,"name":"DUP2","source":19},{"begin":1162,"end":1176,"name":"MSTORE","source":19},{"begin":1206,"end":1210,"name":"PUSH","source":19,"value":"20"},{"begin":1193,"end":1211,"name":"DUP2","source":19},{"begin":1193,"end":1211,"name":"KECCAK256","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1F"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":2402,"end":2422,"name":"DUP7","source":19},{"begin":2402,"end":2422,"name":"AND","source":19},{"begin":2402,"end":2422,"name":"SWAP2","source":19},{"begin":2520,"end":2756,"name":"tag","source":19,"value":"179"},{"begin":2520,"end":2756,"name":"JUMPDEST","source":19},{"begin":2534,"end":2541,"name":"DUP3","source":19},{"begin":2531,"end":2532,"name":"DUP2","source":19},{"begin":2528,"end":2542,"name":"LT","source":19},{"begin":2520,"end":2756,"name":"ISZERO","source":19},{"begin":2520,"end":2756,"name":"PUSH [tag]","source":19,"value":"181"},{"begin":2520,"end":2756,"name":"JUMPI","source":19},{"begin":2623,"end":2642,"name":"DUP9","source":19},{"begin":2623,"end":2642,"name":"DUP7","source":19},{"begin":2623,"end":2642,"name":"ADD","source":19},{"begin":2617,"end":2643,"name":"MLOAD","source":19},{"begin":2602,"end":2644,"name":"DUP3","source":19},{"begin":2602,"end":2644,"name":"SSTORE","source":19},{"begin":2715,"end":2742,"name":"SWAP5","source":19},{"begin":2715,"end":2742,"name":"DUP5","source":19},{"begin":2715,"end":2742,"name":"ADD","source":19},{"begin":2715,"end":2742,"name":"SWAP5","source":19},{"begin":2683,"end":2684,"name":"PUSH","source":19,"value":"1"},{"begin":2671,"end":2685,"name":"SWAP1","source":19},{"begin":2671,"end":2685,"name":"SWAP2","source":19},{"begin":2671,"end":2685,"name":"ADD","source":19},{"begin":2671,"end":2685,"name":"SWAP1","source":19},{"begin":2550,"end":2569,"name":"DUP5","source":19},{"begin":2550,"end":2569,"name":"ADD","source":19},{"begin":2520,"end":2756,"name":"PUSH [tag]","source":19,"value":"179"},{"begin":2520,"end":2756,"name":"JUMP","source":19},{"begin":2520,"end":2756,"name":"tag","source":19,"value":"181"},{"begin":2520,"end":2756,"name":"JUMPDEST","source":19},{"begin":2524,"end":2527,"name":"POP","source":19},{"begin":2784,"end":2790,"name":"DUP6","source":19},{"begin":2775,"end":2782,"name":"DUP3","source":19},{"begin":2772,"end":2791,"name":"LT","source":19},{"begin":2769,"end":2970,"name":"ISZERO","source":19},{"begin":2769,"end":2970,"name":"PUSH [tag]","source":19,"value":"182"},{"begin":2769,"end":2970,"name":"JUMPI","source":19},{"begin":2845,"end":2864,"name":"DUP8","source":19},{"begin":2845,"end":2864,"name":"DUP6","source":19},{"begin":2845,"end":2864,"name":"ADD","source":19},{"begin":2839,"end":2865,"name":"MLOAD","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":2928,"end":2929,"name":"PUSH","source":19,"value":"3"},{"begin":2924,"end":2938,"name":"DUP9","source":19},{"begin":2924,"end":2938,"name":"SWAP1","source":19},{"begin":2924,"end":2938,"name":"SHL","source":19},{"begin":2940,"end":2943,"name":"PUSH","source":19,"value":"F8"},{"begin":2920,"end":2944,"name":"AND","source":19},{"begin":2916,"end":2953,"name":"SHR","source":19},{"begin":2912,"end":2954,"name":"NOT","source":19},{"begin":2897,"end":2955,"name":"AND","source":19},{"begin":2882,"end":2956,"name":"DUP2","source":19},{"begin":2882,"end":2956,"name":"SSTORE","source":19},{"begin":2769,"end":2970,"name":"tag","source":19,"value":"182"},{"begin":2769,"end":2970,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3016,"end":3017,"name":"PUSH","source":19,"value":"1"},{"begin":3000,"end":3014,"name":"SWAP1","source":19},{"begin":3000,"end":3014,"name":"DUP2","source":19},{"begin":3000,"end":3014,"name":"SHL","source":19},{"begin":2996,"end":3018,"name":"ADD","source":19},{"begin":2983,"end":3019,"name":"SWAP1","source":19},{"begin":2983,"end":3019,"name":"SSTORE","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1941,"end":3286,"jumpType":"[out]","name":"JUMP","source":19},{"begin":3499,"end":3626,"name":"tag","source":19,"value":"148"},{"begin":3499,"end":3626,"name":"JUMPDEST","source":19},{"begin":3560,"end":3570,"name":"PUSH","source":19,"value":"4E487B71"},{"begin":3555,"end":3558,"name":"PUSH","source":19,"value":"E0"},{"begin":3551,"end":3571,"name":"SHL","source":19},{"begin":3548,"end":3549,"name":"PUSH","source":19,"value":"0"},{"begin":3541,"end":3572,"name":"MSTORE","source":19},{"begin":3591,"end":3595,"name":"PUSH","source":19,"value":"11"},{"begin":3588,"end":3589,"name":"PUSH","source":19,"value":"4"},{"begin":3581,"end":3596,"name":"MSTORE","source":19},{"begin":3615,"end":3619,"name":"PUSH","source":19,"value":"24"},{"begin":3612,"end":3613,"name":"PUSH","source":19,"value":"0"},{"begin":3605,"end":3620,"name":"REVERT","source":19},{"begin":3631,"end":3766,"name":"tag","source":19,"value":"27"},{"begin":3631,"end":3766,"name":"JUMPDEST","source":19},{"begin":3670,"end":3673,"name":"PUSH","source":19,"value":"0"},{"begin":3691,"end":3708,"name":"PUSH","source":19,"value":"1"},{"begin":3691,"end":3708,"name":"DUP3","source":19},{"begin":3691,"end":3708,"name":"ADD","source":19},{"begin":3688,"end":3731,"name":"PUSH [tag]","source":19,"value":"187"},{"begin":3688,"end":3731,"name":"JUMPI","source":19},{"begin":3711,"end":3729,"name":"PUSH [tag]","source":19,"value":"187"},{"begin":3711,"end":3729,"name":"PUSH [tag]","source":19,"value":"148"},{"begin":3711,"end":3729,"jumpType":"[in]","name":"JUMP","source":19},{"begin":3711,"end":3729,"name":"tag","source":19,"value":"187"},{"begin":3711,"end":3729,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3758,"end":3759,"name":"PUSH","source":19,"value":"1"},{"begin":3747,"end":3760,"name":"ADD","source":19},{"begin":3747,"end":3760,"name":"SWAP1","source":19},{"begin":3631,"end":3766,"jumpType":"[out]","name":"JUMP","source":19},{"begin":3771,"end":3899,"name":"tag","source":19,"value":"47"},{"begin":3771,"end":3899,"name":"JUMPDEST","source":19},{"begin":3838,"end":3847,"name":"DUP2","source":19},{"begin":3838,"end":3847,"name":"DUP2","source":19},{"begin":3838,"end":3847,"name":"SUB","source":19},{"begin":3859,"end":3870,"name":"DUP2","source":19},{"begin":3859,"end":3870,"name":"DUP2","source":19},{"begin":3859,"end":3870,"name":"GT","source":19},{"begin":3856,"end":3893,"name":"ISZERO","source":19},{"begin":3856,"end":3893,"name":"PUSH [tag]","source":19,"value":"138"},{"begin":3856,"end":3893,"name":"JUMPI","source":19},{"begin":3873,"end":3891,"name":"PUSH [tag]","source":19,"value":"138"},{"begin":3873,"end":3891,"name":"PUSH [tag]","source":19,"value":"148"},{"begin":3873,"end":3891,"jumpType":"[in]","name":"JUMP","source":19},{"begin":3904,"end":4235,"name":"tag","source":19,"value":"49"},{"begin":3904,"end":4235,"name":"JUMPDEST","source":19},{"begin":4009,"end":4018,"name":"PUSH","source":19,"value":"0"},{"begin":4020,"end":4029,"name":"DUP1","source":19},{"begin":4062,"end":4070,"name":"DUP6","source":19},{"begin":4050,"end":4060,"name":"DUP6","source":19},{"begin":4047,"end":4071,"name":"GT","source":19},{"begin":4044,"end":4088,"name":"ISZERO","source":19},{"begin":4044,"end":4088,"name":"PUSH [tag]","source":19,"value":"192"},{"begin":4044,"end":4088,"name":"JUMPI","source":19},{"begin":4084,"end":4085,"name":"PUSH","source":19,"value":"0"},{"begin":4081,"end":4082,"name":"DUP1","source":19},{"begin":4074,"end":4086,"name":"REVERT","source":19},{"begin":4044,"end":4088,"name":"tag","source":19,"value":"192"},{"begin":4044,"end":4088,"name":"JUMPDEST","source":19},{"begin":4113,"end":4119,"name":"DUP4","source":19},{"begin":4103,"end":4111,"name":"DUP7","source":19},{"begin":4100,"end":4120,"name":"GT","source":19},{"begin":4097,"end":4137,"name":"ISZERO","source":19},{"begin":4097,"end":4137,"name":"PUSH [tag]","source":19,"value":"193"},{"begin":4097,"end":4137,"name":"JUMPI","source":19},{"begin":4133,"end":4134,"name":"PUSH","source":19,"value":"0"},{"begin":4130,"end":4131,"name":"DUP1","source":19},{"begin":4123,"end":4135,"name":"REVERT","source":19},{"begin":4097,"end":4137,"name":"tag","source":19,"value":"193"},{"begin":4097,"end":4137,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4159,"end":4182,"name":"DUP3","source":19},{"begin":4159,"end":4182,"name":"ADD","source":19},{"begin":4159,"end":4182,"name":"SWAP4","source":19},{"begin":4204,"end":4229,"name":"SWAP2","source":19},{"begin":4204,"end":4229,"name":"SWAP1","source":19},{"begin":4204,"end":4229,"name":"SWAP3","source":19},{"begin":4204,"end":4229,"name":"SUB","source":19},{"begin":4204,"end":4229,"name":"SWAP2","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3904,"end":4235,"jumpType":"[out]","name":"JUMP","source":19},{"begin":4240,"end":4569,"name":"tag","source":19,"value":"51"},{"begin":4240,"end":4569,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"60"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":4361,"end":4380,"name":"DUP2","source":19},{"begin":4361,"end":4380,"name":"CALLDATALOAD","source":19},{"begin":4440,"end":4451,"name":"DUP2","source":19},{"begin":4440,"end":4451,"name":"DUP2","source":19},{"begin":4440,"end":4451,"name":"AND","source":19},{"begin":4440,"end":4451,"name":"SWAP2","source":19},{"begin":4471,"end":4473,"name":"PUSH","source":19,"value":"14"},{"begin":4463,"end":4474,"name":"DUP6","source":19},{"begin":4463,"end":4474,"name":"LT","source":19},{"begin":4460,"end":4563,"name":"ISZERO","source":19},{"begin":4460,"end":4563,"name":"PUSH [tag]","source":19,"value":"195"},{"begin":4460,"end":4563,"name":"JUMPI","source":19},{"begin":4550,"end":4552,"name":"DUP1","source":19},{"begin":4544,"end":4546,"name":"DUP2","source":19},{"begin":4537,"end":4540,"name":"DUP7","source":19},{"begin":4533,"end":4535,"name":"PUSH","source":19,"value":"14"},{"begin":4529,"end":4541,"name":"SUB","source":19},{"begin":4526,"end":4527,"name":"PUSH","source":19,"value":"3"},{"begin":4522,"end":4542,"name":"SHL","source":19},{"begin":4518,"end":4547,"name":"SHL","source":19},{"begin":4514,"end":4516,"name":"DUP4","source":19},{"begin":4510,"end":4548,"name":"AND","source":19},{"begin":4506,"end":4553,"name":"AND","source":19},{"begin":4497,"end":4553,"name":"SWAP3","source":19},{"begin":4497,"end":4553,"name":"POP","source":19},{"begin":4460,"end":4563,"name":"tag","source":19,"value":"195"},{"begin":4460,"end":4563,"name":"JUMPDEST","source":19},{"begin":4460,"end":4563,"name":"POP","source":19},{"begin":4460,"end":4563,"name":"POP","source":19},{"begin":4240,"end":4569,"name":"SWAP3","source":19},{"begin":4240,"end":4569,"name":"SWAP2","source":19},{"begin":4240,"end":4569,"name":"POP","source":19},{"begin":4240,"end":4569,"name":"POP","source":19},{"begin":4240,"end":4569,"jumpType":"[out]","name":"JUMP","source":19},{"begin":4574,"end":5394,"name":"tag","source":19,"value":"78"},{"begin":4574,"end":5394,"name":"JUMPDEST","source":19},{"begin":4768,"end":4772,"name":"PUSH","source":19,"value":"0"},{"begin":4814,"end":4815,"name":"PUSH","source":19,"value":"1"},{"begin":4810,"end":4811,"name":"DUP1","source":19},{"begin":4805,"end":4808,"name":"PUSH","source":19,"value":"A0"},{"begin":4801,"end":4812,"name":"SHL","source":19},{"begin":4797,"end":4816,"name":"SUB","source":19},{"begin":4855,"end":4857,"name":"DUP1","source":19},{"begin":4847,"end":4853,"name":"DUP8","source":19},{"begin":4843,"end":4858,"name":"AND","source":19},{"begin":4832,"end":4841,"name":"DUP4","source":19},{"begin":4825,"end":4859,"name":"MSTORE","source":19},{"begin":4878,"end":4880,"name":"PUSH","source":19,"value":"20"},{"begin":4928,"end":4930,"name":"DUP2","source":19},{"begin":4920,"end":4926,"name":"DUP8","source":19},{"begin":4916,"end":4931,"name":"AND","source":19},{"begin":4911,"end":4913,"name":"PUSH","source":19,"value":"20"},{"begin":4900,"end":4909,"name":"DUP6","source":19},{"begin":4896,"end":4914,"name":"ADD","source":19},{"begin":4889,"end":4932,"name":"MSTORE","source":19},{"begin":4968,"end":4974,"name":"DUP6","source":19},{"begin":4963,"end":4965,"name":"PUSH","source":19,"value":"40"},{"begin":4952,"end":4961,"name":"DUP6","source":19},{"begin":4948,"end":4966,"name":"ADD","source":19},{"begin":4941,"end":4975,"name":"MSTORE","source":19},{"begin":5011,"end":5014,"name":"PUSH","source":19,"value":"80"},{"begin":5006,"end":5008,"name":"PUSH","source":19,"value":"60"},{"begin":4995,"end":5004,"name":"DUP6","source":19},{"begin":4991,"end":5009,"name":"ADD","source":19},{"begin":4984,"end":5015,"name":"MSTORE","source":19},{"begin":5044,"end":5050,"name":"DUP5","source":19},{"begin":5038,"end":5051,"name":"MLOAD","source":19},{"begin":5024,"end":5051,"name":"SWAP2","source":19},{"begin":5024,"end":5051,"name":"POP","source":19},{"begin":5088,"end":5094,"name":"DUP2","source":19},{"begin":5082,"end":5085,"name":"PUSH","source":19,"value":"80"},{"begin":5071,"end":5080,"name":"DUP6","source":19},{"begin":5067,"end":5086,"name":"ADD","source":19},{"begin":5060,"end":5095,"name":"MSTORE","source":19},{"begin":5113,"end":5114,"name":"PUSH","source":19,"value":"0"},{"begin":5123,"end":5264,"name":"tag","source":19,"value":"197"},{"begin":5123,"end":5264,"name":"JUMPDEST","source":19},{"begin":5137,"end":5143,"name":"DUP3","source":19},{"begin":5134,"end":5135,"name":"DUP2","source":19},{"begin":5131,"end":5144,"name":"LT","source":19},{"begin":5123,"end":5264,"name":"ISZERO","source":19},{"begin":5123,"end":5264,"name":"PUSH [tag]","source":19,"value":"199"},{"begin":5123,"end":5264,"name":"JUMPI","source":19},{"begin":5233,"end":5247,"name":"DUP6","source":19},{"begin":5233,"end":5247,"name":"DUP2","source":19},{"begin":5233,"end":5247,"name":"ADD","source":19},{"begin":5229,"end":5252,"name":"DUP3","source":19},{"begin":5229,"end":5252,"name":"ADD","source":19},{"begin":5223,"end":5253,"name":"MLOAD","source":19},{"begin":5198,"end":5215,"name":"DUP6","source":19},{"begin":5198,"end":5215,"name":"DUP3","source":19},{"begin":5198,"end":5215,"name":"ADD","source":19},{"begin":5217,"end":5220,"name":"PUSH","source":19,"value":"A0"},{"begin":5194,"end":5221,"name":"ADD","source":19},{"begin":5187,"end":5254,"name":"MSTORE","source":19},{"begin":5152,"end":5162,"name":"DUP2","source":19},{"begin":5152,"end":5162,"name":"ADD","source":19},{"begin":5123,"end":5264,"name":"PUSH [tag]","source":19,"value":"197"},{"begin":5123,"end":5264,"name":"JUMP","source":19},{"begin":5123,"end":5264,"name":"tag","source":19,"value":"199"},{"begin":5123,"end":5264,"name":"JUMPDEST","source":19},{"begin":5127,"end":5130,"name":"POP","source":19},{"begin":5127,"end":5130,"name":"POP","source":19},{"begin":5314,"end":5315,"name":"PUSH","source":19,"value":"0"},{"begin":5308,"end":5311,"name":"PUSH","source":19,"value":"A0"},{"begin":5299,"end":5305,"name":"DUP3","source":19},{"begin":5288,"end":5297,"name":"DUP6","source":19},{"begin":5284,"end":5306,"name":"ADD","source":19},{"begin":5280,"end":5312,"name":"ADD","source":19},{"begin":5273,"end":5316,"name":"MSTORE","source":19},{"begin":5384,"end":5387,"name":"PUSH","source":19,"value":"A0"},{"begin":5377,"end":5379,"name":"PUSH","source":19,"value":"1F"},{"begin":5373,"end":5380,"name":"NOT","source":19},{"begin":5368,"end":5370,"name":"PUSH","source":19,"value":"1F"},{"begin":5360,"end":5366,"name":"DUP4","source":19},{"begin":5356,"end":5371,"name":"ADD","source":19},{"begin":5352,"end":5381,"name":"AND","source":19},{"begin":5341,"end":5350,"name":"DUP5","source":19},{"begin":5337,"end":5382,"name":"ADD","source":19},{"begin":5333,"end":5388,"name":"ADD","source":19},{"begin":5325,"end":5388,"name":"SWAP2","source":19},{"begin":5325,"end":5388,"name":"POP","source":19},{"begin":5325,"end":5388,"name":"POP","source":19},{"begin":4574,"end":5394,"name":"SWAP6","source":19},{"begin":4574,"end":5394,"name":"SWAP5","source":19},{"begin":4574,"end":5394,"name":"POP","source":19},{"begin":4574,"end":5394,"name":"POP","source":19},{"begin":4574,"end":5394,"name":"POP","source":19},{"begin":4574,"end":5394,"name":"POP","source":19},{"begin":4574,"end":5394,"name":"POP","source":19},{"begin":4574,"end":5394,"jumpType":"[out]","name":"JUMP","source":19},{"begin":5399,"end":5689,"name":"tag","source":19,"value":"81"},{"begin":5399,"end":5689,"name":"JUMPDEST","source":19},{"begin":5468,"end":5474,"name":"PUSH","source":19,"value":"0"},{"begin":5521,"end":5523,"name":"PUSH","source":19,"value":"20"},{"begin":5509,"end":5518,"name":"DUP3","source":19},{"begin":5500,"end":5507,"name":"DUP5","source":19},{"begin":5496,"end":5519,"name":"SUB","source":19},{"begin":5492,"end":5524,"name":"SLT","source":19},{"begin":5489,"end":5541,"name":"ISZERO","source":19},{"begin":5489,"end":5541,"name":"PUSH [tag]","source":19,"value":"201"},{"begin":5489,"end":5541,"name":"JUMPI","source":19},{"begin":5537,"end":5538,"name":"PUSH","source":19,"value":"0"},{"begin":5534,"end":5535,"name":"DUP1","source":19},{"begin":5527,"end":5539,"name":"REVERT","source":19},{"begin":5489,"end":5541,"name":"tag","source":19,"value":"201"},{"begin":5489,"end":5541,"name":"JUMPDEST","source":19},{"begin":5563,"end":5579,"name":"DUP2","source":19},{"begin":5563,"end":5579,"name":"MLOAD","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":5608,"end":5640,"name":"DUP2","source":19},{"begin":5608,"end":5640,"name":"AND","source":19},{"begin":5598,"end":5641,"name":"DUP2","source":19},{"begin":5598,"end":5641,"name":"EQ","source":19},{"begin":5588,"end":5659,"name":"PUSH [tag]","source":19,"value":"202"},{"begin":5588,"end":5659,"name":"JUMPI","source":19},{"begin":5655,"end":5656,"name":"PUSH","source":19,"value":"0"},{"begin":5652,"end":5653,"name":"DUP1","source":19},{"begin":5645,"end":5657,"name":"REVERT","source":19},{"begin":5588,"end":5659,"name":"tag","source":19,"value":"202"},{"begin":5588,"end":5659,"name":"JUMPDEST","source":19},{"begin":5678,"end":5683,"name":"SWAP4","source":19},{"begin":5399,"end":5689,"name":"SWAP3","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":5399,"end":5689,"jumpType":"[out]","name":"JUMP","source":19},{"begin":5876,"end":6150,"name":"tag","source":19,"value":"149"},{"begin":5876,"end":6150,"name":"JUMPDEST","source":19},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"80"},{"begin":601,"end":6073,"name":"MLOAD","source":16},{"begin":601,"end":6073,"name":"PUSH #[$]","source":16,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":601,"end":6073,"name":"PUSH [$]","source":16,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"0"},{"begin":601,"end":6073,"name":"CODECOPY","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"0"},{"begin":601,"end":6073,"name":"ASSIGNIMMUTABLE","source":16,"value":"294"},{"begin":601,"end":6073,"name":"PUSH #[$]","source":16,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"0"},{"begin":601,"end":6073,"name":"RETURN","source":16}],".data":{"0":{".auxdata":"a2646970667358221220f9fdd7264436db6a85a4d456887bfa9d3924cb95373a4e5fc40c6b371f983b1064736f6c63430008170033",".code":[{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"80"},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"40"},{"begin":601,"end":6073,"name":"MSTORE","source":16},{"begin":601,"end":6073,"name":"CALLVALUE","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"ISZERO","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"1"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"0"},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"REVERT","source":16},{"begin":601,"end":6073,"name":"tag","source":16,"value":"1"},{"begin":601,"end":6073,"name":"JUMPDEST","source":16},{"begin":601,"end":6073,"name":"POP","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"4"},{"begin":601,"end":6073,"name":"CALLDATASIZE","source":16},{"begin":601,"end":6073,"name":"LT","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"2"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"0"},{"begin":601,"end":6073,"name":"CALLDATALOAD","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"E0"},{"begin":601,"end":6073,"name":"SHR","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"715018A6"},{"begin":601,"end":6073,"name":"GT","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"25"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"B88D4FDE"},{"begin":601,"end":6073,"name":"GT","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"26"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"B88D4FDE"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"19"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"C0715888"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"20"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"C87B56DD"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"21"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"E131FC0C"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"22"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"E985E9C5"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"23"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"F2FDE38B"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"24"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"0"},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"REVERT","source":16},{"begin":601,"end":6073,"name":"tag","source":16,"value":"26"},{"begin":601,"end":6073,"name":"JUMPDEST","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"715018A6"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"14"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"7DA0A877"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"15"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"8DA5CB5B"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"16"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"95D89B41"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"17"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"A22CB465"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"18"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"0"},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"REVERT","source":16},{"begin":601,"end":6073,"name":"tag","source":16,"value":"25"},{"begin":601,"end":6073,"name":"JUMPDEST","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"23B872DD"},{"begin":601,"end":6073,"name":"GT","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"27"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"23B872DD"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"8"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"2407497E"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"9"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"42842E0E"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"10"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"572B6C05"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"11"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"6352211E"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"12"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"70A08231"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"13"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"0"},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"REVERT","source":16},{"begin":601,"end":6073,"name":"tag","source":16,"value":"27"},{"begin":601,"end":6073,"name":"JUMPDEST","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"1FFC9A7"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"3"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"6661ABD"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"4"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"6FDDE03"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"5"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"81812FC"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"6"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"95EA7B3"},{"begin":601,"end":6073,"name":"EQ","source":16},{"begin":601,"end":6073,"name":"PUSH [tag]","source":16,"value":"7"},{"begin":601,"end":6073,"name":"JUMPI","source":16},{"begin":601,"end":6073,"name":"tag","source":16,"value":"2"},{"begin":601,"end":6073,"name":"JUMPDEST","source":16},{"begin":601,"end":6073,"name":"PUSH","source":16,"value":"0"},{"begin":601,"end":6073,"name":"DUP1","source":16},{"begin":601,"end":6073,"name":"REVERT","source":16},{"begin":2702,"end":2918,"name":"tag","source":16,"value":"3"},{"begin":2702,"end":2918,"name":"JUMPDEST","source":16},{"begin":2702,"end":2918,"name":"PUSH [tag]","source":16,"value":"28"},{"begin":2702,"end":2918,"name":"PUSH [tag]","source":16,"value":"29"},{"begin":2702,"end":2918,"name":"CALLDATASIZE","source":16},{"begin":2702,"end":2918,"name":"PUSH","source":16,"value":"4"},{"begin":2702,"end":2918,"name":"PUSH [tag]","source":16,"value":"30"},{"begin":2702,"end":2918,"jumpType":"[in]","name":"JUMP","source":16},{"begin":2702,"end":2918,"name":"tag","source":16,"value":"29"},{"begin":2702,"end":2918,"name":"JUMPDEST","source":16},{"begin":2702,"end":2918,"name":"PUSH [tag]","source":16,"value":"31"},{"begin":2702,"end":2918,"jumpType":"[in]","name":"JUMP","source":16},{"begin":2702,"end":2918,"name":"tag","source":16,"value":"28"},{"begin":2702,"end":2918,"name":"JUMPDEST","source":16},{"begin":2702,"end":2918,"name":"PUSH","source":16,"value":"40"},{"begin":2702,"end":2918,"name":"MLOAD","source":16},{"begin":565,"end":579,"name":"SWAP1","source":19},{"begin":565,"end":579,"name":"ISZERO","source":19},{"begin":558,"end":580,"name":"ISZERO","source":19},{"begin":540,"end":581,"name":"DUP2","source":19},{"begin":540,"end":581,"name":"MSTORE","source":19},{"begin":528,"end":530,"name":"PUSH","source":19,"value":"20"},{"begin":513,"end":531,"name":"ADD","source":19},{"begin":2702,"end":2918,"name":"tag","source":16,"value":"32"},{"begin":2702,"end":2918,"name":"JUMPDEST","source":16},{"begin":2702,"end":2918,"name":"PUSH","source":16,"value":"40"},{"begin":2702,"end":2918,"name":"MLOAD","source":16},{"begin":2702,"end":2918,"name":"DUP1","source":16},{"begin":2702,"end":2918,"name":"SWAP2","source":16},{"begin":2702,"end":2918,"name":"SUB","source":16},{"begin":2702,"end":2918,"name":"SWAP1","source":16},{"begin":2702,"end":2918,"name":"RETURN","source":16},{"begin":1161,"end":1190,"name":"tag","source":16,"value":"4"},{"begin":1161,"end":1190,"name":"JUMPDEST","source":16},{"begin":1161,"end":1190,"name":"PUSH [tag]","source":16,"value":"34"},{"begin":1161,"end":1190,"name":"PUSH","source":16,"value":"7"},{"begin":1161,"end":1190,"name":"SLOAD","source":16},{"begin":1161,"end":1190,"name":"DUP2","source":16},{"begin":1161,"end":1190,"name":"JUMP","source":16},{"begin":1161,"end":1190,"name":"tag","source":16,"value":"34"},{"begin":1161,"end":1190,"name":"JUMPDEST","source":16},{"begin":1161,"end":1190,"name":"PUSH","source":16,"value":"40"},{"begin":1161,"end":1190,"name":"MLOAD","source":16},{"begin":738,"end":763,"name":"SWAP1","source":19},{"begin":738,"end":763,"name":"DUP2","source":19},{"begin":738,"end":763,"name":"MSTORE","source":19},{"begin":726,"end":728,"name":"PUSH","source":19,"value":"20"},{"begin":711,"end":729,"name":"ADD","source":19},{"begin":1161,"end":1190,"name":"PUSH [tag]","source":16,"value":"32"},{"begin":592,"end":769,"name":"JUMP","source":19},{"begin":2364,"end":2453,"name":"tag","source":3,"value":"5"},{"begin":2364,"end":2453,"name":"JUMPDEST","source":3},{"begin":2364,"end":2453,"name":"PUSH [tag]","source":3,"value":"38"},{"begin":2364,"end":2453,"name":"PUSH [tag]","source":3,"value":"39"},{"begin":2364,"end":2453,"jumpType":"[in]","name":"JUMP","source":3},{"begin":2364,"end":2453,"name":"tag","source":3,"value":"38"},{"begin":2364,"end":2453,"name":"JUMPDEST","source":3},{"begin":2364,"end":2453,"name":"PUSH","source":3,"value":"40"},{"begin":2364,"end":2453,"name":"MLOAD","source":3},{"begin":2364,"end":2453,"name":"PUSH [tag]","source":3,"value":"32"},{"begin":2364,"end":2453,"name":"SWAP2","source":3},{"begin":2364,"end":2453,"name":"SWAP1","source":3},{"begin":2364,"end":2453,"name":"PUSH [tag]","source":3,"value":"41"},{"begin":2364,"end":2453,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3496,"end":3650,"name":"tag","source":3,"value":"6"},{"begin":3496,"end":3650,"name":"JUMPDEST","source":3},{"begin":3496,"end":3650,"name":"PUSH [tag]","source":3,"value":"42"},{"begin":3496,"end":3650,"name":"PUSH [tag]","source":3,"value":"43"},{"begin":3496,"end":3650,"name":"CALLDATASIZE","source":3},{"begin":3496,"end":3650,"name":"PUSH","source":3,"value":"4"},{"begin":3496,"end":3650,"name":"PUSH [tag]","source":3,"value":"44"},{"begin":3496,"end":3650,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3496,"end":3650,"name":"tag","source":3,"value":"43"},{"begin":3496,"end":3650,"name":"JUMPDEST","source":3},{"begin":3496,"end":3650,"name":"PUSH [tag]","source":3,"value":"45"},{"begin":3496,"end":3650,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3496,"end":3650,"name":"tag","source":3,"value":"42"},{"begin":3496,"end":3650,"name":"JUMPDEST","source":3},{"begin":3496,"end":3650,"name":"PUSH","source":3,"value":"40"},{"begin":3496,"end":3650,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1879,"end":1911,"name":"SWAP1","source":19},{"begin":1879,"end":1911,"name":"SWAP2","source":19},{"begin":1879,"end":1911,"name":"AND","source":19},{"begin":1861,"end":1912,"name":"DUP2","source":19},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1849,"end":1851,"name":"PUSH","source":19,"value":"20"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":3496,"end":3650,"name":"PUSH [tag]","source":3,"value":"32"},{"begin":1715,"end":1918,"name":"JUMP","source":19},{"begin":3322,"end":3435,"name":"tag","source":3,"value":"7"},{"begin":3322,"end":3435,"name":"JUMPDEST","source":3},{"begin":3322,"end":3435,"name":"PUSH [tag]","source":3,"value":"48"},{"begin":3322,"end":3435,"name":"PUSH [tag]","source":3,"value":"49"},{"begin":3322,"end":3435,"name":"CALLDATASIZE","source":3},{"begin":3322,"end":3435,"name":"PUSH","source":3,"value":"4"},{"begin":3322,"end":3435,"name":"PUSH [tag]","source":3,"value":"50"},{"begin":3322,"end":3435,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3322,"end":3435,"name":"tag","source":3,"value":"49"},{"begin":3322,"end":3435,"name":"JUMPDEST","source":3},{"begin":3322,"end":3435,"name":"PUSH [tag]","source":3,"value":"51"},{"begin":3322,"end":3435,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3322,"end":3435,"name":"tag","source":3,"value":"48"},{"begin":3322,"end":3435,"name":"JUMPDEST","source":3},{"begin":3322,"end":3435,"name":"STOP","source":3},{"begin":4142,"end":4720,"name":"tag","source":3,"value":"8"},{"begin":4142,"end":4720,"name":"JUMPDEST","source":3},{"begin":4142,"end":4720,"name":"PUSH [tag]","source":3,"value":"48"},{"begin":4142,"end":4720,"name":"PUSH [tag]","source":3,"value":"53"},{"begin":4142,"end":4720,"name":"CALLDATASIZE","source":3},{"begin":4142,"end":4720,"name":"PUSH","source":3,"value":"4"},{"begin":4142,"end":4720,"name":"PUSH [tag]","source":3,"value":"54"},{"begin":4142,"end":4720,"jumpType":"[in]","name":"JUMP","source":3},{"begin":4142,"end":4720,"name":"tag","source":3,"value":"53"},{"begin":4142,"end":4720,"name":"JUMPDEST","source":3},{"begin":4142,"end":4720,"name":"PUSH [tag]","source":3,"value":"55"},{"begin":4142,"end":4720,"jumpType":"[in]","name":"JUMP","source":3},{"begin":4948,"end":5193,"name":"tag","source":16,"value":"9"},{"begin":4948,"end":5193,"name":"JUMPDEST","source":16},{"begin":4948,"end":5193,"name":"PUSH [tag]","source":16,"value":"48"},{"begin":4948,"end":5193,"name":"PUSH [tag]","source":16,"value":"57"},{"begin":4948,"end":5193,"name":"CALLDATASIZE","source":16},{"begin":4948,"end":5193,"name":"PUSH","source":16,"value":"4"},{"begin":4948,"end":5193,"name":"PUSH [tag]","source":16,"value":"58"},{"begin":4948,"end":5193,"jumpType":"[in]","name":"JUMP","source":16},{"begin":4948,"end":5193,"name":"tag","source":16,"value":"57"},{"begin":4948,"end":5193,"name":"JUMPDEST","source":16},{"begin":4948,"end":5193,"name":"PUSH [tag]","source":16,"value":"59"},{"begin":4948,"end":5193,"jumpType":"[in]","name":"JUMP","source":16},{"begin":4786,"end":4918,"name":"tag","source":3,"value":"10"},{"begin":4786,"end":4918,"name":"JUMPDEST","source":3},{"begin":4786,"end":4918,"name":"PUSH [tag]","source":3,"value":"48"},{"begin":4786,"end":4918,"name":"PUSH [tag]","source":3,"value":"61"},{"begin":4786,"end":4918,"name":"CALLDATASIZE","source":3},{"begin":4786,"end":4918,"name":"PUSH","source":3,"value":"4"},{"begin":4786,"end":4918,"name":"PUSH [tag]","source":3,"value":"54"},{"begin":4786,"end":4918,"jumpType":"[in]","name":"JUMP","source":3},{"begin":4786,"end":4918,"name":"tag","source":3,"value":"61"},{"begin":4786,"end":4918,"name":"JUMPDEST","source":3},{"begin":4786,"end":4918,"name":"PUSH [tag]","source":3,"value":"62"},{"begin":4786,"end":4918,"jumpType":"[in]","name":"JUMP","source":3},{"begin":1832,"end":1969,"name":"tag","source":2,"value":"11"},{"begin":1832,"end":1969,"name":"JUMPDEST","source":2},{"begin":1832,"end":1969,"name":"PUSH [tag]","source":2,"value":"28"},{"begin":1832,"end":1969,"name":"PUSH [tag]","source":2,"value":"64"},{"begin":1832,"end":1969,"name":"CALLDATASIZE","source":2},{"begin":1832,"end":1969,"name":"PUSH","source":2,"value":"4"},{"begin":1832,"end":1969,"name":"PUSH [tag]","source":2,"value":"58"},{"begin":1832,"end":1969,"jumpType":"[in]","name":"JUMP","source":2},{"begin":1832,"end":1969,"name":"tag","source":2,"value":"64"},{"begin":1832,"end":1969,"name":"JUMPDEST","source":2},{"begin":1707,"end":1724,"name":"PUSHIMMUTABLE","source":2,"value":"294"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1931,"end":1962,"name":"SWAP1","source":2},{"begin":1931,"end":1962,"name":"DUP2","source":2},{"begin":1931,"end":1962,"name":"AND","source":2},{"begin":1931,"end":1962,"name":"SWAP2","source":2},{"begin":1931,"end":1962,"name":"AND","source":2},{"begin":1931,"end":1962,"name":"EQ","source":2},{"begin":1931,"end":1962,"name":"SWAP1","source":2},{"begin":1832,"end":1969,"name":"JUMP","source":2},{"begin":2184,"end":2302,"name":"tag","source":3,"value":"12"},{"begin":2184,"end":2302,"name":"JUMPDEST","source":3},{"begin":2184,"end":2302,"name":"PUSH [tag]","source":3,"value":"42"},{"begin":2184,"end":2302,"name":"PUSH [tag]","source":3,"value":"69"},{"begin":2184,"end":2302,"name":"CALLDATASIZE","source":3},{"begin":2184,"end":2302,"name":"PUSH","source":3,"value":"4"},{"begin":2184,"end":2302,"name":"PUSH [tag]","source":3,"value":"44"},{"begin":2184,"end":2302,"jumpType":"[in]","name":"JUMP","source":3},{"begin":2184,"end":2302,"name":"tag","source":3,"value":"69"},{"begin":2184,"end":2302,"name":"JUMPDEST","source":3},{"begin":2184,"end":2302,"name":"PUSH [tag]","source":3,"value":"70"},{"begin":2184,"end":2302,"jumpType":"[in]","name":"JUMP","source":3},{"begin":1919,"end":2127,"name":"tag","source":3,"value":"13"},{"begin":1919,"end":2127,"name":"JUMPDEST","source":3},{"begin":1919,"end":2127,"name":"PUSH [tag]","source":3,"value":"34"},{"begin":1919,"end":2127,"name":"PUSH [tag]","source":3,"value":"73"},{"begin":1919,"end":2127,"name":"CALLDATASIZE","source":3},{"begin":1919,"end":2127,"name":"PUSH","source":3,"value":"4"},{"begin":1919,"end":2127,"name":"PUSH [tag]","source":3,"value":"58"},{"begin":1919,"end":2127,"jumpType":"[in]","name":"JUMP","source":3},{"begin":1919,"end":2127,"name":"tag","source":3,"value":"73"},{"begin":1919,"end":2127,"name":"JUMPDEST","source":3},{"begin":1919,"end":2127,"name":"PUSH [tag]","source":3,"value":"74"},{"begin":1919,"end":2127,"jumpType":"[in]","name":"JUMP","source":3},{"begin":2293,"end":2394,"name":"tag","source":0,"value":"14"},{"begin":2293,"end":2394,"name":"JUMPDEST","source":0},{"begin":2293,"end":2394,"name":"PUSH [tag]","source":0,"value":"48"},{"begin":2293,"end":2394,"name":"PUSH [tag]","source":0,"value":"77"},{"begin":2293,"end":2394,"jumpType":"[in]","name":"JUMP","source":0},{"begin":1624,"end":1731,"name":"tag","source":2,"value":"15"},{"begin":1624,"end":1731,"name":"JUMPDEST","source":2},{"begin":1707,"end":1724,"name":"PUSHIMMUTABLE","source":2,"value":"294"},{"begin":1624,"end":1731,"name":"PUSH [tag]","source":2,"value":"42"},{"begin":1624,"end":1731,"name":"JUMP","source":2},{"begin":1638,"end":1723,"name":"tag","source":0,"value":"16"},{"begin":1638,"end":1723,"name":"JUMPDEST","source":0},{"begin":1710,"end":1716,"name":"PUSH","source":0,"value":"6"},{"begin":1710,"end":1716,"name":"SLOAD","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1710,"end":1716,"name":"AND","source":0},{"begin":1638,"end":1723,"name":"PUSH [tag]","source":0,"value":"42"},{"begin":1638,"end":1723,"name":"JUMP","source":0},{"begin":2517,"end":2610,"name":"tag","source":3,"value":"17"},{"begin":2517,"end":2610,"name":"JUMPDEST","source":3},{"begin":2517,"end":2610,"name":"PUSH [tag]","source":3,"value":"38"},{"begin":2517,"end":2610,"name":"PUSH [tag]","source":3,"value":"85"},{"begin":2517,"end":2610,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3717,"end":3861,"name":"tag","source":3,"value":"18"},{"begin":3717,"end":3861,"name":"JUMPDEST","source":3},{"begin":3717,"end":3861,"name":"PUSH [tag]","source":3,"value":"48"},{"begin":3717,"end":3861,"name":"PUSH [tag]","source":3,"value":"88"},{"begin":3717,"end":3861,"name":"CALLDATASIZE","source":3},{"begin":3717,"end":3861,"name":"PUSH","source":3,"value":"4"},{"begin":3717,"end":3861,"name":"PUSH [tag]","source":3,"value":"89"},{"begin":3717,"end":3861,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3717,"end":3861,"name":"tag","source":3,"value":"88"},{"begin":3717,"end":3861,"name":"JUMPDEST","source":3},{"begin":3717,"end":3861,"name":"PUSH [tag]","source":3,"value":"90"},{"begin":3717,"end":3861,"jumpType":"[in]","name":"JUMP","source":3},{"begin":4984,"end":5217,"name":"tag","source":3,"value":"19"},{"begin":4984,"end":5217,"name":"JUMPDEST","source":3},{"begin":4984,"end":5217,"name":"PUSH [tag]","source":3,"value":"48"},{"begin":4984,"end":5217,"name":"PUSH [tag]","source":3,"value":"92"},{"begin":4984,"end":5217,"name":"CALLDATASIZE","source":3},{"begin":4984,"end":5217,"name":"PUSH","source":3,"value":"4"},{"begin":4984,"end":5217,"name":"PUSH [tag]","source":3,"value":"93"},{"begin":4984,"end":5217,"jumpType":"[in]","name":"JUMP","source":3},{"begin":4984,"end":5217,"name":"tag","source":3,"value":"92"},{"begin":4984,"end":5217,"name":"JUMPDEST","source":3},{"begin":4984,"end":5217,"name":"PUSH [tag]","source":3,"value":"94"},{"begin":4984,"end":5217,"jumpType":"[in]","name":"JUMP","source":3},{"begin":5746,"end":6071,"name":"tag","source":16,"value":"20"},{"begin":5746,"end":6071,"name":"JUMPDEST","source":16},{"begin":5746,"end":6071,"name":"PUSH [tag]","source":16,"value":"34"},{"begin":5746,"end":6071,"name":"PUSH [tag]","source":16,"value":"96"},{"begin":5746,"end":6071,"name":"CALLDATASIZE","source":16},{"begin":5746,"end":6071,"name":"PUSH","source":16,"value":"4"},{"begin":5746,"end":6071,"name":"PUSH [tag]","source":16,"value":"58"},{"begin":5746,"end":6071,"jumpType":"[in]","name":"JUMP","source":16},{"begin":5746,"end":6071,"name":"tag","source":16,"value":"96"},{"begin":5746,"end":6071,"name":"JUMPDEST","source":16},{"begin":5746,"end":6071,"name":"PUSH [tag]","source":16,"value":"97"},{"begin":5746,"end":6071,"jumpType":"[in]","name":"JUMP","source":16},{"begin":3143,"end":3534,"name":"tag","source":16,"value":"21"},{"begin":3143,"end":3534,"name":"JUMPDEST","source":16},{"begin":3143,"end":3534,"name":"PUSH [tag]","source":16,"value":"38"},{"begin":3143,"end":3534,"name":"PUSH [tag]","source":16,"value":"100"},{"begin":3143,"end":3534,"name":"CALLDATASIZE","source":16},{"begin":3143,"end":3534,"name":"PUSH","source":16,"value":"4"},{"begin":3143,"end":3534,"name":"PUSH [tag]","source":16,"value":"44"},{"begin":3143,"end":3534,"jumpType":"[in]","name":"JUMP","source":16},{"begin":3143,"end":3534,"name":"tag","source":16,"value":"100"},{"begin":3143,"end":3534,"name":"JUMPDEST","source":16},{"begin":3143,"end":3534,"name":"PUSH [tag]","source":16,"value":"101"},{"begin":3143,"end":3534,"jumpType":"[in]","name":"JUMP","source":16},{"begin":1271,"end":1323,"name":"tag","source":16,"value":"22"},{"begin":1271,"end":1323,"name":"JUMPDEST","source":16},{"begin":1271,"end":1323,"name":"PUSH","source":16,"value":"8"},{"begin":1271,"end":1323,"name":"SLOAD","source":16},{"begin":1271,"end":1323,"name":"PUSH [tag]","source":16,"value":"42"},{"begin":1271,"end":1323,"name":"SWAP1","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1271,"end":1323,"name":"AND","source":16},{"begin":1271,"end":1323,"name":"DUP2","source":16},{"begin":1271,"end":1323,"name":"JUMP","source":16},{"begin":3927,"end":4080,"name":"tag","source":3,"value":"23"},{"begin":3927,"end":4080,"name":"JUMPDEST","source":3},{"begin":3927,"end":4080,"name":"PUSH [tag]","source":3,"value":"28"},{"begin":3927,"end":4080,"name":"PUSH [tag]","source":3,"value":"108"},{"begin":3927,"end":4080,"name":"CALLDATASIZE","source":3},{"begin":3927,"end":4080,"name":"PUSH","source":3,"value":"4"},{"begin":3927,"end":4080,"name":"PUSH [tag]","source":3,"value":"109"},{"begin":3927,"end":4080,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3927,"end":4080,"name":"tag","source":3,"value":"108"},{"begin":3927,"end":4080,"name":"JUMPDEST","source":3},{"begin":3927,"end":4080,"name":"PUSH [tag]","source":3,"value":"110"},{"begin":3927,"end":4080,"jumpType":"[in]","name":"JUMP","source":3},{"begin":2543,"end":2758,"name":"tag","source":0,"value":"24"},{"begin":2543,"end":2758,"name":"JUMPDEST","source":0},{"begin":2543,"end":2758,"name":"PUSH [tag]","source":0,"value":"48"},{"begin":2543,"end":2758,"name":"PUSH [tag]","source":0,"value":"113"},{"begin":2543,"end":2758,"name":"CALLDATASIZE","source":0},{"begin":2543,"end":2758,"name":"PUSH","source":0,"value":"4"},{"begin":2543,"end":2758,"name":"PUSH [tag]","source":0,"value":"58"},{"begin":2543,"end":2758,"jumpType":"[in]","name":"JUMP","source":0},{"begin":2543,"end":2758,"name":"tag","source":0,"value":"113"},{"begin":2543,"end":2758,"name":"JUMPDEST","source":0},{"begin":2543,"end":2758,"name":"PUSH [tag]","source":0,"value":"114"},{"begin":2543,"end":2758,"jumpType":"[in]","name":"JUMP","source":0},{"begin":2702,"end":2918,"name":"tag","source":16,"value":"31"},{"begin":2702,"end":2918,"name":"JUMPDEST","source":16},{"begin":2804,"end":2808,"name":"PUSH","source":16,"value":"0"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":2827,"end":2871,"name":"DUP3","source":16},{"begin":2827,"end":2871,"name":"AND","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"321F747"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":2827,"end":2871,"name":"EQ","source":16},{"begin":2827,"end":2871,"name":"DUP1","source":16},{"begin":2827,"end":2911,"name":"PUSH [tag]","source":16,"value":"117"},{"begin":2827,"end":2911,"name":"JUMPI","source":16},{"begin":2827,"end":2911,"name":"POP","source":16},{"begin":2875,"end":2911,"name":"PUSH [tag]","source":16,"value":"117"},{"begin":2899,"end":2910,"name":"DUP3","source":16},{"begin":2875,"end":2898,"name":"PUSH [tag]","source":16,"value":"118"},{"begin":2875,"end":2911,"jumpType":"[in]","name":"JUMP","source":16},{"begin":2875,"end":2911,"name":"tag","source":16,"value":"117"},{"begin":2875,"end":2911,"name":"JUMPDEST","source":16},{"begin":2820,"end":2911,"name":"SWAP3","source":16},{"begin":2702,"end":2918,"name":"SWAP2","source":16},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2702,"end":2918,"jumpType":"[out]","name":"JUMP","source":16},{"begin":2364,"end":2453,"name":"tag","source":3,"value":"39"},{"begin":2364,"end":2453,"name":"JUMPDEST","source":3},{"begin":2409,"end":2422,"name":"PUSH","source":3,"value":"60"},{"begin":2441,"end":2446,"name":"PUSH","source":3,"value":"0"},{"begin":2434,"end":2446,"name":"DUP1","source":3},{"begin":2434,"end":2446,"name":"SLOAD","source":3},{"begin":2434,"end":2446,"name":"PUSH [tag]","source":3,"value":"120"},{"begin":2434,"end":2446,"name":"SWAP1","source":3},{"begin":2434,"end":2446,"name":"PUSH [tag]","source":3,"value":"121"},{"begin":2434,"end":2446,"jumpType":"[in]","name":"JUMP","source":3},{"begin":2434,"end":2446,"name":"tag","source":3,"value":"120"},{"begin":2434,"end":2446,"name":"JUMPDEST","source":3},{"begin":2434,"end":2446,"name":"DUP1","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"1F"},{"begin":2434,"end":2446,"name":"ADD","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"20"},{"begin":2434,"end":2446,"name":"DUP1","source":3},{"begin":2434,"end":2446,"name":"SWAP2","source":3},{"begin":2434,"end":2446,"name":"DIV","source":3},{"begin":2434,"end":2446,"name":"MUL","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"20"},{"begin":2434,"end":2446,"name":"ADD","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"40"},{"begin":2434,"end":2446,"name":"MLOAD","source":3},{"begin":2434,"end":2446,"name":"SWAP1","source":3},{"begin":2434,"end":2446,"name":"DUP2","source":3},{"begin":2434,"end":2446,"name":"ADD","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"40"},{"begin":2434,"end":2446,"name":"MSTORE","source":3},{"begin":2434,"end":2446,"name":"DUP1","source":3},{"begin":2434,"end":2446,"name":"SWAP3","source":3},{"begin":2434,"end":2446,"name":"SWAP2","source":3},{"begin":2434,"end":2446,"name":"SWAP1","source":3},{"begin":2434,"end":2446,"name":"DUP2","source":3},{"begin":2434,"end":2446,"name":"DUP2","source":3},{"begin":2434,"end":2446,"name":"MSTORE","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"20"},{"begin":2434,"end":2446,"name":"ADD","source":3},{"begin":2434,"end":2446,"name":"DUP3","source":3},{"begin":2434,"end":2446,"name":"DUP1","source":3},{"begin":2434,"end":2446,"name":"SLOAD","source":3},{"begin":2434,"end":2446,"name":"PUSH [tag]","source":3,"value":"122"},{"begin":2434,"end":2446,"name":"SWAP1","source":3},{"begin":2434,"end":2446,"name":"PUSH [tag]","source":3,"value":"121"},{"begin":2434,"end":2446,"jumpType":"[in]","name":"JUMP","source":3},{"begin":2434,"end":2446,"name":"tag","source":3,"value":"122"},{"begin":2434,"end":2446,"name":"JUMPDEST","source":3},{"begin":2434,"end":2446,"name":"DUP1","source":3},{"begin":2434,"end":2446,"name":"ISZERO","source":3},{"begin":2434,"end":2446,"name":"PUSH [tag]","source":3,"value":"123"},{"begin":2434,"end":2446,"name":"JUMPI","source":3},{"begin":2434,"end":2446,"name":"DUP1","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"1F"},{"begin":2434,"end":2446,"name":"LT","source":3},{"begin":2434,"end":2446,"name":"PUSH [tag]","source":3,"value":"124"},{"begin":2434,"end":2446,"name":"JUMPI","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"100"},{"begin":2434,"end":2446,"name":"DUP1","source":3},{"begin":2434,"end":2446,"name":"DUP4","source":3},{"begin":2434,"end":2446,"name":"SLOAD","source":3},{"begin":2434,"end":2446,"name":"DIV","source":3},{"begin":2434,"end":2446,"name":"MUL","source":3},{"begin":2434,"end":2446,"name":"DUP4","source":3},{"begin":2434,"end":2446,"name":"MSTORE","source":3},{"begin":2434,"end":2446,"name":"SWAP2","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"20"},{"begin":2434,"end":2446,"name":"ADD","source":3},{"begin":2434,"end":2446,"name":"SWAP2","source":3},{"begin":2434,"end":2446,"name":"PUSH [tag]","source":3,"value":"123"},{"begin":2434,"end":2446,"name":"JUMP","source":3},{"begin":2434,"end":2446,"name":"tag","source":3,"value":"124"},{"begin":2434,"end":2446,"name":"JUMPDEST","source":3},{"begin":2434,"end":2446,"name":"DUP3","source":3},{"begin":2434,"end":2446,"name":"ADD","source":3},{"begin":2434,"end":2446,"name":"SWAP2","source":3},{"begin":2434,"end":2446,"name":"SWAP1","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"0"},{"begin":2434,"end":2446,"name":"MSTORE","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"20"},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"0"},{"begin":2434,"end":2446,"name":"KECCAK256","source":3},{"begin":2434,"end":2446,"name":"SWAP1","source":3},{"begin":2434,"end":2446,"name":"tag","source":3,"value":"125"},{"begin":2434,"end":2446,"name":"JUMPDEST","source":3},{"begin":2434,"end":2446,"name":"DUP2","source":3},{"begin":2434,"end":2446,"name":"SLOAD","source":3},{"begin":2434,"end":2446,"name":"DUP2","source":3},{"begin":2434,"end":2446,"name":"MSTORE","source":3},{"begin":2434,"end":2446,"name":"SWAP1","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"1"},{"begin":2434,"end":2446,"name":"ADD","source":3},{"begin":2434,"end":2446,"name":"SWAP1","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"20"},{"begin":2434,"end":2446,"name":"ADD","source":3},{"begin":2434,"end":2446,"name":"DUP1","source":3},{"begin":2434,"end":2446,"name":"DUP4","source":3},{"begin":2434,"end":2446,"name":"GT","source":3},{"begin":2434,"end":2446,"name":"PUSH [tag]","source":3,"value":"125"},{"begin":2434,"end":2446,"name":"JUMPI","source":3},{"begin":2434,"end":2446,"name":"DUP3","source":3},{"begin":2434,"end":2446,"name":"SWAP1","source":3},{"begin":2434,"end":2446,"name":"SUB","source":3},{"begin":2434,"end":2446,"name":"PUSH","source":3,"value":"1F"},{"begin":2434,"end":2446,"name":"AND","source":3},{"begin":2434,"end":2446,"name":"DUP3","source":3},{"begin":2434,"end":2446,"name":"ADD","source":3},{"begin":2434,"end":2446,"name":"SWAP2","source":3},{"begin":2434,"end":2446,"name":"tag","source":3,"value":"123"},{"begin":2434,"end":2446,"name":"JUMPDEST","source":3},{"begin":2434,"end":2446,"name":"POP","source":3},{"begin":2434,"end":2446,"name":"POP","source":3},{"begin":2434,"end":2446,"name":"POP","source":3},{"begin":2434,"end":2446,"name":"POP","source":3},{"begin":2434,"end":2446,"name":"POP","source":3},{"begin":2434,"end":2446,"name":"SWAP1","source":3},{"begin":2434,"end":2446,"name":"POP","source":3},{"begin":2364,"end":2453,"name":"SWAP1","source":3},{"begin":2364,"end":2453,"jumpType":"[out]","name":"JUMP","source":3},{"begin":3496,"end":3650,"name":"tag","source":3,"value":"45"},{"begin":3496,"end":3650,"name":"JUMPDEST","source":3},{"begin":3563,"end":3570,"name":"PUSH","source":3,"value":"0"},{"begin":3582,"end":3604,"name":"PUSH [tag]","source":3,"value":"127"},{"begin":3596,"end":3603,"name":"DUP3","source":3},{"begin":3582,"end":3595,"name":"PUSH [tag]","source":3,"value":"128"},{"begin":3582,"end":3604,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3582,"end":3604,"name":"tag","source":3,"value":"127"},{"begin":3582,"end":3604,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6033,"end":6040,"name":"PUSH","source":3,"value":"0"},{"begin":6059,"end":6083,"name":"DUP3","source":3},{"begin":6059,"end":6083,"name":"DUP2","source":3},{"begin":6059,"end":6083,"name":"MSTORE","source":3},{"begin":6059,"end":6074,"name":"PUSH","source":3,"value":"4"},{"begin":6059,"end":6083,"name":"PUSH","source":3,"value":"20"},{"begin":6059,"end":6083,"name":"MSTORE","source":3},{"begin":6059,"end":6083,"name":"PUSH","source":3,"value":"40"},{"begin":6059,"end":6083,"name":"SWAP1","source":3},{"begin":6059,"end":6083,"name":"KECCAK256","source":3},{"begin":6059,"end":6083,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6059,"end":6083,"name":"AND","source":3},{"begin":3622,"end":3643,"name":"PUSH [tag]","source":3,"value":"117"},{"begin":5963,"end":6090,"name":"JUMP","source":3},{"begin":3322,"end":3435,"name":"tag","source":3,"value":"51"},{"begin":3322,"end":3435,"name":"JUMPDEST","source":3},{"begin":3393,"end":3428,"name":"PUSH [tag]","source":3,"value":"132"},{"begin":3402,"end":3404,"name":"DUP3","source":3},{"begin":3406,"end":3413,"name":"DUP3","source":3},{"begin":3415,"end":3427,"name":"PUSH [tag]","source":3,"value":"133"},{"begin":3415,"end":3425,"name":"PUSH [tag]","source":3,"value":"134"},{"begin":3415,"end":3427,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3415,"end":3427,"name":"tag","source":3,"value":"133"},{"begin":3415,"end":3427,"name":"JUMPDEST","source":3},{"begin":3393,"end":3401,"name":"PUSH [tag]","source":3,"value":"135"},{"begin":3393,"end":3428,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3393,"end":3428,"name":"tag","source":3,"value":"132"},{"begin":3393,"end":3428,"name":"JUMPDEST","source":3},{"begin":3322,"end":3435,"name":"POP","source":3},{"begin":3322,"end":3435,"name":"POP","source":3},{"begin":3322,"end":3435,"jumpType":"[out]","name":"JUMP","source":3},{"begin":4142,"end":4720,"name":"tag","source":3,"value":"55"},{"begin":4142,"end":4720,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4236,"end":4252,"name":"DUP3","source":3},{"begin":4236,"end":4252,"name":"AND","source":3},{"begin":4232,"end":4319,"name":"PUSH [tag]","source":3,"value":"137"},{"begin":4232,"end":4319,"name":"JUMPI","source":3},{"begin":4275,"end":4308,"name":"PUSH","source":3,"value":"40"},{"begin":4275,"end":4308,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"32505749"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":4275,"end":4308,"name":"DUP2","source":3},{"begin":4275,"end":4308,"name":"MSTORE","source":3},{"begin":4305,"end":4306,"name":"PUSH","source":3,"value":"0"},{"begin":4275,"end":4308,"name":"PUSH","source":3,"value":"4"},{"begin":4275,"end":4308,"name":"DUP3","source":3},{"begin":4275,"end":4308,"name":"ADD","source":3},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1834,"end":1852,"name":"PUSH","source":19,"value":"24"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":4275,"end":4308,"name":"tag","source":3,"value":"138"},{"begin":4275,"end":4308,"name":"JUMPDEST","source":3},{"begin":4275,"end":4308,"name":"PUSH","source":3,"value":"40"},{"begin":4275,"end":4308,"name":"MLOAD","source":3},{"begin":4275,"end":4308,"name":"DUP1","source":3},{"begin":4275,"end":4308,"name":"SWAP2","source":3},{"begin":4275,"end":4308,"name":"SUB","source":3},{"begin":4275,"end":4308,"name":"SWAP1","source":3},{"begin":4275,"end":4308,"name":"REVERT","source":3},{"begin":4232,"end":4319,"name":"tag","source":3,"value":"137"},{"begin":4232,"end":4319,"name":"JUMPDEST","source":3},{"begin":4537,"end":4558,"name":"PUSH","source":3,"value":"0"},{"begin":4561,"end":4595,"name":"PUSH [tag]","source":3,"value":"139"},{"begin":4569,"end":4571,"name":"DUP4","source":3},{"begin":4573,"end":4580,"name":"DUP4","source":3},{"begin":4582,"end":4594,"name":"PUSH [tag]","source":3,"value":"140"},{"begin":4582,"end":4592,"name":"PUSH [tag]","source":3,"value":"134"},{"begin":4582,"end":4594,"jumpType":"[in]","name":"JUMP","source":3},{"begin":4582,"end":4594,"name":"tag","source":3,"value":"140"},{"begin":4582,"end":4594,"name":"JUMPDEST","source":3},{"begin":4561,"end":4568,"name":"PUSH [tag]","source":3,"value":"141"},{"begin":4561,"end":4595,"jumpType":"[in]","name":"JUMP","source":3},{"begin":4561,"end":4595,"name":"tag","source":3,"value":"139"},{"begin":4561,"end":4595,"name":"JUMPDEST","source":3},{"begin":4537,"end":4595,"name":"SWAP1","source":3},{"begin":4537,"end":4595,"name":"POP","source":3},{"begin":4626,"end":4630,"name":"DUP4","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4609,"end":4630,"name":"AND","source":3},{"begin":4609,"end":4622,"name":"DUP2","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4609,"end":4630,"name":"AND","source":3},{"begin":4609,"end":4630,"name":"EQ","source":3},{"begin":4605,"end":4714,"name":"PUSH [tag]","source":3,"value":"142"},{"begin":4605,"end":4714,"name":"JUMPI","source":3},{"begin":4653,"end":4703,"name":"PUSH","source":3,"value":"40"},{"begin":4653,"end":4703,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"64283D7B"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":4653,"end":4703,"name":"DUP2","source":3},{"begin":4653,"end":4703,"name":"MSTORE","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6689,"end":6704,"name":"DUP1","source":19},{"begin":6689,"end":6704,"name":"DUP7","source":19},{"begin":6689,"end":6704,"name":"AND","source":19},{"begin":4653,"end":4703,"name":"PUSH","source":3,"value":"4"},{"begin":4653,"end":4703,"name":"DUP4","source":3},{"begin":4653,"end":4703,"name":"ADD","source":3},{"begin":6671,"end":6705,"name":"MSTORE","source":19},{"begin":6721,"end":6739,"name":"PUSH","source":19,"value":"24"},{"begin":6721,"end":6739,"name":"DUP3","source":19},{"begin":6721,"end":6739,"name":"ADD","source":19},{"begin":6714,"end":6748,"name":"DUP5","source":19},{"begin":6714,"end":6748,"name":"SWAP1","source":19},{"begin":6714,"end":6748,"name":"MSTORE","source":19},{"begin":6784,"end":6799,"name":"DUP3","source":19},{"begin":6784,"end":6799,"name":"AND","source":19},{"begin":6764,"end":6782,"name":"PUSH","source":19,"value":"44"},{"begin":6764,"end":6782,"name":"DUP3","source":19},{"begin":6764,"end":6782,"name":"ADD","source":19},{"begin":6757,"end":6800,"name":"MSTORE","source":19},{"begin":6606,"end":6624,"name":"PUSH","source":19,"value":"64"},{"begin":6606,"end":6624,"name":"ADD","source":19},{"begin":4653,"end":4703,"name":"PUSH [tag]","source":3,"value":"138"},{"begin":6431,"end":6806,"name":"JUMP","source":19},{"begin":4605,"end":4714,"name":"tag","source":3,"value":"142"},{"begin":4605,"end":4714,"name":"JUMPDEST","source":3},{"begin":4222,"end":4720,"name":"POP","source":3},{"begin":4142,"end":4720,"name":"POP","source":3},{"begin":4142,"end":4720,"name":"POP","source":3},{"begin":4142,"end":4720,"name":"POP","source":3},{"begin":4142,"end":4720,"jumpType":"[out]","name":"JUMP","source":3},{"begin":4948,"end":5193,"name":"tag","source":16,"value":"59"},{"begin":4948,"end":5193,"name":"JUMPDEST","source":16},{"begin":1531,"end":1544,"name":"PUSH [tag]","source":0,"value":"146"},{"begin":1531,"end":1542,"name":"PUSH [tag]","source":0,"value":"147"},{"begin":1531,"end":1544,"jumpType":"[in]","name":"JUMP","source":0},{"begin":1531,"end":1544,"name":"tag","source":0,"value":"146"},{"begin":1531,"end":1544,"name":"JUMPDEST","source":0},{"begin":5080,"end":5096,"modifierDepth":1,"name":"PUSH","source":16,"value":"8"},{"begin":5080,"end":5107,"name":"DUP1","source":16},{"begin":5080,"end":5107,"name":"SLOAD","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":5080,"end":5107,"modifierDepth":1,"name":"AND","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5080,"end":5107,"name":"DUP4","source":16},{"begin":5080,"end":5107,"modifierDepth":1,"name":"AND","source":16},{"begin":5080,"end":5107,"name":"SWAP1","source":16},{"begin":5080,"end":5107,"name":"DUP2","source":16},{"begin":5080,"end":5107,"modifierDepth":1,"name":"OR","source":16},{"begin":5080,"end":5107,"name":"SWAP1","source":16},{"begin":5080,"end":5107,"name":"SWAP2","source":16},{"begin":5080,"end":5107,"name":"SSTORE","source":16},{"begin":5123,"end":5186,"modifierDepth":1,"name":"PUSH","source":16,"value":"E7784D93CFBFA4408E19577E6CC0436F4DBB51214B70E100905DFCE9DEF88C16"},{"begin":5172,"end":5184,"modifierDepth":1,"name":"PUSH [tag]","source":16,"value":"149"},{"begin":5172,"end":5182,"modifierDepth":1,"name":"PUSH [tag]","source":16,"value":"134"},{"begin":5172,"end":5184,"jumpType":"[in]","modifierDepth":1,"name":"JUMP","source":16},{"begin":5172,"end":5184,"modifierDepth":1,"name":"tag","source":16,"value":"149"},{"begin":5172,"end":5184,"modifierDepth":1,"name":"JUMPDEST","source":16},{"begin":5123,"end":5186,"modifierDepth":1,"name":"PUSH","source":16,"value":"40"},{"begin":5123,"end":5186,"name":"MLOAD","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1879,"end":1911,"name":"SWAP1","source":19},{"begin":1879,"end":1911,"name":"SWAP2","source":19},{"begin":1879,"end":1911,"name":"AND","source":19},{"begin":1861,"end":1912,"name":"DUP2","source":19},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1849,"end":1851,"name":"PUSH","source":19,"value":"20"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":5123,"end":5186,"modifierDepth":1,"name":"PUSH","source":16,"value":"40"},{"begin":5123,"end":5186,"modifierDepth":1,"name":"MLOAD","source":16},{"begin":5123,"end":5186,"modifierDepth":1,"name":"DUP1","source":16},{"begin":5123,"end":5186,"modifierDepth":1,"name":"SWAP2","source":16},{"begin":5123,"end":5186,"modifierDepth":1,"name":"SUB","source":16},{"begin":5123,"end":5186,"modifierDepth":1,"name":"SWAP1","source":16},{"begin":5123,"end":5186,"modifierDepth":1,"name":"LOG2","source":16},{"begin":4948,"end":5193,"name":"POP","source":16},{"begin":4948,"end":5193,"jumpType":"[out]","name":"JUMP","source":16},{"begin":4786,"end":4918,"name":"tag","source":3,"value":"62"},{"begin":4786,"end":4918,"name":"JUMPDEST","source":3},{"begin":4872,"end":4911,"name":"PUSH [tag]","source":3,"value":"152"},{"begin":4889,"end":4893,"name":"DUP4","source":3},{"begin":4895,"end":4897,"name":"DUP4","source":3},{"begin":4899,"end":4906,"name":"DUP4","source":3},{"begin":4872,"end":4911,"name":"PUSH","source":3,"value":"40"},{"begin":4872,"end":4911,"name":"MLOAD","source":3},{"begin":4872,"end":4911,"name":"DUP1","source":3},{"begin":4872,"end":4911,"name":"PUSH","source":3,"value":"20"},{"begin":4872,"end":4911,"name":"ADD","source":3},{"begin":4872,"end":4911,"name":"PUSH","source":3,"value":"40"},{"begin":4872,"end":4911,"name":"MSTORE","source":3},{"begin":4872,"end":4911,"name":"DUP1","source":3},{"begin":4872,"end":4911,"name":"PUSH","source":3,"value":"0"},{"begin":4872,"end":4911,"name":"DUP2","source":3},{"begin":4872,"end":4911,"name":"MSTORE","source":3},{"begin":4872,"end":4911,"name":"POP","source":3},{"begin":4872,"end":4888,"name":"PUSH [tag]","source":3,"value":"94"},{"begin":4872,"end":4911,"jumpType":"[in]","name":"JUMP","source":3},{"begin":4872,"end":4911,"name":"tag","source":3,"value":"152"},{"begin":4872,"end":4911,"name":"JUMPDEST","source":3},{"begin":4786,"end":4918,"name":"POP","source":3},{"begin":4786,"end":4918,"name":"POP","source":3},{"begin":4786,"end":4918,"name":"POP","source":3},{"begin":4786,"end":4918,"jumpType":"[out]","name":"JUMP","source":3},{"begin":2184,"end":2302,"name":"tag","source":3,"value":"70"},{"begin":2184,"end":2302,"name":"JUMPDEST","source":3},{"begin":2247,"end":2254,"name":"PUSH","source":3,"value":"0"},{"begin":2273,"end":2295,"name":"PUSH [tag]","source":3,"value":"117"},{"begin":2287,"end":2294,"name":"DUP3","source":3},{"begin":2273,"end":2286,"name":"PUSH [tag]","source":3,"value":"128"},{"begin":2273,"end":2295,"jumpType":"[in]","name":"JUMP","source":3},{"begin":1919,"end":2127,"name":"tag","source":3,"value":"74"},{"begin":1919,"end":2127,"name":"JUMPDEST","source":3},{"begin":1982,"end":1989,"name":"PUSH","source":3,"value":"0"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2005,"end":2024,"name":"DUP3","source":3},{"begin":2005,"end":2024,"name":"AND","source":3},{"begin":2001,"end":2088,"name":"PUSH [tag]","source":3,"value":"158"},{"begin":2001,"end":2088,"name":"JUMPI","source":3},{"begin":2047,"end":2077,"name":"PUSH","source":3,"value":"40"},{"begin":2047,"end":2077,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"22718AD9"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E2"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":2047,"end":2077,"name":"DUP2","source":3},{"begin":2047,"end":2077,"name":"MSTORE","source":3},{"begin":2074,"end":2075,"name":"PUSH","source":3,"value":"0"},{"begin":2047,"end":2077,"name":"PUSH","source":3,"value":"4"},{"begin":2047,"end":2077,"name":"DUP3","source":3},{"begin":2047,"end":2077,"name":"ADD","source":3},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1834,"end":1852,"name":"PUSH","source":19,"value":"24"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":2047,"end":2077,"name":"PUSH [tag]","source":3,"value":"138"},{"begin":1715,"end":1918,"name":"JUMP","source":19},{"begin":2001,"end":2088,"name":"tag","source":3,"value":"158"},{"begin":2001,"end":2088,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2104,"end":2120,"name":"AND","source":3},{"begin":2104,"end":2120,"name":"PUSH","source":3,"value":"0"},{"begin":2104,"end":2120,"name":"SWAP1","source":3},{"begin":2104,"end":2120,"name":"DUP2","source":3},{"begin":2104,"end":2120,"name":"MSTORE","source":3},{"begin":2104,"end":2113,"name":"PUSH","source":3,"value":"3"},{"begin":2104,"end":2120,"name":"PUSH","source":3,"value":"20"},{"begin":2104,"end":2120,"name":"MSTORE","source":3},{"begin":2104,"end":2120,"name":"PUSH","source":3,"value":"40"},{"begin":2104,"end":2120,"name":"SWAP1","source":3},{"begin":2104,"end":2120,"name":"KECCAK256","source":3},{"begin":2104,"end":2120,"name":"SLOAD","source":3},{"begin":2104,"end":2120,"name":"SWAP1","source":3},{"begin":1919,"end":2127,"jumpType":"[out]","name":"JUMP","source":3},{"begin":2293,"end":2394,"name":"tag","source":0,"value":"77"},{"begin":2293,"end":2394,"name":"JUMPDEST","source":0},{"begin":1531,"end":1544,"name":"PUSH [tag]","source":0,"value":"161"},{"begin":1531,"end":1542,"name":"PUSH [tag]","source":0,"value":"147"},{"begin":1531,"end":1544,"jumpType":"[in]","name":"JUMP","source":0},{"begin":1531,"end":1544,"name":"tag","source":0,"value":"161"},{"begin":1531,"end":1544,"name":"JUMPDEST","source":0},{"begin":2357,"end":2387,"modifierDepth":1,"name":"PUSH [tag]","source":0,"value":"163"},{"begin":2384,"end":2385,"modifierDepth":1,"name":"PUSH","source":0,"value":"0"},{"begin":2357,"end":2375,"modifierDepth":1,"name":"PUSH [tag]","source":0,"value":"164"},{"begin":2357,"end":2387,"jumpType":"[in]","modifierDepth":1,"name":"JUMP","source":0},{"begin":2357,"end":2387,"modifierDepth":1,"name":"tag","source":0,"value":"163"},{"begin":2357,"end":2387,"modifierDepth":1,"name":"JUMPDEST","source":0},{"begin":2293,"end":2394,"jumpType":"[out]","name":"JUMP","source":0},{"begin":2517,"end":2610,"name":"tag","source":3,"value":"85"},{"begin":2517,"end":2610,"name":"JUMPDEST","source":3},{"begin":2564,"end":2577,"name":"PUSH","source":3,"value":"60"},{"begin":2596,"end":2603,"name":"PUSH","source":3,"value":"1"},{"begin":2589,"end":2603,"name":"DUP1","source":3},{"begin":2589,"end":2603,"name":"SLOAD","source":3},{"begin":2589,"end":2603,"name":"PUSH [tag]","source":3,"value":"120"},{"begin":2589,"end":2603,"name":"SWAP1","source":3},{"begin":2589,"end":2603,"name":"PUSH [tag]","source":3,"value":"121"},{"begin":2589,"end":2603,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3717,"end":3861,"name":"tag","source":3,"value":"90"},{"begin":3717,"end":3861,"name":"JUMPDEST","source":3},{"begin":3802,"end":3854,"name":"PUSH [tag]","source":3,"value":"132"},{"begin":3821,"end":3833,"name":"PUSH [tag]","source":3,"value":"175"},{"begin":3821,"end":3831,"name":"PUSH [tag]","source":3,"value":"134"},{"begin":3821,"end":3833,"jumpType":"[in]","name":"JUMP","source":3},{"begin":3821,"end":3833,"name":"tag","source":3,"value":"175"},{"begin":3821,"end":3833,"name":"JUMPDEST","source":3},{"begin":3835,"end":3843,"name":"DUP4","source":3},{"begin":3845,"end":3853,"name":"DUP4","source":3},{"begin":3802,"end":3820,"name":"PUSH [tag]","source":3,"value":"176"},{"begin":3802,"end":3854,"jumpType":"[in]","name":"JUMP","source":3},{"begin":4984,"end":5217,"name":"tag","source":3,"value":"94"},{"begin":4984,"end":5217,"name":"JUMPDEST","source":3},{"begin":5097,"end":5128,"name":"PUSH [tag]","source":3,"value":"178"},{"begin":5110,"end":5114,"name":"DUP5","source":3},{"begin":5116,"end":5118,"name":"DUP5","source":3},{"begin":5120,"end":5127,"name":"DUP5","source":3},{"begin":5097,"end":5109,"name":"PUSH [tag]","source":3,"value":"55"},{"begin":5097,"end":5128,"jumpType":"[in]","name":"JUMP","source":3},{"begin":5097,"end":5128,"name":"tag","source":3,"value":"178"},{"begin":5097,"end":5128,"name":"JUMPDEST","source":3},{"begin":5138,"end":5210,"name":"PUSH [tag]","source":3,"value":"142"},{"begin":5172,"end":5184,"name":"PUSH [tag]","source":3,"value":"180"},{"begin":5172,"end":5182,"name":"PUSH [tag]","source":3,"value":"134"},{"begin":5172,"end":5184,"jumpType":"[in]","name":"JUMP","source":3},{"begin":5172,"end":5184,"name":"tag","source":3,"value":"180"},{"begin":5172,"end":5184,"name":"JUMPDEST","source":3},{"begin":5186,"end":5190,"name":"DUP6","source":3},{"begin":5192,"end":5194,"name":"DUP6","source":3},{"begin":5196,"end":5203,"name":"DUP6","source":3},{"begin":5205,"end":5209,"name":"DUP6","source":3},{"begin":5138,"end":5171,"name":"PUSH [tag]","source":3,"value":"181"},{"begin":5138,"end":5210,"jumpType":"[in]","name":"JUMP","source":3},{"begin":5746,"end":6071,"name":"tag","source":16,"value":"97"},{"begin":5746,"end":6071,"name":"JUMPDEST","source":16},{"begin":5805,"end":5822,"name":"PUSH","source":16,"value":"0"},{"begin":5910,"end":5915,"name":"PUSH","source":16,"value":"7"},{"begin":5910,"end":5915,"name":"PUSH","source":16,"value":"0"},{"begin":5908,"end":5915,"name":"DUP2","source":16},{"begin":5908,"end":5915,"name":"SLOAD","source":16},{"begin":5908,"end":5915,"name":"PUSH [tag]","source":16,"value":"183"},{"begin":5908,"end":5915,"name":"SWAP1","source":16},{"begin":5908,"end":5915,"name":"PUSH [tag]","source":16,"value":"184"},{"begin":5908,"end":5915,"jumpType":"[in]","name":"JUMP","source":16},{"begin":5908,"end":5915,"name":"tag","source":16,"value":"183"},{"begin":5908,"end":5915,"name":"JUMPDEST","source":16},{"begin":5908,"end":5915,"name":"SWAP2","source":16},{"begin":5908,"end":5915,"name":"DUP3","source":16},{"begin":5908,"end":5915,"name":"SWAP1","source":16},{"begin":5908,"end":5915,"name":"SSTORE","source":16},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":5908,"end":5915,"name":"SWAP1","source":16},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5931,"end":5997,"name":"DUP3","source":16},{"begin":5931,"end":5997,"name":"AND","source":16},{"begin":5908,"end":5915,"name":"DUP2","source":16},{"begin":5931,"end":5997,"name":"PUSH","source":16,"value":"365B3162CD780731FC55A794B59494D472BC2AF701007F581843A70673814698"},{"begin":5983,"end":5995,"name":"PUSH [tag]","source":16,"value":"185"},{"begin":5983,"end":5993,"name":"PUSH [tag]","source":16,"value":"134"},{"begin":5983,"end":5995,"jumpType":"[in]","name":"JUMP","source":16},{"begin":5983,"end":5995,"name":"tag","source":16,"value":"185"},{"begin":5983,"end":5995,"name":"JUMPDEST","source":16},{"begin":5931,"end":5997,"name":"PUSH","source":16,"value":"40"},{"begin":5931,"end":5997,"name":"MLOAD","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1879,"end":1911,"name":"SWAP1","source":19},{"begin":1879,"end":1911,"name":"SWAP2","source":19},{"begin":1879,"end":1911,"name":"AND","source":19},{"begin":1861,"end":1912,"name":"DUP2","source":19},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1849,"end":1851,"name":"PUSH","source":19,"value":"20"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":5931,"end":5997,"name":"PUSH","source":16,"value":"40"},{"begin":5931,"end":5997,"name":"MLOAD","source":16},{"begin":5931,"end":5997,"name":"DUP1","source":16},{"begin":5931,"end":5997,"name":"SWAP2","source":16},{"begin":5931,"end":5997,"name":"SUB","source":16},{"begin":5931,"end":5997,"name":"SWAP1","source":16},{"begin":5931,"end":5997,"name":"LOG3","source":16},{"begin":6037,"end":6064,"name":"PUSH [tag]","source":16,"value":"187"},{"begin":6047,"end":6052,"name":"DUP3","source":16},{"begin":6054,"end":6063,"name":"DUP3","source":16},{"begin":6037,"end":6046,"name":"PUSH [tag]","source":16,"value":"188"},{"begin":6037,"end":6064,"jumpType":"[in]","name":"JUMP","source":16},{"begin":6037,"end":6064,"name":"tag","source":16,"value":"187"},{"begin":6037,"end":6064,"name":"JUMPDEST","source":16},{"begin":5746,"end":6071,"name":"SWAP2","source":16},{"begin":5746,"end":6071,"name":"SWAP1","source":16},{"begin":5746,"end":6071,"name":"POP","source":16},{"begin":5746,"end":6071,"jumpType":"[out]","name":"JUMP","source":16},{"begin":3143,"end":3534,"name":"tag","source":16,"value":"101"},{"begin":3143,"end":3534,"name":"JUMPDEST","source":16},{"begin":3311,"end":3327,"name":"PUSH","source":16,"value":"8"},{"begin":3311,"end":3327,"name":"SLOAD","source":16},{"begin":3210,"end":3223,"name":"PUSH","source":16,"value":"60"},{"begin":3210,"end":3223,"name":"SWAP1","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3311,"end":3327,"name":"AND","source":16},{"begin":3311,"end":3327,"name":"DUP1","source":16},{"begin":3389,"end":3447,"name":"PUSH [tag]","source":16,"value":"190"},{"begin":3389,"end":3447,"name":"JUMPI","source":16},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3438,"end":3447,"name":"PUSH","source":16,"value":"40"},{"begin":3438,"end":3447,"name":"DUP1","source":16},{"begin":3438,"end":3447,"name":"MLOAD","source":16},{"begin":3438,"end":3447,"name":"PUSH","source":16,"value":"20"},{"begin":3438,"end":3447,"name":"DUP2","source":16},{"begin":3438,"end":3447,"name":"ADD","source":16},{"begin":3438,"end":3447,"name":"SWAP1","source":16},{"begin":3438,"end":3447,"name":"SWAP2","source":16},{"begin":3438,"end":3447,"name":"MSTORE","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":3438,"end":3447,"name":"DUP2","source":16},{"begin":3438,"end":3447,"name":"MSTORE","source":16},{"begin":3438,"end":3447,"name":"SWAP2","source":16},{"begin":3143,"end":3534,"name":"SWAP1","source":16},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3143,"end":3534,"jumpType":"[out]","name":"JUMP","source":16},{"begin":3389,"end":3447,"name":"tag","source":16,"value":"190"},{"begin":3389,"end":3447,"name":"JUMPDEST","source":16},{"begin":3501,"end":3527,"name":"PUSH","source":16,"value":"40"},{"begin":3501,"end":3527,"name":"MLOAD","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"6D02A255"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":3501,"end":3527,"name":"DUP2","source":16},{"begin":3501,"end":3527,"name":"MSTORE","source":16},{"begin":3501,"end":3527,"name":"PUSH","source":16,"value":"4"},{"begin":3501,"end":3527,"name":"DUP2","source":16},{"begin":3501,"end":3527,"name":"ADD","source":16},{"begin":738,"end":763,"name":"DUP5","source":19},{"begin":738,"end":763,"name":"SWAP1","source":19},{"begin":738,"end":763,"name":"MSTORE","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3501,"end":3516,"name":"DUP3","source":16},{"begin":3501,"end":3516,"name":"AND","source":16},{"begin":3501,"end":3516,"name":"SWAP1","source":16},{"begin":3501,"end":3516,"name":"PUSH","source":16,"value":"DA0544AA"},{"begin":3501,"end":3516,"name":"SWAP1","source":16},{"begin":711,"end":729,"name":"PUSH","source":19,"value":"24"},{"begin":711,"end":729,"name":"ADD","source":19},{"begin":3501,"end":3527,"name":"PUSH","source":16,"value":"0"},{"begin":3501,"end":3527,"name":"PUSH","source":16,"value":"40"},{"begin":3501,"end":3527,"name":"MLOAD","source":16},{"begin":3501,"end":3527,"name":"DUP1","source":16},{"begin":3501,"end":3527,"name":"DUP4","source":16},{"begin":3501,"end":3527,"name":"SUB","source":16},{"begin":3501,"end":3527,"name":"DUP2","source":16},{"begin":3501,"end":3527,"name":"DUP7","source":16},{"begin":3501,"end":3527,"name":"GAS","source":16},{"begin":3501,"end":3527,"name":"STATICCALL","source":16},{"begin":3501,"end":3527,"name":"ISZERO","source":16},{"begin":3501,"end":3527,"name":"DUP1","source":16},{"begin":3501,"end":3527,"name":"ISZERO","source":16},{"begin":3501,"end":3527,"name":"PUSH [tag]","source":16,"value":"193"},{"begin":3501,"end":3527,"name":"JUMPI","source":16},{"begin":3501,"end":3527,"name":"RETURNDATASIZE","source":16},{"begin":3501,"end":3527,"name":"PUSH","source":16,"value":"0"},{"begin":3501,"end":3527,"name":"DUP1","source":16},{"begin":3501,"end":3527,"name":"RETURNDATACOPY","source":16},{"begin":3501,"end":3527,"name":"RETURNDATASIZE","source":16},{"begin":3501,"end":3527,"name":"PUSH","source":16,"value":"0"},{"begin":3501,"end":3527,"name":"REVERT","source":16},{"begin":3501,"end":3527,"name":"tag","source":16,"value":"193"},{"begin":3501,"end":3527,"name":"JUMPDEST","source":16},{"begin":3501,"end":3527,"name":"POP","source":16},{"begin":3501,"end":3527,"name":"POP","source":16},{"begin":3501,"end":3527,"name":"POP","source":16},{"begin":3501,"end":3527,"name":"POP","source":16},{"begin":3501,"end":3527,"name":"PUSH","source":16,"value":"40"},{"begin":3501,"end":3527,"name":"MLOAD","source":16},{"begin":3501,"end":3527,"name":"RETURNDATASIZE","source":16},{"begin":3501,"end":3527,"name":"PUSH","source":16,"value":"0"},{"begin":3501,"end":3527,"name":"DUP3","source":16},{"begin":3501,"end":3527,"name":"RETURNDATACOPY","source":16},{"begin":3501,"end":3527,"name":"PUSH","source":16,"value":"1F"},{"begin":3501,"end":3527,"name":"RETURNDATASIZE","source":16},{"begin":3501,"end":3527,"name":"SWAP1","source":16},{"begin":3501,"end":3527,"name":"DUP2","source":16},{"begin":3501,"end":3527,"name":"ADD","source":16},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1F"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":3501,"end":3527,"name":"AND","source":16},{"begin":3501,"end":3527,"name":"DUP3","source":16},{"begin":3501,"end":3527,"name":"ADD","source":16},{"begin":3501,"end":3527,"name":"PUSH","source":16,"value":"40"},{"begin":3501,"end":3527,"name":"MSTORE","source":16},{"begin":3501,"end":3527,"name":"PUSH [tag]","source":16,"value":"194"},{"begin":3501,"end":3527,"name":"SWAP2","source":16},{"begin":3501,"end":3527,"name":"SWAP1","source":16},{"begin":3501,"end":3527,"name":"DUP2","source":16},{"begin":3501,"end":3527,"name":"ADD","source":16},{"begin":3501,"end":3527,"name":"SWAP1","source":16},{"begin":3501,"end":3527,"name":"PUSH [tag]","source":16,"value":"195"},{"begin":3501,"end":3527,"jumpType":"[in]","name":"JUMP","source":16},{"begin":3501,"end":3527,"name":"tag","source":16,"value":"194"},{"begin":3501,"end":3527,"name":"JUMPDEST","source":16},{"begin":3494,"end":3527,"name":"SWAP4","source":16},{"begin":3143,"end":3534,"name":"SWAP3","source":16},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3143,"end":3534,"jumpType":"[out]","name":"JUMP","source":16},{"begin":3927,"end":4080,"name":"tag","source":3,"value":"110"},{"begin":3927,"end":4080,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4038,"end":4063,"name":"SWAP2","source":3},{"begin":4038,"end":4063,"name":"DUP3","source":3},{"begin":4038,"end":4063,"name":"AND","source":3},{"begin":4015,"end":4019,"name":"PUSH","source":3,"value":"0"},{"begin":4038,"end":4063,"name":"SWAP1","source":3},{"begin":4038,"end":4063,"name":"DUP2","source":3},{"begin":4038,"end":4063,"name":"MSTORE","source":3},{"begin":4038,"end":4056,"name":"PUSH","source":3,"value":"5"},{"begin":4038,"end":4063,"name":"PUSH","source":3,"value":"20"},{"begin":4038,"end":4063,"name":"SWAP1","source":3},{"begin":4038,"end":4063,"name":"DUP2","source":3},{"begin":4038,"end":4063,"name":"MSTORE","source":3},{"begin":4038,"end":4063,"name":"PUSH","source":3,"value":"40"},{"begin":4038,"end":4063,"name":"DUP1","source":3},{"begin":4038,"end":4063,"name":"DUP4","source":3},{"begin":4038,"end":4063,"name":"KECCAK256","source":3},{"begin":4038,"end":4073,"name":"SWAP4","source":3},{"begin":4038,"end":4073,"name":"SWAP1","source":3},{"begin":4038,"end":4073,"name":"SWAP5","source":3},{"begin":4038,"end":4073,"name":"AND","source":3},{"begin":4038,"end":4073,"name":"DUP3","source":3},{"begin":4038,"end":4073,"name":"MSTORE","source":3},{"begin":4038,"end":4073,"name":"SWAP2","source":3},{"begin":4038,"end":4073,"name":"SWAP1","source":3},{"begin":4038,"end":4073,"name":"SWAP2","source":3},{"begin":4038,"end":4073,"name":"MSTORE","source":3},{"begin":4038,"end":4073,"name":"KECCAK256","source":3},{"begin":4038,"end":4073,"name":"SLOAD","source":3},{"begin":4038,"end":4073,"name":"PUSH","source":3,"value":"FF"},{"begin":4038,"end":4073,"name":"AND","source":3},{"begin":4038,"end":4073,"name":"SWAP1","source":3},{"begin":3927,"end":4080,"jumpType":"[out]","name":"JUMP","source":3},{"begin":2543,"end":2758,"name":"tag","source":0,"value":"114"},{"begin":2543,"end":2758,"name":"JUMPDEST","source":0},{"begin":1531,"end":1544,"name":"PUSH [tag]","source":0,"value":"198"},{"begin":1531,"end":1542,"name":"PUSH [tag]","source":0,"value":"147"},{"begin":1531,"end":1544,"jumpType":"[in]","name":"JUMP","source":0},{"begin":1531,"end":1544,"name":"tag","source":0,"value":"198"},{"begin":1531,"end":1544,"name":"JUMPDEST","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2627,"end":2649,"name":"DUP2","source":0},{"begin":2627,"end":2649,"modifierDepth":1,"name":"AND","source":0},{"begin":2623,"end":2714,"modifierDepth":1,"name":"PUSH [tag]","source":0,"value":"200"},{"begin":2623,"end":2714,"modifierDepth":1,"name":"JUMPI","source":0},{"begin":2672,"end":2703,"modifierDepth":1,"name":"PUSH","source":0,"value":"40"},{"begin":2672,"end":2703,"name":"MLOAD","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1E4FBDF7"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":2672,"end":2703,"name":"DUP2","source":0},{"begin":2672,"end":2703,"name":"MSTORE","source":0},{"begin":2700,"end":2701,"modifierDepth":1,"name":"PUSH","source":0,"value":"0"},{"begin":2672,"end":2703,"modifierDepth":1,"name":"PUSH","source":0,"value":"4"},{"begin":2672,"end":2703,"name":"DUP3","source":0},{"begin":2672,"end":2703,"modifierDepth":1,"name":"ADD","source":0},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1834,"end":1852,"name":"PUSH","source":19,"value":"24"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":2672,"end":2703,"modifierDepth":1,"name":"PUSH [tag]","source":0,"value":"138"},{"begin":1715,"end":1918,"name":"JUMP","source":19},{"begin":2623,"end":2714,"modifierDepth":1,"name":"tag","source":0,"value":"200"},{"begin":2623,"end":2714,"modifierDepth":1,"name":"JUMPDEST","source":0},{"begin":2723,"end":2751,"modifierDepth":1,"name":"PUSH [tag]","source":0,"value":"202"},{"begin":2742,"end":2750,"modifierDepth":1,"name":"DUP2","source":0},{"begin":2723,"end":2741,"modifierDepth":1,"name":"PUSH [tag]","source":0,"value":"164"},{"begin":2723,"end":2751,"jumpType":"[in]","modifierDepth":1,"name":"JUMP","source":0},{"begin":2723,"end":2751,"modifierDepth":1,"name":"tag","source":0,"value":"202"},{"begin":2723,"end":2751,"modifierDepth":1,"name":"JUMPDEST","source":0},{"begin":2543,"end":2758,"name":"POP","source":0},{"begin":2543,"end":2758,"jumpType":"[out]","name":"JUMP","source":0},{"begin":1560,"end":1860,"name":"tag","source":3,"value":"118"},{"begin":1560,"end":1860,"name":"JUMPDEST","source":3},{"begin":1662,"end":1666,"name":"PUSH","source":3,"value":"0"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":1697,"end":1737,"name":"DUP3","source":3},{"begin":1697,"end":1737,"name":"AND","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"80AC58CD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1697,"end":1737,"name":"EQ","source":3},{"begin":1697,"end":1737,"name":"DUP1","source":3},{"begin":1697,"end":1801,"name":"PUSH [tag]","source":3,"value":"204"},{"begin":1697,"end":1801,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":1753,"end":1801,"name":"DUP3","source":3},{"begin":1753,"end":1801,"name":"AND","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"5B5E139F"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1753,"end":1801,"name":"EQ","source":3},{"begin":1697,"end":1801,"name":"tag","source":3,"value":"204"},{"begin":1697,"end":1801,"name":"JUMPDEST","source":3},{"begin":1697,"end":1853,"name":"DUP1","source":3},{"begin":1697,"end":1853,"name":"PUSH [tag]","source":3,"value":"117"},{"begin":1697,"end":1853,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1FFC9A7"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":862,"end":902,"name":"DUP4","source":11},{"begin":862,"end":902,"name":"AND","source":11},{"begin":862,"end":902,"name":"EQ","source":11},{"begin":1817,"end":1853,"name":"PUSH [tag]","source":3,"value":"117"},{"begin":763,"end":909,"name":"JUMP","source":11},{"begin":16212,"end":16453,"name":"tag","source":3,"value":"128"},{"begin":16212,"end":16453,"name":"JUMPDEST","source":3},{"begin":16275,"end":16282,"name":"PUSH","source":3,"value":"0"},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"MSTORE","source":3},{"begin":5824,"end":5831,"name":"PUSH","source":3,"value":"2"},{"begin":5824,"end":5840,"name":"PUSH","source":3,"value":"20"},{"begin":5824,"end":5840,"name":"MSTORE","source":3},{"begin":5824,"end":5840,"name":"PUSH","source":3,"value":"40"},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"KECCAK256","source":3},{"begin":5824,"end":5840,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5824,"end":5840,"name":"AND","source":3},{"begin":5824,"end":5840,"name":"DUP1","source":3},{"begin":16337,"end":16425,"name":"PUSH [tag]","source":3,"value":"117"},{"begin":16337,"end":16425,"name":"JUMPI","source":3},{"begin":16383,"end":16414,"name":"PUSH","source":3,"value":"40"},{"begin":16383,"end":16414,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"7E273289"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":16383,"end":16414,"name":"DUP2","source":3},{"begin":16383,"end":16414,"name":"MSTORE","source":3},{"begin":16383,"end":16414,"name":"PUSH","source":3,"value":"4"},{"begin":16383,"end":16414,"name":"DUP2","source":3},{"begin":16383,"end":16414,"name":"ADD","source":3},{"begin":738,"end":763,"name":"DUP5","source":19},{"begin":738,"end":763,"name":"SWAP1","source":19},{"begin":738,"end":763,"name":"MSTORE","source":19},{"begin":711,"end":729,"name":"PUSH","source":19,"value":"24"},{"begin":711,"end":729,"name":"ADD","source":19},{"begin":16383,"end":16414,"name":"PUSH [tag]","source":3,"value":"138"},{"begin":592,"end":769,"name":"JUMP","source":19},{"begin":4412,"end":4558,"name":"tag","source":16,"value":"134"},{"begin":4412,"end":4558,"name":"JUMPDEST","source":16},{"begin":4491,"end":4505,"name":"PUSH","source":16,"value":"0"},{"begin":4524,"end":4551,"name":"PUSH [tag]","source":16,"value":"215"},{"begin":4524,"end":4549,"name":"PUSH [tag]","source":16,"value":"216"},{"begin":4524,"end":4551,"jumpType":"[in]","name":"JUMP","source":16},{"begin":4524,"end":4551,"name":"tag","source":16,"value":"215"},{"begin":4524,"end":4551,"name":"JUMPDEST","source":16},{"begin":4517,"end":4551,"name":"SWAP1","source":16},{"begin":4517,"end":4551,"name":"POP","source":16},{"begin":4412,"end":4558,"name":"SWAP1","source":16},{"begin":4412,"end":4558,"jumpType":"[out]","name":"JUMP","source":16},{"begin":14492,"end":14612,"name":"tag","source":3,"value":"135"},{"begin":14492,"end":14612,"name":"JUMPDEST","source":3},{"begin":14572,"end":14605,"name":"PUSH [tag]","source":3,"value":"152"},{"begin":14581,"end":14583,"name":"DUP4","source":3},{"begin":14585,"end":14592,"name":"DUP4","source":3},{"begin":14594,"end":14598,"name":"DUP4","source":3},{"begin":14600,"end":14604,"name":"PUSH","source":3,"value":"1"},{"begin":14572,"end":14580,"name":"PUSH [tag]","source":3,"value":"219"},{"begin":14572,"end":14605,"jumpType":"[in]","name":"JUMP","source":3},{"begin":8861,"end":9656,"name":"tag","source":3,"value":"141"},{"begin":8861,"end":9656,"name":"JUMPDEST","source":3},{"begin":8947,"end":8954,"name":"PUSH","source":3,"value":"0"},{"begin":5824,"end":5840,"name":"DUP3","source":3},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"MSTORE","source":3},{"begin":5824,"end":5831,"name":"PUSH","source":3,"value":"2"},{"begin":5824,"end":5840,"name":"PUSH","source":3,"value":"20"},{"begin":5824,"end":5840,"name":"MSTORE","source":3},{"begin":5824,"end":5840,"name":"PUSH","source":3,"value":"40"},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"KECCAK256","source":3},{"begin":5824,"end":5840,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5824,"end":5840,"name":"SWAP1","source":3},{"begin":5824,"end":5840,"name":"DUP2","source":3},{"begin":5824,"end":5840,"name":"AND","source":3},{"begin":5824,"end":5840,"name":"SWAP1","source":3},{"begin":9058,"end":9076,"name":"DUP4","source":3},{"begin":9058,"end":9076,"name":"AND","source":3},{"begin":9058,"end":9076,"name":"ISZERO","source":3},{"begin":9054,"end":9140,"name":"PUSH [tag]","source":3,"value":"223"},{"begin":9054,"end":9140,"name":"JUMPI","source":3},{"begin":9092,"end":9129,"name":"PUSH [tag]","source":3,"value":"223"},{"begin":9109,"end":9113,"name":"DUP2","source":3},{"begin":9115,"end":9119,"name":"DUP5","source":3},{"begin":9121,"end":9128,"name":"DUP7","source":3},{"begin":9092,"end":9108,"name":"PUSH [tag]","source":3,"value":"224"},{"begin":9092,"end":9129,"jumpType":"[in]","name":"JUMP","source":3},{"begin":9092,"end":9129,"name":"tag","source":3,"value":"223"},{"begin":9092,"end":9129,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9184,"end":9202,"name":"DUP2","source":3},{"begin":9184,"end":9202,"name":"AND","source":3},{"begin":9184,"end":9202,"name":"ISZERO","source":3},{"begin":9180,"end":9436,"name":"PUSH [tag]","source":3,"value":"225"},{"begin":9180,"end":9436,"name":"JUMPI","source":3},{"begin":9300,"end":9348,"name":"PUSH [tag]","source":3,"value":"226"},{"begin":9317,"end":9318,"name":"PUSH","source":3,"value":"0"},{"begin":9321,"end":9328,"name":"DUP6","source":3},{"begin":9338,"end":9339,"name":"PUSH","source":3,"value":"0"},{"begin":9342,"end":9347,"name":"DUP1","source":3},{"begin":9300,"end":9308,"name":"PUSH [tag]","source":3,"value":"219"},{"begin":9300,"end":9348,"jumpType":"[in]","name":"JUMP","source":3},{"begin":9300,"end":9348,"name":"tag","source":3,"value":"226"},{"begin":9300,"end":9348,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9391,"end":9406,"name":"DUP2","source":3},{"begin":9391,"end":9406,"name":"AND","source":3},{"begin":9391,"end":9406,"name":"PUSH","source":3,"value":"0"},{"begin":9391,"end":9406,"name":"SWAP1","source":3},{"begin":9391,"end":9406,"name":"DUP2","source":3},{"begin":9391,"end":9406,"name":"MSTORE","source":3},{"begin":9391,"end":9400,"name":"PUSH","source":3,"value":"3"},{"begin":9391,"end":9406,"name":"PUSH","source":3,"value":"20"},{"begin":9391,"end":9406,"name":"MSTORE","source":3},{"begin":9391,"end":9406,"name":"PUSH","source":3,"value":"40"},{"begin":9391,"end":9406,"name":"SWAP1","source":3},{"begin":9391,"end":9406,"name":"KECCAK256","source":3},{"begin":9391,"end":9411,"name":"DUP1","source":3},{"begin":9391,"end":9411,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":9391,"end":9411,"name":"ADD","source":3},{"begin":9391,"end":9411,"name":"SWAP1","source":3},{"begin":9391,"end":9411,"name":"SSTORE","source":3},{"begin":9180,"end":9436,"name":"tag","source":3,"value":"225"},{"begin":9180,"end":9436,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9450,"end":9466,"name":"DUP6","source":3},{"begin":9450,"end":9466,"name":"AND","source":3},{"begin":9450,"end":9466,"name":"ISZERO","source":3},{"begin":9446,"end":9553,"name":"PUSH [tag]","source":3,"value":"227"},{"begin":9446,"end":9553,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9510,"end":9523,"name":"DUP6","source":3},{"begin":9510,"end":9523,"name":"AND","source":3},{"begin":9510,"end":9523,"name":"PUSH","source":3,"value":"0"},{"begin":9510,"end":9523,"name":"SWAP1","source":3},{"begin":9510,"end":9523,"name":"DUP2","source":3},{"begin":9510,"end":9523,"name":"MSTORE","source":3},{"begin":9510,"end":9519,"name":"PUSH","source":3,"value":"3"},{"begin":9510,"end":9523,"name":"PUSH","source":3,"value":"20"},{"begin":9510,"end":9523,"name":"MSTORE","source":3},{"begin":9510,"end":9523,"name":"PUSH","source":3,"value":"40"},{"begin":9510,"end":9523,"name":"SWAP1","source":3},{"begin":9510,"end":9523,"name":"KECCAK256","source":3},{"begin":9510,"end":9528,"name":"DUP1","source":3},{"begin":9510,"end":9528,"name":"SLOAD","source":3},{"begin":9527,"end":9528,"name":"PUSH","source":3,"value":"1"},{"begin":9510,"end":9528,"name":"ADD","source":3},{"begin":9510,"end":9528,"name":"SWAP1","source":3},{"begin":9510,"end":9528,"name":"SSTORE","source":3},{"begin":9446,"end":9553,"name":"tag","source":3,"value":"227"},{"begin":9446,"end":9553,"name":"JUMPDEST","source":3},{"begin":9563,"end":9579,"name":"PUSH","source":3,"value":"0"},{"begin":9563,"end":9579,"name":"DUP5","source":3},{"begin":9563,"end":9579,"name":"DUP2","source":3},{"begin":9563,"end":9579,"name":"MSTORE","source":3},{"begin":9563,"end":9570,"name":"PUSH","source":3,"value":"2"},{"begin":9563,"end":9579,"name":"PUSH","source":3,"value":"20"},{"begin":9563,"end":9579,"name":"MSTORE","source":3},{"begin":9563,"end":9579,"name":"PUSH","source":3,"value":"40"},{"begin":9563,"end":9579,"name":"DUP1","source":3},{"begin":9563,"end":9579,"name":"DUP3","source":3},{"begin":9563,"end":9579,"name":"KECCAK256","source":3},{"begin":9563,"end":9584,"name":"DUP1","source":3},{"begin":9563,"end":9584,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":9563,"end":9584,"name":"AND","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9563,"end":9584,"name":"DUP10","source":3},{"begin":9563,"end":9584,"name":"DUP2","source":3},{"begin":9563,"end":9584,"name":"AND","source":3},{"begin":9563,"end":9584,"name":"SWAP2","source":3},{"begin":9563,"end":9584,"name":"DUP3","source":3},{"begin":9563,"end":9584,"name":"OR","source":3},{"begin":9563,"end":9584,"name":"SWAP1","source":3},{"begin":9563,"end":9584,"name":"SWAP3","source":3},{"begin":9563,"end":9584,"name":"SSTORE","source":3},{"begin":9600,"end":9627,"name":"SWAP2","source":3},{"begin":9600,"end":9627,"name":"MLOAD","source":3},{"begin":9563,"end":9579,"name":"DUP8","source":3},{"begin":9563,"end":9579,"name":"SWAP4","source":3},{"begin":9600,"end":9627,"name":"SWAP2","source":3},{"begin":9600,"end":9627,"name":"DUP6","source":3},{"begin":9600,"end":9627,"name":"AND","source":3},{"begin":9600,"end":9627,"name":"SWAP2","source":3},{"begin":9600,"end":9627,"name":"PUSH","source":3,"value":"DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"},{"begin":9600,"end":9627,"name":"SWAP2","source":3},{"begin":9600,"end":9627,"name":"LOG4","source":3},{"begin":9645,"end":9649,"name":"SWAP5","source":3},{"begin":8861,"end":9656,"name":"SWAP4","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":8861,"end":9656,"jumpType":"[out]","name":"JUMP","source":3},{"begin":1796,"end":1958,"name":"tag","source":0,"value":"147"},{"begin":1796,"end":1958,"name":"JUMPDEST","source":0},{"begin":1866,"end":1878,"name":"PUSH [tag]","source":0,"value":"229"},{"begin":1866,"end":1876,"name":"PUSH [tag]","source":0,"value":"134"},{"begin":1866,"end":1878,"jumpType":"[in]","name":"JUMP","source":0},{"begin":1866,"end":1878,"name":"tag","source":0,"value":"229"},{"begin":1866,"end":1878,"name":"JUMPDEST","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1855,"end":1878,"name":"AND","source":0},{"begin":1855,"end":1862,"name":"PUSH [tag]","source":0,"value":"230"},{"begin":1710,"end":1716,"name":"PUSH","source":0,"value":"6"},{"begin":1710,"end":1716,"name":"SLOAD","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1710,"end":1716,"name":"AND","source":0},{"begin":1710,"end":1716,"name":"SWAP1","source":0},{"begin":1638,"end":1723,"name":"JUMP","source":0},{"begin":1855,"end":1862,"name":"tag","source":0,"value":"230"},{"begin":1855,"end":1862,"name":"JUMPDEST","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1855,"end":1878,"name":"AND","source":0},{"begin":1855,"end":1878,"name":"EQ","source":0},{"begin":1851,"end":1952,"name":"PUSH [tag]","source":0,"value":"163"},{"begin":1851,"end":1952,"name":"JUMPI","source":0},{"begin":1928,"end":1940,"name":"PUSH [tag]","source":0,"value":"232"},{"begin":1928,"end":1938,"name":"PUSH [tag]","source":0,"value":"134"},{"begin":1928,"end":1940,"jumpType":"[in]","name":"JUMP","source":0},{"begin":1928,"end":1940,"name":"tag","source":0,"value":"232"},{"begin":1928,"end":1940,"name":"JUMPDEST","source":0},{"begin":1901,"end":1941,"name":"PUSH","source":0,"value":"40"},{"begin":1901,"end":1941,"name":"MLOAD","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"118CDAA7"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1901,"end":1941,"name":"DUP2","source":0},{"begin":1901,"end":1941,"name":"MSTORE","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1879,"end":1911,"name":"SWAP1","source":19},{"begin":1879,"end":1911,"name":"SWAP2","source":19},{"begin":1879,"end":1911,"name":"AND","source":19},{"begin":1901,"end":1941,"name":"PUSH","source":0,"value":"4"},{"begin":1901,"end":1941,"name":"DUP3","source":0},{"begin":1901,"end":1941,"name":"ADD","source":0},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1834,"end":1852,"name":"PUSH","source":19,"value":"24"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":1901,"end":1941,"name":"PUSH [tag]","source":0,"value":"138"},{"begin":1715,"end":1918,"name":"JUMP","source":19},{"begin":2912,"end":3099,"name":"tag","source":0,"value":"164"},{"begin":2912,"end":3099,"name":"JUMPDEST","source":0},{"begin":3004,"end":3010,"name":"PUSH","source":0,"value":"6"},{"begin":3004,"end":3010,"name":"DUP1","source":0},{"begin":3004,"end":3010,"name":"SLOAD","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3020,"end":3037,"name":"DUP4","source":0},{"begin":3020,"end":3037,"name":"DUP2","source":0},{"begin":3020,"end":3037,"name":"AND","source":0},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":3020,"end":3037,"name":"DUP4","source":0},{"begin":3020,"end":3037,"name":"AND","source":0},{"begin":3020,"end":3037,"name":"DUP2","source":0},{"begin":3020,"end":3037,"name":"OR","source":0},{"begin":3020,"end":3037,"name":"SWAP1","source":0},{"begin":3020,"end":3037,"name":"SWAP4","source":0},{"begin":3020,"end":3037,"name":"SSTORE","source":0},{"begin":3052,"end":3092,"name":"PUSH","source":0,"value":"40"},{"begin":3052,"end":3092,"name":"MLOAD","source":0},{"begin":3004,"end":3010,"name":"SWAP2","source":0},{"begin":3004,"end":3010,"name":"AND","source":0},{"begin":3004,"end":3010,"name":"SWAP2","source":0},{"begin":3020,"end":3037,"name":"SWAP1","source":0},{"begin":3004,"end":3010,"name":"DUP3","source":0},{"begin":3004,"end":3010,"name":"SWAP1","source":0},{"begin":3052,"end":3092,"name":"PUSH","source":0,"value":"8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"},{"begin":3052,"end":3092,"name":"SWAP1","source":0},{"begin":2985,"end":3001,"name":"PUSH","source":0,"value":"0"},{"begin":2985,"end":3001,"name":"SWAP1","source":0},{"begin":3052,"end":3092,"name":"LOG3","source":0},{"begin":2975,"end":3099,"name":"POP","source":0},{"begin":2912,"end":3099,"name":"POP","source":0},{"begin":2912,"end":3099,"jumpType":"[out]","name":"JUMP","source":0},{"begin":15665,"end":15977,"name":"tag","source":3,"value":"176"},{"begin":15665,"end":15977,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15772,"end":15794,"name":"DUP3","source":3},{"begin":15772,"end":15794,"name":"AND","source":3},{"begin":15768,"end":15859,"name":"PUSH [tag]","source":3,"value":"236"},{"begin":15768,"end":15859,"name":"JUMPI","source":3},{"begin":15817,"end":15848,"name":"PUSH","source":3,"value":"40"},{"begin":15817,"end":15848,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"B611743"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E3"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":15817,"end":15848,"name":"DUP2","source":3},{"begin":15817,"end":15848,"name":"MSTORE","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1879,"end":1911,"name":"DUP4","source":19},{"begin":1879,"end":1911,"name":"AND","source":19},{"begin":15817,"end":15848,"name":"PUSH","source":3,"value":"4"},{"begin":15817,"end":15848,"name":"DUP3","source":3},{"begin":15817,"end":15848,"name":"ADD","source":3},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1834,"end":1852,"name":"PUSH","source":19,"value":"24"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":15817,"end":15848,"name":"PUSH [tag]","source":3,"value":"138"},{"begin":1715,"end":1918,"name":"JUMP","source":19},{"begin":15768,"end":15859,"name":"tag","source":3,"value":"236"},{"begin":15768,"end":15859,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15868,"end":15893,"name":"DUP4","source":3},{"begin":15868,"end":15893,"name":"DUP2","source":3},{"begin":15868,"end":15893,"name":"AND","source":3},{"begin":15868,"end":15893,"name":"PUSH","source":3,"value":"0"},{"begin":15868,"end":15893,"name":"DUP2","source":3},{"begin":15868,"end":15893,"name":"DUP2","source":3},{"begin":15868,"end":15893,"name":"MSTORE","source":3},{"begin":15868,"end":15886,"name":"PUSH","source":3,"value":"5"},{"begin":15868,"end":15893,"name":"PUSH","source":3,"value":"20"},{"begin":15868,"end":15893,"name":"SWAP1","source":3},{"begin":15868,"end":15893,"name":"DUP2","source":3},{"begin":15868,"end":15893,"name":"MSTORE","source":3},{"begin":15868,"end":15893,"name":"PUSH","source":3,"value":"40"},{"begin":15868,"end":15893,"name":"DUP1","source":3},{"begin":15868,"end":15893,"name":"DUP4","source":3},{"begin":15868,"end":15893,"name":"KECCAK256","source":3},{"begin":15868,"end":15903,"name":"SWAP5","source":3},{"begin":15868,"end":15903,"name":"DUP8","source":3},{"begin":15868,"end":15903,"name":"AND","source":3},{"begin":15868,"end":15903,"name":"DUP1","source":3},{"begin":15868,"end":15903,"name":"DUP5","source":3},{"begin":15868,"end":15903,"name":"MSTORE","source":3},{"begin":15868,"end":15903,"name":"SWAP5","source":3},{"begin":15868,"end":15903,"name":"DUP3","source":3},{"begin":15868,"end":15903,"name":"MSTORE","source":3},{"begin":15868,"end":15903,"name":"SWAP2","source":3},{"begin":15868,"end":15903,"name":"DUP3","source":3},{"begin":15868,"end":15903,"name":"SWAP1","source":3},{"begin":15868,"end":15903,"name":"KECCAK256","source":3},{"begin":15868,"end":15914,"name":"DUP1","source":3},{"begin":15868,"end":15914,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"FF"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":15868,"end":15914,"name":"AND","source":3},{"begin":15868,"end":15914,"name":"DUP7","source":3},{"begin":15868,"end":15914,"name":"ISZERO","source":3},{"begin":15868,"end":15914,"name":"ISZERO","source":3},{"begin":15868,"end":15914,"name":"SWAP1","source":3},{"begin":15868,"end":15914,"name":"DUP2","source":3},{"begin":15868,"end":15914,"name":"OR","source":3},{"begin":15868,"end":15914,"name":"SWAP1","source":3},{"begin":15868,"end":15914,"name":"SWAP2","source":3},{"begin":15868,"end":15914,"name":"SSTORE","source":3},{"begin":15929,"end":15970,"name":"SWAP2","source":3},{"begin":15929,"end":15970,"name":"MLOAD","source":3},{"begin":540,"end":581,"name":"SWAP2","source":19},{"begin":540,"end":581,"name":"DUP3","source":19},{"begin":540,"end":581,"name":"MSTORE","source":19},{"begin":15929,"end":15970,"name":"PUSH","source":3,"value":"17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"},{"begin":15929,"end":15970,"name":"SWAP2","source":3},{"begin":513,"end":531,"name":"ADD","source":19},{"begin":15929,"end":15970,"name":"PUSH","source":3,"value":"40"},{"begin":15929,"end":15970,"name":"MLOAD","source":3},{"begin":15929,"end":15970,"name":"DUP1","source":3},{"begin":15929,"end":15970,"name":"SWAP2","source":3},{"begin":15929,"end":15970,"name":"SUB","source":3},{"begin":15929,"end":15970,"name":"SWAP1","source":3},{"begin":15929,"end":15970,"name":"LOG3","source":3},{"begin":15665,"end":15977,"name":"POP","source":3},{"begin":15665,"end":15977,"name":"POP","source":3},{"begin":15665,"end":15977,"name":"POP","source":3},{"begin":15665,"end":15977,"jumpType":"[out]","name":"JUMP","source":3},{"begin":985,"end":1909,"name":"tag","source":7,"value":"181"},{"begin":985,"end":1909,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1165,"end":1179,"name":"DUP4","source":7},{"begin":1165,"end":1179,"name":"AND","source":7},{"begin":1165,"end":1179,"name":"EXTCODESIZE","source":7},{"begin":1165,"end":1183,"name":"ISZERO","source":7},{"begin":1161,"end":1903,"name":"PUSH [tag]","source":7,"value":"255"},{"begin":1161,"end":1903,"name":"JUMPI","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"40"},{"begin":1203,"end":1270,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A85BD01"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1203,"end":1270,"name":"DUP2","source":7},{"begin":1203,"end":1270,"name":"MSTORE","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1203,"end":1239,"name":"DUP5","source":7},{"begin":1203,"end":1239,"name":"AND","source":7},{"begin":1203,"end":1239,"name":"SWAP1","source":7},{"begin":1203,"end":1239,"name":"PUSH","source":7,"value":"150B7A02"},{"begin":1203,"end":1239,"name":"SWAP1","source":7},{"begin":1203,"end":1270,"name":"PUSH [tag]","source":7,"value":"241"},{"begin":1203,"end":1270,"name":"SWAP1","source":7},{"begin":1240,"end":1248,"name":"DUP9","source":7},{"begin":1240,"end":1248,"name":"SWAP1","source":7},{"begin":1250,"end":1254,"name":"DUP9","source":7},{"begin":1250,"end":1254,"name":"SWAP1","source":7},{"begin":1256,"end":1263,"name":"DUP8","source":7},{"begin":1256,"end":1263,"name":"SWAP1","source":7},{"begin":1265,"end":1269,"name":"DUP8","source":7},{"begin":1265,"end":1269,"name":"SWAP1","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"4"},{"begin":1203,"end":1270,"name":"ADD","source":7},{"begin":1203,"end":1270,"name":"PUSH [tag]","source":7,"value":"242"},{"begin":1203,"end":1270,"jumpType":"[in]","name":"JUMP","source":7},{"begin":1203,"end":1270,"name":"tag","source":7,"value":"241"},{"begin":1203,"end":1270,"name":"JUMPDEST","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"20"},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"40"},{"begin":1203,"end":1270,"name":"MLOAD","source":7},{"begin":1203,"end":1270,"name":"DUP1","source":7},{"begin":1203,"end":1270,"name":"DUP4","source":7},{"begin":1203,"end":1270,"name":"SUB","source":7},{"begin":1203,"end":1270,"name":"DUP2","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"0"},{"begin":1203,"end":1270,"name":"DUP8","source":7},{"begin":1203,"end":1270,"name":"GAS","source":7},{"begin":1203,"end":1270,"name":"CALL","source":7},{"begin":1203,"end":1270,"name":"SWAP3","source":7},{"begin":1203,"end":1270,"name":"POP","source":7},{"begin":1203,"end":1270,"name":"POP","source":7},{"begin":1203,"end":1270,"name":"POP","source":7},{"begin":1203,"end":1270,"name":"DUP1","source":7},{"begin":1203,"end":1270,"name":"ISZERO","source":7},{"begin":1203,"end":1270,"name":"PUSH [tag]","source":7,"value":"243"},{"begin":1203,"end":1270,"name":"JUMPI","source":7},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"40"},{"begin":1203,"end":1270,"name":"DUP1","source":7},{"begin":1203,"end":1270,"name":"MLOAD","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"1F"},{"begin":1203,"end":1270,"name":"RETURNDATASIZE","source":7},{"begin":1203,"end":1270,"name":"SWAP1","source":7},{"begin":1203,"end":1270,"name":"DUP2","source":7},{"begin":1203,"end":1270,"name":"ADD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1F"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":1203,"end":1270,"name":"AND","source":7},{"begin":1203,"end":1270,"name":"DUP3","source":7},{"begin":1203,"end":1270,"name":"ADD","source":7},{"begin":1203,"end":1270,"name":"SWAP1","source":7},{"begin":1203,"end":1270,"name":"SWAP3","source":7},{"begin":1203,"end":1270,"name":"MSTORE","source":7},{"begin":1203,"end":1270,"name":"PUSH [tag]","source":7,"value":"244"},{"begin":1203,"end":1270,"name":"SWAP2","source":7},{"begin":1203,"end":1270,"name":"DUP2","source":7},{"begin":1203,"end":1270,"name":"ADD","source":7},{"begin":1203,"end":1270,"name":"SWAP1","source":7},{"begin":1203,"end":1270,"name":"PUSH [tag]","source":7,"value":"245"},{"begin":1203,"end":1270,"jumpType":"[in]","name":"JUMP","source":7},{"begin":1203,"end":1270,"name":"tag","source":7,"value":"244"},{"begin":1203,"end":1270,"name":"JUMPDEST","source":7},{"begin":1203,"end":1270,"name":"PUSH","source":7,"value":"1"},{"begin":1203,"end":1270,"name":"tag","source":7,"value":"243"},{"begin":1203,"end":1270,"name":"JUMPDEST","source":7},{"begin":1199,"end":1893,"name":"PUSH [tag]","source":7,"value":"246"},{"begin":1199,"end":1893,"name":"JUMPI","source":7},{"begin":1199,"end":1893,"name":"RETURNDATASIZE","source":7},{"begin":1199,"end":1893,"name":"DUP1","source":7},{"begin":1199,"end":1893,"name":"DUP1","source":7},{"begin":1199,"end":1893,"name":"ISZERO","source":7},{"begin":1199,"end":1893,"name":"PUSH [tag]","source":7,"value":"251"},{"begin":1199,"end":1893,"name":"JUMPI","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"40"},{"begin":1199,"end":1893,"name":"MLOAD","source":7},{"begin":1199,"end":1893,"name":"SWAP2","source":7},{"begin":1199,"end":1893,"name":"POP","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"1F"},{"begin":1199,"end":1893,"name":"NOT","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"3F"},{"begin":1199,"end":1893,"name":"RETURNDATASIZE","source":7},{"begin":1199,"end":1893,"name":"ADD","source":7},{"begin":1199,"end":1893,"name":"AND","source":7},{"begin":1199,"end":1893,"name":"DUP3","source":7},{"begin":1199,"end":1893,"name":"ADD","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"40"},{"begin":1199,"end":1893,"name":"MSTORE","source":7},{"begin":1199,"end":1893,"name":"RETURNDATASIZE","source":7},{"begin":1199,"end":1893,"name":"DUP3","source":7},{"begin":1199,"end":1893,"name":"MSTORE","source":7},{"begin":1199,"end":1893,"name":"RETURNDATASIZE","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"0"},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"20"},{"begin":1199,"end":1893,"name":"DUP5","source":7},{"begin":1199,"end":1893,"name":"ADD","source":7},{"begin":1199,"end":1893,"name":"RETURNDATACOPY","source":7},{"begin":1199,"end":1893,"name":"PUSH [tag]","source":7,"value":"250"},{"begin":1199,"end":1893,"name":"JUMP","source":7},{"begin":1199,"end":1893,"name":"tag","source":7,"value":"251"},{"begin":1199,"end":1893,"name":"JUMPDEST","source":7},{"begin":1199,"end":1893,"name":"PUSH","source":7,"value":"60"},{"begin":1199,"end":1893,"name":"SWAP2","source":7},{"begin":1199,"end":1893,"name":"POP","source":7},{"begin":1199,"end":1893,"name":"tag","source":7,"value":"250"},{"begin":1199,"end":1893,"name":"JUMPDEST","source":7},{"begin":1199,"end":1893,"name":"POP","source":7},{"begin":1560,"end":1566,"name":"DUP1","source":7},{"begin":1560,"end":1573,"name":"MLOAD","source":7},{"begin":1577,"end":1578,"name":"PUSH","source":7,"value":"0"},{"begin":1560,"end":1578,"name":"SUB","source":7},{"begin":1556,"end":1879,"name":"PUSH [tag]","source":7,"value":"252"},{"begin":1556,"end":1879,"name":"JUMPI","source":7},{"begin":1664,"end":1703,"name":"PUSH","source":7,"value":"40"},{"begin":1664,"end":1703,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"32505749"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1664,"end":1703,"name":"DUP2","source":7},{"begin":1664,"end":1703,"name":"MSTORE","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1879,"end":1911,"name":"DUP6","source":19},{"begin":1879,"end":1911,"name":"AND","source":19},{"begin":1664,"end":1703,"name":"PUSH","source":7,"value":"4"},{"begin":1664,"end":1703,"name":"DUP3","source":7},{"begin":1664,"end":1703,"name":"ADD","source":7},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1834,"end":1852,"name":"PUSH","source":19,"value":"24"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":1664,"end":1703,"name":"PUSH [tag]","source":7,"value":"138"},{"begin":1715,"end":1918,"name":"JUMP","source":19},{"begin":1556,"end":1879,"name":"tag","source":7,"value":"252"},{"begin":1556,"end":1879,"name":"JUMPDEST","source":7},{"begin":1831,"end":1837,"name":"DUP1","source":7},{"begin":1825,"end":1838,"name":"MLOAD","source":7},{"begin":1816,"end":1822,"name":"DUP2","source":7},{"begin":1812,"end":1814,"name":"PUSH","source":7,"value":"20"},{"begin":1808,"end":1823,"name":"ADD","source":7},{"begin":1801,"end":1839,"name":"REVERT","source":7},{"begin":1199,"end":1893,"name":"tag","source":7,"value":"246"},{"begin":1199,"end":1893,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":1317,"end":1368,"name":"DUP2","source":7},{"begin":1317,"end":1368,"name":"AND","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A85BD01"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1317,"end":1368,"name":"EQ","source":7},{"begin":1313,"end":1495,"name":"PUSH [tag]","source":7,"value":"256"},{"begin":1313,"end":1495,"name":"JUMPI","source":7},{"begin":1437,"end":1476,"name":"PUSH","source":7,"value":"40"},{"begin":1437,"end":1476,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"32505749"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1437,"end":1476,"name":"DUP2","source":7},{"begin":1437,"end":1476,"name":"MSTORE","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1879,"end":1911,"name":"DUP6","source":19},{"begin":1879,"end":1911,"name":"AND","source":19},{"begin":1437,"end":1476,"name":"PUSH","source":7,"value":"4"},{"begin":1437,"end":1476,"name":"DUP3","source":7},{"begin":1437,"end":1476,"name":"ADD","source":7},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1834,"end":1852,"name":"PUSH","source":19,"value":"24"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":1437,"end":1476,"name":"PUSH [tag]","source":7,"value":"138"},{"begin":1715,"end":1918,"name":"JUMP","source":19},{"begin":1313,"end":1495,"name":"tag","source":7,"value":"256"},{"begin":1313,"end":1495,"name":"JUMPDEST","source":7},{"begin":1271,"end":1509,"name":"POP","source":7},{"begin":1199,"end":1893,"name":"tag","source":7,"value":"255"},{"begin":1199,"end":1893,"name":"JUMPDEST","source":7},{"begin":985,"end":1909,"name":"POP","source":7},{"begin":985,"end":1909,"name":"POP","source":7},{"begin":985,"end":1909,"name":"POP","source":7},{"begin":985,"end":1909,"name":"POP","source":7},{"begin":985,"end":1909,"name":"POP","source":7},{"begin":985,"end":1909,"jumpType":"[out]","name":"JUMP","source":7},{"begin":10656,"end":10756,"name":"tag","source":3,"value":"188"},{"begin":10656,"end":10756,"name":"JUMPDEST","source":3},{"begin":10723,"end":10749,"name":"PUSH [tag]","source":3,"value":"132"},{"begin":10733,"end":10735,"name":"DUP3","source":3},{"begin":10737,"end":10744,"name":"DUP3","source":3},{"begin":10723,"end":10749,"name":"PUSH","source":3,"value":"40"},{"begin":10723,"end":10749,"name":"MLOAD","source":3},{"begin":10723,"end":10749,"name":"DUP1","source":3},{"begin":10723,"end":10749,"name":"PUSH","source":3,"value":"20"},{"begin":10723,"end":10749,"name":"ADD","source":3},{"begin":10723,"end":10749,"name":"PUSH","source":3,"value":"40"},{"begin":10723,"end":10749,"name":"MSTORE","source":3},{"begin":10723,"end":10749,"name":"DUP1","source":3},{"begin":10723,"end":10749,"name":"PUSH","source":3,"value":"0"},{"begin":10723,"end":10749,"name":"DUP2","source":3},{"begin":10723,"end":10749,"name":"MSTORE","source":3},{"begin":10723,"end":10749,"name":"POP","source":3},{"begin":10723,"end":10732,"name":"PUSH [tag]","source":3,"value":"260"},{"begin":10723,"end":10749,"jumpType":"[in]","name":"JUMP","source":3},{"begin":2206,"end":2635,"name":"tag","source":2,"value":"216"},{"begin":2206,"end":2635,"name":"JUMPDEST","source":2},{"begin":2268,"end":2275,"name":"PUSH","source":2,"value":"0"},{"begin":2312,"end":2320,"name":"CALLDATASIZE","source":2},{"begin":3483,"end":3485,"name":"PUSH","source":2,"value":"14"},{"begin":2422,"end":2432,"name":"CALLER","source":2},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1707,"end":1724,"name":"PUSHIMMUTABLE","source":2,"value":"294"},{"begin":1931,"end":1962,"name":"AND","source":2},{"begin":1931,"end":1962,"name":"EQ","source":2},{"begin":2403,"end":2474,"name":"DUP1","source":2},{"begin":2403,"end":2474,"name":"ISZERO","source":2},{"begin":2403,"end":2474,"name":"PUSH [tag]","source":2,"value":"267"},{"begin":2403,"end":2474,"name":"JUMPI","source":2},{"begin":2403,"end":2474,"name":"POP","source":2},{"begin":2455,"end":2474,"name":"DUP1","source":2},{"begin":2437,"end":2451,"name":"DUP3","source":2},{"begin":2437,"end":2474,"name":"LT","source":2},{"begin":2437,"end":2474,"name":"ISZERO","source":2},{"begin":2403,"end":2474,"name":"tag","source":2,"value":"267"},{"begin":2403,"end":2474,"name":"JUMPDEST","source":2},{"begin":2399,"end":2629,"name":"ISZERO","source":2},{"begin":2399,"end":2629,"name":"PUSH [tag]","source":2,"value":"268"},{"begin":2399,"end":2629,"name":"JUMPI","source":2},{"begin":2513,"end":2521,"name":"PUSH","source":2,"value":"0"},{"begin":2513,"end":2521,"name":"CALLDATASIZE","source":2},{"begin":2522,"end":2558,"name":"PUSH [tag]","source":2,"value":"269"},{"begin":2539,"end":2558,"name":"DUP4","source":2},{"begin":2522,"end":2536,"name":"DUP6","source":2},{"begin":2522,"end":2558,"name":"PUSH [tag]","source":2,"value":"270"},{"begin":2522,"end":2558,"jumpType":"[in]","name":"JUMP","source":2},{"begin":2522,"end":2558,"name":"tag","source":2,"value":"269"},{"begin":2522,"end":2558,"name":"JUMPDEST","source":2},{"begin":2513,"end":2560,"name":"PUSH [tag]","source":2,"value":"271"},{"begin":2513,"end":2560,"name":"SWAP3","source":2},{"begin":2513,"end":2560,"name":"DUP3","source":2},{"begin":2513,"end":2560,"name":"SWAP1","source":2},{"begin":2513,"end":2560,"name":"PUSH [tag]","source":2,"value":"272"},{"begin":2513,"end":2560,"jumpType":"[in]","name":"JUMP","source":2},{"begin":2513,"end":2560,"name":"tag","source":2,"value":"271"},{"begin":2513,"end":2560,"name":"JUMPDEST","source":2},{"begin":2505,"end":2561,"name":"PUSH [tag]","source":2,"value":"273"},{"begin":2505,"end":2561,"name":"SWAP2","source":2},{"begin":2505,"end":2561,"name":"PUSH [tag]","source":2,"value":"274"},{"begin":2505,"end":2561,"jumpType":"[in]","name":"JUMP","source":2},{"begin":2505,"end":2561,"name":"tag","source":2,"value":"273"},{"begin":2505,"end":2561,"name":"JUMPDEST","source":2},{"begin":2497,"end":2562,"name":"PUSH","source":2,"value":"60"},{"begin":2497,"end":2562,"name":"SHR","source":2},{"begin":2490,"end":2562,"name":"SWAP3","source":2},{"begin":2490,"end":2562,"name":"POP","source":2},{"begin":2490,"end":2562,"name":"POP","source":2},{"begin":2490,"end":2562,"name":"POP","source":2},{"begin":2206,"end":2635,"name":"SWAP1","source":2},{"begin":2206,"end":2635,"jumpType":"[out]","name":"JUMP","source":2},{"begin":2399,"end":2629,"name":"tag","source":2,"value":"268"},{"begin":2399,"end":2629,"name":"JUMPDEST","source":2},{"begin":735,"end":745,"name":"CALLER","source":8},{"begin":2593,"end":2618,"name":"SWAP3","source":2},{"begin":2593,"end":2618,"name":"POP","source":2},{"begin":2593,"end":2618,"name":"POP","source":2},{"begin":2593,"end":2618,"name":"POP","source":2},{"begin":2206,"end":2635,"name":"SWAP1","source":2},{"begin":2206,"end":2635,"jumpType":"[out]","name":"JUMP","source":2},{"begin":14794,"end":15456,"name":"tag","source":3,"value":"219"},{"begin":14794,"end":15456,"name":"JUMPDEST","source":3},{"begin":14954,"end":14963,"name":"DUP1","source":3},{"begin":14954,"end":14985,"name":"DUP1","source":3},{"begin":14954,"end":14985,"name":"PUSH [tag]","source":3,"value":"279"},{"begin":14954,"end":14985,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":14967,"end":14985,"name":"DUP3","source":3},{"begin":14967,"end":14985,"name":"AND","source":3},{"begin":14967,"end":14985,"name":"ISZERO","source":3},{"begin":14967,"end":14985,"name":"ISZERO","source":3},{"begin":14954,"end":14985,"name":"tag","source":3,"value":"279"},{"begin":14954,"end":14985,"name":"JUMPDEST","source":3},{"begin":14950,"end":15410,"name":"ISZERO","source":3},{"begin":14950,"end":15410,"name":"PUSH [tag]","source":3,"value":"280"},{"begin":14950,"end":15410,"name":"JUMPI","source":3},{"begin":15001,"end":15014,"name":"PUSH","source":3,"value":"0"},{"begin":15017,"end":15039,"name":"PUSH [tag]","source":3,"value":"281"},{"begin":15031,"end":15038,"name":"DUP5","source":3},{"begin":15017,"end":15030,"name":"PUSH [tag]","source":3,"value":"128"},{"begin":15017,"end":15039,"jumpType":"[in]","name":"JUMP","source":3},{"begin":15017,"end":15039,"name":"tag","source":3,"value":"281"},{"begin":15017,"end":15039,"name":"JUMPDEST","source":3},{"begin":15001,"end":15039,"name":"SWAP1","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15167,"end":15185,"name":"DUP4","source":3},{"begin":15167,"end":15185,"name":"AND","source":3},{"begin":15167,"end":15185,"name":"ISZERO","source":3},{"begin":15167,"end":15185,"name":"DUP1","source":3},{"begin":15167,"end":15185,"name":"ISZERO","source":3},{"begin":15167,"end":15185,"name":"SWAP1","source":3},{"begin":15167,"end":15202,"name":"PUSH [tag]","source":3,"value":"282"},{"begin":15167,"end":15202,"name":"JUMPI","source":3},{"begin":15167,"end":15202,"name":"POP","source":3},{"begin":15198,"end":15202,"name":"DUP3","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15189,"end":15202,"name":"AND","source":3},{"begin":15189,"end":15194,"name":"DUP2","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15189,"end":15202,"name":"AND","source":3},{"begin":15189,"end":15202,"name":"EQ","source":3},{"begin":15189,"end":15202,"name":"ISZERO","source":3},{"begin":15167,"end":15202,"name":"tag","source":3,"value":"282"},{"begin":15167,"end":15202,"name":"JUMPDEST","source":3},{"begin":15167,"end":15236,"name":"DUP1","source":3},{"begin":15167,"end":15236,"name":"ISZERO","source":3},{"begin":15167,"end":15236,"name":"PUSH [tag]","source":3,"value":"283"},{"begin":15167,"end":15236,"name":"JUMPI","source":3},{"begin":15167,"end":15236,"name":"POP","source":3},{"begin":15207,"end":15236,"name":"PUSH [tag]","source":3,"value":"284"},{"begin":15224,"end":15229,"name":"DUP2","source":3},{"begin":15231,"end":15235,"name":"DUP5","source":3},{"begin":15207,"end":15223,"name":"PUSH [tag]","source":3,"value":"110"},{"begin":15207,"end":15236,"jumpType":"[in]","name":"JUMP","source":3},{"begin":15207,"end":15236,"name":"tag","source":3,"value":"284"},{"begin":15207,"end":15236,"name":"JUMPDEST","source":3},{"begin":15206,"end":15236,"name":"ISZERO","source":3},{"begin":15167,"end":15236,"name":"tag","source":3,"value":"283"},{"begin":15167,"end":15236,"name":"JUMPDEST","source":3},{"begin":15163,"end":15305,"name":"ISZERO","source":3},{"begin":15163,"end":15305,"name":"PUSH [tag]","source":3,"value":"285"},{"begin":15163,"end":15305,"name":"JUMPI","source":3},{"begin":15263,"end":15290,"name":"PUSH","source":3,"value":"40"},{"begin":15263,"end":15290,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A9FBF51F"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":15263,"end":15290,"name":"DUP2","source":3},{"begin":15263,"end":15290,"name":"MSTORE","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1879,"end":1911,"name":"DUP5","source":19},{"begin":1879,"end":1911,"name":"AND","source":19},{"begin":15263,"end":15290,"name":"PUSH","source":3,"value":"4"},{"begin":15263,"end":15290,"name":"DUP3","source":3},{"begin":15263,"end":15290,"name":"ADD","source":3},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1834,"end":1852,"name":"PUSH","source":19,"value":"24"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":15263,"end":15290,"name":"PUSH [tag]","source":3,"value":"138"},{"begin":1715,"end":1918,"name":"JUMP","source":19},{"begin":15163,"end":15305,"name":"tag","source":3,"value":"285"},{"begin":15163,"end":15305,"name":"JUMPDEST","source":3},{"begin":15323,"end":15332,"name":"DUP2","source":3},{"begin":15319,"end":15400,"name":"ISZERO","source":3},{"begin":15319,"end":15400,"name":"PUSH [tag]","source":3,"value":"287"},{"begin":15319,"end":15400,"name":"JUMPI","source":3},{"begin":15377,"end":15384,"name":"DUP4","source":3},{"begin":15373,"end":15375,"name":"DUP6","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15357,"end":15385,"name":"AND","source":3},{"begin":15366,"end":15371,"name":"DUP3","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15357,"end":15385,"name":"AND","source":3},{"begin":15357,"end":15385,"name":"PUSH","source":3,"value":"8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"},{"begin":15357,"end":15385,"name":"PUSH","source":3,"value":"40"},{"begin":15357,"end":15385,"name":"MLOAD","source":3},{"begin":15357,"end":15385,"name":"PUSH","source":3,"value":"40"},{"begin":15357,"end":15385,"name":"MLOAD","source":3},{"begin":15357,"end":15385,"name":"DUP1","source":3},{"begin":15357,"end":15385,"name":"SWAP2","source":3},{"begin":15357,"end":15385,"name":"SUB","source":3},{"begin":15357,"end":15385,"name":"SWAP1","source":3},{"begin":15357,"end":15385,"name":"LOG4","source":3},{"begin":15319,"end":15400,"name":"tag","source":3,"value":"287"},{"begin":15319,"end":15400,"name":"JUMPDEST","source":3},{"begin":14987,"end":15410,"name":"POP","source":3},{"begin":14950,"end":15410,"name":"tag","source":3,"value":"280"},{"begin":14950,"end":15410,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":15420,"end":15444,"name":"PUSH","source":3,"value":"0"},{"begin":15420,"end":15444,"name":"SWAP1","source":3},{"begin":15420,"end":15444,"name":"DUP2","source":3},{"begin":15420,"end":15444,"name":"MSTORE","source":3},{"begin":15420,"end":15435,"name":"PUSH","source":3,"value":"4"},{"begin":15420,"end":15444,"name":"PUSH","source":3,"value":"20"},{"begin":15420,"end":15444,"name":"MSTORE","source":3},{"begin":15420,"end":15444,"name":"PUSH","source":3,"value":"40"},{"begin":15420,"end":15444,"name":"SWAP1","source":3},{"begin":15420,"end":15444,"name":"KECCAK256","source":3},{"begin":15420,"end":15449,"name":"DUP1","source":3},{"begin":15420,"end":15449,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":15420,"end":15449,"name":"AND","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":15420,"end":15449,"name":"SWAP3","source":3},{"begin":15420,"end":15449,"name":"SWAP1","source":3},{"begin":15420,"end":15449,"name":"SWAP3","source":3},{"begin":15420,"end":15449,"name":"AND","source":3},{"begin":15420,"end":15449,"name":"SWAP2","source":3},{"begin":15420,"end":15449,"name":"SWAP1","source":3},{"begin":15420,"end":15449,"name":"SWAP2","source":3},{"begin":15420,"end":15449,"name":"OR","source":3},{"begin":15420,"end":15449,"name":"SWAP1","source":3},{"begin":15420,"end":15449,"name":"SSTORE","source":3},{"begin":14794,"end":15456,"jumpType":"[out]","name":"JUMP","source":3},{"begin":7105,"end":7473,"name":"tag","source":3,"value":"224"},{"begin":7105,"end":7473,"name":"JUMPDEST","source":3},{"begin":7217,"end":7255,"name":"PUSH [tag]","source":3,"value":"289"},{"begin":7231,"end":7236,"name":"DUP4","source":3},{"begin":7238,"end":7245,"name":"DUP4","source":3},{"begin":7247,"end":7254,"name":"DUP4","source":3},{"begin":7217,"end":7230,"name":"PUSH [tag]","source":3,"value":"290"},{"begin":7217,"end":7255,"jumpType":"[in]","name":"JUMP","source":3},{"begin":7217,"end":7255,"name":"tag","source":3,"value":"289"},{"begin":7217,"end":7255,"name":"JUMPDEST","source":3},{"begin":7212,"end":7467,"name":"PUSH [tag]","source":3,"value":"152"},{"begin":7212,"end":7467,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":7275,"end":7294,"name":"DUP4","source":3},{"begin":7275,"end":7294,"name":"AND","source":3},{"begin":7271,"end":7457,"name":"PUSH [tag]","source":3,"value":"292"},{"begin":7271,"end":7457,"name":"JUMPI","source":3},{"begin":7321,"end":7352,"name":"PUSH","source":3,"value":"40"},{"begin":7321,"end":7352,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"7E273289"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":7321,"end":7352,"name":"DUP2","source":3},{"begin":7321,"end":7352,"name":"MSTORE","source":3},{"begin":7321,"end":7352,"name":"PUSH","source":3,"value":"4"},{"begin":7321,"end":7352,"name":"DUP2","source":3},{"begin":7321,"end":7352,"name":"ADD","source":3},{"begin":738,"end":763,"name":"DUP3","source":19},{"begin":738,"end":763,"name":"SWAP1","source":19},{"begin":738,"end":763,"name":"MSTORE","source":19},{"begin":711,"end":729,"name":"PUSH","source":19,"value":"24"},{"begin":711,"end":729,"name":"ADD","source":19},{"begin":7321,"end":7352,"name":"PUSH [tag]","source":3,"value":"138"},{"begin":592,"end":769,"name":"JUMP","source":19},{"begin":7271,"end":7457,"name":"tag","source":3,"value":"292"},{"begin":7271,"end":7457,"name":"JUMPDEST","source":3},{"begin":7398,"end":7442,"name":"PUSH","source":3,"value":"40"},{"begin":7398,"end":7442,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"177E802F"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":7398,"end":7442,"name":"DUP2","source":3},{"begin":7398,"end":7442,"name":"MSTORE","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9487,"end":9519,"name":"DUP4","source":19},{"begin":9487,"end":9519,"name":"AND","source":19},{"begin":7398,"end":7442,"name":"PUSH","source":3,"value":"4"},{"begin":7398,"end":7442,"name":"DUP3","source":3},{"begin":7398,"end":7442,"name":"ADD","source":3},{"begin":9469,"end":9520,"name":"MSTORE","source":19},{"begin":9536,"end":9554,"name":"PUSH","source":19,"value":"24"},{"begin":9536,"end":9554,"name":"DUP2","source":19},{"begin":9536,"end":9554,"name":"ADD","source":19},{"begin":9529,"end":9563,"name":"DUP3","source":19},{"begin":9529,"end":9563,"name":"SWAP1","source":19},{"begin":9529,"end":9563,"name":"MSTORE","source":19},{"begin":9442,"end":9460,"name":"PUSH","source":19,"value":"44"},{"begin":9442,"end":9460,"name":"ADD","source":19},{"begin":7398,"end":7442,"name":"PUSH [tag]","source":3,"value":"138"},{"begin":9295,"end":9569,"name":"JUMP","source":19},{"begin":10977,"end":11184,"name":"tag","source":3,"value":"260"},{"begin":10977,"end":11184,"name":"JUMPDEST","source":3},{"begin":11071,"end":11089,"name":"PUSH [tag]","source":3,"value":"298"},{"begin":11077,"end":11079,"name":"DUP4","source":3},{"begin":11081,"end":11088,"name":"DUP4","source":3},{"begin":11071,"end":11076,"name":"PUSH [tag]","source":3,"value":"299"},{"begin":11071,"end":11089,"jumpType":"[in]","name":"JUMP","source":3},{"begin":11071,"end":11089,"name":"tag","source":3,"value":"298"},{"begin":11071,"end":11089,"name":"JUMPDEST","source":3},{"begin":11099,"end":11177,"name":"PUSH [tag]","source":3,"value":"152"},{"begin":11133,"end":11145,"name":"PUSH [tag]","source":3,"value":"301"},{"begin":11133,"end":11143,"name":"PUSH [tag]","source":3,"value":"134"},{"begin":11133,"end":11145,"jumpType":"[in]","name":"JUMP","source":3},{"begin":11133,"end":11145,"name":"tag","source":3,"value":"301"},{"begin":11133,"end":11145,"name":"JUMPDEST","source":3},{"begin":11155,"end":11156,"name":"PUSH","source":3,"value":"0"},{"begin":11159,"end":11161,"name":"DUP6","source":3},{"begin":11163,"end":11170,"name":"DUP6","source":3},{"begin":11172,"end":11176,"name":"DUP6","source":3},{"begin":11099,"end":11132,"name":"PUSH [tag]","source":3,"value":"181"},{"begin":11099,"end":11177,"jumpType":"[in]","name":"JUMP","source":3},{"begin":6401,"end":6673,"name":"tag","source":3,"value":"290"},{"begin":6401,"end":6673,"name":"JUMPDEST","source":3},{"begin":6504,"end":6508,"name":"PUSH","source":3,"value":"0"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6539,"end":6560,"name":"DUP4","source":3},{"begin":6539,"end":6560,"name":"AND","source":3},{"begin":6539,"end":6560,"name":"ISZERO","source":3},{"begin":6539,"end":6560,"name":"DUP1","source":3},{"begin":6539,"end":6560,"name":"ISZERO","source":3},{"begin":6539,"end":6560,"name":"SWAP1","source":3},{"begin":6539,"end":6666,"name":"PUSH [tag]","source":3,"value":"310"},{"begin":6539,"end":6666,"name":"JUMPI","source":3},{"begin":6539,"end":6666,"name":"POP","source":3},{"begin":6586,"end":6593,"name":"DUP3","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6577,"end":6593,"name":"AND","source":3},{"begin":6577,"end":6582,"name":"DUP5","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6577,"end":6593,"name":"AND","source":3},{"begin":6577,"end":6593,"name":"EQ","source":3},{"begin":6577,"end":6629,"name":"DUP1","source":3},{"begin":6577,"end":6629,"name":"PUSH [tag]","source":3,"value":"309"},{"begin":6577,"end":6629,"name":"JUMPI","source":3},{"begin":6577,"end":6629,"name":"POP","source":3},{"begin":6597,"end":6629,"name":"PUSH [tag]","source":3,"value":"309"},{"begin":6614,"end":6619,"name":"DUP5","source":3},{"begin":6621,"end":6628,"name":"DUP5","source":3},{"begin":6597,"end":6613,"name":"PUSH [tag]","source":3,"value":"110"},{"begin":6597,"end":6629,"jumpType":"[in]","name":"JUMP","source":3},{"begin":6597,"end":6629,"name":"tag","source":3,"value":"309"},{"begin":6597,"end":6629,"name":"JUMPDEST","source":3},{"begin":6577,"end":6665,"name":"DUP1","source":3},{"begin":6577,"end":6665,"name":"PUSH [tag]","source":3,"value":"310"},{"begin":6577,"end":6665,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6033,"end":6040,"name":"PUSH","source":3,"value":"0"},{"begin":6059,"end":6083,"name":"DUP3","source":3},{"begin":6059,"end":6083,"name":"DUP2","source":3},{"begin":6059,"end":6083,"name":"MSTORE","source":3},{"begin":6059,"end":6074,"name":"PUSH","source":3,"value":"4"},{"begin":6059,"end":6083,"name":"PUSH","source":3,"value":"20"},{"begin":6059,"end":6083,"name":"MSTORE","source":3},{"begin":6059,"end":6083,"name":"PUSH","source":3,"value":"40"},{"begin":6059,"end":6083,"name":"SWAP1","source":3},{"begin":6059,"end":6083,"name":"KECCAK256","source":3},{"begin":6059,"end":6083,"name":"SLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6633,"end":6665,"name":"DUP5","source":3},{"begin":6633,"end":6665,"name":"DUP2","source":3},{"begin":6633,"end":6665,"name":"AND","source":3},{"begin":6059,"end":6083,"name":"SWAP2","source":3},{"begin":6059,"end":6083,"name":"AND","source":3},{"begin":6633,"end":6665,"name":"EQ","source":3},{"begin":6577,"end":6665,"name":"tag","source":3,"value":"310"},{"begin":6577,"end":6665,"name":"JUMPDEST","source":3},{"begin":6520,"end":6666,"name":"SWAP5","source":3},{"begin":6401,"end":6673,"name":"SWAP4","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6401,"end":6673,"jumpType":"[out]","name":"JUMP","source":3},{"begin":9978,"end":10305,"name":"tag","source":3,"value":"299"},{"begin":9978,"end":10305,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":10045,"end":10061,"name":"DUP3","source":3},{"begin":10045,"end":10061,"name":"AND","source":3},{"begin":10041,"end":10128,"name":"PUSH [tag]","source":3,"value":"313"},{"begin":10041,"end":10128,"name":"JUMPI","source":3},{"begin":10084,"end":10117,"name":"PUSH","source":3,"value":"40"},{"begin":10084,"end":10117,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"32505749"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":10084,"end":10117,"name":"DUP2","source":3},{"begin":10084,"end":10117,"name":"MSTORE","source":3},{"begin":10114,"end":10115,"name":"PUSH","source":3,"value":"0"},{"begin":10084,"end":10117,"name":"PUSH","source":3,"value":"4"},{"begin":10084,"end":10117,"name":"DUP3","source":3},{"begin":10084,"end":10117,"name":"ADD","source":3},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1834,"end":1852,"name":"PUSH","source":19,"value":"24"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":10084,"end":10117,"name":"PUSH [tag]","source":3,"value":"138"},{"begin":1715,"end":1918,"name":"JUMP","source":19},{"begin":10041,"end":10128,"name":"tag","source":3,"value":"313"},{"begin":10041,"end":10128,"name":"JUMPDEST","source":3},{"begin":10137,"end":10158,"name":"PUSH","source":3,"value":"0"},{"begin":10161,"end":10193,"name":"PUSH [tag]","source":3,"value":"315"},{"begin":10169,"end":10171,"name":"DUP4","source":3},{"begin":10173,"end":10180,"name":"DUP4","source":3},{"begin":10190,"end":10191,"name":"PUSH","source":3,"value":"0"},{"begin":10161,"end":10168,"name":"PUSH [tag]","source":3,"value":"141"},{"begin":10161,"end":10193,"jumpType":"[in]","name":"JUMP","source":3},{"begin":10161,"end":10193,"name":"tag","source":3,"value":"315"},{"begin":10161,"end":10193,"name":"JUMPDEST","source":3},{"begin":10137,"end":10193,"name":"SWAP1","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":10207,"end":10234,"name":"DUP2","source":3},{"begin":10207,"end":10234,"name":"AND","source":3},{"begin":10207,"end":10234,"name":"ISZERO","source":3},{"begin":10203,"end":10299,"name":"PUSH [tag]","source":3,"value":"152"},{"begin":10203,"end":10299,"name":"JUMPI","source":3},{"begin":10257,"end":10288,"name":"PUSH","source":3,"value":"40"},{"begin":10257,"end":10288,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"39E35637"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":10257,"end":10288,"name":"DUP2","source":3},{"begin":10257,"end":10288,"name":"MSTORE","source":3},{"begin":10285,"end":10286,"name":"PUSH","source":3,"value":"0"},{"begin":10257,"end":10288,"name":"PUSH","source":3,"value":"4"},{"begin":10257,"end":10288,"name":"DUP3","source":3},{"begin":10257,"end":10288,"name":"ADD","source":3},{"begin":1861,"end":1912,"name":"MSTORE","source":19},{"begin":1834,"end":1852,"name":"PUSH","source":19,"value":"24"},{"begin":1834,"end":1852,"name":"ADD","source":19},{"begin":10257,"end":10288,"name":"PUSH [tag]","source":3,"value":"138"},{"begin":1715,"end":1918,"name":"JUMP","source":19},{"begin":14,"end":145,"name":"tag","source":19,"value":"319"},{"begin":14,"end":145,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":88,"end":120,"name":"DUP2","source":19},{"begin":88,"end":120,"name":"AND","source":19},{"begin":78,"end":121,"name":"DUP2","source":19},{"begin":78,"end":121,"name":"EQ","source":19},{"begin":68,"end":139,"name":"PUSH [tag]","source":19,"value":"202"},{"begin":68,"end":139,"name":"JUMPI","source":19},{"begin":135,"end":136,"name":"PUSH","source":19,"value":"0"},{"begin":132,"end":133,"name":"DUP1","source":19},{"begin":125,"end":137,"name":"REVERT","source":19},{"begin":150,"end":395,"name":"tag","source":19,"value":"30"},{"begin":150,"end":395,"name":"JUMPDEST","source":19},{"begin":208,"end":214,"name":"PUSH","source":19,"value":"0"},{"begin":261,"end":263,"name":"PUSH","source":19,"value":"20"},{"begin":249,"end":258,"name":"DUP3","source":19},{"begin":240,"end":247,"name":"DUP5","source":19},{"begin":236,"end":259,"name":"SUB","source":19},{"begin":232,"end":264,"name":"SLT","source":19},{"begin":229,"end":281,"name":"ISZERO","source":19},{"begin":229,"end":281,"name":"PUSH [tag]","source":19,"value":"331"},{"begin":229,"end":281,"name":"JUMPI","source":19},{"begin":277,"end":278,"name":"PUSH","source":19,"value":"0"},{"begin":274,"end":275,"name":"DUP1","source":19},{"begin":267,"end":279,"name":"REVERT","source":19},{"begin":229,"end":281,"name":"tag","source":19,"value":"331"},{"begin":229,"end":281,"name":"JUMPDEST","source":19},{"begin":316,"end":325,"name":"DUP2","source":19},{"begin":303,"end":326,"name":"CALLDATALOAD","source":19},{"begin":335,"end":365,"name":"PUSH [tag]","source":19,"value":"194"},{"begin":359,"end":364,"name":"DUP2","source":19},{"begin":335,"end":365,"name":"PUSH [tag]","source":19,"value":"319"},{"begin":335,"end":365,"jumpType":"[in]","name":"JUMP","source":19},{"begin":774,"end":1024,"name":"tag","source":19,"value":"320"},{"begin":774,"end":1024,"name":"JUMPDEST","source":19},{"begin":859,"end":860,"name":"PUSH","source":19,"value":"0"},{"begin":869,"end":982,"name":"tag","source":19,"value":"336"},{"begin":869,"end":982,"name":"JUMPDEST","source":19},{"begin":883,"end":889,"name":"DUP4","source":19},{"begin":880,"end":881,"name":"DUP2","source":19},{"begin":877,"end":890,"name":"LT","source":19},{"begin":869,"end":982,"name":"ISZERO","source":19},{"begin":869,"end":982,"name":"PUSH [tag]","source":19,"value":"338"},{"begin":869,"end":982,"name":"JUMPI","source":19},{"begin":959,"end":970,"name":"DUP2","source":19},{"begin":959,"end":970,"name":"DUP2","source":19},{"begin":959,"end":970,"name":"ADD","source":19},{"begin":953,"end":971,"name":"MLOAD","source":19},{"begin":940,"end":951,"name":"DUP4","source":19},{"begin":940,"end":951,"name":"DUP3","source":19},{"begin":940,"end":951,"name":"ADD","source":19},{"begin":933,"end":972,"name":"MSTORE","source":19},{"begin":905,"end":907,"name":"PUSH","source":19,"value":"20"},{"begin":898,"end":908,"name":"ADD","source":19},{"begin":869,"end":982,"name":"PUSH [tag]","source":19,"value":"336"},{"begin":869,"end":982,"name":"JUMP","source":19},{"begin":869,"end":982,"name":"tag","source":19,"value":"338"},{"begin":869,"end":982,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1016,"end":1017,"name":"PUSH","source":19,"value":"0"},{"begin":998,"end":1014,"name":"SWAP2","source":19},{"begin":998,"end":1014,"name":"ADD","source":19},{"begin":991,"end":1018,"name":"MSTORE","source":19},{"begin":774,"end":1024,"jumpType":"[out]","name":"JUMP","source":19},{"begin":1029,"end":1300,"name":"tag","source":19,"value":"321"},{"begin":1029,"end":1300,"name":"JUMPDEST","source":19},{"begin":1071,"end":1074,"name":"PUSH","source":19,"value":"0"},{"begin":1109,"end":1114,"name":"DUP2","source":19},{"begin":1103,"end":1115,"name":"MLOAD","source":19},{"begin":1136,"end":1142,"name":"DUP1","source":19},{"begin":1131,"end":1134,"name":"DUP5","source":19},{"begin":1124,"end":1143,"name":"MSTORE","source":19},{"begin":1152,"end":1228,"name":"PUSH [tag]","source":19,"value":"340"},{"begin":1221,"end":1227,"name":"DUP2","source":19},{"begin":1214,"end":1218,"name":"PUSH","source":19,"value":"20"},{"begin":1209,"end":1212,"name":"DUP7","source":19},{"begin":1205,"end":1219,"name":"ADD","source":19},{"begin":1198,"end":1202,"name":"PUSH","source":19,"value":"20"},{"begin":1191,"end":1196,"name":"DUP7","source":19},{"begin":1187,"end":1203,"name":"ADD","source":19},{"begin":1152,"end":1228,"name":"PUSH [tag]","source":19,"value":"320"},{"begin":1152,"end":1228,"jumpType":"[in]","name":"JUMP","source":19},{"begin":1152,"end":1228,"name":"tag","source":19,"value":"340"},{"begin":1152,"end":1228,"name":"JUMPDEST","source":19},{"begin":1282,"end":1284,"name":"PUSH","source":19,"value":"1F"},{"begin":1261,"end":1276,"name":"ADD","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1F"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":1257,"end":1286,"name":"AND","source":19},{"begin":1248,"end":1287,"name":"SWAP3","source":19},{"begin":1248,"end":1287,"name":"SWAP1","source":19},{"begin":1248,"end":1287,"name":"SWAP3","source":19},{"begin":1248,"end":1287,"name":"ADD","source":19},{"begin":1289,"end":1293,"name":"PUSH","source":19,"value":"20"},{"begin":1244,"end":1294,"name":"ADD","source":19},{"begin":1244,"end":1294,"name":"SWAP3","source":19},{"begin":1029,"end":1300,"name":"SWAP2","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1029,"end":1300,"jumpType":"[out]","name":"JUMP","source":19},{"begin":1305,"end":1525,"name":"tag","source":19,"value":"41"},{"begin":1305,"end":1525,"name":"JUMPDEST","source":19},{"begin":1454,"end":1456,"name":"PUSH","source":19,"value":"20"},{"begin":1443,"end":1452,"name":"DUP2","source":19},{"begin":1436,"end":1457,"name":"MSTORE","source":19},{"begin":1417,"end":1421,"name":"PUSH","source":19,"value":"0"},{"begin":1474,"end":1519,"name":"PUSH [tag]","source":19,"value":"194"},{"begin":1515,"end":1517,"name":"PUSH","source":19,"value":"20"},{"begin":1504,"end":1513,"name":"DUP4","source":19},{"begin":1500,"end":1518,"name":"ADD","source":19},{"begin":1492,"end":1498,"name":"DUP5","source":19},{"begin":1474,"end":1519,"name":"PUSH [tag]","source":19,"value":"321"},{"begin":1474,"end":1519,"jumpType":"[in]","name":"JUMP","source":19},{"begin":1530,"end":1710,"name":"tag","source":19,"value":"44"},{"begin":1530,"end":1710,"name":"JUMPDEST","source":19},{"begin":1589,"end":1595,"name":"PUSH","source":19,"value":"0"},{"begin":1642,"end":1644,"name":"PUSH","source":19,"value":"20"},{"begin":1630,"end":1639,"name":"DUP3","source":19},{"begin":1621,"end":1628,"name":"DUP5","source":19},{"begin":1617,"end":1640,"name":"SUB","source":19},{"begin":1613,"end":1645,"name":"SLT","source":19},{"begin":1610,"end":1662,"name":"ISZERO","source":19},{"begin":1610,"end":1662,"name":"PUSH [tag]","source":19,"value":"344"},{"begin":1610,"end":1662,"name":"JUMPI","source":19},{"begin":1658,"end":1659,"name":"PUSH","source":19,"value":"0"},{"begin":1655,"end":1656,"name":"DUP1","source":19},{"begin":1648,"end":1660,"name":"REVERT","source":19},{"begin":1610,"end":1662,"name":"tag","source":19,"value":"344"},{"begin":1610,"end":1662,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1681,"end":1704,"name":"CALLDATALOAD","source":19},{"begin":1681,"end":1704,"name":"SWAP2","source":19},{"begin":1530,"end":1710,"name":"SWAP1","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1530,"end":1710,"jumpType":"[out]","name":"JUMP","source":19},{"begin":1923,"end":2054,"name":"tag","source":19,"value":"322"},{"begin":1923,"end":2054,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1998,"end":2029,"name":"DUP2","source":19},{"begin":1998,"end":2029,"name":"AND","source":19},{"begin":1988,"end":2030,"name":"DUP2","source":19},{"begin":1988,"end":2030,"name":"EQ","source":19},{"begin":1978,"end":2048,"name":"PUSH [tag]","source":19,"value":"202"},{"begin":1978,"end":2048,"name":"JUMPI","source":19},{"begin":2044,"end":2045,"name":"PUSH","source":19,"value":"0"},{"begin":2041,"end":2042,"name":"DUP1","source":19},{"begin":2034,"end":2046,"name":"REVERT","source":19},{"begin":2059,"end":2374,"name":"tag","source":19,"value":"50"},{"begin":2059,"end":2374,"name":"JUMPDEST","source":19},{"begin":2127,"end":2133,"name":"PUSH","source":19,"value":"0"},{"begin":2135,"end":2141,"name":"DUP1","source":19},{"begin":2188,"end":2190,"name":"PUSH","source":19,"value":"40"},{"begin":2176,"end":2185,"name":"DUP4","source":19},{"begin":2167,"end":2174,"name":"DUP6","source":19},{"begin":2163,"end":2186,"name":"SUB","source":19},{"begin":2159,"end":2191,"name":"SLT","source":19},{"begin":2156,"end":2208,"name":"ISZERO","source":19},{"begin":2156,"end":2208,"name":"PUSH [tag]","source":19,"value":"349"},{"begin":2156,"end":2208,"name":"JUMPI","source":19},{"begin":2204,"end":2205,"name":"PUSH","source":19,"value":"0"},{"begin":2201,"end":2202,"name":"DUP1","source":19},{"begin":2194,"end":2206,"name":"REVERT","source":19},{"begin":2156,"end":2208,"name":"tag","source":19,"value":"349"},{"begin":2156,"end":2208,"name":"JUMPDEST","source":19},{"begin":2243,"end":2252,"name":"DUP3","source":19},{"begin":2230,"end":2253,"name":"CALLDATALOAD","source":19},{"begin":2262,"end":2293,"name":"PUSH [tag]","source":19,"value":"350"},{"begin":2287,"end":2292,"name":"DUP2","source":19},{"begin":2262,"end":2293,"name":"PUSH [tag]","source":19,"value":"322"},{"begin":2262,"end":2293,"jumpType":"[in]","name":"JUMP","source":19},{"begin":2262,"end":2293,"name":"tag","source":19,"value":"350"},{"begin":2262,"end":2293,"name":"JUMPDEST","source":19},{"begin":2312,"end":2317,"name":"SWAP5","source":19},{"begin":2364,"end":2366,"name":"PUSH","source":19,"value":"20"},{"begin":2349,"end":2367,"name":"SWAP4","source":19},{"begin":2349,"end":2367,"name":"SWAP1","source":19},{"begin":2349,"end":2367,"name":"SWAP4","source":19},{"begin":2349,"end":2367,"name":"ADD","source":19},{"begin":2336,"end":2368,"name":"CALLDATALOAD","source":19},{"begin":2336,"end":2368,"name":"SWAP4","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2059,"end":2374,"jumpType":"[out]","name":"JUMP","source":19},{"begin":2379,"end":2835,"name":"tag","source":19,"value":"54"},{"begin":2379,"end":2835,"name":"JUMPDEST","source":19},{"begin":2456,"end":2462,"name":"PUSH","source":19,"value":"0"},{"begin":2464,"end":2470,"name":"DUP1","source":19},{"begin":2472,"end":2478,"name":"PUSH","source":19,"value":"0"},{"begin":2525,"end":2527,"name":"PUSH","source":19,"value":"60"},{"begin":2513,"end":2522,"name":"DUP5","source":19},{"begin":2504,"end":2511,"name":"DUP7","source":19},{"begin":2500,"end":2523,"name":"SUB","source":19},{"begin":2496,"end":2528,"name":"SLT","source":19},{"begin":2493,"end":2545,"name":"ISZERO","source":19},{"begin":2493,"end":2545,"name":"PUSH [tag]","source":19,"value":"352"},{"begin":2493,"end":2545,"name":"JUMPI","source":19},{"begin":2541,"end":2542,"name":"PUSH","source":19,"value":"0"},{"begin":2538,"end":2539,"name":"DUP1","source":19},{"begin":2531,"end":2543,"name":"REVERT","source":19},{"begin":2493,"end":2545,"name":"tag","source":19,"value":"352"},{"begin":2493,"end":2545,"name":"JUMPDEST","source":19},{"begin":2580,"end":2589,"name":"DUP4","source":19},{"begin":2567,"end":2590,"name":"CALLDATALOAD","source":19},{"begin":2599,"end":2630,"name":"PUSH [tag]","source":19,"value":"353"},{"begin":2624,"end":2629,"name":"DUP2","source":19},{"begin":2599,"end":2630,"name":"PUSH [tag]","source":19,"value":"322"},{"begin":2599,"end":2630,"jumpType":"[in]","name":"JUMP","source":19},{"begin":2599,"end":2630,"name":"tag","source":19,"value":"353"},{"begin":2599,"end":2630,"name":"JUMPDEST","source":19},{"begin":2649,"end":2654,"name":"SWAP3","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2706,"end":2708,"name":"PUSH","source":19,"value":"20"},{"begin":2691,"end":2709,"name":"DUP5","source":19},{"begin":2691,"end":2709,"name":"ADD","source":19},{"begin":2678,"end":2710,"name":"CALLDATALOAD","source":19},{"begin":2719,"end":2752,"name":"PUSH [tag]","source":19,"value":"354"},{"begin":2678,"end":2710,"name":"DUP2","source":19},{"begin":2719,"end":2752,"name":"PUSH [tag]","source":19,"value":"322"},{"begin":2719,"end":2752,"jumpType":"[in]","name":"JUMP","source":19},{"begin":2719,"end":2752,"name":"tag","source":19,"value":"354"},{"begin":2719,"end":2752,"name":"JUMPDEST","source":19},{"begin":2379,"end":2835,"name":"SWAP3","source":19},{"begin":2379,"end":2835,"name":"SWAP6","source":19},{"begin":2771,"end":2778,"name":"SWAP3","source":19},{"begin":2771,"end":2778,"name":"SWAP5","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2825,"end":2827,"name":"PUSH","source":19,"value":"40"},{"begin":2810,"end":2828,"name":"SWAP2","source":19},{"begin":2810,"end":2828,"name":"SWAP1","source":19},{"begin":2810,"end":2828,"name":"SWAP2","source":19},{"begin":2810,"end":2828,"name":"ADD","source":19},{"begin":2797,"end":2829,"name":"CALLDATALOAD","source":19},{"begin":2797,"end":2829,"name":"SWAP1","source":19},{"begin":2379,"end":2835,"jumpType":"[out]","name":"JUMP","source":19},{"begin":2840,"end":3115,"name":"tag","source":19,"value":"58"},{"begin":2840,"end":3115,"name":"JUMPDEST","source":19},{"begin":2927,"end":2933,"name":"PUSH","source":19,"value":"0"},{"begin":2980,"end":2982,"name":"PUSH","source":19,"value":"20"},{"begin":2968,"end":2977,"name":"DUP3","source":19},{"begin":2959,"end":2966,"name":"DUP5","source":19},{"begin":2955,"end":2978,"name":"SUB","source":19},{"begin":2951,"end":2983,"name":"SLT","source":19},{"begin":2948,"end":3000,"name":"ISZERO","source":19},{"begin":2948,"end":3000,"name":"PUSH [tag]","source":19,"value":"356"},{"begin":2948,"end":3000,"name":"JUMPI","source":19},{"begin":2996,"end":2997,"name":"PUSH","source":19,"value":"0"},{"begin":2993,"end":2994,"name":"DUP1","source":19},{"begin":2986,"end":2998,"name":"REVERT","source":19},{"begin":2948,"end":3000,"name":"tag","source":19,"value":"356"},{"begin":2948,"end":3000,"name":"JUMPDEST","source":19},{"begin":3035,"end":3044,"name":"DUP2","source":19},{"begin":3022,"end":3045,"name":"CALLDATALOAD","source":19},{"begin":3054,"end":3085,"name":"PUSH [tag]","source":19,"value":"194"},{"begin":3079,"end":3084,"name":"DUP2","source":19},{"begin":3054,"end":3085,"name":"PUSH [tag]","source":19,"value":"322"},{"begin":3054,"end":3085,"jumpType":"[in]","name":"JUMP","source":19},{"begin":3372,"end":3788,"name":"tag","source":19,"value":"89"},{"begin":3372,"end":3788,"name":"JUMPDEST","source":19},{"begin":3437,"end":3443,"name":"PUSH","source":19,"value":"0"},{"begin":3445,"end":3451,"name":"DUP1","source":19},{"begin":3498,"end":3500,"name":"PUSH","source":19,"value":"40"},{"begin":3486,"end":3495,"name":"DUP4","source":19},{"begin":3477,"end":3484,"name":"DUP6","source":19},{"begin":3473,"end":3496,"name":"SUB","source":19},{"begin":3469,"end":3501,"name":"SLT","source":19},{"begin":3466,"end":3518,"name":"ISZERO","source":19},{"begin":3466,"end":3518,"name":"PUSH [tag]","source":19,"value":"362"},{"begin":3466,"end":3518,"name":"JUMPI","source":19},{"begin":3514,"end":3515,"name":"PUSH","source":19,"value":"0"},{"begin":3511,"end":3512,"name":"DUP1","source":19},{"begin":3504,"end":3516,"name":"REVERT","source":19},{"begin":3466,"end":3518,"name":"tag","source":19,"value":"362"},{"begin":3466,"end":3518,"name":"JUMPDEST","source":19},{"begin":3553,"end":3562,"name":"DUP3","source":19},{"begin":3540,"end":3563,"name":"CALLDATALOAD","source":19},{"begin":3572,"end":3603,"name":"PUSH [tag]","source":19,"value":"363"},{"begin":3597,"end":3602,"name":"DUP2","source":19},{"begin":3572,"end":3603,"name":"PUSH [tag]","source":19,"value":"322"},{"begin":3572,"end":3603,"jumpType":"[in]","name":"JUMP","source":19},{"begin":3572,"end":3603,"name":"tag","source":19,"value":"363"},{"begin":3572,"end":3603,"name":"JUMPDEST","source":19},{"begin":3622,"end":3627,"name":"SWAP2","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3679,"end":3681,"name":"PUSH","source":19,"value":"20"},{"begin":3664,"end":3682,"name":"DUP4","source":19},{"begin":3664,"end":3682,"name":"ADD","source":19},{"begin":3651,"end":3683,"name":"CALLDATALOAD","source":19},{"begin":3721,"end":3736,"name":"DUP1","source":19},{"begin":3721,"end":3736,"name":"ISZERO","source":19},{"begin":3714,"end":3737,"name":"ISZERO","source":19},{"begin":3702,"end":3738,"name":"DUP2","source":19},{"begin":3702,"end":3738,"name":"EQ","source":19},{"begin":3692,"end":3756,"name":"PUSH [tag]","source":19,"value":"364"},{"begin":3692,"end":3756,"name":"JUMPI","source":19},{"begin":3752,"end":3753,"name":"PUSH","source":19,"value":"0"},{"begin":3749,"end":3750,"name":"DUP1","source":19},{"begin":3742,"end":3754,"name":"REVERT","source":19},{"begin":3692,"end":3756,"name":"tag","source":19,"value":"364"},{"begin":3692,"end":3756,"name":"JUMPDEST","source":19},{"begin":3775,"end":3782,"name":"DUP1","source":19},{"begin":3765,"end":3782,"name":"SWAP2","source":19},{"begin":3765,"end":3782,"name":"POP","source":19},{"begin":3765,"end":3782,"name":"POP","source":19},{"begin":3372,"end":3788,"name":"SWAP3","source":19},{"begin":3372,"end":3788,"name":"POP","source":19},{"begin":3372,"end":3788,"name":"SWAP3","source":19},{"begin":3372,"end":3788,"name":"SWAP1","source":19},{"begin":3372,"end":3788,"name":"POP","source":19},{"begin":3372,"end":3788,"jumpType":"[out]","name":"JUMP","source":19},{"begin":3793,"end":3920,"name":"tag","source":19,"value":"323"},{"begin":3793,"end":3920,"name":"JUMPDEST","source":19},{"begin":3854,"end":3864,"name":"PUSH","source":19,"value":"4E487B71"},{"begin":3849,"end":3852,"name":"PUSH","source":19,"value":"E0"},{"begin":3845,"end":3865,"name":"SHL","source":19},{"begin":3842,"end":3843,"name":"PUSH","source":19,"value":"0"},{"begin":3835,"end":3866,"name":"MSTORE","source":19},{"begin":3885,"end":3889,"name":"PUSH","source":19,"value":"41"},{"begin":3882,"end":3883,"name":"PUSH","source":19,"value":"4"},{"begin":3875,"end":3890,"name":"MSTORE","source":19},{"begin":3909,"end":3913,"name":"PUSH","source":19,"value":"24"},{"begin":3906,"end":3907,"name":"PUSH","source":19,"value":"0"},{"begin":3899,"end":3914,"name":"REVERT","source":19},{"begin":3925,"end":4200,"name":"tag","source":19,"value":"324"},{"begin":3925,"end":4200,"name":"JUMPDEST","source":19},{"begin":3996,"end":3998,"name":"PUSH","source":19,"value":"40"},{"begin":3990,"end":3999,"name":"MLOAD","source":19},{"begin":4061,"end":4063,"name":"PUSH","source":19,"value":"1F"},{"begin":4042,"end":4055,"name":"DUP3","source":19},{"begin":4042,"end":4055,"name":"ADD","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1F"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":4038,"end":4065,"name":"AND","source":19},{"begin":4026,"end":4066,"name":"DUP2","source":19},{"begin":4026,"end":4066,"name":"ADD","source":19},{"begin":4096,"end":4114,"name":"PUSH","source":19,"value":"FFFFFFFFFFFFFFFF"},{"begin":4081,"end":4115,"name":"DUP2","source":19},{"begin":4081,"end":4115,"name":"GT","source":19},{"begin":4117,"end":4139,"name":"DUP3","source":19},{"begin":4117,"end":4139,"name":"DUP3","source":19},{"begin":4117,"end":4139,"name":"LT","source":19},{"begin":4078,"end":4140,"name":"OR","source":19},{"begin":4075,"end":4163,"name":"ISZERO","source":19},{"begin":4075,"end":4163,"name":"PUSH [tag]","source":19,"value":"368"},{"begin":4075,"end":4163,"name":"JUMPI","source":19},{"begin":4143,"end":4161,"name":"PUSH [tag]","source":19,"value":"368"},{"begin":4143,"end":4161,"name":"PUSH [tag]","source":19,"value":"323"},{"begin":4143,"end":4161,"jumpType":"[in]","name":"JUMP","source":19},{"begin":4143,"end":4161,"name":"tag","source":19,"value":"368"},{"begin":4143,"end":4161,"name":"JUMPDEST","source":19},{"begin":4179,"end":4181,"name":"PUSH","source":19,"value":"40"},{"begin":4172,"end":4194,"name":"MSTORE","source":19},{"begin":3925,"end":4200,"name":"SWAP2","source":19},{"begin":3925,"end":4200,"name":"SWAP1","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3925,"end":4200,"jumpType":"[out]","name":"JUMP","source":19},{"begin":4205,"end":4391,"name":"tag","source":19,"value":"325"},{"begin":4205,"end":4391,"name":"JUMPDEST","source":19},{"begin":4253,"end":4257,"name":"PUSH","source":19,"value":"0"},{"begin":4286,"end":4304,"name":"PUSH","source":19,"value":"FFFFFFFFFFFFFFFF"},{"begin":4278,"end":4284,"name":"DUP3","source":19},{"begin":4275,"end":4305,"name":"GT","source":19},{"begin":4272,"end":4328,"name":"ISZERO","source":19},{"begin":4272,"end":4328,"name":"PUSH [tag]","source":19,"value":"371"},{"begin":4272,"end":4328,"name":"JUMPI","source":19},{"begin":4308,"end":4326,"name":"PUSH [tag]","source":19,"value":"371"},{"begin":4308,"end":4326,"name":"PUSH [tag]","source":19,"value":"323"},{"begin":4308,"end":4326,"jumpType":"[in]","name":"JUMP","source":19},{"begin":4308,"end":4326,"name":"tag","source":19,"value":"371"},{"begin":4308,"end":4326,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4374,"end":4376,"name":"PUSH","source":19,"value":"1F"},{"begin":4353,"end":4368,"name":"ADD","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1F"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":4349,"end":4378,"name":"AND","source":19},{"begin":4380,"end":4384,"name":"PUSH","source":19,"value":"20"},{"begin":4345,"end":4385,"name":"ADD","source":19},{"begin":4345,"end":4385,"name":"SWAP1","source":19},{"begin":4205,"end":4391,"jumpType":"[out]","name":"JUMP","source":19},{"begin":4396,"end":5412,"name":"tag","source":19,"value":"93"},{"begin":4396,"end":5412,"name":"JUMPDEST","source":19},{"begin":4491,"end":4497,"name":"PUSH","source":19,"value":"0"},{"begin":4499,"end":4505,"name":"DUP1","source":19},{"begin":4507,"end":4513,"name":"PUSH","source":19,"value":"0"},{"begin":4515,"end":4521,"name":"DUP1","source":19},{"begin":4568,"end":4571,"name":"PUSH","source":19,"value":"80"},{"begin":4556,"end":4565,"name":"DUP6","source":19},{"begin":4547,"end":4554,"name":"DUP8","source":19},{"begin":4543,"end":4566,"name":"SUB","source":19},{"begin":4539,"end":4572,"name":"SLT","source":19},{"begin":4536,"end":4589,"name":"ISZERO","source":19},{"begin":4536,"end":4589,"name":"PUSH [tag]","source":19,"value":"373"},{"begin":4536,"end":4589,"name":"JUMPI","source":19},{"begin":4585,"end":4586,"name":"PUSH","source":19,"value":"0"},{"begin":4582,"end":4583,"name":"DUP1","source":19},{"begin":4575,"end":4587,"name":"REVERT","source":19},{"begin":4536,"end":4589,"name":"tag","source":19,"value":"373"},{"begin":4536,"end":4589,"name":"JUMPDEST","source":19},{"begin":4624,"end":4633,"name":"DUP5","source":19},{"begin":4611,"end":4634,"name":"CALLDATALOAD","source":19},{"begin":4643,"end":4674,"name":"PUSH [tag]","source":19,"value":"374"},{"begin":4668,"end":4673,"name":"DUP2","source":19},{"begin":4643,"end":4674,"name":"PUSH [tag]","source":19,"value":"322"},{"begin":4643,"end":4674,"jumpType":"[in]","name":"JUMP","source":19},{"begin":4643,"end":4674,"name":"tag","source":19,"value":"374"},{"begin":4643,"end":4674,"name":"JUMPDEST","source":19},{"begin":4693,"end":4698,"name":"SWAP4","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4750,"end":4752,"name":"PUSH","source":19,"value":"20"},{"begin":4735,"end":4753,"name":"DUP6","source":19},{"begin":4735,"end":4753,"name":"ADD","source":19},{"begin":4722,"end":4754,"name":"CALLDATALOAD","source":19},{"begin":4763,"end":4796,"name":"PUSH [tag]","source":19,"value":"375"},{"begin":4722,"end":4754,"name":"DUP2","source":19},{"begin":4763,"end":4796,"name":"PUSH [tag]","source":19,"value":"322"},{"begin":4763,"end":4796,"jumpType":"[in]","name":"JUMP","source":19},{"begin":4763,"end":4796,"name":"tag","source":19,"value":"375"},{"begin":4763,"end":4796,"name":"JUMPDEST","source":19},{"begin":4815,"end":4822,"name":"SWAP3","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4869,"end":4871,"name":"PUSH","source":19,"value":"40"},{"begin":4854,"end":4872,"name":"DUP6","source":19},{"begin":4854,"end":4872,"name":"ADD","source":19},{"begin":4841,"end":4873,"name":"CALLDATALOAD","source":19},{"begin":4841,"end":4873,"name":"SWAP2","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4924,"end":4926,"name":"PUSH","source":19,"value":"60"},{"begin":4909,"end":4927,"name":"DUP6","source":19},{"begin":4909,"end":4927,"name":"ADD","source":19},{"begin":4896,"end":4928,"name":"CALLDATALOAD","source":19},{"begin":4951,"end":4969,"name":"PUSH","source":19,"value":"FFFFFFFFFFFFFFFF"},{"begin":4940,"end":4970,"name":"DUP2","source":19},{"begin":4940,"end":4970,"name":"GT","source":19},{"begin":4937,"end":4987,"name":"ISZERO","source":19},{"begin":4937,"end":4987,"name":"PUSH [tag]","source":19,"value":"376"},{"begin":4937,"end":4987,"name":"JUMPI","source":19},{"begin":4983,"end":4984,"name":"PUSH","source":19,"value":"0"},{"begin":4980,"end":4981,"name":"DUP1","source":19},{"begin":4973,"end":4985,"name":"REVERT","source":19},{"begin":4937,"end":4987,"name":"tag","source":19,"value":"376"},{"begin":4937,"end":4987,"name":"JUMPDEST","source":19},{"begin":5006,"end":5028,"name":"DUP6","source":19},{"begin":5006,"end":5028,"name":"ADD","source":19},{"begin":5059,"end":5063,"name":"PUSH","source":19,"value":"1F"},{"begin":5051,"end":5064,"name":"DUP2","source":19},{"begin":5051,"end":5064,"name":"ADD","source":19},{"begin":5047,"end":5074,"name":"DUP8","source":19},{"begin":-1,"end":-1,"name":"SGT","source":-1},{"begin":5037,"end":5092,"name":"PUSH [tag]","source":19,"value":"377"},{"begin":5037,"end":5092,"name":"JUMPI","source":19},{"begin":5088,"end":5089,"name":"PUSH","source":19,"value":"0"},{"begin":5085,"end":5086,"name":"DUP1","source":19},{"begin":5078,"end":5090,"name":"REVERT","source":19},{"begin":5037,"end":5092,"name":"tag","source":19,"value":"377"},{"begin":5037,"end":5092,"name":"JUMPDEST","source":19},{"begin":5124,"end":5126,"name":"DUP1","source":19},{"begin":5111,"end":5127,"name":"CALLDATALOAD","source":19},{"begin":5149,"end":5197,"name":"PUSH [tag]","source":19,"value":"378"},{"begin":5165,"end":5196,"name":"PUSH [tag]","source":19,"value":"379"},{"begin":5193,"end":5195,"name":"DUP3","source":19},{"begin":5165,"end":5196,"name":"PUSH [tag]","source":19,"value":"325"},{"begin":5165,"end":5196,"jumpType":"[in]","name":"JUMP","source":19},{"begin":5165,"end":5196,"name":"tag","source":19,"value":"379"},{"begin":5165,"end":5196,"name":"JUMPDEST","source":19},{"begin":5149,"end":5197,"name":"PUSH [tag]","source":19,"value":"324"},{"begin":5149,"end":5197,"jumpType":"[in]","name":"JUMP","source":19},{"begin":5149,"end":5197,"name":"tag","source":19,"value":"378"},{"begin":5149,"end":5197,"name":"JUMPDEST","source":19},{"begin":5220,"end":5222,"name":"DUP2","source":19},{"begin":5213,"end":5218,"name":"DUP2","source":19},{"begin":5206,"end":5223,"name":"MSTORE","source":19},{"begin":5260,"end":5267,"name":"DUP9","source":19},{"begin":5255,"end":5257,"name":"PUSH","source":19,"value":"20"},{"begin":5250,"end":5252,"name":"DUP4","source":19},{"begin":5246,"end":5248,"name":"DUP6","source":19},{"begin":5242,"end":5253,"name":"ADD","source":19},{"begin":5238,"end":5258,"name":"ADD","source":19},{"begin":5235,"end":5268,"name":"GT","source":19},{"begin":5232,"end":5285,"name":"ISZERO","source":19},{"begin":5232,"end":5285,"name":"PUSH [tag]","source":19,"value":"380"},{"begin":5232,"end":5285,"name":"JUMPI","source":19},{"begin":5281,"end":5282,"name":"PUSH","source":19,"value":"0"},{"begin":5278,"end":5279,"name":"DUP1","source":19},{"begin":5271,"end":5283,"name":"REVERT","source":19},{"begin":5232,"end":5285,"name":"tag","source":19,"value":"380"},{"begin":5232,"end":5285,"name":"JUMPDEST","source":19},{"begin":5336,"end":5338,"name":"DUP2","source":19},{"begin":5331,"end":5333,"name":"PUSH","source":19,"value":"20"},{"begin":5327,"end":5329,"name":"DUP5","source":19},{"begin":5323,"end":5334,"name":"ADD","source":19},{"begin":5318,"end":5320,"name":"PUSH","source":19,"value":"20"},{"begin":5311,"end":5316,"name":"DUP4","source":19},{"begin":5307,"end":5321,"name":"ADD","source":19},{"begin":5294,"end":5339,"name":"CALLDATACOPY","source":19},{"begin":5380,"end":5381,"name":"PUSH","source":19,"value":"0"},{"begin":5375,"end":5377,"name":"PUSH","source":19,"value":"20"},{"begin":5370,"end":5372,"name":"DUP4","source":19},{"begin":5363,"end":5368,"name":"DUP4","source":19},{"begin":5359,"end":5373,"name":"ADD","source":19},{"begin":5355,"end":5378,"name":"ADD","source":19},{"begin":5348,"end":5382,"name":"MSTORE","source":19},{"begin":5401,"end":5406,"name":"DUP1","source":19},{"begin":5391,"end":5406,"name":"SWAP4","source":19},{"begin":5391,"end":5406,"name":"POP","source":19},{"begin":5391,"end":5406,"name":"POP","source":19},{"begin":5391,"end":5406,"name":"POP","source":19},{"begin":5391,"end":5406,"name":"POP","source":19},{"begin":4396,"end":5412,"name":"SWAP3","source":19},{"begin":4396,"end":5412,"name":"SWAP6","source":19},{"begin":4396,"end":5412,"name":"SWAP2","source":19},{"begin":4396,"end":5412,"name":"SWAP5","source":19},{"begin":4396,"end":5412,"name":"POP","source":19},{"begin":4396,"end":5412,"name":"SWAP3","source":19},{"begin":4396,"end":5412,"name":"POP","source":19},{"begin":4396,"end":5412,"jumpType":"[out]","name":"JUMP","source":19},{"begin":5653,"end":6041,"name":"tag","source":19,"value":"109"},{"begin":5653,"end":6041,"name":"JUMPDEST","source":19},{"begin":5721,"end":5727,"name":"PUSH","source":19,"value":"0"},{"begin":5729,"end":5735,"name":"DUP1","source":19},{"begin":5782,"end":5784,"name":"PUSH","source":19,"value":"40"},{"begin":5770,"end":5779,"name":"DUP4","source":19},{"begin":5761,"end":5768,"name":"DUP6","source":19},{"begin":5757,"end":5780,"name":"SUB","source":19},{"begin":5753,"end":5785,"name":"SLT","source":19},{"begin":5750,"end":5802,"name":"ISZERO","source":19},{"begin":5750,"end":5802,"name":"PUSH [tag]","source":19,"value":"383"},{"begin":5750,"end":5802,"name":"JUMPI","source":19},{"begin":5798,"end":5799,"name":"PUSH","source":19,"value":"0"},{"begin":5795,"end":5796,"name":"DUP1","source":19},{"begin":5788,"end":5800,"name":"REVERT","source":19},{"begin":5750,"end":5802,"name":"tag","source":19,"value":"383"},{"begin":5750,"end":5802,"name":"JUMPDEST","source":19},{"begin":5837,"end":5846,"name":"DUP3","source":19},{"begin":5824,"end":5847,"name":"CALLDATALOAD","source":19},{"begin":5856,"end":5887,"name":"PUSH [tag]","source":19,"value":"384"},{"begin":5881,"end":5886,"name":"DUP2","source":19},{"begin":5856,"end":5887,"name":"PUSH [tag]","source":19,"value":"322"},{"begin":5856,"end":5887,"jumpType":"[in]","name":"JUMP","source":19},{"begin":5856,"end":5887,"name":"tag","source":19,"value":"384"},{"begin":5856,"end":5887,"name":"JUMPDEST","source":19},{"begin":5906,"end":5911,"name":"SWAP2","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":5963,"end":5965,"name":"PUSH","source":19,"value":"20"},{"begin":5948,"end":5966,"name":"DUP4","source":19},{"begin":5948,"end":5966,"name":"ADD","source":19},{"begin":5935,"end":5967,"name":"CALLDATALOAD","source":19},{"begin":5976,"end":6009,"name":"PUSH [tag]","source":19,"value":"364"},{"begin":5935,"end":5967,"name":"DUP2","source":19},{"begin":5976,"end":6009,"name":"PUSH [tag]","source":19,"value":"322"},{"begin":5976,"end":6009,"jumpType":"[in]","name":"JUMP","source":19},{"begin":6046,"end":6426,"name":"tag","source":19,"value":"121"},{"begin":6046,"end":6426,"name":"JUMPDEST","source":19},{"begin":6125,"end":6126,"name":"PUSH","source":19,"value":"1"},{"begin":6121,"end":6133,"name":"DUP2","source":19},{"begin":6121,"end":6133,"name":"DUP2","source":19},{"begin":6121,"end":6133,"name":"SHR","source":19},{"begin":6121,"end":6133,"name":"SWAP1","source":19},{"begin":6168,"end":6180,"name":"DUP3","source":19},{"begin":6168,"end":6180,"name":"AND","source":19},{"begin":6168,"end":6180,"name":"DUP1","source":19},{"begin":6189,"end":6250,"name":"PUSH [tag]","source":19,"value":"387"},{"begin":6189,"end":6250,"name":"JUMPI","source":19},{"begin":6243,"end":6247,"name":"PUSH","source":19,"value":"7F"},{"begin":6235,"end":6241,"name":"DUP3","source":19},{"begin":6231,"end":6248,"name":"AND","source":19},{"begin":6221,"end":6248,"name":"SWAP2","source":19},{"begin":6221,"end":6248,"name":"POP","source":19},{"begin":6189,"end":6250,"name":"tag","source":19,"value":"387"},{"begin":6189,"end":6250,"name":"JUMPDEST","source":19},{"begin":6296,"end":6298,"name":"PUSH","source":19,"value":"20"},{"begin":6288,"end":6294,"name":"DUP3","source":19},{"begin":6285,"end":6299,"name":"LT","source":19},{"begin":6265,"end":6283,"name":"DUP2","source":19},{"begin":6262,"end":6300,"name":"SUB","source":19},{"begin":6259,"end":6420,"name":"PUSH [tag]","source":19,"value":"388"},{"begin":6259,"end":6420,"name":"JUMPI","source":19},{"begin":6342,"end":6352,"name":"PUSH","source":19,"value":"4E487B71"},{"begin":6337,"end":6340,"name":"PUSH","source":19,"value":"E0"},{"begin":6333,"end":6353,"name":"SHL","source":19},{"begin":6330,"end":6331,"name":"PUSH","source":19,"value":"0"},{"begin":6323,"end":6354,"name":"MSTORE","source":19},{"begin":6377,"end":6381,"name":"PUSH","source":19,"value":"22"},{"begin":6374,"end":6375,"name":"PUSH","source":19,"value":"4"},{"begin":6367,"end":6382,"name":"MSTORE","source":19},{"begin":6405,"end":6409,"name":"PUSH","source":19,"value":"24"},{"begin":6402,"end":6403,"name":"PUSH","source":19,"value":"0"},{"begin":6395,"end":6410,"name":"REVERT","source":19},{"begin":6259,"end":6420,"name":"tag","source":19,"value":"388"},{"begin":6259,"end":6420,"name":"JUMPDEST","source":19},{"begin":6259,"end":6420,"name":"POP","source":19},{"begin":6046,"end":6426,"name":"SWAP2","source":19},{"begin":6046,"end":6426,"name":"SWAP1","source":19},{"begin":6046,"end":6426,"name":"POP","source":19},{"begin":6046,"end":6426,"jumpType":"[out]","name":"JUMP","source":19},{"begin":6811,"end":6938,"name":"tag","source":19,"value":"326"},{"begin":6811,"end":6938,"name":"JUMPDEST","source":19},{"begin":6872,"end":6882,"name":"PUSH","source":19,"value":"4E487B71"},{"begin":6867,"end":6870,"name":"PUSH","source":19,"value":"E0"},{"begin":6863,"end":6883,"name":"SHL","source":19},{"begin":6860,"end":6861,"name":"PUSH","source":19,"value":"0"},{"begin":6853,"end":6884,"name":"MSTORE","source":19},{"begin":6903,"end":6907,"name":"PUSH","source":19,"value":"11"},{"begin":6900,"end":6901,"name":"PUSH","source":19,"value":"4"},{"begin":6893,"end":6908,"name":"MSTORE","source":19},{"begin":6927,"end":6931,"name":"PUSH","source":19,"value":"24"},{"begin":6924,"end":6925,"name":"PUSH","source":19,"value":"0"},{"begin":6917,"end":6932,"name":"REVERT","source":19},{"begin":6943,"end":7078,"name":"tag","source":19,"value":"184"},{"begin":6943,"end":7078,"name":"JUMPDEST","source":19},{"begin":6982,"end":6985,"name":"PUSH","source":19,"value":"0"},{"begin":7003,"end":7020,"name":"PUSH","source":19,"value":"1"},{"begin":7003,"end":7020,"name":"DUP3","source":19},{"begin":7003,"end":7020,"name":"ADD","source":19},{"begin":7000,"end":7043,"name":"PUSH [tag]","source":19,"value":"393"},{"begin":7000,"end":7043,"name":"JUMPI","source":19},{"begin":7023,"end":7041,"name":"PUSH [tag]","source":19,"value":"393"},{"begin":7023,"end":7041,"name":"PUSH [tag]","source":19,"value":"326"},{"begin":7023,"end":7041,"jumpType":"[in]","name":"JUMP","source":19},{"begin":7023,"end":7041,"name":"tag","source":19,"value":"393"},{"begin":7023,"end":7041,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":7070,"end":7071,"name":"PUSH","source":19,"value":"1"},{"begin":7059,"end":7072,"name":"ADD","source":19},{"begin":7059,"end":7072,"name":"SWAP1","source":19},{"begin":6943,"end":7078,"jumpType":"[out]","name":"JUMP","source":19},{"begin":7083,"end":7731,"name":"tag","source":19,"value":"195"},{"begin":7083,"end":7731,"name":"JUMPDEST","source":19},{"begin":7163,"end":7169,"name":"PUSH","source":19,"value":"0"},{"begin":7216,"end":7218,"name":"PUSH","source":19,"value":"20"},{"begin":7204,"end":7213,"name":"DUP3","source":19},{"begin":7195,"end":7202,"name":"DUP5","source":19},{"begin":7191,"end":7214,"name":"SUB","source":19},{"begin":7187,"end":7219,"name":"SLT","source":19},{"begin":7184,"end":7236,"name":"ISZERO","source":19},{"begin":7184,"end":7236,"name":"PUSH [tag]","source":19,"value":"395"},{"begin":7184,"end":7236,"name":"JUMPI","source":19},{"begin":7232,"end":7233,"name":"PUSH","source":19,"value":"0"},{"begin":7229,"end":7230,"name":"DUP1","source":19},{"begin":7222,"end":7234,"name":"REVERT","source":19},{"begin":7184,"end":7236,"name":"tag","source":19,"value":"395"},{"begin":7184,"end":7236,"name":"JUMPDEST","source":19},{"begin":7265,"end":7274,"name":"DUP2","source":19},{"begin":7259,"end":7275,"name":"MLOAD","source":19},{"begin":7298,"end":7316,"name":"PUSH","source":19,"value":"FFFFFFFFFFFFFFFF"},{"begin":7290,"end":7296,"name":"DUP2","source":19},{"begin":7287,"end":7317,"name":"GT","source":19},{"begin":7284,"end":7334,"name":"ISZERO","source":19},{"begin":7284,"end":7334,"name":"PUSH [tag]","source":19,"value":"396"},{"begin":7284,"end":7334,"name":"JUMPI","source":19},{"begin":7330,"end":7331,"name":"PUSH","source":19,"value":"0"},{"begin":7327,"end":7328,"name":"DUP1","source":19},{"begin":7320,"end":7332,"name":"REVERT","source":19},{"begin":7284,"end":7334,"name":"tag","source":19,"value":"396"},{"begin":7284,"end":7334,"name":"JUMPDEST","source":19},{"begin":7353,"end":7375,"name":"DUP3","source":19},{"begin":7353,"end":7375,"name":"ADD","source":19},{"begin":7406,"end":7410,"name":"PUSH","source":19,"value":"1F"},{"begin":7398,"end":7411,"name":"DUP2","source":19},{"begin":7398,"end":7411,"name":"ADD","source":19},{"begin":7394,"end":7421,"name":"DUP5","source":19},{"begin":-1,"end":-1,"name":"SGT","source":-1},{"begin":7384,"end":7439,"name":"PUSH [tag]","source":19,"value":"397"},{"begin":7384,"end":7439,"name":"JUMPI","source":19},{"begin":7435,"end":7436,"name":"PUSH","source":19,"value":"0"},{"begin":7432,"end":7433,"name":"DUP1","source":19},{"begin":7425,"end":7437,"name":"REVERT","source":19},{"begin":7384,"end":7439,"name":"tag","source":19,"value":"397"},{"begin":7384,"end":7439,"name":"JUMPDEST","source":19},{"begin":7464,"end":7466,"name":"DUP1","source":19},{"begin":7458,"end":7467,"name":"MLOAD","source":19},{"begin":7489,"end":7537,"name":"PUSH [tag]","source":19,"value":"398"},{"begin":7505,"end":7536,"name":"PUSH [tag]","source":19,"value":"379"},{"begin":7533,"end":7535,"name":"DUP3","source":19},{"begin":7505,"end":7536,"name":"PUSH [tag]","source":19,"value":"325"},{"begin":7505,"end":7536,"jumpType":"[in]","name":"JUMP","source":19},{"begin":7489,"end":7537,"name":"tag","source":19,"value":"398"},{"begin":7489,"end":7537,"name":"JUMPDEST","source":19},{"begin":7560,"end":7562,"name":"DUP2","source":19},{"begin":7553,"end":7558,"name":"DUP2","source":19},{"begin":7546,"end":7563,"name":"MSTORE","source":19},{"begin":7600,"end":7607,"name":"DUP6","source":19},{"begin":7595,"end":7597,"name":"PUSH","source":19,"value":"20"},{"begin":7590,"end":7592,"name":"DUP4","source":19},{"begin":7586,"end":7588,"name":"DUP6","source":19},{"begin":7582,"end":7593,"name":"ADD","source":19},{"begin":7578,"end":7598,"name":"ADD","source":19},{"begin":7575,"end":7608,"name":"GT","source":19},{"begin":7572,"end":7625,"name":"ISZERO","source":19},{"begin":7572,"end":7625,"name":"PUSH [tag]","source":19,"value":"400"},{"begin":7572,"end":7625,"name":"JUMPI","source":19},{"begin":7621,"end":7622,"name":"PUSH","source":19,"value":"0"},{"begin":7618,"end":7619,"name":"DUP1","source":19},{"begin":7611,"end":7623,"name":"REVERT","source":19},{"begin":7572,"end":7625,"name":"tag","source":19,"value":"400"},{"begin":7572,"end":7625,"name":"JUMPDEST","source":19},{"begin":7634,"end":7701,"name":"PUSH [tag]","source":19,"value":"401"},{"begin":7698,"end":7700,"name":"DUP3","source":19},{"begin":7693,"end":7695,"name":"PUSH","source":19,"value":"20"},{"begin":7686,"end":7691,"name":"DUP4","source":19},{"begin":7682,"end":7696,"name":"ADD","source":19},{"begin":7677,"end":7679,"name":"PUSH","source":19,"value":"20"},{"begin":7673,"end":7675,"name":"DUP7","source":19},{"begin":7669,"end":7680,"name":"ADD","source":19},{"begin":7634,"end":7701,"name":"PUSH [tag]","source":19,"value":"320"},{"begin":7634,"end":7701,"jumpType":"[in]","name":"JUMP","source":19},{"begin":7634,"end":7701,"name":"tag","source":19,"value":"401"},{"begin":7634,"end":7701,"name":"JUMPDEST","source":19},{"begin":7720,"end":7725,"name":"SWAP6","source":19},{"begin":7083,"end":7731,"name":"SWAP5","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":7083,"end":7731,"jumpType":"[out]","name":"JUMP","source":19},{"begin":7736,"end":8225,"name":"tag","source":19,"value":"242"},{"begin":7736,"end":8225,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":8005,"end":8020,"name":"DUP6","source":19},{"begin":8005,"end":8020,"name":"DUP2","source":19},{"begin":8005,"end":8020,"name":"AND","source":19},{"begin":7987,"end":8021,"name":"DUP3","source":19},{"begin":7987,"end":8021,"name":"MSTORE","source":19},{"begin":8057,"end":8072,"name":"DUP5","source":19},{"begin":8057,"end":8072,"name":"AND","source":19},{"begin":8052,"end":8054,"name":"PUSH","source":19,"value":"20"},{"begin":8037,"end":8055,"name":"DUP3","source":19},{"begin":8037,"end":8055,"name":"ADD","source":19},{"begin":8030,"end":8073,"name":"MSTORE","source":19},{"begin":8104,"end":8106,"name":"PUSH","source":19,"value":"40"},{"begin":8089,"end":8107,"name":"DUP2","source":19},{"begin":8089,"end":8107,"name":"ADD","source":19},{"begin":8082,"end":8116,"name":"DUP4","source":19},{"begin":8082,"end":8116,"name":"SWAP1","source":19},{"begin":8082,"end":8116,"name":"MSTORE","source":19},{"begin":8152,"end":8155,"name":"PUSH","source":19,"value":"80"},{"begin":8147,"end":8149,"name":"PUSH","source":19,"value":"60"},{"begin":8132,"end":8150,"name":"DUP3","source":19},{"begin":8132,"end":8150,"name":"ADD","source":19},{"begin":8125,"end":8156,"name":"DUP2","source":19},{"begin":8125,"end":8156,"name":"SWAP1","source":19},{"begin":8125,"end":8156,"name":"MSTORE","source":19},{"begin":7930,"end":7934,"name":"PUSH","source":19,"value":"0"},{"begin":7930,"end":7934,"name":"SWAP1","source":19},{"begin":8173,"end":8219,"name":"PUSH [tag]","source":19,"value":"403"},{"begin":8173,"end":8219,"name":"SWAP1","source":19},{"begin":8199,"end":8218,"name":"DUP4","source":19},{"begin":8199,"end":8218,"name":"ADD","source":19},{"begin":8191,"end":8197,"name":"DUP5","source":19},{"begin":8173,"end":8219,"name":"PUSH [tag]","source":19,"value":"321"},{"begin":8173,"end":8219,"jumpType":"[in]","name":"JUMP","source":19},{"begin":8173,"end":8219,"name":"tag","source":19,"value":"403"},{"begin":8173,"end":8219,"name":"JUMPDEST","source":19},{"begin":8165,"end":8219,"name":"SWAP7","source":19},{"begin":7736,"end":8225,"name":"SWAP6","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":7736,"end":8225,"jumpType":"[out]","name":"JUMP","source":19},{"begin":8230,"end":8479,"name":"tag","source":19,"value":"245"},{"begin":8230,"end":8479,"name":"JUMPDEST","source":19},{"begin":8299,"end":8305,"name":"PUSH","source":19,"value":"0"},{"begin":8352,"end":8354,"name":"PUSH","source":19,"value":"20"},{"begin":8340,"end":8349,"name":"DUP3","source":19},{"begin":8331,"end":8338,"name":"DUP5","source":19},{"begin":8327,"end":8350,"name":"SUB","source":19},{"begin":8323,"end":8355,"name":"SLT","source":19},{"begin":8320,"end":8372,"name":"ISZERO","source":19},{"begin":8320,"end":8372,"name":"PUSH [tag]","source":19,"value":"405"},{"begin":8320,"end":8372,"name":"JUMPI","source":19},{"begin":8368,"end":8369,"name":"PUSH","source":19,"value":"0"},{"begin":8365,"end":8366,"name":"DUP1","source":19},{"begin":8358,"end":8370,"name":"REVERT","source":19},{"begin":8320,"end":8372,"name":"tag","source":19,"value":"405"},{"begin":8320,"end":8372,"name":"JUMPDEST","source":19},{"begin":8400,"end":8409,"name":"DUP2","source":19},{"begin":8394,"end":8410,"name":"MLOAD","source":19},{"begin":8419,"end":8449,"name":"PUSH [tag]","source":19,"value":"194"},{"begin":8443,"end":8448,"name":"DUP2","source":19},{"begin":8419,"end":8449,"name":"PUSH [tag]","source":19,"value":"319"},{"begin":8419,"end":8449,"jumpType":"[in]","name":"JUMP","source":19},{"begin":8484,"end":8612,"name":"tag","source":19,"value":"270"},{"begin":8484,"end":8612,"name":"JUMPDEST","source":19},{"begin":8551,"end":8560,"name":"DUP2","source":19},{"begin":8551,"end":8560,"name":"DUP2","source":19},{"begin":8551,"end":8560,"name":"SUB","source":19},{"begin":8572,"end":8583,"name":"DUP2","source":19},{"begin":8572,"end":8583,"name":"DUP2","source":19},{"begin":8572,"end":8583,"name":"GT","source":19},{"begin":8569,"end":8606,"name":"ISZERO","source":19},{"begin":8569,"end":8606,"name":"PUSH [tag]","source":19,"value":"117"},{"begin":8569,"end":8606,"name":"JUMPI","source":19},{"begin":8586,"end":8604,"name":"PUSH [tag]","source":19,"value":"117"},{"begin":8586,"end":8604,"name":"PUSH [tag]","source":19,"value":"326"},{"begin":8586,"end":8604,"jumpType":"[in]","name":"JUMP","source":19},{"begin":8617,"end":8948,"name":"tag","source":19,"value":"272"},{"begin":8617,"end":8948,"name":"JUMPDEST","source":19},{"begin":8722,"end":8731,"name":"PUSH","source":19,"value":"0"},{"begin":8733,"end":8742,"name":"DUP1","source":19},{"begin":8775,"end":8783,"name":"DUP6","source":19},{"begin":8763,"end":8773,"name":"DUP6","source":19},{"begin":8760,"end":8784,"name":"GT","source":19},{"begin":8757,"end":8801,"name":"ISZERO","source":19},{"begin":8757,"end":8801,"name":"PUSH [tag]","source":19,"value":"411"},{"begin":8757,"end":8801,"name":"JUMPI","source":19},{"begin":8797,"end":8798,"name":"PUSH","source":19,"value":"0"},{"begin":8794,"end":8795,"name":"DUP1","source":19},{"begin":8787,"end":8799,"name":"REVERT","source":19},{"begin":8757,"end":8801,"name":"tag","source":19,"value":"411"},{"begin":8757,"end":8801,"name":"JUMPDEST","source":19},{"begin":8826,"end":8832,"name":"DUP4","source":19},{"begin":8816,"end":8824,"name":"DUP7","source":19},{"begin":8813,"end":8833,"name":"GT","source":19},{"begin":8810,"end":8850,"name":"ISZERO","source":19},{"begin":8810,"end":8850,"name":"PUSH [tag]","source":19,"value":"412"},{"begin":8810,"end":8850,"name":"JUMPI","source":19},{"begin":8846,"end":8847,"name":"PUSH","source":19,"value":"0"},{"begin":8843,"end":8844,"name":"DUP1","source":19},{"begin":8836,"end":8848,"name":"REVERT","source":19},{"begin":8810,"end":8850,"name":"tag","source":19,"value":"412"},{"begin":8810,"end":8850,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":8872,"end":8895,"name":"DUP3","source":19},{"begin":8872,"end":8895,"name":"ADD","source":19},{"begin":8872,"end":8895,"name":"SWAP4","source":19},{"begin":8917,"end":8942,"name":"SWAP2","source":19},{"begin":8917,"end":8942,"name":"SWAP1","source":19},{"begin":8917,"end":8942,"name":"SWAP3","source":19},{"begin":8917,"end":8942,"name":"SUB","source":19},{"begin":8917,"end":8942,"name":"SWAP2","source":19},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":8617,"end":8948,"jumpType":"[out]","name":"JUMP","source":19},{"begin":8953,"end":9290,"name":"tag","source":19,"value":"274"},{"begin":8953,"end":9290,"name":"JUMPDEST","source":19},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":9074,"end":9093,"name":"DUP2","source":19},{"begin":9074,"end":9093,"name":"CALLDATALOAD","source":19},{"begin":9161,"end":9172,"name":"DUP2","source":19},{"begin":9161,"end":9172,"name":"DUP2","source":19},{"begin":9161,"end":9172,"name":"AND","source":19},{"begin":9161,"end":9172,"name":"SWAP2","source":19},{"begin":9192,"end":9194,"name":"PUSH","source":19,"value":"14"},{"begin":9184,"end":9195,"name":"DUP6","source":19},{"begin":9184,"end":9195,"name":"LT","source":19},{"begin":9181,"end":9284,"name":"ISZERO","source":19},{"begin":9181,"end":9284,"name":"PUSH [tag]","source":19,"value":"414"},{"begin":9181,"end":9284,"name":"JUMPI","source":19},{"begin":9271,"end":9273,"name":"DUP1","source":19},{"begin":9265,"end":9267,"name":"DUP2","source":19},{"begin":9258,"end":9261,"name":"DUP7","source":19},{"begin":9254,"end":9256,"name":"PUSH","source":19,"value":"14"},{"begin":9250,"end":9262,"name":"SUB","source":19},{"begin":9247,"end":9248,"name":"PUSH","source":19,"value":"3"},{"begin":9243,"end":9263,"name":"SHL","source":19},{"begin":9239,"end":9268,"name":"SHL","source":19},{"begin":9235,"end":9237,"name":"DUP4","source":19},{"begin":9231,"end":9269,"name":"AND","source":19},{"begin":9227,"end":9274,"name":"AND","source":19},{"begin":9218,"end":9274,"name":"SWAP3","source":19},{"begin":9218,"end":9274,"name":"POP","source":19},{"begin":9181,"end":9284,"name":"tag","source":19,"value":"414"},{"begin":9181,"end":9284,"name":"JUMPDEST","source":19},{"begin":9181,"end":9284,"name":"POP","source":19},{"begin":9181,"end":9284,"name":"POP","source":19},{"begin":8953,"end":9290,"name":"SWAP3","source":19},{"begin":8953,"end":9290,"name":"SWAP2","source":19},{"begin":8953,"end":9290,"name":"POP","source":19},{"begin":8953,"end":9290,"name":"POP","source":19},{"begin":8953,"end":9290,"jumpType":"[out]","name":"JUMP","source":19}]}},"sourceList":["node_modules/@openzeppelin/contracts/access/Ownable.sol","node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol","node_modules/@openzeppelin/contracts/metatx/ERC2771Context.sol","node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol","node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","node_modules/@openzeppelin/contracts/utils/Context.sol","node_modules/@openzeppelin/contracts/utils/Panic.sol","node_modules/@openzeppelin/contracts/utils/Strings.sol","node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","node_modules/@openzeppelin/contracts/utils/math/Math.sol","node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol","node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol","src/JBProjects.sol","src/interfaces/IJBProjects.sol","src/interfaces/IJBTokenUriResolver.sol","#utility.yul"]},"bytecode":{"functionDebugData":{"@_305":{"entryPoint":null,"id":305,"parameterSlots":1,"returnSlots":0},"@_497":{"entryPoint":null,"id":497,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_6523":{"entryPoint":null,"id":6523,"parameterSlots":3,"returnSlots":0},"@_approve_1317":{"entryPoint":1481,"id":1317,"parameterSlots":4,"returnSlots":0},"@_checkAuthorized_891":{"entryPoint":1375,"id":891,"parameterSlots":3,"returnSlots":0},"@_contextSuffixLength_426":{"entryPoint":null,"id":426,"parameterSlots":0,"returnSlots":1},"@_contextSuffixLength_6592":{"entryPoint":null,"id":6592,"parameterSlots":0,"returnSlots":1},"@_getApproved_818":{"entryPoint":null,"id":818,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_854":{"entryPoint":1783,"id":854,"parameterSlots":3,"returnSlots":1},"@_mint_1047":{"entryPoint":702,"id":1047,"parameterSlots":2,"returnSlots":0},"@_msgSender_1636":{"entryPoint":null,"id":1636,"parameterSlots":0,"returnSlots":1},"@_msgSender_375":{"entryPoint":529,"id":375,"parameterSlots":0,"returnSlots":1},"@_msgSender_6620":{"entryPoint":474,"id":6620,"parameterSlots":0,"returnSlots":1},"@_ownerOf_805":{"entryPoint":null,"id":805,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1383":{"entryPoint":1920,"id":1383,"parameterSlots":1,"returnSlots":1},"@_safeMint_1062":{"entryPoint":491,"id":1062,"parameterSlots":2,"returnSlots":0},"@_safeMint_1092":{"entryPoint":621,"id":1092,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":268,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_997":{"entryPoint":1120,"id":997,"parameterSlots":3,"returnSlots":1},"@checkOnERC721Received_1623":{"entryPoint":808,"id":1623,"parameterSlots":5,"returnSlots":0},"@createFor_6668":{"entryPoint":350,"id":6668,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_698":{"entryPoint":null,"id":698,"parameterSlots":2,"returnSlots":1},"@isTrustedForwarder_328":{"entryPoint":663,"id":328,"parameterSlots":1,"returnSlots":1},"@trustedForwarder_314":{"entryPoint":null,"id":314,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":1985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":2009,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":2726,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2610,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":2517,"id":null,"parameterSlots":4,"returnSlots":2},"checked_sub_t_uint256":{"entryPoint":2495,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":2165,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20":{"entryPoint":2561,"id":null,"parameterSlots":2,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2241,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2105,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":2467,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2445,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2083,"id":null,"parameterSlots":0,"returnSlots":0}},"object":"60a06040523480156200001157600080fd5b5060405162001e4538038062001e458339810160408190526200003491620007d9565b8281604051806040016040528060118152602001704a75696365626f782050726f6a6563747360781b81525060405180604001604052806008815260200167094aa92868a849eb60c31b8152508160009081620000929190620008c1565b506001620000a18282620008c1565b5050506001600160a01b039081166080528116620000da57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000e5816200010c565b506001600160a01b03821615620001035762000101826200015e565b505b50505062000ad9565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006007600081546200017190620009a3565b918290555090506001600160a01b038216817f365b3162cd780731fc55a794b59494d472bc2af701007f581843a70673814698620001ae620001da565b6040516001600160a01b03909116815260200160405180910390a3620001d58282620001eb565b919050565b6000620001e662000211565b905090565b6200020d8282604051806020016040528060008152506200026d60201b60201c565b5050565b6000366014620002213362000297565b80156200022e5750808210155b156200026557600036620002438385620009bf565b62000250928290620009d5565b6200025b9162000a01565b60601c9250505090565b339250505090565b620002798383620002be565b6200029262000287620001da565b600085858562000328565b505050565b6000620002a360805190565b6001600160a01b0316826001600160a01b0316149050919050565b6001600160a01b038216620002ea57604051633250574960e11b815260006004820152602401620000d1565b6000620002f983838362000460565b90506001600160a01b0381161562000292576040516339e3563760e11b815260006004820152602401620000d1565b6001600160a01b0383163b156200045957604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906200036d90889088908790879060040162000a32565b6020604051808303816000875af1925050508015620003ab575060408051601f3d908101601f19168201909252620003a89181019062000aa6565b60015b62000419573d808015620003dc576040519150601f19603f3d011682016040523d82523d6000602084013e620003e1565b606091505b5080516000036200041157604051633250574960e11b81526001600160a01b0385166004820152602401620000d1565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146200045757604051633250574960e11b81526001600160a01b0385166004820152602401620000d1565b505b5050505050565b6000828152600260205260408120546001600160a01b03908116908316156200049057620004908184866200055f565b6001600160a01b03811615620004d057620004af6000858180620005c9565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b0385161562000500576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6200056c838383620006f7565b62000292576001600160a01b0383166200059d57604051637e27328960e01b815260048101829052602401620000d1565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401620000d1565b8080620005de57506001600160a01b03821615155b15620006c7576000620005f18462000780565b90506001600160a01b038316158015906200061e5750826001600160a01b0316816001600160a01b031614155b80156200065157506001600160a01b0380821660009081526005602090815260408083209387168352929052205460ff16155b156200067c5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401620000d1565b8115620006c55783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b03831615801590620007785750826001600160a01b0316846001600160a01b031614806200075357506001600160a01b0380851660009081526005602090815260408083209387168352929052205460ff165b806200077857506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6000818152600260205260408120546001600160a01b031680620007bb57604051637e27328960e01b815260048101849052602401620000d1565b92915050565b80516001600160a01b0381168114620001d557600080fd5b600080600060608486031215620007ef57600080fd5b620007fa84620007c1565b92506200080a60208501620007c1565b91506200081a60408501620007c1565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200084e57607f821691505b6020821081036200086f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000292576000816000526020600020601f850160051c81016020861015620008a05750805b601f850160051c820191505b818110156200045757828155600101620008ac565b81516001600160401b03811115620008dd57620008dd62000823565b620008f581620008ee845462000839565b8462000875565b602080601f8311600181146200092d5760008415620009145750858301515b600019600386901b1c1916600185901b17855562000457565b600085815260208120601f198616915b828110156200095e578886015182559484019460019091019084016200093d565b50858210156200097d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201620009b857620009b86200098d565b5060010190565b81810381811115620007bb57620007bb6200098d565b60008085851115620009e657600080fd5b83861115620009f457600080fd5b5050820193919092039150565b6001600160601b0319813581811691601485101562000a2a5780818660140360031b1b83161692505b505092915050565b600060018060a01b03808716835260208187166020850152856040850152608060608501528451915081608085015260005b8281101562000a825785810182015185820160a00152810162000a64565b5050600060a0828501015260a0601f19601f83011684010191505095945050505050565b60006020828403121562000ab957600080fd5b81516001600160e01b03198116811462000ad257600080fd5b9392505050565b60805161134262000b0360003960008181610224015281816102840152610bcf01526113426000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063b88d4fde1161007c578063b88d4fde146102d4578063c0715888146102e7578063c87b56dd146102fa578063e131fc0c1461030d578063e985e9c514610320578063f2fde38b1461033357600080fd5b8063715018a61461027a5780637da0a877146102825780638da5cb5b146102a857806395d89b41146102b9578063a22cb465146102c157600080fd5b806323b872dd1161010a57806323b872dd146101db5780632407497e146101ee57806342842e0e14610201578063572b6c05146102145780636352211e1461025457806370a082311461026757600080fd5b806301ffc9a71461014757806306661abd1461016f57806306fdde0314610186578063081812fc1461019b578063095ea7b3146101c6575b600080fd5b61015a610155366004610e9e565b610346565b60405190151581526020015b60405180910390f35b61017860075481565b604051908152602001610166565b61018e610371565b6040516101669190610f0b565b6101ae6101a9366004610f1e565b610403565b6040516001600160a01b039091168152602001610166565b6101d96101d4366004610f4c565b61042c565b005b6101d96101e9366004610f78565b610442565b6101d96101fc366004610fb9565b6104d9565b6101d961020f366004610f78565b610546565b61015a610222366004610fb9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6101ae610262366004610f1e565b610566565b610178610275366004610fb9565b610571565b6101d96105b9565b7f00000000000000000000000000000000000000000000000000000000000000006101ae565b6006546001600160a01b03166101ae565b61018e6105cd565b6101d96102cf366004610fd6565b6105dc565b6101d96102e2366004611083565b6105ee565b6101786102f5366004610fb9565b61060d565b61018e610308366004610f1e565b610683565b6008546101ae906001600160a01b031681565b61015a61032e366004611132565b610721565b6101d9610341366004610fb9565b61074f565b60006001600160e01b03198216630321f74760e01b148061036b575061036b8261078d565b92915050565b60606000805461038090611160565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac90611160565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040e826107dd565b506000828152600460205260409020546001600160a01b031661036b565b61043e8282610439610816565b610825565b5050565b6001600160a01b03821661047157604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104858383610480610816565b610832565b9050836001600160a01b0316816001600160a01b0316146104d3576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610468565b50505050565b6104e161092b565b600880546001600160a01b0319166001600160a01b0383169081179091557fe7784d93cfbfa4408e19577e6cc0436f4dbb51214b70e100905dfce9def88c16610528610816565b6040516001600160a01b03909116815260200160405180910390a250565b610561838383604051806020016040528060008152506105ee565b505050565b600061036b826107dd565b60006001600160a01b03821661059d576040516322718ad960e21b815260006004820152602401610468565b506001600160a01b031660009081526003602052604090205490565b6105c161092b565b6105cb6000610989565b565b60606001805461038090611160565b61043e6105e7610816565b83836109db565b6105f9848484610442565b6104d3610604610816565b85858585610a7a565b600060076000815461061e906111b0565b918290555090506001600160a01b038216817f365b3162cd780731fc55a794b59494d472bc2af701007f581843a70673814698610659610816565b6040516001600160a01b03909116815260200160405180910390a361067e8282610ba5565b919050565b6008546060906001600160a01b0316806106ad575050604080516020810190915260008152919050565b604051636d02a25560e11b8152600481018490526001600160a01b0382169063da0544aa90602401600060405180830381865afa1580156106f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261071a91908101906111c9565b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61075761092b565b6001600160a01b03811661078157604051631e4fbdf760e01b815260006004820152602401610468565b61078a81610989565b50565b60006001600160e01b031982166380ac58cd60e01b14806107be57506001600160e01b03198216635b5e139f60e01b145b8061036b57506301ffc9a760e01b6001600160e01b031983161461036b565b6000818152600260205260408120546001600160a01b03168061036b57604051637e27328960e01b815260048101849052602401610468565b6000610820610bbf565b905090565b6105618383836001610c34565b6000828152600260205260408120546001600160a01b039081169083161561085f5761085f818486610d3a565b6001600160a01b0381161561089d5761087c600085600080610c34565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156108cc576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b610933610816565b6001600160a01b031661094e6006546001600160a01b031690565b6001600160a01b0316146105cb57610964610816565b60405163118cdaa760e01b81526001600160a01b039091166004820152602401610468565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610a0d57604051630b61174360e31b81526001600160a01b0383166004820152602401610468565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610b9e57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610abc908890889087908790600401611240565b6020604051808303816000875af1925050508015610af7575060408051601f3d908101601f19168201909252610af49181019061127d565b60015b610b60573d808015610b25576040519150601f19603f3d011682016040523d82523d6000602084013e610b2a565b606091505b508051600003610b5857604051633250574960e11b81526001600160a01b0385166004820152602401610468565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610b9c57604051633250574960e11b81526001600160a01b0385166004820152602401610468565b505b5050505050565b61043e828260405180602001604052806000815250610d9e565b6000366014336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610bfc5750808210155b15610c2c57600036610c0e838561129a565b610c199282906112ad565b610c22916112d7565b60601c9250505090565b339250505090565b8080610c4857506001600160a01b03821615155b15610d0a576000610c58846107dd565b90506001600160a01b03831615801590610c845750826001600160a01b0316816001600160a01b031614155b8015610c975750610c958184610721565b155b15610cc05760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610468565b8115610d085783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610d45838383610dbd565b610561576001600160a01b038316610d7357604051637e27328960e01b815260048101829052602401610468565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610468565b610da88383610e23565b610561610db3610816565b6000858585610a7a565b60006001600160a01b03831615801590610e1b5750826001600160a01b0316846001600160a01b03161480610df75750610df78484610721565b80610e1b57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610e4d57604051633250574960e11b815260006004820152602401610468565b6000610e5b83836000610832565b90506001600160a01b03811615610561576040516339e3563760e11b815260006004820152602401610468565b6001600160e01b03198116811461078a57600080fd5b600060208284031215610eb057600080fd5b813561071a81610e88565b60005b83811015610ed6578181015183820152602001610ebe565b50506000910152565b60008151808452610ef7816020860160208601610ebb565b601f01601f19169290920160200192915050565b60208152600061071a6020830184610edf565b600060208284031215610f3057600080fd5b5035919050565b6001600160a01b038116811461078a57600080fd5b60008060408385031215610f5f57600080fd5b8235610f6a81610f37565b946020939093013593505050565b600080600060608486031215610f8d57600080fd5b8335610f9881610f37565b92506020840135610fa881610f37565b929592945050506040919091013590565b600060208284031215610fcb57600080fd5b813561071a81610f37565b60008060408385031215610fe957600080fd5b8235610ff481610f37565b91506020830135801515811461100957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561105357611053611014565b604052919050565b600067ffffffffffffffff82111561107557611075611014565b50601f01601f191660200190565b6000806000806080858703121561109957600080fd5b84356110a481610f37565b935060208501356110b481610f37565b925060408501359150606085013567ffffffffffffffff8111156110d757600080fd5b8501601f810187136110e857600080fd5b80356110fb6110f68261105b565b61102a565b81815288602083850101111561111057600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561114557600080fd5b823561115081610f37565b9150602083013561100981610f37565b600181811c9082168061117457607f821691505b60208210810361119457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016111c2576111c261119a565b5060010190565b6000602082840312156111db57600080fd5b815167ffffffffffffffff8111156111f257600080fd5b8201601f8101841361120357600080fd5b80516112116110f68261105b565b81815285602083850101111561122657600080fd5b611237826020830160208601610ebb565b95945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061127390830184610edf565b9695505050505050565b60006020828403121561128f57600080fd5b815161071a81610e88565b8181038181111561036b5761036b61119a565b600080858511156112bd57600080fd5b838611156112ca57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156113045780818660140360031b1b83161692505b50509291505056fea2646970667358221220f9fdd7264436db6a85a4d456887bfa9d3924cb95373a4e5fc40c6b371f983b1064736f6c63430008170033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E45 CODESIZE SUB DUP1 PUSH3 0x1E45 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x7D9 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x4A75696365626F782050726F6A65637473 PUSH1 0x78 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x94AA92868A849EB PUSH1 0xC3 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x92 SWAP2 SWAP1 PUSH3 0x8C1 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0xA1 DUP3 DUP3 PUSH3 0x8C1 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE DUP2 AND PUSH3 0xDA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE5 DUP2 PUSH3 0x10C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH3 0x103 JUMPI PUSH3 0x101 DUP3 PUSH3 0x15E JUMP JUMPDEST POP JUMPDEST POP POP POP PUSH3 0xAD9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD PUSH3 0x171 SWAP1 PUSH3 0x9A3 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 PUSH32 0x365B3162CD780731FC55A794B59494D472BC2AF701007F581843A70673814698 PUSH3 0x1AE PUSH3 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x1D5 DUP3 DUP3 PUSH3 0x1EB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E6 PUSH3 0x211 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x20D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x26D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x14 PUSH3 0x221 CALLER PUSH3 0x297 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x22E JUMPI POP DUP1 DUP3 LT ISZERO JUMPDEST ISZERO PUSH3 0x265 JUMPI PUSH1 0x0 CALLDATASIZE PUSH3 0x243 DUP4 DUP6 PUSH3 0x9BF JUMP JUMPDEST PUSH3 0x250 SWAP3 DUP3 SWAP1 PUSH3 0x9D5 JUMP JUMPDEST PUSH3 0x25B SWAP2 PUSH3 0xA01 JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP SWAP1 JUMP JUMPDEST CALLER SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH3 0x279 DUP4 DUP4 PUSH3 0x2BE JUMP JUMPDEST PUSH3 0x292 PUSH3 0x287 PUSH3 0x1DA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH3 0x328 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A3 PUSH1 0x80 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xD1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F9 DUP4 DUP4 DUP4 PUSH3 0x460 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH3 0x292 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH3 0x459 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH3 0x36D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH3 0xA32 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x3AB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x3A8 SWAP2 DUP2 ADD SWAP1 PUSH3 0xAA6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x419 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH3 0x3DC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x3E1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH3 0x411 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xD1 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH3 0x457 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xD1 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH3 0x490 JUMPI PUSH3 0x490 DUP2 DUP5 DUP7 PUSH3 0x55F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH3 0x4D0 JUMPI PUSH3 0x4AF PUSH1 0x0 DUP6 DUP2 DUP1 PUSH3 0x5C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH3 0x500 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0x56C DUP4 DUP4 DUP4 PUSH3 0x6F7 JUMP JUMPDEST PUSH3 0x292 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x59D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH3 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH3 0xD1 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x5DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH3 0x6C7 JUMPI PUSH1 0x0 PUSH3 0x5F1 DUP5 PUSH3 0x780 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0x61E JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x651 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH3 0x67C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xD1 JUMP JUMPDEST DUP2 ISZERO PUSH3 0x6C5 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0x778 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH3 0x753 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH3 0x778 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH3 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH3 0xD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7FA DUP5 PUSH3 0x7C1 JUMP JUMPDEST SWAP3 POP PUSH3 0x80A PUSH1 0x20 DUP6 ADD PUSH3 0x7C1 JUMP JUMPDEST SWAP2 POP PUSH3 0x81A PUSH1 0x40 DUP6 ADD PUSH3 0x7C1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x84E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x86F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x292 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x8A0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x457 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x8AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x8DD JUMPI PUSH3 0x8DD PUSH3 0x823 JUMP JUMPDEST PUSH3 0x8F5 DUP2 PUSH3 0x8EE DUP5 SLOAD PUSH3 0x839 JUMP JUMPDEST DUP5 PUSH3 0x875 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x92D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x914 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x457 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x95E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x93D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x97D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x9B8 JUMPI PUSH3 0x9B8 PUSH3 0x98D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0x7BB JUMPI PUSH3 0x7BB PUSH3 0x98D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH3 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH3 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP2 PUSH1 0x14 DUP6 LT ISZERO PUSH3 0xA2A JUMPI DUP1 DUP2 DUP7 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE PUSH1 0x20 DUP2 DUP8 AND PUSH1 0x20 DUP6 ADD MSTORE DUP6 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP6 ADD MSTORE DUP5 MLOAD SWAP2 POP DUP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xA82 JUMPI DUP6 DUP2 ADD DUP3 ADD MLOAD DUP6 DUP3 ADD PUSH1 0xA0 ADD MSTORE DUP2 ADD PUSH3 0xA64 JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0xA0 DUP3 DUP6 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH3 0xAD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1342 PUSH3 0xB03 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x224 ADD MSTORE DUP2 DUP2 PUSH2 0x284 ADD MSTORE PUSH2 0xBCF ADD MSTORE PUSH2 0x1342 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC0715888 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xE131FC0C EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x2407497E EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6661ABD EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB9 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x5B9 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x18E PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH2 0x18E PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x321F747 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x36B JUMPI POP PUSH2 0x36B DUP3 PUSH2 0x78D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x1160 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x1160 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E DUP3 PUSH2 0x7DD JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x36B JUMP JUMPDEST PUSH2 0x43E DUP3 DUP3 PUSH2 0x439 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x485 DUP4 DUP4 PUSH2 0x480 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4E1 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xE7784D93CFBFA4408E19577E6CC0436F4DBB51214B70E100905DFCE9DEF88C16 PUSH2 0x528 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x561 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B DUP3 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x59D JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x5CB PUSH1 0x0 PUSH2 0x989 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x43E PUSH2 0x5E7 PUSH2 0x816 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x5F9 DUP5 DUP5 DUP5 PUSH2 0x442 JUMP JUMPDEST PUSH2 0x4D3 PUSH2 0x604 PUSH2 0x816 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD PUSH2 0x61E SWAP1 PUSH2 0x11B0 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 PUSH32 0x365B3162CD780731FC55A794B59494D472BC2AF701007F581843A70673814698 PUSH2 0x659 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x67E DUP3 DUP3 PUSH2 0xBA5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x6AD JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6D02A255 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xDA0544AA SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x71A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x11C9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x757 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x78A DUP2 PUSH2 0x989 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7BE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x36B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x36B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x820 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x561 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x85F JUMPI PUSH2 0x85F DUP2 DUP5 DUP7 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x89D JUMPI PUSH2 0x87C PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x8CC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x933 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x94E PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5CB JUMPI PUSH2 0x964 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xABC SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAF7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAF4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB60 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x14 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xBFC JUMPI POP DUP1 DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0xC2C JUMPI PUSH1 0x0 CALLDATASIZE PUSH2 0xC0E DUP4 DUP6 PUSH2 0x129A JUMP JUMPDEST PUSH2 0xC19 SWAP3 DUP3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH2 0xC22 SWAP2 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP SWAP1 JUMP JUMPDEST CALLER SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xC48 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 PUSH2 0xC58 DUP5 PUSH2 0x7DD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC84 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC97 JUMPI POP PUSH2 0xC95 DUP2 DUP5 PUSH2 0x721 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xD08 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD45 DUP4 DUP4 DUP4 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x561 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0xDA8 DUP4 DUP4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x561 PUSH2 0xDB3 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE1B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xDF7 JUMPI POP PUSH2 0xDF7 DUP5 DUP5 PUSH2 0x721 JUMP JUMPDEST DUP1 PUSH2 0xE1B JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B DUP4 DUP4 PUSH1 0x0 PUSH2 0x832 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x71A DUP2 PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEBE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xEF7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x71A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF6A DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xF98 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xFA8 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x71A DUP2 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xFF4 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1009 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1053 JUMPI PUSH2 0x1053 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1075 PUSH2 0x1014 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1099 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x10A4 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x10B4 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x10FB PUSH2 0x10F6 DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH2 0x102A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP9 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1150 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1009 DUP2 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1174 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1194 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x11C2 JUMPI PUSH2 0x11C2 PUSH2 0x119A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1211 PUSH2 0x10F6 DUP3 PUSH2 0x105B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1237 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1273 SWAP1 DUP4 ADD DUP5 PUSH2 0xEDF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x71A DUP2 PUSH2 0xE88 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH2 0x36B PUSH2 0x119A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x12BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x12CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP2 PUSH1 0x14 DUP6 LT ISZERO PUSH2 0x1304 JUMPI DUP1 DUP2 DUP7 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 REVERT 0xD7 0x26 PREVRANDAO CALLDATASIZE 0xDB PUSH11 0x85A4D456887BFA9D3924CB SWAP6 CALLDATACOPY GASPRICE 0x4E PUSH0 0xC4 0xC PUSH12 0x371F983B1064736F6C634300 ADDMOD OR STOP CALLER ","sourceMap":"601:5472:16:-:0;;;1850:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2022:5;2052:16;1380:113:3;;;;;;;;;;;;;-1:-1:-1;;;1380:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:3;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:3;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1500:37:2;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3437:51:19;3410:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;2088:29:16;::::3;::::0;2084:86:::3;;2133:26;2143:15:::0;2133:9:::3;:26::i;:::-;;2084:86;1850:326:::0;;;601:5472;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;5746:325:16:-;5805:17;5910:5;;5908:7;;;;;:::i;:::-;;;;;-1:-1:-1;5908:7:16;-1:-1:-1;;;;;;5931:66:16;;5908:7;5931:66;5983:12;:10;:12::i;:::-;5931:66;;-1:-1:-1;;;;;3455:32:19;;;3437:51;;3425:2;3410:18;5931:66:16;;;;;;;6037:27;6047:5;6054:9;6037;:27::i;:::-;5746:325;;;:::o;4412:146::-;4491:14;4524:27;:25;:27::i;:::-;4517:34;;4412:146;:::o;10656:100:3:-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;;;:26;;:::i;:::-;10656:100;;:::o;2206:429:2:-;2268:7;2312:8;3483:2;2403:30;2422:10;2403:18;:30::i;:::-;:71;;;;;2455:19;2437:14;:37;;2403:71;2399:230;;;2513:8;;2522:36;2539:19;2522:14;:36;:::i;:::-;2513:47;;;;;:::i;:::-;2505:56;;;:::i;:::-;2497:65;;2490:72;;;;2206:429;:::o;2399:230::-;735:10:8;2593:25:2;;;;2206:429;:::o;10977:207:3:-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;11133:12;:10;:12::i;:::-;11155:1;11159:2;11163:7;11172:4;11099:33;:78::i;:::-;10977:207;;;:::o;1832:137:2:-;1908:4;1944:18;1707:17;;;1624:107;1944:18;-1:-1:-1;;;;;1931:31:2;:9;-1:-1:-1;;;;;1931:31:2;;1924:38;;1832:137;;;:::o;9978:327:3:-;-1:-1:-1;;;;;10045:16:3;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:3;;10114:1;10084:33;;;3437:51:19;3410:18;;10084:33:3;3291:203:19;10041:87:3;10137:21;10161:32;10169:2;10173:7;10137:21;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:3;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:3;;10285:1;10257:31;;;3437:51:19;3410:18;;10257:31:3;3291:203:19;985:924:7;-1:-1:-1;;;;;1165:14:7;;;:18;1161:742;;1203:67;;-1:-1:-1;;;1203:67:7;;-1:-1:-1;;;;;1203:36:7;;;;;:67;;1240:8;;1250:4;;1256:7;;1265:4;;1203:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:67:7;;;;;;;;-1:-1:-1;;1203:67:7;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:6;:13;1577:1;1560:18;1556:323;;1664:39;;-1:-1:-1;;;1664:39:7;;-1:-1:-1;;;;;3455:32:19;;1664:39:7;;;3437:51:19;3410:18;;1664:39:7;3291:203:19;1556:323:7;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;-1:-1:-1;;;;;;1317:51:7;;-1:-1:-1;;;1317:51:7;1313:182;;1437:39;;-1:-1:-1;;;1437:39:7;;-1:-1:-1;;;;;3455:32:19;;1437:39:7;;;3437:51:19;3410:18;;1437:39:7;3291:203:19;1313:182:7;1271:238;1199:694;985:924;;;;;:::o;8861:795:3:-;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:3;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:3;;;9180:256;;9300:48;9317:1;9321:7;9317:1;;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:3;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:3;;;9180:256;-1:-1:-1;;;;;9450:16:3;;;9446:107;;-1:-1:-1;;;;;9510:13:3;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:3;-1:-1:-1;;;;;9563:21:3;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:3:o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:3;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:3;;;;;5840:25:19;;;5813:18;;7321:31:3;5694:177:19;7271:186:3;7398:44;;-1:-1:-1;;;7398:44:3;;-1:-1:-1;;;;;6068:32:19;;7398:44:3;;;6050:51:19;6117:18;;;6110:34;;;6023:18;;7398:44:3;5876:274:19;14794:662:3;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:3;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:3;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:3;:5;-1:-1:-1;;;;;15189:13:3;;;15167:35;:69;;;;-1:-1:-1;;;;;;4038:25:3;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:3;;-1:-1:-1;;;;;3455:32:19;;15263:27:3;;;3437:51:19;3410:18;;15263:27:3;3291:203:19;15163:142:3;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:3;15366:5;-1:-1:-1;;;;;15357:28:3;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:3;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:3;-1:-1:-1;;;;;15420:29:3;;;;;;;;;;14794:662::o;6401:272::-;6504:4;-1:-1:-1;;;;;6539:21:3;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:3;:5;-1:-1:-1;;;;;6577:16:3;;:52;;;-1:-1:-1;;;;;;4038:25:3;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;6597:32;6577:88;;;-1:-1:-1;6033:7:3;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6633:32:3;;;6059:24;;6633:32;6577:88;6520:146;6401:272;-1:-1:-1;;;;6401:272:3:o;16212:241::-;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:3;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:3;;;;;5840:25:19;;;5813:18;;16383:31:3;5694:177:19;16337:88:3;16441:5;16212:241;-1:-1:-1;;16212:241:3:o;14:177:19:-;93:13;;-1:-1:-1;;;;;135:31:19;;125:42;;115:70;;181:1;178;171:12;196:378;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;579:127::-;640:10;635:3;631:20;628:1;621:31;671:4;668:1;661:15;695:4;692:1;685:15;711:380;790:1;786:12;;;;833;;;854:61;;908:4;900:6;896:17;886:27;;854:61;961:2;953:6;950:14;930:18;927:38;924:161;;1007:10;1002:3;998:20;995:1;988:31;1042:4;1039:1;1032:15;1070:4;1067:1;1060:15;924:161;;711:380;;;:::o;1222:543::-;1324:2;1319:3;1316:11;1313:446;;;1360:1;1384:5;1381:1;1374:16;1428:4;1425:1;1415:18;1498:2;1486:10;1482:19;1479:1;1475:27;1469:4;1465:38;1534:4;1522:10;1519:20;1516:47;;;-1:-1:-1;1557:4:19;1516:47;1612:2;1607:3;1603:12;1600:1;1596:20;1590:4;1586:31;1576:41;;1667:82;1685:2;1678:5;1675:13;1667:82;;;1730:17;;;1711:1;1700:13;1667:82;;1941:1345;2061:10;;-1:-1:-1;;;;;2083:30:19;;2080:56;;;2116:18;;:::i;:::-;2145:97;2235:6;2195:38;2227:4;2221:11;2195:38;:::i;:::-;2189:4;2145:97;:::i;:::-;2297:4;;2354:2;2343:14;;2371:1;2366:663;;;;3073:1;3090:6;3087:89;;;-1:-1:-1;3142:19:19;;;3136:26;3087:89;-1:-1:-1;;1898:1:19;1894:11;;;1890:24;1886:29;1876:40;1922:1;1918:11;;;1873:57;3189:81;;2336:944;;2366:663;1169:1;1162:14;;;1206:4;1193:18;;-1:-1:-1;;2402:20:19;;;2520:236;2534:7;2531:1;2528:14;2520:236;;;2623:19;;;2617:26;2602:42;;2715:27;;;;2683:1;2671:14;;;;2550:19;;2520:236;;;2524:3;2784:6;2775:7;2772:19;2769:201;;;2845:19;;;2839:26;-1:-1:-1;;2928:1:19;2924:14;;;2940:3;2920:24;2916:37;2912:42;2897:58;2882:74;;2769:201;-1:-1:-1;;;;;3016:1:19;3000:14;;;2996:22;2983:36;;-1:-1:-1;1941:1345:19:o;3499:127::-;3560:10;3555:3;3551:20;3548:1;3541:31;3591:4;3588:1;3581:15;3615:4;3612:1;3605:15;3631:135;3670:3;3691:17;;;3688:43;;3711:18;;:::i;:::-;-1:-1:-1;3758:1:19;3747:13;;3631:135::o;3771:128::-;3838:9;;;3859:11;;;3856:37;;;3873:18;;:::i;3904:331::-;4009:9;4020;4062:8;4050:10;4047:24;4044:44;;;4084:1;4081;4074:12;4044:44;4113:6;4103:8;4100:20;4097:40;;;4133:1;4130;4123:12;4097:40;-1:-1:-1;;4159:23:19;;;4204:25;;;;;-1:-1:-1;3904:331:19:o;4240:329::-;-1:-1:-1;;;;;;4361:19:19;;4440:11;;;;4471:2;4463:11;;4460:103;;;4550:2;4544;4537:3;4533:2;4529:12;4526:1;4522:20;4518:29;4514:2;4510:38;4506:47;4497:56;;4460:103;;;4240:329;;;;:::o;4574:820::-;4768:4;4814:1;4810;4805:3;4801:11;4797:19;4855:2;4847:6;4843:15;4832:9;4825:34;4878:2;4928;4920:6;4916:15;4911:2;4900:9;4896:18;4889:43;4968:6;4963:2;4952:9;4948:18;4941:34;5011:3;5006:2;4995:9;4991:18;4984:31;5044:6;5038:13;5024:27;;5088:6;5082:3;5071:9;5067:19;5060:35;5113:1;5123:141;5137:6;5134:1;5131:13;5123:141;;;5233:14;;;5229:23;;5223:30;5198:17;;;5217:3;5194:27;5187:67;5152:10;;5123:141;;;5127:3;;5314:1;5308:3;5299:6;5288:9;5284:22;5280:32;5273:43;5384:3;5377:2;5373:7;5368:2;5360:6;5356:15;5352:29;5341:9;5337:45;5333:55;5325:63;;;4574:820;;;;;;;:::o;5399:290::-;5468:6;5521:2;5509:9;5500:7;5496:23;5492:32;5489:52;;;5537:1;5534;5527:12;5489:52;5563:16;;-1:-1:-1;;;;;;5608:32:19;;5598:43;;5588:71;;5655:1;5652;5645:12;5588:71;5678:5;5399:290;-1:-1:-1;;;5399:290:19:o;5876:274::-;601:5472:16;;;;;;;;;;;;;;;;;;;;;;","generatedSources":[{"ast":{"nativeSrc":"0:6152:19","nodeType":"YulBlock","src":"0:6152:19","statements":[{"nativeSrc":"6:3:19","nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nativeSrc":"74:117:19","nodeType":"YulBlock","src":"74:117:19","statements":[{"nativeSrc":"84:22:19","nodeType":"YulAssignment","src":"84:22:19","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:19","nodeType":"YulIdentifier","src":"99:6:19"}],"functionName":{"name":"mload","nativeSrc":"93:5:19","nodeType":"YulIdentifier","src":"93:5:19"},"nativeSrc":"93:13:19","nodeType":"YulFunctionCall","src":"93:13:19"},"variableNames":[{"name":"value","nativeSrc":"84:5:19","nodeType":"YulIdentifier","src":"84:5:19"}]},{"body":{"nativeSrc":"169:16:19","nodeType":"YulBlock","src":"169:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:19","nodeType":"YulLiteral","src":"178:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:19","nodeType":"YulLiteral","src":"181:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:19","nodeType":"YulIdentifier","src":"171:6:19"},"nativeSrc":"171:12:19","nodeType":"YulFunctionCall","src":"171:12:19"},"nativeSrc":"171:12:19","nodeType":"YulExpressionStatement","src":"171:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:19","nodeType":"YulIdentifier","src":"128:5:19"},{"arguments":[{"name":"value","nativeSrc":"139:5:19","nodeType":"YulIdentifier","src":"139:5:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:19","nodeType":"YulLiteral","src":"154:3:19","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:19","nodeType":"YulLiteral","src":"159:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:19","nodeType":"YulIdentifier","src":"150:3:19"},"nativeSrc":"150:11:19","nodeType":"YulFunctionCall","src":"150:11:19"},{"kind":"number","nativeSrc":"163:1:19","nodeType":"YulLiteral","src":"163:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:19","nodeType":"YulIdentifier","src":"146:3:19"},"nativeSrc":"146:19:19","nodeType":"YulFunctionCall","src":"146:19:19"}],"functionName":{"name":"and","nativeSrc":"135:3:19","nodeType":"YulIdentifier","src":"135:3:19"},"nativeSrc":"135:31:19","nodeType":"YulFunctionCall","src":"135:31:19"}],"functionName":{"name":"eq","nativeSrc":"125:2:19","nodeType":"YulIdentifier","src":"125:2:19"},"nativeSrc":"125:42:19","nodeType":"YulFunctionCall","src":"125:42:19"}],"functionName":{"name":"iszero","nativeSrc":"118:6:19","nodeType":"YulIdentifier","src":"118:6:19"},"nativeSrc":"118:50:19","nodeType":"YulFunctionCall","src":"118:50:19"},"nativeSrc":"115:70:19","nodeType":"YulIf","src":"115:70:19"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:19","nodeType":"YulTypedName","src":"53:6:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:19","nodeType":"YulTypedName","src":"64:5:19","type":""}],"src":"14:177:19"},{"body":{"nativeSrc":"311:263:19","nodeType":"YulBlock","src":"311:263:19","statements":[{"body":{"nativeSrc":"357:16:19","nodeType":"YulBlock","src":"357:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"366:1:19","nodeType":"YulLiteral","src":"366:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"369:1:19","nodeType":"YulLiteral","src":"369:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"359:6:19","nodeType":"YulIdentifier","src":"359:6:19"},"nativeSrc":"359:12:19","nodeType":"YulFunctionCall","src":"359:12:19"},"nativeSrc":"359:12:19","nodeType":"YulExpressionStatement","src":"359:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"332:7:19","nodeType":"YulIdentifier","src":"332:7:19"},{"name":"headStart","nativeSrc":"341:9:19","nodeType":"YulIdentifier","src":"341:9:19"}],"functionName":{"name":"sub","nativeSrc":"328:3:19","nodeType":"YulIdentifier","src":"328:3:19"},"nativeSrc":"328:23:19","nodeType":"YulFunctionCall","src":"328:23:19"},{"kind":"number","nativeSrc":"353:2:19","nodeType":"YulLiteral","src":"353:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"324:3:19","nodeType":"YulIdentifier","src":"324:3:19"},"nativeSrc":"324:32:19","nodeType":"YulFunctionCall","src":"324:32:19"},"nativeSrc":"321:52:19","nodeType":"YulIf","src":"321:52:19"},{"nativeSrc":"382:50:19","nodeType":"YulAssignment","src":"382:50:19","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:19","nodeType":"YulIdentifier","src":"422:9:19"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"392:29:19","nodeType":"YulIdentifier","src":"392:29:19"},"nativeSrc":"392:40:19","nodeType":"YulFunctionCall","src":"392:40:19"},"variableNames":[{"name":"value0","nativeSrc":"382:6:19","nodeType":"YulIdentifier","src":"382:6:19"}]},{"nativeSrc":"441:59:19","nodeType":"YulAssignment","src":"441:59:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"485:9:19","nodeType":"YulIdentifier","src":"485:9:19"},{"kind":"number","nativeSrc":"496:2:19","nodeType":"YulLiteral","src":"496:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:19","nodeType":"YulIdentifier","src":"481:3:19"},"nativeSrc":"481:18:19","nodeType":"YulFunctionCall","src":"481:18:19"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"451:29:19","nodeType":"YulIdentifier","src":"451:29:19"},"nativeSrc":"451:49:19","nodeType":"YulFunctionCall","src":"451:49:19"},"variableNames":[{"name":"value1","nativeSrc":"441:6:19","nodeType":"YulIdentifier","src":"441:6:19"}]},{"nativeSrc":"509:59:19","nodeType":"YulAssignment","src":"509:59:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"553:9:19","nodeType":"YulIdentifier","src":"553:9:19"},{"kind":"number","nativeSrc":"564:2:19","nodeType":"YulLiteral","src":"564:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"549:3:19","nodeType":"YulIdentifier","src":"549:3:19"},"nativeSrc":"549:18:19","nodeType":"YulFunctionCall","src":"549:18:19"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"519:29:19","nodeType":"YulIdentifier","src":"519:29:19"},"nativeSrc":"519:49:19","nodeType":"YulFunctionCall","src":"519:49:19"},"variableNames":[{"name":"value2","nativeSrc":"509:6:19","nodeType":"YulIdentifier","src":"509:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nativeSrc":"196:378:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"261:9:19","nodeType":"YulTypedName","src":"261:9:19","type":""},{"name":"dataEnd","nativeSrc":"272:7:19","nodeType":"YulTypedName","src":"272:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"284:6:19","nodeType":"YulTypedName","src":"284:6:19","type":""},{"name":"value1","nativeSrc":"292:6:19","nodeType":"YulTypedName","src":"292:6:19","type":""},{"name":"value2","nativeSrc":"300:6:19","nodeType":"YulTypedName","src":"300:6:19","type":""}],"src":"196:378:19"},{"body":{"nativeSrc":"611:95:19","nodeType":"YulBlock","src":"611:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"628:1:19","nodeType":"YulLiteral","src":"628:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"635:3:19","nodeType":"YulLiteral","src":"635:3:19","type":"","value":"224"},{"kind":"number","nativeSrc":"640:10:19","nodeType":"YulLiteral","src":"640:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"631:3:19","nodeType":"YulIdentifier","src":"631:3:19"},"nativeSrc":"631:20:19","nodeType":"YulFunctionCall","src":"631:20:19"}],"functionName":{"name":"mstore","nativeSrc":"621:6:19","nodeType":"YulIdentifier","src":"621:6:19"},"nativeSrc":"621:31:19","nodeType":"YulFunctionCall","src":"621:31:19"},"nativeSrc":"621:31:19","nodeType":"YulExpressionStatement","src":"621:31:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"668:1:19","nodeType":"YulLiteral","src":"668:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"671:4:19","nodeType":"YulLiteral","src":"671:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"661:6:19","nodeType":"YulIdentifier","src":"661:6:19"},"nativeSrc":"661:15:19","nodeType":"YulFunctionCall","src":"661:15:19"},"nativeSrc":"661:15:19","nodeType":"YulExpressionStatement","src":"661:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"692:1:19","nodeType":"YulLiteral","src":"692:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"695:4:19","nodeType":"YulLiteral","src":"695:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"685:6:19","nodeType":"YulIdentifier","src":"685:6:19"},"nativeSrc":"685:15:19","nodeType":"YulFunctionCall","src":"685:15:19"},"nativeSrc":"685:15:19","nodeType":"YulExpressionStatement","src":"685:15:19"}]},"name":"panic_error_0x41","nativeSrc":"579:127:19","nodeType":"YulFunctionDefinition","src":"579:127:19"},{"body":{"nativeSrc":"766:325:19","nodeType":"YulBlock","src":"766:325:19","statements":[{"nativeSrc":"776:22:19","nodeType":"YulAssignment","src":"776:22:19","value":{"arguments":[{"kind":"number","nativeSrc":"790:1:19","nodeType":"YulLiteral","src":"790:1:19","type":"","value":"1"},{"name":"data","nativeSrc":"793:4:19","nodeType":"YulIdentifier","src":"793:4:19"}],"functionName":{"name":"shr","nativeSrc":"786:3:19","nodeType":"YulIdentifier","src":"786:3:19"},"nativeSrc":"786:12:19","nodeType":"YulFunctionCall","src":"786:12:19"},"variableNames":[{"name":"length","nativeSrc":"776:6:19","nodeType":"YulIdentifier","src":"776:6:19"}]},{"nativeSrc":"807:38:19","nodeType":"YulVariableDeclaration","src":"807:38:19","value":{"arguments":[{"name":"data","nativeSrc":"837:4:19","nodeType":"YulIdentifier","src":"837:4:19"},{"kind":"number","nativeSrc":"843:1:19","nodeType":"YulLiteral","src":"843:1:19","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"833:3:19","nodeType":"YulIdentifier","src":"833:3:19"},"nativeSrc":"833:12:19","nodeType":"YulFunctionCall","src":"833:12:19"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"811:18:19","nodeType":"YulTypedName","src":"811:18:19","type":""}]},{"body":{"nativeSrc":"884:31:19","nodeType":"YulBlock","src":"884:31:19","statements":[{"nativeSrc":"886:27:19","nodeType":"YulAssignment","src":"886:27:19","value":{"arguments":[{"name":"length","nativeSrc":"900:6:19","nodeType":"YulIdentifier","src":"900:6:19"},{"kind":"number","nativeSrc":"908:4:19","nodeType":"YulLiteral","src":"908:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"896:3:19","nodeType":"YulIdentifier","src":"896:3:19"},"nativeSrc":"896:17:19","nodeType":"YulFunctionCall","src":"896:17:19"},"variableNames":[{"name":"length","nativeSrc":"886:6:19","nodeType":"YulIdentifier","src":"886:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"864:18:19","nodeType":"YulIdentifier","src":"864:18:19"}],"functionName":{"name":"iszero","nativeSrc":"857:6:19","nodeType":"YulIdentifier","src":"857:6:19"},"nativeSrc":"857:26:19","nodeType":"YulFunctionCall","src":"857:26:19"},"nativeSrc":"854:61:19","nodeType":"YulIf","src":"854:61:19"},{"body":{"nativeSrc":"974:111:19","nodeType":"YulBlock","src":"974:111:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"995:1:19","nodeType":"YulLiteral","src":"995:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1002:3:19","nodeType":"YulLiteral","src":"1002:3:19","type":"","value":"224"},{"kind":"number","nativeSrc":"1007:10:19","nodeType":"YulLiteral","src":"1007:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"998:3:19","nodeType":"YulIdentifier","src":"998:3:19"},"nativeSrc":"998:20:19","nodeType":"YulFunctionCall","src":"998:20:19"}],"functionName":{"name":"mstore","nativeSrc":"988:6:19","nodeType":"YulIdentifier","src":"988:6:19"},"nativeSrc":"988:31:19","nodeType":"YulFunctionCall","src":"988:31:19"},"nativeSrc":"988:31:19","nodeType":"YulExpressionStatement","src":"988:31:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1039:1:19","nodeType":"YulLiteral","src":"1039:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"1042:4:19","nodeType":"YulLiteral","src":"1042:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1032:6:19","nodeType":"YulIdentifier","src":"1032:6:19"},"nativeSrc":"1032:15:19","nodeType":"YulFunctionCall","src":"1032:15:19"},"nativeSrc":"1032:15:19","nodeType":"YulExpressionStatement","src":"1032:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1067:1:19","nodeType":"YulLiteral","src":"1067:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1070:4:19","nodeType":"YulLiteral","src":"1070:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1060:6:19","nodeType":"YulIdentifier","src":"1060:6:19"},"nativeSrc":"1060:15:19","nodeType":"YulFunctionCall","src":"1060:15:19"},"nativeSrc":"1060:15:19","nodeType":"YulExpressionStatement","src":"1060:15:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"930:18:19","nodeType":"YulIdentifier","src":"930:18:19"},{"arguments":[{"name":"length","nativeSrc":"953:6:19","nodeType":"YulIdentifier","src":"953:6:19"},{"kind":"number","nativeSrc":"961:2:19","nodeType":"YulLiteral","src":"961:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"950:2:19","nodeType":"YulIdentifier","src":"950:2:19"},"nativeSrc":"950:14:19","nodeType":"YulFunctionCall","src":"950:14:19"}],"functionName":{"name":"eq","nativeSrc":"927:2:19","nodeType":"YulIdentifier","src":"927:2:19"},"nativeSrc":"927:38:19","nodeType":"YulFunctionCall","src":"927:38:19"},"nativeSrc":"924:161:19","nodeType":"YulIf","src":"924:161:19"}]},"name":"extract_byte_array_length","nativeSrc":"711:380:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"746:4:19","nodeType":"YulTypedName","src":"746:4:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"755:6:19","nodeType":"YulTypedName","src":"755:6:19","type":""}],"src":"711:380:19"},{"body":{"nativeSrc":"1152:65:19","nodeType":"YulBlock","src":"1152:65:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1169:1:19","nodeType":"YulLiteral","src":"1169:1:19","type":"","value":"0"},{"name":"ptr","nativeSrc":"1172:3:19","nodeType":"YulIdentifier","src":"1172:3:19"}],"functionName":{"name":"mstore","nativeSrc":"1162:6:19","nodeType":"YulIdentifier","src":"1162:6:19"},"nativeSrc":"1162:14:19","nodeType":"YulFunctionCall","src":"1162:14:19"},"nativeSrc":"1162:14:19","nodeType":"YulExpressionStatement","src":"1162:14:19"},{"nativeSrc":"1185:26:19","nodeType":"YulAssignment","src":"1185:26:19","value":{"arguments":[{"kind":"number","nativeSrc":"1203:1:19","nodeType":"YulLiteral","src":"1203:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1206:4:19","nodeType":"YulLiteral","src":"1206:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1193:9:19","nodeType":"YulIdentifier","src":"1193:9:19"},"nativeSrc":"1193:18:19","nodeType":"YulFunctionCall","src":"1193:18:19"},"variableNames":[{"name":"data","nativeSrc":"1185:4:19","nodeType":"YulIdentifier","src":"1185:4:19"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"1096:121:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1135:3:19","nodeType":"YulTypedName","src":"1135:3:19","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1143:4:19","nodeType":"YulTypedName","src":"1143:4:19","type":""}],"src":"1096:121:19"},{"body":{"nativeSrc":"1303:462:19","nodeType":"YulBlock","src":"1303:462:19","statements":[{"body":{"nativeSrc":"1336:423:19","nodeType":"YulBlock","src":"1336:423:19","statements":[{"nativeSrc":"1350:11:19","nodeType":"YulVariableDeclaration","src":"1350:11:19","value":{"kind":"number","nativeSrc":"1360:1:19","nodeType":"YulLiteral","src":"1360:1:19","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"1354:2:19","nodeType":"YulTypedName","src":"1354:2:19","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1381:1:19","nodeType":"YulLiteral","src":"1381:1:19","type":"","value":"0"},{"name":"array","nativeSrc":"1384:5:19","nodeType":"YulIdentifier","src":"1384:5:19"}],"functionName":{"name":"mstore","nativeSrc":"1374:6:19","nodeType":"YulIdentifier","src":"1374:6:19"},"nativeSrc":"1374:16:19","nodeType":"YulFunctionCall","src":"1374:16:19"},"nativeSrc":"1374:16:19","nodeType":"YulExpressionStatement","src":"1374:16:19"},{"nativeSrc":"1403:30:19","nodeType":"YulVariableDeclaration","src":"1403:30:19","value":{"arguments":[{"kind":"number","nativeSrc":"1425:1:19","nodeType":"YulLiteral","src":"1425:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1428:4:19","nodeType":"YulLiteral","src":"1428:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1415:9:19","nodeType":"YulIdentifier","src":"1415:9:19"},"nativeSrc":"1415:18:19","nodeType":"YulFunctionCall","src":"1415:18:19"},"variables":[{"name":"data","nativeSrc":"1407:4:19","nodeType":"YulTypedName","src":"1407:4:19","type":""}]},{"nativeSrc":"1446:57:19","nodeType":"YulVariableDeclaration","src":"1446:57:19","value":{"arguments":[{"name":"data","nativeSrc":"1469:4:19","nodeType":"YulIdentifier","src":"1469:4:19"},{"arguments":[{"kind":"number","nativeSrc":"1479:1:19","nodeType":"YulLiteral","src":"1479:1:19","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"1486:10:19","nodeType":"YulIdentifier","src":"1486:10:19"},{"kind":"number","nativeSrc":"1498:2:19","nodeType":"YulLiteral","src":"1498:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1482:3:19","nodeType":"YulIdentifier","src":"1482:3:19"},"nativeSrc":"1482:19:19","nodeType":"YulFunctionCall","src":"1482:19:19"}],"functionName":{"name":"shr","nativeSrc":"1475:3:19","nodeType":"YulIdentifier","src":"1475:3:19"},"nativeSrc":"1475:27:19","nodeType":"YulFunctionCall","src":"1475:27:19"}],"functionName":{"name":"add","nativeSrc":"1465:3:19","nodeType":"YulIdentifier","src":"1465:3:19"},"nativeSrc":"1465:38:19","nodeType":"YulFunctionCall","src":"1465:38:19"},"variables":[{"name":"deleteStart","nativeSrc":"1450:11:19","nodeType":"YulTypedName","src":"1450:11:19","type":""}]},{"body":{"nativeSrc":"1540:23:19","nodeType":"YulBlock","src":"1540:23:19","statements":[{"nativeSrc":"1542:19:19","nodeType":"YulAssignment","src":"1542:19:19","value":{"name":"data","nativeSrc":"1557:4:19","nodeType":"YulIdentifier","src":"1557:4:19"},"variableNames":[{"name":"deleteStart","nativeSrc":"1542:11:19","nodeType":"YulIdentifier","src":"1542:11:19"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"1522:10:19","nodeType":"YulIdentifier","src":"1522:10:19"},{"kind":"number","nativeSrc":"1534:4:19","nodeType":"YulLiteral","src":"1534:4:19","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"1519:2:19","nodeType":"YulIdentifier","src":"1519:2:19"},"nativeSrc":"1519:20:19","nodeType":"YulFunctionCall","src":"1519:20:19"},"nativeSrc":"1516:47:19","nodeType":"YulIf","src":"1516:47:19"},{"nativeSrc":"1576:41:19","nodeType":"YulVariableDeclaration","src":"1576:41:19","value":{"arguments":[{"name":"data","nativeSrc":"1590:4:19","nodeType":"YulIdentifier","src":"1590:4:19"},{"arguments":[{"kind":"number","nativeSrc":"1600:1:19","nodeType":"YulLiteral","src":"1600:1:19","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1607:3:19","nodeType":"YulIdentifier","src":"1607:3:19"},{"kind":"number","nativeSrc":"1612:2:19","nodeType":"YulLiteral","src":"1612:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1603:3:19","nodeType":"YulIdentifier","src":"1603:3:19"},"nativeSrc":"1603:12:19","nodeType":"YulFunctionCall","src":"1603:12:19"}],"functionName":{"name":"shr","nativeSrc":"1596:3:19","nodeType":"YulIdentifier","src":"1596:3:19"},"nativeSrc":"1596:20:19","nodeType":"YulFunctionCall","src":"1596:20:19"}],"functionName":{"name":"add","nativeSrc":"1586:3:19","nodeType":"YulIdentifier","src":"1586:3:19"},"nativeSrc":"1586:31:19","nodeType":"YulFunctionCall","src":"1586:31:19"},"variables":[{"name":"_2","nativeSrc":"1580:2:19","nodeType":"YulTypedName","src":"1580:2:19","type":""}]},{"nativeSrc":"1630:24:19","nodeType":"YulVariableDeclaration","src":"1630:24:19","value":{"name":"deleteStart","nativeSrc":"1643:11:19","nodeType":"YulIdentifier","src":"1643:11:19"},"variables":[{"name":"start","nativeSrc":"1634:5:19","nodeType":"YulTypedName","src":"1634:5:19","type":""}]},{"body":{"nativeSrc":"1728:21:19","nodeType":"YulBlock","src":"1728:21:19","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1737:5:19","nodeType":"YulIdentifier","src":"1737:5:19"},{"name":"_1","nativeSrc":"1744:2:19","nodeType":"YulIdentifier","src":"1744:2:19"}],"functionName":{"name":"sstore","nativeSrc":"1730:6:19","nodeType":"YulIdentifier","src":"1730:6:19"},"nativeSrc":"1730:17:19","nodeType":"YulFunctionCall","src":"1730:17:19"},"nativeSrc":"1730:17:19","nodeType":"YulExpressionStatement","src":"1730:17:19"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1678:5:19","nodeType":"YulIdentifier","src":"1678:5:19"},{"name":"_2","nativeSrc":"1685:2:19","nodeType":"YulIdentifier","src":"1685:2:19"}],"functionName":{"name":"lt","nativeSrc":"1675:2:19","nodeType":"YulIdentifier","src":"1675:2:19"},"nativeSrc":"1675:13:19","nodeType":"YulFunctionCall","src":"1675:13:19"},"nativeSrc":"1667:82:19","nodeType":"YulForLoop","post":{"nativeSrc":"1689:26:19","nodeType":"YulBlock","src":"1689:26:19","statements":[{"nativeSrc":"1691:22:19","nodeType":"YulAssignment","src":"1691:22:19","value":{"arguments":[{"name":"start","nativeSrc":"1704:5:19","nodeType":"YulIdentifier","src":"1704:5:19"},{"kind":"number","nativeSrc":"1711:1:19","nodeType":"YulLiteral","src":"1711:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1700:3:19","nodeType":"YulIdentifier","src":"1700:3:19"},"nativeSrc":"1700:13:19","nodeType":"YulFunctionCall","src":"1700:13:19"},"variableNames":[{"name":"start","nativeSrc":"1691:5:19","nodeType":"YulIdentifier","src":"1691:5:19"}]}]},"pre":{"nativeSrc":"1671:3:19","nodeType":"YulBlock","src":"1671:3:19","statements":[]},"src":"1667:82:19"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1319:3:19","nodeType":"YulIdentifier","src":"1319:3:19"},{"kind":"number","nativeSrc":"1324:2:19","nodeType":"YulLiteral","src":"1324:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1316:2:19","nodeType":"YulIdentifier","src":"1316:2:19"},"nativeSrc":"1316:11:19","nodeType":"YulFunctionCall","src":"1316:11:19"},"nativeSrc":"1313:446:19","nodeType":"YulIf","src":"1313:446:19"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1222:543:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1275:5:19","nodeType":"YulTypedName","src":"1275:5:19","type":""},{"name":"len","nativeSrc":"1282:3:19","nodeType":"YulTypedName","src":"1282:3:19","type":""},{"name":"startIndex","nativeSrc":"1287:10:19","nodeType":"YulTypedName","src":"1287:10:19","type":""}],"src":"1222:543:19"},{"body":{"nativeSrc":"1855:81:19","nodeType":"YulBlock","src":"1855:81:19","statements":[{"nativeSrc":"1865:65:19","nodeType":"YulAssignment","src":"1865:65:19","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1880:4:19","nodeType":"YulIdentifier","src":"1880:4:19"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1898:1:19","nodeType":"YulLiteral","src":"1898:1:19","type":"","value":"3"},{"name":"len","nativeSrc":"1901:3:19","nodeType":"YulIdentifier","src":"1901:3:19"}],"functionName":{"name":"shl","nativeSrc":"1894:3:19","nodeType":"YulIdentifier","src":"1894:3:19"},"nativeSrc":"1894:11:19","nodeType":"YulFunctionCall","src":"1894:11:19"},{"arguments":[{"kind":"number","nativeSrc":"1911:1:19","nodeType":"YulLiteral","src":"1911:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1907:3:19","nodeType":"YulIdentifier","src":"1907:3:19"},"nativeSrc":"1907:6:19","nodeType":"YulFunctionCall","src":"1907:6:19"}],"functionName":{"name":"shr","nativeSrc":"1890:3:19","nodeType":"YulIdentifier","src":"1890:3:19"},"nativeSrc":"1890:24:19","nodeType":"YulFunctionCall","src":"1890:24:19"}],"functionName":{"name":"not","nativeSrc":"1886:3:19","nodeType":"YulIdentifier","src":"1886:3:19"},"nativeSrc":"1886:29:19","nodeType":"YulFunctionCall","src":"1886:29:19"}],"functionName":{"name":"and","nativeSrc":"1876:3:19","nodeType":"YulIdentifier","src":"1876:3:19"},"nativeSrc":"1876:40:19","nodeType":"YulFunctionCall","src":"1876:40:19"},{"arguments":[{"kind":"number","nativeSrc":"1922:1:19","nodeType":"YulLiteral","src":"1922:1:19","type":"","value":"1"},{"name":"len","nativeSrc":"1925:3:19","nodeType":"YulIdentifier","src":"1925:3:19"}],"functionName":{"name":"shl","nativeSrc":"1918:3:19","nodeType":"YulIdentifier","src":"1918:3:19"},"nativeSrc":"1918:11:19","nodeType":"YulFunctionCall","src":"1918:11:19"}],"functionName":{"name":"or","nativeSrc":"1873:2:19","nodeType":"YulIdentifier","src":"1873:2:19"},"nativeSrc":"1873:57:19","nodeType":"YulFunctionCall","src":"1873:57:19"},"variableNames":[{"name":"used","nativeSrc":"1865:4:19","nodeType":"YulIdentifier","src":"1865:4:19"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1770:166:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1832:4:19","nodeType":"YulTypedName","src":"1832:4:19","type":""},{"name":"len","nativeSrc":"1838:3:19","nodeType":"YulTypedName","src":"1838:3:19","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1846:4:19","nodeType":"YulTypedName","src":"1846:4:19","type":""}],"src":"1770:166:19"},{"body":{"nativeSrc":"2037:1249:19","nodeType":"YulBlock","src":"2037:1249:19","statements":[{"nativeSrc":"2047:24:19","nodeType":"YulVariableDeclaration","src":"2047:24:19","value":{"arguments":[{"name":"src","nativeSrc":"2067:3:19","nodeType":"YulIdentifier","src":"2067:3:19"}],"functionName":{"name":"mload","nativeSrc":"2061:5:19","nodeType":"YulIdentifier","src":"2061:5:19"},"nativeSrc":"2061:10:19","nodeType":"YulFunctionCall","src":"2061:10:19"},"variables":[{"name":"newLen","nativeSrc":"2051:6:19","nodeType":"YulTypedName","src":"2051:6:19","type":""}]},{"body":{"nativeSrc":"2114:22:19","nodeType":"YulBlock","src":"2114:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2116:16:19","nodeType":"YulIdentifier","src":"2116:16:19"},"nativeSrc":"2116:18:19","nodeType":"YulFunctionCall","src":"2116:18:19"},"nativeSrc":"2116:18:19","nodeType":"YulExpressionStatement","src":"2116:18:19"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"2086:6:19","nodeType":"YulIdentifier","src":"2086:6:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2102:2:19","nodeType":"YulLiteral","src":"2102:2:19","type":"","value":"64"},{"kind":"number","nativeSrc":"2106:1:19","nodeType":"YulLiteral","src":"2106:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2098:3:19","nodeType":"YulIdentifier","src":"2098:3:19"},"nativeSrc":"2098:10:19","nodeType":"YulFunctionCall","src":"2098:10:19"},{"kind":"number","nativeSrc":"2110:1:19","nodeType":"YulLiteral","src":"2110:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2094:3:19","nodeType":"YulIdentifier","src":"2094:3:19"},"nativeSrc":"2094:18:19","nodeType":"YulFunctionCall","src":"2094:18:19"}],"functionName":{"name":"gt","nativeSrc":"2083:2:19","nodeType":"YulIdentifier","src":"2083:2:19"},"nativeSrc":"2083:30:19","nodeType":"YulFunctionCall","src":"2083:30:19"},"nativeSrc":"2080:56:19","nodeType":"YulIf","src":"2080:56:19"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2189:4:19","nodeType":"YulIdentifier","src":"2189:4:19"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2227:4:19","nodeType":"YulIdentifier","src":"2227:4:19"}],"functionName":{"name":"sload","nativeSrc":"2221:5:19","nodeType":"YulIdentifier","src":"2221:5:19"},"nativeSrc":"2221:11:19","nodeType":"YulFunctionCall","src":"2221:11:19"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"2195:25:19","nodeType":"YulIdentifier","src":"2195:25:19"},"nativeSrc":"2195:38:19","nodeType":"YulFunctionCall","src":"2195:38:19"},{"name":"newLen","nativeSrc":"2235:6:19","nodeType":"YulIdentifier","src":"2235:6:19"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2145:43:19","nodeType":"YulIdentifier","src":"2145:43:19"},"nativeSrc":"2145:97:19","nodeType":"YulFunctionCall","src":"2145:97:19"},"nativeSrc":"2145:97:19","nodeType":"YulExpressionStatement","src":"2145:97:19"},{"nativeSrc":"2251:18:19","nodeType":"YulVariableDeclaration","src":"2251:18:19","value":{"kind":"number","nativeSrc":"2268:1:19","nodeType":"YulLiteral","src":"2268:1:19","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"2255:9:19","nodeType":"YulTypedName","src":"2255:9:19","type":""}]},{"nativeSrc":"2278:23:19","nodeType":"YulVariableDeclaration","src":"2278:23:19","value":{"kind":"number","nativeSrc":"2297:4:19","nodeType":"YulLiteral","src":"2297:4:19","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"2282:11:19","nodeType":"YulTypedName","src":"2282:11:19","type":""}]},{"nativeSrc":"2310:17:19","nodeType":"YulAssignment","src":"2310:17:19","value":{"kind":"number","nativeSrc":"2323:4:19","nodeType":"YulLiteral","src":"2323:4:19","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"2310:9:19","nodeType":"YulIdentifier","src":"2310:9:19"}]},{"cases":[{"body":{"nativeSrc":"2373:656:19","nodeType":"YulBlock","src":"2373:656:19","statements":[{"nativeSrc":"2387:35:19","nodeType":"YulVariableDeclaration","src":"2387:35:19","value":{"arguments":[{"name":"newLen","nativeSrc":"2406:6:19","nodeType":"YulIdentifier","src":"2406:6:19"},{"arguments":[{"kind":"number","nativeSrc":"2418:2:19","nodeType":"YulLiteral","src":"2418:2:19","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2414:3:19","nodeType":"YulIdentifier","src":"2414:3:19"},"nativeSrc":"2414:7:19","nodeType":"YulFunctionCall","src":"2414:7:19"}],"functionName":{"name":"and","nativeSrc":"2402:3:19","nodeType":"YulIdentifier","src":"2402:3:19"},"nativeSrc":"2402:20:19","nodeType":"YulFunctionCall","src":"2402:20:19"},"variables":[{"name":"loopEnd","nativeSrc":"2391:7:19","nodeType":"YulTypedName","src":"2391:7:19","type":""}]},{"nativeSrc":"2435:49:19","nodeType":"YulVariableDeclaration","src":"2435:49:19","value":{"arguments":[{"name":"slot","nativeSrc":"2479:4:19","nodeType":"YulIdentifier","src":"2479:4:19"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"2449:29:19","nodeType":"YulIdentifier","src":"2449:29:19"},"nativeSrc":"2449:35:19","nodeType":"YulFunctionCall","src":"2449:35:19"},"variables":[{"name":"dstPtr","nativeSrc":"2439:6:19","nodeType":"YulTypedName","src":"2439:6:19","type":""}]},{"nativeSrc":"2497:10:19","nodeType":"YulVariableDeclaration","src":"2497:10:19","value":{"kind":"number","nativeSrc":"2506:1:19","nodeType":"YulLiteral","src":"2506:1:19","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2501:1:19","nodeType":"YulTypedName","src":"2501:1:19","type":""}]},{"body":{"nativeSrc":"2584:172:19","nodeType":"YulBlock","src":"2584:172:19","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2609:6:19","nodeType":"YulIdentifier","src":"2609:6:19"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2627:3:19","nodeType":"YulIdentifier","src":"2627:3:19"},{"name":"srcOffset","nativeSrc":"2632:9:19","nodeType":"YulIdentifier","src":"2632:9:19"}],"functionName":{"name":"add","nativeSrc":"2623:3:19","nodeType":"YulIdentifier","src":"2623:3:19"},"nativeSrc":"2623:19:19","nodeType":"YulFunctionCall","src":"2623:19:19"}],"functionName":{"name":"mload","nativeSrc":"2617:5:19","nodeType":"YulIdentifier","src":"2617:5:19"},"nativeSrc":"2617:26:19","nodeType":"YulFunctionCall","src":"2617:26:19"}],"functionName":{"name":"sstore","nativeSrc":"2602:6:19","nodeType":"YulIdentifier","src":"2602:6:19"},"nativeSrc":"2602:42:19","nodeType":"YulFunctionCall","src":"2602:42:19"},"nativeSrc":"2602:42:19","nodeType":"YulExpressionStatement","src":"2602:42:19"},{"nativeSrc":"2661:24:19","nodeType":"YulAssignment","src":"2661:24:19","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2675:6:19","nodeType":"YulIdentifier","src":"2675:6:19"},{"kind":"number","nativeSrc":"2683:1:19","nodeType":"YulLiteral","src":"2683:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2671:3:19","nodeType":"YulIdentifier","src":"2671:3:19"},"nativeSrc":"2671:14:19","nodeType":"YulFunctionCall","src":"2671:14:19"},"variableNames":[{"name":"dstPtr","nativeSrc":"2661:6:19","nodeType":"YulIdentifier","src":"2661:6:19"}]},{"nativeSrc":"2702:40:19","nodeType":"YulAssignment","src":"2702:40:19","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2719:9:19","nodeType":"YulIdentifier","src":"2719:9:19"},{"name":"srcOffset_1","nativeSrc":"2730:11:19","nodeType":"YulIdentifier","src":"2730:11:19"}],"functionName":{"name":"add","nativeSrc":"2715:3:19","nodeType":"YulIdentifier","src":"2715:3:19"},"nativeSrc":"2715:27:19","nodeType":"YulFunctionCall","src":"2715:27:19"},"variableNames":[{"name":"srcOffset","nativeSrc":"2702:9:19","nodeType":"YulIdentifier","src":"2702:9:19"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2531:1:19","nodeType":"YulIdentifier","src":"2531:1:19"},{"name":"loopEnd","nativeSrc":"2534:7:19","nodeType":"YulIdentifier","src":"2534:7:19"}],"functionName":{"name":"lt","nativeSrc":"2528:2:19","nodeType":"YulIdentifier","src":"2528:2:19"},"nativeSrc":"2528:14:19","nodeType":"YulFunctionCall","src":"2528:14:19"},"nativeSrc":"2520:236:19","nodeType":"YulForLoop","post":{"nativeSrc":"2543:28:19","nodeType":"YulBlock","src":"2543:28:19","statements":[{"nativeSrc":"2545:24:19","nodeType":"YulAssignment","src":"2545:24:19","value":{"arguments":[{"name":"i","nativeSrc":"2554:1:19","nodeType":"YulIdentifier","src":"2554:1:19"},{"name":"srcOffset_1","nativeSrc":"2557:11:19","nodeType":"YulIdentifier","src":"2557:11:19"}],"functionName":{"name":"add","nativeSrc":"2550:3:19","nodeType":"YulIdentifier","src":"2550:3:19"},"nativeSrc":"2550:19:19","nodeType":"YulFunctionCall","src":"2550:19:19"},"variableNames":[{"name":"i","nativeSrc":"2545:1:19","nodeType":"YulIdentifier","src":"2545:1:19"}]}]},"pre":{"nativeSrc":"2524:3:19","nodeType":"YulBlock","src":"2524:3:19","statements":[]},"src":"2520:236:19"},{"body":{"nativeSrc":"2804:166:19","nodeType":"YulBlock","src":"2804:166:19","statements":[{"nativeSrc":"2822:43:19","nodeType":"YulVariableDeclaration","src":"2822:43:19","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2849:3:19","nodeType":"YulIdentifier","src":"2849:3:19"},{"name":"srcOffset","nativeSrc":"2854:9:19","nodeType":"YulIdentifier","src":"2854:9:19"}],"functionName":{"name":"add","nativeSrc":"2845:3:19","nodeType":"YulIdentifier","src":"2845:3:19"},"nativeSrc":"2845:19:19","nodeType":"YulFunctionCall","src":"2845:19:19"}],"functionName":{"name":"mload","nativeSrc":"2839:5:19","nodeType":"YulIdentifier","src":"2839:5:19"},"nativeSrc":"2839:26:19","nodeType":"YulFunctionCall","src":"2839:26:19"},"variables":[{"name":"lastValue","nativeSrc":"2826:9:19","nodeType":"YulTypedName","src":"2826:9:19","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2889:6:19","nodeType":"YulIdentifier","src":"2889:6:19"},{"arguments":[{"name":"lastValue","nativeSrc":"2901:9:19","nodeType":"YulIdentifier","src":"2901:9:19"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2928:1:19","nodeType":"YulLiteral","src":"2928:1:19","type":"","value":"3"},{"name":"newLen","nativeSrc":"2931:6:19","nodeType":"YulIdentifier","src":"2931:6:19"}],"functionName":{"name":"shl","nativeSrc":"2924:3:19","nodeType":"YulIdentifier","src":"2924:3:19"},"nativeSrc":"2924:14:19","nodeType":"YulFunctionCall","src":"2924:14:19"},{"kind":"number","nativeSrc":"2940:3:19","nodeType":"YulLiteral","src":"2940:3:19","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2920:3:19","nodeType":"YulIdentifier","src":"2920:3:19"},"nativeSrc":"2920:24:19","nodeType":"YulFunctionCall","src":"2920:24:19"},{"arguments":[{"kind":"number","nativeSrc":"2950:1:19","nodeType":"YulLiteral","src":"2950:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2946:3:19","nodeType":"YulIdentifier","src":"2946:3:19"},"nativeSrc":"2946:6:19","nodeType":"YulFunctionCall","src":"2946:6:19"}],"functionName":{"name":"shr","nativeSrc":"2916:3:19","nodeType":"YulIdentifier","src":"2916:3:19"},"nativeSrc":"2916:37:19","nodeType":"YulFunctionCall","src":"2916:37:19"}],"functionName":{"name":"not","nativeSrc":"2912:3:19","nodeType":"YulIdentifier","src":"2912:3:19"},"nativeSrc":"2912:42:19","nodeType":"YulFunctionCall","src":"2912:42:19"}],"functionName":{"name":"and","nativeSrc":"2897:3:19","nodeType":"YulIdentifier","src":"2897:3:19"},"nativeSrc":"2897:58:19","nodeType":"YulFunctionCall","src":"2897:58:19"}],"functionName":{"name":"sstore","nativeSrc":"2882:6:19","nodeType":"YulIdentifier","src":"2882:6:19"},"nativeSrc":"2882:74:19","nodeType":"YulFunctionCall","src":"2882:74:19"},"nativeSrc":"2882:74:19","nodeType":"YulExpressionStatement","src":"2882:74:19"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2775:7:19","nodeType":"YulIdentifier","src":"2775:7:19"},{"name":"newLen","nativeSrc":"2784:6:19","nodeType":"YulIdentifier","src":"2784:6:19"}],"functionName":{"name":"lt","nativeSrc":"2772:2:19","nodeType":"YulIdentifier","src":"2772:2:19"},"nativeSrc":"2772:19:19","nodeType":"YulFunctionCall","src":"2772:19:19"},"nativeSrc":"2769:201:19","nodeType":"YulIf","src":"2769:201:19"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2990:4:19","nodeType":"YulIdentifier","src":"2990:4:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3004:1:19","nodeType":"YulLiteral","src":"3004:1:19","type":"","value":"1"},{"name":"newLen","nativeSrc":"3007:6:19","nodeType":"YulIdentifier","src":"3007:6:19"}],"functionName":{"name":"shl","nativeSrc":"3000:3:19","nodeType":"YulIdentifier","src":"3000:3:19"},"nativeSrc":"3000:14:19","nodeType":"YulFunctionCall","src":"3000:14:19"},{"kind":"number","nativeSrc":"3016:1:19","nodeType":"YulLiteral","src":"3016:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2996:3:19","nodeType":"YulIdentifier","src":"2996:3:19"},"nativeSrc":"2996:22:19","nodeType":"YulFunctionCall","src":"2996:22:19"}],"functionName":{"name":"sstore","nativeSrc":"2983:6:19","nodeType":"YulIdentifier","src":"2983:6:19"},"nativeSrc":"2983:36:19","nodeType":"YulFunctionCall","src":"2983:36:19"},"nativeSrc":"2983:36:19","nodeType":"YulExpressionStatement","src":"2983:36:19"}]},"nativeSrc":"2366:663:19","nodeType":"YulCase","src":"2366:663:19","value":{"kind":"number","nativeSrc":"2371:1:19","nodeType":"YulLiteral","src":"2371:1:19","type":"","value":"1"}},{"body":{"nativeSrc":"3046:234:19","nodeType":"YulBlock","src":"3046:234:19","statements":[{"nativeSrc":"3060:14:19","nodeType":"YulVariableDeclaration","src":"3060:14:19","value":{"kind":"number","nativeSrc":"3073:1:19","nodeType":"YulLiteral","src":"3073:1:19","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3064:5:19","nodeType":"YulTypedName","src":"3064:5:19","type":""}]},{"body":{"nativeSrc":"3109:67:19","nodeType":"YulBlock","src":"3109:67:19","statements":[{"nativeSrc":"3127:35:19","nodeType":"YulAssignment","src":"3127:35:19","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3146:3:19","nodeType":"YulIdentifier","src":"3146:3:19"},{"name":"srcOffset","nativeSrc":"3151:9:19","nodeType":"YulIdentifier","src":"3151:9:19"}],"functionName":{"name":"add","nativeSrc":"3142:3:19","nodeType":"YulIdentifier","src":"3142:3:19"},"nativeSrc":"3142:19:19","nodeType":"YulFunctionCall","src":"3142:19:19"}],"functionName":{"name":"mload","nativeSrc":"3136:5:19","nodeType":"YulIdentifier","src":"3136:5:19"},"nativeSrc":"3136:26:19","nodeType":"YulFunctionCall","src":"3136:26:19"},"variableNames":[{"name":"value","nativeSrc":"3127:5:19","nodeType":"YulIdentifier","src":"3127:5:19"}]}]},"condition":{"name":"newLen","nativeSrc":"3090:6:19","nodeType":"YulIdentifier","src":"3090:6:19"},"nativeSrc":"3087:89:19","nodeType":"YulIf","src":"3087:89:19"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3196:4:19","nodeType":"YulIdentifier","src":"3196:4:19"},{"arguments":[{"name":"value","nativeSrc":"3255:5:19","nodeType":"YulIdentifier","src":"3255:5:19"},{"name":"newLen","nativeSrc":"3262:6:19","nodeType":"YulIdentifier","src":"3262:6:19"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3202:52:19","nodeType":"YulIdentifier","src":"3202:52:19"},"nativeSrc":"3202:67:19","nodeType":"YulFunctionCall","src":"3202:67:19"}],"functionName":{"name":"sstore","nativeSrc":"3189:6:19","nodeType":"YulIdentifier","src":"3189:6:19"},"nativeSrc":"3189:81:19","nodeType":"YulFunctionCall","src":"3189:81:19"},"nativeSrc":"3189:81:19","nodeType":"YulExpressionStatement","src":"3189:81:19"}]},"nativeSrc":"3038:242:19","nodeType":"YulCase","src":"3038:242:19","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2346:6:19","nodeType":"YulIdentifier","src":"2346:6:19"},{"kind":"number","nativeSrc":"2354:2:19","nodeType":"YulLiteral","src":"2354:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2343:2:19","nodeType":"YulIdentifier","src":"2343:2:19"},"nativeSrc":"2343:14:19","nodeType":"YulFunctionCall","src":"2343:14:19"},"nativeSrc":"2336:944:19","nodeType":"YulSwitch","src":"2336:944:19"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1941:1345:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2022:4:19","nodeType":"YulTypedName","src":"2022:4:19","type":""},{"name":"src","nativeSrc":"2028:3:19","nodeType":"YulTypedName","src":"2028:3:19","type":""}],"src":"1941:1345:19"},{"body":{"nativeSrc":"3392:102:19","nodeType":"YulBlock","src":"3392:102:19","statements":[{"nativeSrc":"3402:26:19","nodeType":"YulAssignment","src":"3402:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"3414:9:19","nodeType":"YulIdentifier","src":"3414:9:19"},{"kind":"number","nativeSrc":"3425:2:19","nodeType":"YulLiteral","src":"3425:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3410:3:19","nodeType":"YulIdentifier","src":"3410:3:19"},"nativeSrc":"3410:18:19","nodeType":"YulFunctionCall","src":"3410:18:19"},"variableNames":[{"name":"tail","nativeSrc":"3402:4:19","nodeType":"YulIdentifier","src":"3402:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3444:9:19","nodeType":"YulIdentifier","src":"3444:9:19"},{"arguments":[{"name":"value0","nativeSrc":"3459:6:19","nodeType":"YulIdentifier","src":"3459:6:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3475:3:19","nodeType":"YulLiteral","src":"3475:3:19","type":"","value":"160"},{"kind":"number","nativeSrc":"3480:1:19","nodeType":"YulLiteral","src":"3480:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3471:3:19","nodeType":"YulIdentifier","src":"3471:3:19"},"nativeSrc":"3471:11:19","nodeType":"YulFunctionCall","src":"3471:11:19"},{"kind":"number","nativeSrc":"3484:1:19","nodeType":"YulLiteral","src":"3484:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3467:3:19","nodeType":"YulIdentifier","src":"3467:3:19"},"nativeSrc":"3467:19:19","nodeType":"YulFunctionCall","src":"3467:19:19"}],"functionName":{"name":"and","nativeSrc":"3455:3:19","nodeType":"YulIdentifier","src":"3455:3:19"},"nativeSrc":"3455:32:19","nodeType":"YulFunctionCall","src":"3455:32:19"}],"functionName":{"name":"mstore","nativeSrc":"3437:6:19","nodeType":"YulIdentifier","src":"3437:6:19"},"nativeSrc":"3437:51:19","nodeType":"YulFunctionCall","src":"3437:51:19"},"nativeSrc":"3437:51:19","nodeType":"YulExpressionStatement","src":"3437:51:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3291:203:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3361:9:19","nodeType":"YulTypedName","src":"3361:9:19","type":""},{"name":"value0","nativeSrc":"3372:6:19","nodeType":"YulTypedName","src":"3372:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3383:4:19","nodeType":"YulTypedName","src":"3383:4:19","type":""}],"src":"3291:203:19"},{"body":{"nativeSrc":"3531:95:19","nodeType":"YulBlock","src":"3531:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3548:1:19","nodeType":"YulLiteral","src":"3548:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3555:3:19","nodeType":"YulLiteral","src":"3555:3:19","type":"","value":"224"},{"kind":"number","nativeSrc":"3560:10:19","nodeType":"YulLiteral","src":"3560:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3551:3:19","nodeType":"YulIdentifier","src":"3551:3:19"},"nativeSrc":"3551:20:19","nodeType":"YulFunctionCall","src":"3551:20:19"}],"functionName":{"name":"mstore","nativeSrc":"3541:6:19","nodeType":"YulIdentifier","src":"3541:6:19"},"nativeSrc":"3541:31:19","nodeType":"YulFunctionCall","src":"3541:31:19"},"nativeSrc":"3541:31:19","nodeType":"YulExpressionStatement","src":"3541:31:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3588:1:19","nodeType":"YulLiteral","src":"3588:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"3591:4:19","nodeType":"YulLiteral","src":"3591:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3581:6:19","nodeType":"YulIdentifier","src":"3581:6:19"},"nativeSrc":"3581:15:19","nodeType":"YulFunctionCall","src":"3581:15:19"},"nativeSrc":"3581:15:19","nodeType":"YulExpressionStatement","src":"3581:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3612:1:19","nodeType":"YulLiteral","src":"3612:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"3615:4:19","nodeType":"YulLiteral","src":"3615:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3605:6:19","nodeType":"YulIdentifier","src":"3605:6:19"},"nativeSrc":"3605:15:19","nodeType":"YulFunctionCall","src":"3605:15:19"},"nativeSrc":"3605:15:19","nodeType":"YulExpressionStatement","src":"3605:15:19"}]},"name":"panic_error_0x11","nativeSrc":"3499:127:19","nodeType":"YulFunctionDefinition","src":"3499:127:19"},{"body":{"nativeSrc":"3678:88:19","nodeType":"YulBlock","src":"3678:88:19","statements":[{"body":{"nativeSrc":"3709:22:19","nodeType":"YulBlock","src":"3709:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3711:16:19","nodeType":"YulIdentifier","src":"3711:16:19"},"nativeSrc":"3711:18:19","nodeType":"YulFunctionCall","src":"3711:18:19"},"nativeSrc":"3711:18:19","nodeType":"YulExpressionStatement","src":"3711:18:19"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"3694:5:19","nodeType":"YulIdentifier","src":"3694:5:19"},{"arguments":[{"kind":"number","nativeSrc":"3705:1:19","nodeType":"YulLiteral","src":"3705:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3701:3:19","nodeType":"YulIdentifier","src":"3701:3:19"},"nativeSrc":"3701:6:19","nodeType":"YulFunctionCall","src":"3701:6:19"}],"functionName":{"name":"eq","nativeSrc":"3691:2:19","nodeType":"YulIdentifier","src":"3691:2:19"},"nativeSrc":"3691:17:19","nodeType":"YulFunctionCall","src":"3691:17:19"},"nativeSrc":"3688:43:19","nodeType":"YulIf","src":"3688:43:19"},{"nativeSrc":"3740:20:19","nodeType":"YulAssignment","src":"3740:20:19","value":{"arguments":[{"name":"value","nativeSrc":"3751:5:19","nodeType":"YulIdentifier","src":"3751:5:19"},{"kind":"number","nativeSrc":"3758:1:19","nodeType":"YulLiteral","src":"3758:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3747:3:19","nodeType":"YulIdentifier","src":"3747:3:19"},"nativeSrc":"3747:13:19","nodeType":"YulFunctionCall","src":"3747:13:19"},"variableNames":[{"name":"ret","nativeSrc":"3740:3:19","nodeType":"YulIdentifier","src":"3740:3:19"}]}]},"name":"increment_t_uint256","nativeSrc":"3631:135:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3660:5:19","nodeType":"YulTypedName","src":"3660:5:19","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3670:3:19","nodeType":"YulTypedName","src":"3670:3:19","type":""}],"src":"3631:135:19"},{"body":{"nativeSrc":"3820:79:19","nodeType":"YulBlock","src":"3820:79:19","statements":[{"nativeSrc":"3830:17:19","nodeType":"YulAssignment","src":"3830:17:19","value":{"arguments":[{"name":"x","nativeSrc":"3842:1:19","nodeType":"YulIdentifier","src":"3842:1:19"},{"name":"y","nativeSrc":"3845:1:19","nodeType":"YulIdentifier","src":"3845:1:19"}],"functionName":{"name":"sub","nativeSrc":"3838:3:19","nodeType":"YulIdentifier","src":"3838:3:19"},"nativeSrc":"3838:9:19","nodeType":"YulFunctionCall","src":"3838:9:19"},"variableNames":[{"name":"diff","nativeSrc":"3830:4:19","nodeType":"YulIdentifier","src":"3830:4:19"}]},{"body":{"nativeSrc":"3871:22:19","nodeType":"YulBlock","src":"3871:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3873:16:19","nodeType":"YulIdentifier","src":"3873:16:19"},"nativeSrc":"3873:18:19","nodeType":"YulFunctionCall","src":"3873:18:19"},"nativeSrc":"3873:18:19","nodeType":"YulExpressionStatement","src":"3873:18:19"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"3862:4:19","nodeType":"YulIdentifier","src":"3862:4:19"},{"name":"x","nativeSrc":"3868:1:19","nodeType":"YulIdentifier","src":"3868:1:19"}],"functionName":{"name":"gt","nativeSrc":"3859:2:19","nodeType":"YulIdentifier","src":"3859:2:19"},"nativeSrc":"3859:11:19","nodeType":"YulFunctionCall","src":"3859:11:19"},"nativeSrc":"3856:37:19","nodeType":"YulIf","src":"3856:37:19"}]},"name":"checked_sub_t_uint256","nativeSrc":"3771:128:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3802:1:19","nodeType":"YulTypedName","src":"3802:1:19","type":""},{"name":"y","nativeSrc":"3805:1:19","nodeType":"YulTypedName","src":"3805:1:19","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"3811:4:19","nodeType":"YulTypedName","src":"3811:4:19","type":""}],"src":"3771:128:19"},{"body":{"nativeSrc":"4034:201:19","nodeType":"YulBlock","src":"4034:201:19","statements":[{"body":{"nativeSrc":"4072:16:19","nodeType":"YulBlock","src":"4072:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4081:1:19","nodeType":"YulLiteral","src":"4081:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4084:1:19","nodeType":"YulLiteral","src":"4084:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4074:6:19","nodeType":"YulIdentifier","src":"4074:6:19"},"nativeSrc":"4074:12:19","nodeType":"YulFunctionCall","src":"4074:12:19"},"nativeSrc":"4074:12:19","nodeType":"YulExpressionStatement","src":"4074:12:19"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4050:10:19","nodeType":"YulIdentifier","src":"4050:10:19"},{"name":"endIndex","nativeSrc":"4062:8:19","nodeType":"YulIdentifier","src":"4062:8:19"}],"functionName":{"name":"gt","nativeSrc":"4047:2:19","nodeType":"YulIdentifier","src":"4047:2:19"},"nativeSrc":"4047:24:19","nodeType":"YulFunctionCall","src":"4047:24:19"},"nativeSrc":"4044:44:19","nodeType":"YulIf","src":"4044:44:19"},{"body":{"nativeSrc":"4121:16:19","nodeType":"YulBlock","src":"4121:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4130:1:19","nodeType":"YulLiteral","src":"4130:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4133:1:19","nodeType":"YulLiteral","src":"4133:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4123:6:19","nodeType":"YulIdentifier","src":"4123:6:19"},"nativeSrc":"4123:12:19","nodeType":"YulFunctionCall","src":"4123:12:19"},"nativeSrc":"4123:12:19","nodeType":"YulExpressionStatement","src":"4123:12:19"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"4103:8:19","nodeType":"YulIdentifier","src":"4103:8:19"},{"name":"length","nativeSrc":"4113:6:19","nodeType":"YulIdentifier","src":"4113:6:19"}],"functionName":{"name":"gt","nativeSrc":"4100:2:19","nodeType":"YulIdentifier","src":"4100:2:19"},"nativeSrc":"4100:20:19","nodeType":"YulFunctionCall","src":"4100:20:19"},"nativeSrc":"4097:40:19","nodeType":"YulIf","src":"4097:40:19"},{"nativeSrc":"4146:36:19","nodeType":"YulAssignment","src":"4146:36:19","value":{"arguments":[{"name":"offset","nativeSrc":"4163:6:19","nodeType":"YulIdentifier","src":"4163:6:19"},{"name":"startIndex","nativeSrc":"4171:10:19","nodeType":"YulIdentifier","src":"4171:10:19"}],"functionName":{"name":"add","nativeSrc":"4159:3:19","nodeType":"YulIdentifier","src":"4159:3:19"},"nativeSrc":"4159:23:19","nodeType":"YulFunctionCall","src":"4159:23:19"},"variableNames":[{"name":"offsetOut","nativeSrc":"4146:9:19","nodeType":"YulIdentifier","src":"4146:9:19"}]},{"nativeSrc":"4191:38:19","nodeType":"YulAssignment","src":"4191:38:19","value":{"arguments":[{"name":"endIndex","nativeSrc":"4208:8:19","nodeType":"YulIdentifier","src":"4208:8:19"},{"name":"startIndex","nativeSrc":"4218:10:19","nodeType":"YulIdentifier","src":"4218:10:19"}],"functionName":{"name":"sub","nativeSrc":"4204:3:19","nodeType":"YulIdentifier","src":"4204:3:19"},"nativeSrc":"4204:25:19","nodeType":"YulFunctionCall","src":"4204:25:19"},"variableNames":[{"name":"lengthOut","nativeSrc":"4191:9:19","nodeType":"YulIdentifier","src":"4191:9:19"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"3904:331:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3968:6:19","nodeType":"YulTypedName","src":"3968:6:19","type":""},{"name":"length","nativeSrc":"3976:6:19","nodeType":"YulTypedName","src":"3976:6:19","type":""},{"name":"startIndex","nativeSrc":"3984:10:19","nodeType":"YulTypedName","src":"3984:10:19","type":""},{"name":"endIndex","nativeSrc":"3996:8:19","nodeType":"YulTypedName","src":"3996:8:19","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"4009:9:19","nodeType":"YulTypedName","src":"4009:9:19","type":""},{"name":"lengthOut","nativeSrc":"4020:9:19","nodeType":"YulTypedName","src":"4020:9:19","type":""}],"src":"3904:331:19"},{"body":{"nativeSrc":"4341:228:19","nodeType":"YulBlock","src":"4341:228:19","statements":[{"nativeSrc":"4351:29:19","nodeType":"YulVariableDeclaration","src":"4351:29:19","value":{"arguments":[{"name":"array","nativeSrc":"4374:5:19","nodeType":"YulIdentifier","src":"4374:5:19"}],"functionName":{"name":"calldataload","nativeSrc":"4361:12:19","nodeType":"YulIdentifier","src":"4361:12:19"},"nativeSrc":"4361:19:19","nodeType":"YulFunctionCall","src":"4361:19:19"},"variables":[{"name":"_1","nativeSrc":"4355:2:19","nodeType":"YulTypedName","src":"4355:2:19","type":""}]},{"nativeSrc":"4389:33:19","nodeType":"YulVariableDeclaration","src":"4389:33:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4411:2:19","nodeType":"YulLiteral","src":"4411:2:19","type":"","value":"96"},{"kind":"number","nativeSrc":"4415:1:19","nodeType":"YulLiteral","src":"4415:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4407:3:19","nodeType":"YulIdentifier","src":"4407:3:19"},"nativeSrc":"4407:10:19","nodeType":"YulFunctionCall","src":"4407:10:19"},{"kind":"number","nativeSrc":"4419:1:19","nodeType":"YulLiteral","src":"4419:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4403:3:19","nodeType":"YulIdentifier","src":"4403:3:19"},"nativeSrc":"4403:18:19","nodeType":"YulFunctionCall","src":"4403:18:19"}],"functionName":{"name":"not","nativeSrc":"4399:3:19","nodeType":"YulIdentifier","src":"4399:3:19"},"nativeSrc":"4399:23:19","nodeType":"YulFunctionCall","src":"4399:23:19"},"variables":[{"name":"_2","nativeSrc":"4393:2:19","nodeType":"YulTypedName","src":"4393:2:19","type":""}]},{"nativeSrc":"4431:20:19","nodeType":"YulAssignment","src":"4431:20:19","value":{"arguments":[{"name":"_1","nativeSrc":"4444:2:19","nodeType":"YulIdentifier","src":"4444:2:19"},{"name":"_2","nativeSrc":"4448:2:19","nodeType":"YulIdentifier","src":"4448:2:19"}],"functionName":{"name":"and","nativeSrc":"4440:3:19","nodeType":"YulIdentifier","src":"4440:3:19"},"nativeSrc":"4440:11:19","nodeType":"YulFunctionCall","src":"4440:11:19"},"variableNames":[{"name":"value","nativeSrc":"4431:5:19","nodeType":"YulIdentifier","src":"4431:5:19"}]},{"body":{"nativeSrc":"4483:80:19","nodeType":"YulBlock","src":"4483:80:19","statements":[{"nativeSrc":"4497:56:19","nodeType":"YulAssignment","src":"4497:56:19","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4514:2:19","nodeType":"YulIdentifier","src":"4514:2:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4526:1:19","nodeType":"YulLiteral","src":"4526:1:19","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"4533:2:19","nodeType":"YulLiteral","src":"4533:2:19","type":"","value":"20"},{"name":"len","nativeSrc":"4537:3:19","nodeType":"YulIdentifier","src":"4537:3:19"}],"functionName":{"name":"sub","nativeSrc":"4529:3:19","nodeType":"YulIdentifier","src":"4529:3:19"},"nativeSrc":"4529:12:19","nodeType":"YulFunctionCall","src":"4529:12:19"}],"functionName":{"name":"shl","nativeSrc":"4522:3:19","nodeType":"YulIdentifier","src":"4522:3:19"},"nativeSrc":"4522:20:19","nodeType":"YulFunctionCall","src":"4522:20:19"},{"name":"_2","nativeSrc":"4544:2:19","nodeType":"YulIdentifier","src":"4544:2:19"}],"functionName":{"name":"shl","nativeSrc":"4518:3:19","nodeType":"YulIdentifier","src":"4518:3:19"},"nativeSrc":"4518:29:19","nodeType":"YulFunctionCall","src":"4518:29:19"}],"functionName":{"name":"and","nativeSrc":"4510:3:19","nodeType":"YulIdentifier","src":"4510:3:19"},"nativeSrc":"4510:38:19","nodeType":"YulFunctionCall","src":"4510:38:19"},{"name":"_2","nativeSrc":"4550:2:19","nodeType":"YulIdentifier","src":"4550:2:19"}],"functionName":{"name":"and","nativeSrc":"4506:3:19","nodeType":"YulIdentifier","src":"4506:3:19"},"nativeSrc":"4506:47:19","nodeType":"YulFunctionCall","src":"4506:47:19"},"variableNames":[{"name":"value","nativeSrc":"4497:5:19","nodeType":"YulIdentifier","src":"4497:5:19"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4466:3:19","nodeType":"YulIdentifier","src":"4466:3:19"},{"kind":"number","nativeSrc":"4471:2:19","nodeType":"YulLiteral","src":"4471:2:19","type":"","value":"20"}],"functionName":{"name":"lt","nativeSrc":"4463:2:19","nodeType":"YulIdentifier","src":"4463:2:19"},"nativeSrc":"4463:11:19","nodeType":"YulFunctionCall","src":"4463:11:19"},"nativeSrc":"4460:103:19","nodeType":"YulIf","src":"4460:103:19"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20","nativeSrc":"4240:329:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4316:5:19","nodeType":"YulTypedName","src":"4316:5:19","type":""},{"name":"len","nativeSrc":"4323:3:19","nodeType":"YulTypedName","src":"4323:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4331:5:19","nodeType":"YulTypedName","src":"4331:5:19","type":""}],"src":"4240:329:19"},{"body":{"nativeSrc":"4777:617:19","nodeType":"YulBlock","src":"4777:617:19","statements":[{"nativeSrc":"4787:29:19","nodeType":"YulVariableDeclaration","src":"4787:29:19","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4805:3:19","nodeType":"YulLiteral","src":"4805:3:19","type":"","value":"160"},{"kind":"number","nativeSrc":"4810:1:19","nodeType":"YulLiteral","src":"4810:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4801:3:19","nodeType":"YulIdentifier","src":"4801:3:19"},"nativeSrc":"4801:11:19","nodeType":"YulFunctionCall","src":"4801:11:19"},{"kind":"number","nativeSrc":"4814:1:19","nodeType":"YulLiteral","src":"4814:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4797:3:19","nodeType":"YulIdentifier","src":"4797:3:19"},"nativeSrc":"4797:19:19","nodeType":"YulFunctionCall","src":"4797:19:19"},"variables":[{"name":"_1","nativeSrc":"4791:2:19","nodeType":"YulTypedName","src":"4791:2:19","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4832:9:19","nodeType":"YulIdentifier","src":"4832:9:19"},{"arguments":[{"name":"value0","nativeSrc":"4847:6:19","nodeType":"YulIdentifier","src":"4847:6:19"},{"name":"_1","nativeSrc":"4855:2:19","nodeType":"YulIdentifier","src":"4855:2:19"}],"functionName":{"name":"and","nativeSrc":"4843:3:19","nodeType":"YulIdentifier","src":"4843:3:19"},"nativeSrc":"4843:15:19","nodeType":"YulFunctionCall","src":"4843:15:19"}],"functionName":{"name":"mstore","nativeSrc":"4825:6:19","nodeType":"YulIdentifier","src":"4825:6:19"},"nativeSrc":"4825:34:19","nodeType":"YulFunctionCall","src":"4825:34:19"},"nativeSrc":"4825:34:19","nodeType":"YulExpressionStatement","src":"4825:34:19"},{"nativeSrc":"4868:12:19","nodeType":"YulVariableDeclaration","src":"4868:12:19","value":{"kind":"number","nativeSrc":"4878:2:19","nodeType":"YulLiteral","src":"4878:2:19","type":"","value":"32"},"variables":[{"name":"_2","nativeSrc":"4872:2:19","nodeType":"YulTypedName","src":"4872:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4900:9:19","nodeType":"YulIdentifier","src":"4900:9:19"},{"kind":"number","nativeSrc":"4911:2:19","nodeType":"YulLiteral","src":"4911:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4896:3:19","nodeType":"YulIdentifier","src":"4896:3:19"},"nativeSrc":"4896:18:19","nodeType":"YulFunctionCall","src":"4896:18:19"},{"arguments":[{"name":"value1","nativeSrc":"4920:6:19","nodeType":"YulIdentifier","src":"4920:6:19"},{"name":"_1","nativeSrc":"4928:2:19","nodeType":"YulIdentifier","src":"4928:2:19"}],"functionName":{"name":"and","nativeSrc":"4916:3:19","nodeType":"YulIdentifier","src":"4916:3:19"},"nativeSrc":"4916:15:19","nodeType":"YulFunctionCall","src":"4916:15:19"}],"functionName":{"name":"mstore","nativeSrc":"4889:6:19","nodeType":"YulIdentifier","src":"4889:6:19"},"nativeSrc":"4889:43:19","nodeType":"YulFunctionCall","src":"4889:43:19"},"nativeSrc":"4889:43:19","nodeType":"YulExpressionStatement","src":"4889:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4952:9:19","nodeType":"YulIdentifier","src":"4952:9:19"},{"kind":"number","nativeSrc":"4963:2:19","nodeType":"YulLiteral","src":"4963:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4948:3:19","nodeType":"YulIdentifier","src":"4948:3:19"},"nativeSrc":"4948:18:19","nodeType":"YulFunctionCall","src":"4948:18:19"},{"name":"value2","nativeSrc":"4968:6:19","nodeType":"YulIdentifier","src":"4968:6:19"}],"functionName":{"name":"mstore","nativeSrc":"4941:6:19","nodeType":"YulIdentifier","src":"4941:6:19"},"nativeSrc":"4941:34:19","nodeType":"YulFunctionCall","src":"4941:34:19"},"nativeSrc":"4941:34:19","nodeType":"YulExpressionStatement","src":"4941:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4995:9:19","nodeType":"YulIdentifier","src":"4995:9:19"},{"kind":"number","nativeSrc":"5006:2:19","nodeType":"YulLiteral","src":"5006:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4991:3:19","nodeType":"YulIdentifier","src":"4991:3:19"},"nativeSrc":"4991:18:19","nodeType":"YulFunctionCall","src":"4991:18:19"},{"kind":"number","nativeSrc":"5011:3:19","nodeType":"YulLiteral","src":"5011:3:19","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"4984:6:19","nodeType":"YulIdentifier","src":"4984:6:19"},"nativeSrc":"4984:31:19","nodeType":"YulFunctionCall","src":"4984:31:19"},"nativeSrc":"4984:31:19","nodeType":"YulExpressionStatement","src":"4984:31:19"},{"nativeSrc":"5024:27:19","nodeType":"YulVariableDeclaration","src":"5024:27:19","value":{"arguments":[{"name":"value3","nativeSrc":"5044:6:19","nodeType":"YulIdentifier","src":"5044:6:19"}],"functionName":{"name":"mload","nativeSrc":"5038:5:19","nodeType":"YulIdentifier","src":"5038:5:19"},"nativeSrc":"5038:13:19","nodeType":"YulFunctionCall","src":"5038:13:19"},"variables":[{"name":"length","nativeSrc":"5028:6:19","nodeType":"YulTypedName","src":"5028:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5071:9:19","nodeType":"YulIdentifier","src":"5071:9:19"},{"kind":"number","nativeSrc":"5082:3:19","nodeType":"YulLiteral","src":"5082:3:19","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5067:3:19","nodeType":"YulIdentifier","src":"5067:3:19"},"nativeSrc":"5067:19:19","nodeType":"YulFunctionCall","src":"5067:19:19"},{"name":"length","nativeSrc":"5088:6:19","nodeType":"YulIdentifier","src":"5088:6:19"}],"functionName":{"name":"mstore","nativeSrc":"5060:6:19","nodeType":"YulIdentifier","src":"5060:6:19"},"nativeSrc":"5060:35:19","nodeType":"YulFunctionCall","src":"5060:35:19"},"nativeSrc":"5060:35:19","nodeType":"YulExpressionStatement","src":"5060:35:19"},{"nativeSrc":"5104:10:19","nodeType":"YulVariableDeclaration","src":"5104:10:19","value":{"kind":"number","nativeSrc":"5113:1:19","nodeType":"YulLiteral","src":"5113:1:19","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5108:1:19","nodeType":"YulTypedName","src":"5108:1:19","type":""}]},{"body":{"nativeSrc":"5173:91:19","nodeType":"YulBlock","src":"5173:91:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5202:9:19","nodeType":"YulIdentifier","src":"5202:9:19"},{"name":"i","nativeSrc":"5213:1:19","nodeType":"YulIdentifier","src":"5213:1:19"}],"functionName":{"name":"add","nativeSrc":"5198:3:19","nodeType":"YulIdentifier","src":"5198:3:19"},"nativeSrc":"5198:17:19","nodeType":"YulFunctionCall","src":"5198:17:19"},{"kind":"number","nativeSrc":"5217:3:19","nodeType":"YulLiteral","src":"5217:3:19","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5194:3:19","nodeType":"YulIdentifier","src":"5194:3:19"},"nativeSrc":"5194:27:19","nodeType":"YulFunctionCall","src":"5194:27:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"value3","nativeSrc":"5237:6:19","nodeType":"YulIdentifier","src":"5237:6:19"},{"name":"i","nativeSrc":"5245:1:19","nodeType":"YulIdentifier","src":"5245:1:19"}],"functionName":{"name":"add","nativeSrc":"5233:3:19","nodeType":"YulIdentifier","src":"5233:3:19"},"nativeSrc":"5233:14:19","nodeType":"YulFunctionCall","src":"5233:14:19"},{"name":"_2","nativeSrc":"5249:2:19","nodeType":"YulIdentifier","src":"5249:2:19"}],"functionName":{"name":"add","nativeSrc":"5229:3:19","nodeType":"YulIdentifier","src":"5229:3:19"},"nativeSrc":"5229:23:19","nodeType":"YulFunctionCall","src":"5229:23:19"}],"functionName":{"name":"mload","nativeSrc":"5223:5:19","nodeType":"YulIdentifier","src":"5223:5:19"},"nativeSrc":"5223:30:19","nodeType":"YulFunctionCall","src":"5223:30:19"}],"functionName":{"name":"mstore","nativeSrc":"5187:6:19","nodeType":"YulIdentifier","src":"5187:6:19"},"nativeSrc":"5187:67:19","nodeType":"YulFunctionCall","src":"5187:67:19"},"nativeSrc":"5187:67:19","nodeType":"YulExpressionStatement","src":"5187:67:19"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5134:1:19","nodeType":"YulIdentifier","src":"5134:1:19"},{"name":"length","nativeSrc":"5137:6:19","nodeType":"YulIdentifier","src":"5137:6:19"}],"functionName":{"name":"lt","nativeSrc":"5131:2:19","nodeType":"YulIdentifier","src":"5131:2:19"},"nativeSrc":"5131:13:19","nodeType":"YulFunctionCall","src":"5131:13:19"},"nativeSrc":"5123:141:19","nodeType":"YulForLoop","post":{"nativeSrc":"5145:19:19","nodeType":"YulBlock","src":"5145:19:19","statements":[{"nativeSrc":"5147:15:19","nodeType":"YulAssignment","src":"5147:15:19","value":{"arguments":[{"name":"i","nativeSrc":"5156:1:19","nodeType":"YulIdentifier","src":"5156:1:19"},{"name":"_2","nativeSrc":"5159:2:19","nodeType":"YulIdentifier","src":"5159:2:19"}],"functionName":{"name":"add","nativeSrc":"5152:3:19","nodeType":"YulIdentifier","src":"5152:3:19"},"nativeSrc":"5152:10:19","nodeType":"YulFunctionCall","src":"5152:10:19"},"variableNames":[{"name":"i","nativeSrc":"5147:1:19","nodeType":"YulIdentifier","src":"5147:1:19"}]}]},"pre":{"nativeSrc":"5127:3:19","nodeType":"YulBlock","src":"5127:3:19","statements":[]},"src":"5123:141:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5288:9:19","nodeType":"YulIdentifier","src":"5288:9:19"},{"name":"length","nativeSrc":"5299:6:19","nodeType":"YulIdentifier","src":"5299:6:19"}],"functionName":{"name":"add","nativeSrc":"5284:3:19","nodeType":"YulIdentifier","src":"5284:3:19"},"nativeSrc":"5284:22:19","nodeType":"YulFunctionCall","src":"5284:22:19"},{"kind":"number","nativeSrc":"5308:3:19","nodeType":"YulLiteral","src":"5308:3:19","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5280:3:19","nodeType":"YulIdentifier","src":"5280:3:19"},"nativeSrc":"5280:32:19","nodeType":"YulFunctionCall","src":"5280:32:19"},{"kind":"number","nativeSrc":"5314:1:19","nodeType":"YulLiteral","src":"5314:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5273:6:19","nodeType":"YulIdentifier","src":"5273:6:19"},"nativeSrc":"5273:43:19","nodeType":"YulFunctionCall","src":"5273:43:19"},"nativeSrc":"5273:43:19","nodeType":"YulExpressionStatement","src":"5273:43:19"},{"nativeSrc":"5325:63:19","nodeType":"YulAssignment","src":"5325:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5341:9:19","nodeType":"YulIdentifier","src":"5341:9:19"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"5360:6:19","nodeType":"YulIdentifier","src":"5360:6:19"},{"kind":"number","nativeSrc":"5368:2:19","nodeType":"YulLiteral","src":"5368:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5356:3:19","nodeType":"YulIdentifier","src":"5356:3:19"},"nativeSrc":"5356:15:19","nodeType":"YulFunctionCall","src":"5356:15:19"},{"arguments":[{"kind":"number","nativeSrc":"5377:2:19","nodeType":"YulLiteral","src":"5377:2:19","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5373:3:19","nodeType":"YulIdentifier","src":"5373:3:19"},"nativeSrc":"5373:7:19","nodeType":"YulFunctionCall","src":"5373:7:19"}],"functionName":{"name":"and","nativeSrc":"5352:3:19","nodeType":"YulIdentifier","src":"5352:3:19"},"nativeSrc":"5352:29:19","nodeType":"YulFunctionCall","src":"5352:29:19"}],"functionName":{"name":"add","nativeSrc":"5337:3:19","nodeType":"YulIdentifier","src":"5337:3:19"},"nativeSrc":"5337:45:19","nodeType":"YulFunctionCall","src":"5337:45:19"},{"kind":"number","nativeSrc":"5384:3:19","nodeType":"YulLiteral","src":"5384:3:19","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5333:3:19","nodeType":"YulIdentifier","src":"5333:3:19"},"nativeSrc":"5333:55:19","nodeType":"YulFunctionCall","src":"5333:55:19"},"variableNames":[{"name":"tail","nativeSrc":"5325:4:19","nodeType":"YulIdentifier","src":"5325:4:19"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"4574:820:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4722:9:19","nodeType":"YulTypedName","src":"4722:9:19","type":""},{"name":"value3","nativeSrc":"4733:6:19","nodeType":"YulTypedName","src":"4733:6:19","type":""},{"name":"value2","nativeSrc":"4741:6:19","nodeType":"YulTypedName","src":"4741:6:19","type":""},{"name":"value1","nativeSrc":"4749:6:19","nodeType":"YulTypedName","src":"4749:6:19","type":""},{"name":"value0","nativeSrc":"4757:6:19","nodeType":"YulTypedName","src":"4757:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4768:4:19","nodeType":"YulTypedName","src":"4768:4:19","type":""}],"src":"4574:820:19"},{"body":{"nativeSrc":"5479:210:19","nodeType":"YulBlock","src":"5479:210:19","statements":[{"body":{"nativeSrc":"5525:16:19","nodeType":"YulBlock","src":"5525:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5534:1:19","nodeType":"YulLiteral","src":"5534:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5537:1:19","nodeType":"YulLiteral","src":"5537:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5527:6:19","nodeType":"YulIdentifier","src":"5527:6:19"},"nativeSrc":"5527:12:19","nodeType":"YulFunctionCall","src":"5527:12:19"},"nativeSrc":"5527:12:19","nodeType":"YulExpressionStatement","src":"5527:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5500:7:19","nodeType":"YulIdentifier","src":"5500:7:19"},{"name":"headStart","nativeSrc":"5509:9:19","nodeType":"YulIdentifier","src":"5509:9:19"}],"functionName":{"name":"sub","nativeSrc":"5496:3:19","nodeType":"YulIdentifier","src":"5496:3:19"},"nativeSrc":"5496:23:19","nodeType":"YulFunctionCall","src":"5496:23:19"},{"kind":"number","nativeSrc":"5521:2:19","nodeType":"YulLiteral","src":"5521:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5492:3:19","nodeType":"YulIdentifier","src":"5492:3:19"},"nativeSrc":"5492:32:19","nodeType":"YulFunctionCall","src":"5492:32:19"},"nativeSrc":"5489:52:19","nodeType":"YulIf","src":"5489:52:19"},{"nativeSrc":"5550:29:19","nodeType":"YulVariableDeclaration","src":"5550:29:19","value":{"arguments":[{"name":"headStart","nativeSrc":"5569:9:19","nodeType":"YulIdentifier","src":"5569:9:19"}],"functionName":{"name":"mload","nativeSrc":"5563:5:19","nodeType":"YulIdentifier","src":"5563:5:19"},"nativeSrc":"5563:16:19","nodeType":"YulFunctionCall","src":"5563:16:19"},"variables":[{"name":"value","nativeSrc":"5554:5:19","nodeType":"YulTypedName","src":"5554:5:19","type":""}]},{"body":{"nativeSrc":"5643:16:19","nodeType":"YulBlock","src":"5643:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5652:1:19","nodeType":"YulLiteral","src":"5652:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5655:1:19","nodeType":"YulLiteral","src":"5655:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5645:6:19","nodeType":"YulIdentifier","src":"5645:6:19"},"nativeSrc":"5645:12:19","nodeType":"YulFunctionCall","src":"5645:12:19"},"nativeSrc":"5645:12:19","nodeType":"YulExpressionStatement","src":"5645:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5601:5:19","nodeType":"YulIdentifier","src":"5601:5:19"},{"arguments":[{"name":"value","nativeSrc":"5612:5:19","nodeType":"YulIdentifier","src":"5612:5:19"},{"arguments":[{"kind":"number","nativeSrc":"5623:3:19","nodeType":"YulLiteral","src":"5623:3:19","type":"","value":"224"},{"kind":"number","nativeSrc":"5628:10:19","nodeType":"YulLiteral","src":"5628:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"5619:3:19","nodeType":"YulIdentifier","src":"5619:3:19"},"nativeSrc":"5619:20:19","nodeType":"YulFunctionCall","src":"5619:20:19"}],"functionName":{"name":"and","nativeSrc":"5608:3:19","nodeType":"YulIdentifier","src":"5608:3:19"},"nativeSrc":"5608:32:19","nodeType":"YulFunctionCall","src":"5608:32:19"}],"functionName":{"name":"eq","nativeSrc":"5598:2:19","nodeType":"YulIdentifier","src":"5598:2:19"},"nativeSrc":"5598:43:19","nodeType":"YulFunctionCall","src":"5598:43:19"}],"functionName":{"name":"iszero","nativeSrc":"5591:6:19","nodeType":"YulIdentifier","src":"5591:6:19"},"nativeSrc":"5591:51:19","nodeType":"YulFunctionCall","src":"5591:51:19"},"nativeSrc":"5588:71:19","nodeType":"YulIf","src":"5588:71:19"},{"nativeSrc":"5668:15:19","nodeType":"YulAssignment","src":"5668:15:19","value":{"name":"value","nativeSrc":"5678:5:19","nodeType":"YulIdentifier","src":"5678:5:19"},"variableNames":[{"name":"value0","nativeSrc":"5668:6:19","nodeType":"YulIdentifier","src":"5668:6:19"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"5399:290:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5445:9:19","nodeType":"YulTypedName","src":"5445:9:19","type":""},{"name":"dataEnd","nativeSrc":"5456:7:19","nodeType":"YulTypedName","src":"5456:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5468:6:19","nodeType":"YulTypedName","src":"5468:6:19","type":""}],"src":"5399:290:19"},{"body":{"nativeSrc":"5795:76:19","nodeType":"YulBlock","src":"5795:76:19","statements":[{"nativeSrc":"5805:26:19","nodeType":"YulAssignment","src":"5805:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"5817:9:19","nodeType":"YulIdentifier","src":"5817:9:19"},{"kind":"number","nativeSrc":"5828:2:19","nodeType":"YulLiteral","src":"5828:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5813:3:19","nodeType":"YulIdentifier","src":"5813:3:19"},"nativeSrc":"5813:18:19","nodeType":"YulFunctionCall","src":"5813:18:19"},"variableNames":[{"name":"tail","nativeSrc":"5805:4:19","nodeType":"YulIdentifier","src":"5805:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5847:9:19","nodeType":"YulIdentifier","src":"5847:9:19"},{"name":"value0","nativeSrc":"5858:6:19","nodeType":"YulIdentifier","src":"5858:6:19"}],"functionName":{"name":"mstore","nativeSrc":"5840:6:19","nodeType":"YulIdentifier","src":"5840:6:19"},"nativeSrc":"5840:25:19","nodeType":"YulFunctionCall","src":"5840:25:19"},"nativeSrc":"5840:25:19","nodeType":"YulExpressionStatement","src":"5840:25:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"5694:177:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5764:9:19","nodeType":"YulTypedName","src":"5764:9:19","type":""},{"name":"value0","nativeSrc":"5775:6:19","nodeType":"YulTypedName","src":"5775:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5786:4:19","nodeType":"YulTypedName","src":"5786:4:19","type":""}],"src":"5694:177:19"},{"body":{"nativeSrc":"6005:145:19","nodeType":"YulBlock","src":"6005:145:19","statements":[{"nativeSrc":"6015:26:19","nodeType":"YulAssignment","src":"6015:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"6027:9:19","nodeType":"YulIdentifier","src":"6027:9:19"},{"kind":"number","nativeSrc":"6038:2:19","nodeType":"YulLiteral","src":"6038:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6023:3:19","nodeType":"YulIdentifier","src":"6023:3:19"},"nativeSrc":"6023:18:19","nodeType":"YulFunctionCall","src":"6023:18:19"},"variableNames":[{"name":"tail","nativeSrc":"6015:4:19","nodeType":"YulIdentifier","src":"6015:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6057:9:19","nodeType":"YulIdentifier","src":"6057:9:19"},{"arguments":[{"name":"value0","nativeSrc":"6072:6:19","nodeType":"YulIdentifier","src":"6072:6:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6088:3:19","nodeType":"YulLiteral","src":"6088:3:19","type":"","value":"160"},{"kind":"number","nativeSrc":"6093:1:19","nodeType":"YulLiteral","src":"6093:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6084:3:19","nodeType":"YulIdentifier","src":"6084:3:19"},"nativeSrc":"6084:11:19","nodeType":"YulFunctionCall","src":"6084:11:19"},{"kind":"number","nativeSrc":"6097:1:19","nodeType":"YulLiteral","src":"6097:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6080:3:19","nodeType":"YulIdentifier","src":"6080:3:19"},"nativeSrc":"6080:19:19","nodeType":"YulFunctionCall","src":"6080:19:19"}],"functionName":{"name":"and","nativeSrc":"6068:3:19","nodeType":"YulIdentifier","src":"6068:3:19"},"nativeSrc":"6068:32:19","nodeType":"YulFunctionCall","src":"6068:32:19"}],"functionName":{"name":"mstore","nativeSrc":"6050:6:19","nodeType":"YulIdentifier","src":"6050:6:19"},"nativeSrc":"6050:51:19","nodeType":"YulFunctionCall","src":"6050:51:19"},"nativeSrc":"6050:51:19","nodeType":"YulExpressionStatement","src":"6050:51:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6121:9:19","nodeType":"YulIdentifier","src":"6121:9:19"},{"kind":"number","nativeSrc":"6132:2:19","nodeType":"YulLiteral","src":"6132:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6117:3:19","nodeType":"YulIdentifier","src":"6117:3:19"},"nativeSrc":"6117:18:19","nodeType":"YulFunctionCall","src":"6117:18:19"},{"name":"value1","nativeSrc":"6137:6:19","nodeType":"YulIdentifier","src":"6137:6:19"}],"functionName":{"name":"mstore","nativeSrc":"6110:6:19","nodeType":"YulIdentifier","src":"6110:6:19"},"nativeSrc":"6110:34:19","nodeType":"YulFunctionCall","src":"6110:34:19"},"nativeSrc":"6110:34:19","nodeType":"YulExpressionStatement","src":"6110:34:19"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"5876:274:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5966:9:19","nodeType":"YulTypedName","src":"5966:9:19","type":""},{"name":"value1","nativeSrc":"5977:6:19","nodeType":"YulTypedName","src":"5977:6:19","type":""},{"name":"value0","nativeSrc":"5985:6:19","nodeType":"YulTypedName","src":"5985:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5996:4:19","nodeType":"YulTypedName","src":"5996:4:19","type":""}],"src":"5876:274:19"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value\n    {\n        let _1 := calldataload(array)\n        let _2 := not(sub(shl(96, 1), 1))\n        value := and(_1, _2)\n        if lt(len, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, len)), _2)), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        let _2 := 32\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        let length := mload(value3)\n        mstore(add(headStart, 128), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _2) }\n        {\n            mstore(add(add(headStart, i), 160), mload(add(add(value3, i), _2)))\n        }\n        mstore(add(add(headStart, length), 160), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 160)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{}},"deployedBytecode":{"functionDebugData":{"@_approve_1251":{"entryPoint":2085,"id":1251,"parameterSlots":3,"returnSlots":0},"@_approve_1317":{"entryPoint":3124,"id":1317,"parameterSlots":4,"returnSlots":0},"@_checkAuthorized_891":{"entryPoint":3386,"id":891,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2347,"id":84,"parameterSlots":0,"returnSlots":0},"@_contextSuffixLength_426":{"entryPoint":null,"id":426,"parameterSlots":0,"returnSlots":1},"@_contextSuffixLength_6592":{"entryPoint":null,"id":6592,"parameterSlots":0,"returnSlots":1},"@_getApproved_818":{"entryPoint":null,"id":818,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_854":{"entryPoint":3517,"id":854,"parameterSlots":3,"returnSlots":1},"@_mint_1047":{"entryPoint":3619,"id":1047,"parameterSlots":2,"returnSlots":0},"@_msgSender_1636":{"entryPoint":null,"id":1636,"parameterSlots":0,"returnSlots":1},"@_msgSender_375":{"entryPoint":3007,"id":375,"parameterSlots":0,"returnSlots":1},"@_msgSender_6620":{"entryPoint":2070,"id":6620,"parameterSlots":0,"returnSlots":1},"@_ownerOf_805":{"entryPoint":null,"id":805,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1383":{"entryPoint":2013,"id":1383,"parameterSlots":1,"returnSlots":1},"@_safeMint_1062":{"entryPoint":2981,"id":1062,"parameterSlots":2,"returnSlots":0},"@_safeMint_1092":{"entryPoint":3486,"id":1092,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1354":{"entryPoint":2523,"id":1354,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2441,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_997":{"entryPoint":2098,"id":997,"parameterSlots":3,"returnSlots":1},"@approve_648":{"entryPoint":1068,"id":648,"parameterSlots":2,"returnSlots":0},"@balanceOf_556":{"entryPoint":1393,"id":556,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_1623":{"entryPoint":2682,"id":1623,"parameterSlots":5,"returnSlots":0},"@count_6485":{"entryPoint":null,"id":6485,"parameterSlots":0,"returnSlots":0},"@createFor_6668":{"entryPoint":1549,"id":6668,"parameterSlots":1,"returnSlots":1},"@getApproved_665":{"entryPoint":1027,"id":665,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_698":{"entryPoint":1825,"id":698,"parameterSlots":2,"returnSlots":1},"@isTrustedForwarder_328":{"entryPoint":null,"id":328,"parameterSlots":1,"returnSlots":1},"@name_578":{"entryPoint":881,"id":578,"parameterSlots":0,"returnSlots":1},"@ownerOf_569":{"entryPoint":1382,"id":569,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1465,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_762":{"entryPoint":1350,"id":762,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_792":{"entryPoint":1518,"id":792,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_681":{"entryPoint":1500,"id":681,"parameterSlots":2,"returnSlots":0},"@setTokenUriResolver_6641":{"entryPoint":1241,"id":6641,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2929":{"entryPoint":null,"id":2929,"parameterSlots":1,"returnSlots":1},"@supportsInterface_528":{"entryPoint":1933,"id":528,"parameterSlots":1,"returnSlots":1},"@supportsInterface_6547":{"entryPoint":838,"id":6547,"parameterSlots":1,"returnSlots":1},"@symbol_587":{"entryPoint":1485,"id":587,"parameterSlots":0,"returnSlots":1},"@tokenURI_6578":{"entryPoint":1667,"id":6578,"parameterSlots":1,"returnSlots":1},"@tokenUriResolver_6490":{"entryPoint":null,"id":6490,"parameterSlots":0,"returnSlots":0},"@transferFrom_744":{"entryPoint":1090,"id":744,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1871,"id":126,"parameterSlots":1,"returnSlots":0},"@trustedForwarder_314":{"entryPoint":null,"id":314,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4402,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3960,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":4227,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4054,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3916,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3742,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IJBTokenUriResolver_$6727":{"entryPoint":4025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":4553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4672,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IJBTokenUriResolver_$6727__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3851,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":4138,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":4187,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":4781,"id":null,"parameterSlots":4,"returnSlots":2},"checked_sub_t_uint256":{"entryPoint":4762,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20":{"entryPoint":4823,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3771,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4448,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4528,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4506,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4116,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":3895,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":3720,"id":null,"parameterSlots":1,"returnSlots":0}},"object":"608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063b88d4fde1161007c578063b88d4fde146102d4578063c0715888146102e7578063c87b56dd146102fa578063e131fc0c1461030d578063e985e9c514610320578063f2fde38b1461033357600080fd5b8063715018a61461027a5780637da0a877146102825780638da5cb5b146102a857806395d89b41146102b9578063a22cb465146102c157600080fd5b806323b872dd1161010a57806323b872dd146101db5780632407497e146101ee57806342842e0e14610201578063572b6c05146102145780636352211e1461025457806370a082311461026757600080fd5b806301ffc9a71461014757806306661abd1461016f57806306fdde0314610186578063081812fc1461019b578063095ea7b3146101c6575b600080fd5b61015a610155366004610e9e565b610346565b60405190151581526020015b60405180910390f35b61017860075481565b604051908152602001610166565b61018e610371565b6040516101669190610f0b565b6101ae6101a9366004610f1e565b610403565b6040516001600160a01b039091168152602001610166565b6101d96101d4366004610f4c565b61042c565b005b6101d96101e9366004610f78565b610442565b6101d96101fc366004610fb9565b6104d9565b6101d961020f366004610f78565b610546565b61015a610222366004610fb9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6101ae610262366004610f1e565b610566565b610178610275366004610fb9565b610571565b6101d96105b9565b7f00000000000000000000000000000000000000000000000000000000000000006101ae565b6006546001600160a01b03166101ae565b61018e6105cd565b6101d96102cf366004610fd6565b6105dc565b6101d96102e2366004611083565b6105ee565b6101786102f5366004610fb9565b61060d565b61018e610308366004610f1e565b610683565b6008546101ae906001600160a01b031681565b61015a61032e366004611132565b610721565b6101d9610341366004610fb9565b61074f565b60006001600160e01b03198216630321f74760e01b148061036b575061036b8261078d565b92915050565b60606000805461038090611160565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac90611160565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040e826107dd565b506000828152600460205260409020546001600160a01b031661036b565b61043e8282610439610816565b610825565b5050565b6001600160a01b03821661047157604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104858383610480610816565b610832565b9050836001600160a01b0316816001600160a01b0316146104d3576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610468565b50505050565b6104e161092b565b600880546001600160a01b0319166001600160a01b0383169081179091557fe7784d93cfbfa4408e19577e6cc0436f4dbb51214b70e100905dfce9def88c16610528610816565b6040516001600160a01b03909116815260200160405180910390a250565b610561838383604051806020016040528060008152506105ee565b505050565b600061036b826107dd565b60006001600160a01b03821661059d576040516322718ad960e21b815260006004820152602401610468565b506001600160a01b031660009081526003602052604090205490565b6105c161092b565b6105cb6000610989565b565b60606001805461038090611160565b61043e6105e7610816565b83836109db565b6105f9848484610442565b6104d3610604610816565b85858585610a7a565b600060076000815461061e906111b0565b918290555090506001600160a01b038216817f365b3162cd780731fc55a794b59494d472bc2af701007f581843a70673814698610659610816565b6040516001600160a01b03909116815260200160405180910390a361067e8282610ba5565b919050565b6008546060906001600160a01b0316806106ad575050604080516020810190915260008152919050565b604051636d02a25560e11b8152600481018490526001600160a01b0382169063da0544aa90602401600060405180830381865afa1580156106f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261071a91908101906111c9565b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61075761092b565b6001600160a01b03811661078157604051631e4fbdf760e01b815260006004820152602401610468565b61078a81610989565b50565b60006001600160e01b031982166380ac58cd60e01b14806107be57506001600160e01b03198216635b5e139f60e01b145b8061036b57506301ffc9a760e01b6001600160e01b031983161461036b565b6000818152600260205260408120546001600160a01b03168061036b57604051637e27328960e01b815260048101849052602401610468565b6000610820610bbf565b905090565b6105618383836001610c34565b6000828152600260205260408120546001600160a01b039081169083161561085f5761085f818486610d3a565b6001600160a01b0381161561089d5761087c600085600080610c34565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156108cc576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b610933610816565b6001600160a01b031661094e6006546001600160a01b031690565b6001600160a01b0316146105cb57610964610816565b60405163118cdaa760e01b81526001600160a01b039091166004820152602401610468565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610a0d57604051630b61174360e31b81526001600160a01b0383166004820152602401610468565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610b9e57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610abc908890889087908790600401611240565b6020604051808303816000875af1925050508015610af7575060408051601f3d908101601f19168201909252610af49181019061127d565b60015b610b60573d808015610b25576040519150601f19603f3d011682016040523d82523d6000602084013e610b2a565b606091505b508051600003610b5857604051633250574960e11b81526001600160a01b0385166004820152602401610468565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610b9c57604051633250574960e11b81526001600160a01b0385166004820152602401610468565b505b5050505050565b61043e828260405180602001604052806000815250610d9e565b6000366014336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610bfc5750808210155b15610c2c57600036610c0e838561129a565b610c199282906112ad565b610c22916112d7565b60601c9250505090565b339250505090565b8080610c4857506001600160a01b03821615155b15610d0a576000610c58846107dd565b90506001600160a01b03831615801590610c845750826001600160a01b0316816001600160a01b031614155b8015610c975750610c958184610721565b155b15610cc05760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610468565b8115610d085783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610d45838383610dbd565b610561576001600160a01b038316610d7357604051637e27328960e01b815260048101829052602401610468565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610468565b610da88383610e23565b610561610db3610816565b6000858585610a7a565b60006001600160a01b03831615801590610e1b5750826001600160a01b0316846001600160a01b03161480610df75750610df78484610721565b80610e1b57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610e4d57604051633250574960e11b815260006004820152602401610468565b6000610e5b83836000610832565b90506001600160a01b03811615610561576040516339e3563760e11b815260006004820152602401610468565b6001600160e01b03198116811461078a57600080fd5b600060208284031215610eb057600080fd5b813561071a81610e88565b60005b83811015610ed6578181015183820152602001610ebe565b50506000910152565b60008151808452610ef7816020860160208601610ebb565b601f01601f19169290920160200192915050565b60208152600061071a6020830184610edf565b600060208284031215610f3057600080fd5b5035919050565b6001600160a01b038116811461078a57600080fd5b60008060408385031215610f5f57600080fd5b8235610f6a81610f37565b946020939093013593505050565b600080600060608486031215610f8d57600080fd5b8335610f9881610f37565b92506020840135610fa881610f37565b929592945050506040919091013590565b600060208284031215610fcb57600080fd5b813561071a81610f37565b60008060408385031215610fe957600080fd5b8235610ff481610f37565b91506020830135801515811461100957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561105357611053611014565b604052919050565b600067ffffffffffffffff82111561107557611075611014565b50601f01601f191660200190565b6000806000806080858703121561109957600080fd5b84356110a481610f37565b935060208501356110b481610f37565b925060408501359150606085013567ffffffffffffffff8111156110d757600080fd5b8501601f810187136110e857600080fd5b80356110fb6110f68261105b565b61102a565b81815288602083850101111561111057600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561114557600080fd5b823561115081610f37565b9150602083013561100981610f37565b600181811c9082168061117457607f821691505b60208210810361119457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016111c2576111c261119a565b5060010190565b6000602082840312156111db57600080fd5b815167ffffffffffffffff8111156111f257600080fd5b8201601f8101841361120357600080fd5b80516112116110f68261105b565b81815285602083850101111561122657600080fd5b611237826020830160208601610ebb565b95945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061127390830184610edf565b9695505050505050565b60006020828403121561128f57600080fd5b815161071a81610e88565b8181038181111561036b5761036b61119a565b600080858511156112bd57600080fd5b838611156112ca57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156113045780818660140360031b1b83161692505b50509291505056fea2646970667358221220f9fdd7264436db6a85a4d456887bfa9d3924cb95373a4e5fc40c6b371f983b1064736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC0715888 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xE131FC0C EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x2407497E EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6661ABD EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB9 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x5B9 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x18E PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH2 0x18E PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x321F747 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x36B JUMPI POP PUSH2 0x36B DUP3 PUSH2 0x78D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x1160 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x1160 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E DUP3 PUSH2 0x7DD JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x36B JUMP JUMPDEST PUSH2 0x43E DUP3 DUP3 PUSH2 0x439 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x485 DUP4 DUP4 PUSH2 0x480 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4E1 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xE7784D93CFBFA4408E19577E6CC0436F4DBB51214B70E100905DFCE9DEF88C16 PUSH2 0x528 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x561 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B DUP3 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x59D JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x5CB PUSH1 0x0 PUSH2 0x989 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x43E PUSH2 0x5E7 PUSH2 0x816 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x5F9 DUP5 DUP5 DUP5 PUSH2 0x442 JUMP JUMPDEST PUSH2 0x4D3 PUSH2 0x604 PUSH2 0x816 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD PUSH2 0x61E SWAP1 PUSH2 0x11B0 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 PUSH32 0x365B3162CD780731FC55A794B59494D472BC2AF701007F581843A70673814698 PUSH2 0x659 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x67E DUP3 DUP3 PUSH2 0xBA5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x6AD JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6D02A255 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xDA0544AA SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x71A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x11C9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x757 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x78A DUP2 PUSH2 0x989 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7BE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x36B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x36B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x820 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x561 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x85F JUMPI PUSH2 0x85F DUP2 DUP5 DUP7 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x89D JUMPI PUSH2 0x87C PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x8CC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x933 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x94E PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5CB JUMPI PUSH2 0x964 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xABC SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAF7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAF4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB60 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x14 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xBFC JUMPI POP DUP1 DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0xC2C JUMPI PUSH1 0x0 CALLDATASIZE PUSH2 0xC0E DUP4 DUP6 PUSH2 0x129A JUMP JUMPDEST PUSH2 0xC19 SWAP3 DUP3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH2 0xC22 SWAP2 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP SWAP1 JUMP JUMPDEST CALLER SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xC48 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 PUSH2 0xC58 DUP5 PUSH2 0x7DD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC84 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC97 JUMPI POP PUSH2 0xC95 DUP2 DUP5 PUSH2 0x721 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xD08 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD45 DUP4 DUP4 DUP4 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x561 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0xDA8 DUP4 DUP4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x561 PUSH2 0xDB3 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE1B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xDF7 JUMPI POP PUSH2 0xDF7 DUP5 DUP5 PUSH2 0x721 JUMP JUMPDEST DUP1 PUSH2 0xE1B JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B DUP4 DUP4 PUSH1 0x0 PUSH2 0x832 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x71A DUP2 PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEBE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xEF7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x71A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF6A DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xF98 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xFA8 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x71A DUP2 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xFF4 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1009 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1053 JUMPI PUSH2 0x1053 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1075 PUSH2 0x1014 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1099 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x10A4 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x10B4 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x10FB PUSH2 0x10F6 DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH2 0x102A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP9 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1150 DUP2 PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1009 DUP2 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1174 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1194 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x11C2 JUMPI PUSH2 0x11C2 PUSH2 0x119A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1211 PUSH2 0x10F6 DUP3 PUSH2 0x105B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1237 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1273 SWAP1 DUP4 ADD DUP5 PUSH2 0xEDF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x71A DUP2 PUSH2 0xE88 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH2 0x36B PUSH2 0x119A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x12BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x12CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP2 PUSH1 0x14 DUP6 LT ISZERO PUSH2 0x1304 JUMPI DUP1 DUP2 DUP7 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 REVERT 0xD7 0x26 PREVRANDAO CALLDATASIZE 0xDB PUSH11 0x85A4D456887BFA9D3924CB SWAP6 CALLDATACOPY GASPRICE 0x4E PUSH0 0xC4 0xC PUSH12 0x371F983B1064736F6C634300 ADDMOD OR STOP CALLER ","sourceMap":"601:5472:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:216;;;;;;:::i;:::-;;:::i;:::-;;;565:14:19;;558:22;540:41;;528:2;513:18;2702:216:16;;;;;;;;1161:29;;;;;;;;;738:25:19;;;726:2;711:18;1161:29:16;592:177:19;2364:89:3;;;:::i;:::-;;;;;;;:::i;3496:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1879:32:19;;;1861:51;;1849:2;1834:18;3496:154:3;1715:203:19;3322:113:3;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;:::i;:::-;;:::i;4948:245:16:-;;;;;;:::i;:::-;;:::i;4786:132:3:-;;;;;;:::i;:::-;;:::i;1832:137:2:-;;;;;;:::i;:::-;1707:17;-1:-1:-1;;;;;1931:31:2;;;;;;;1832:137;2184:118:3;;;;;;:::i;:::-;;:::i;1919:208::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1624:107:2:-;1707:17;1624:107;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2517:93:3;;;:::i;3717:144::-;;;;;;:::i;:::-;;:::i;4984:233::-;;;;;;:::i;:::-;;:::i;5746:325:16:-;;;;;;:::i;:::-;;:::i;3143:391::-;;;;;;:::i;:::-;;:::i;1271:52::-;;;;;-1:-1:-1;;;;;1271:52:16;;;3927:153:3;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2702:216:16:-;2804:4;-1:-1:-1;;;;;;2827:44:16;;-1:-1:-1;;;2827:44:16;;:84;;;2875:36;2899:11;2875:23;:36::i;:::-;2820:91;2702:216;-1:-1:-1;;2702:216:16:o;2364:89:3:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:3;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:3;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;4142:578::-;-1:-1:-1;;;;;4236:16:3;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:3;;4305:1;4275:33;;;1861:51:19;1834:18;;4275:33:3;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:3;:13;-1:-1:-1;;;;;4609:21:3;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:3;;-1:-1:-1;;;;;6689:15:19;;;4653:50:3;;;6671:34:19;6721:18;;;6714:34;;;6784:15;;6764:18;;;6757:43;6606:18;;4653:50:3;6431:375:19;4605:109:3;4222:498;4142:578;;;:::o;4948:245:16:-;1531:13:0;:11;:13::i;:::-;5080:16:16::1;:27:::0;;-1:-1:-1;;;;;;5080:27:16::1;-1:-1:-1::0;;;;;5080:27:16;::::1;::::0;;::::1;::::0;;;5123:63:::1;5172:12;:10;:12::i;:::-;5123:63;::::0;-1:-1:-1;;;;;1879:32:19;;;1861:51;;1849:2;1834:18;5123:63:16::1;;;;;;;4948:245:::0;:::o;4786:132:3:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;1919:208::-;1982:7;-1:-1:-1;;;;;2005:19:3;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:3;;2074:1;2047:30;;;1861:51:19;1834:18;;2047:30:3;1715:203:19;2001:87:3;-1:-1:-1;;;;;;2104:16:3;;;;;:9;:16;;;;;;;1919:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2517:93:3:-;2564:13;2596:7;2589:14;;;;;:::i;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;5746:325:16:-;5805:17;5910:5;;5908:7;;;;;:::i;:::-;;;;;-1:-1:-1;5908:7:16;-1:-1:-1;;;;;;5931:66:16;;5908:7;5931:66;5983:12;:10;:12::i;:::-;5931:66;;-1:-1:-1;;;;;1879:32:19;;;1861:51;;1849:2;1834:18;5931:66:16;;;;;;;6037:27;6047:5;6054:9;6037;:27::i;:::-;5746:325;;;:::o;3143:391::-;3311:16;;3210:13;;-1:-1:-1;;;;;3311:16:16;;3389:58;;-1:-1:-1;;3438:9:16;;;;;;;;;-1:-1:-1;3438:9:16;;;3143:391;-1:-1:-1;3143:391:16:o;3389:58::-;3501:26;;-1:-1:-1;;;3501:26:16;;;;;738:25:19;;;-1:-1:-1;;;;;3501:15:16;;;;;711:18:19;;3501:26:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3501:26:16;;;;;;;;;;;;:::i;:::-;3494:33;3143:391;-1:-1:-1;;;3143:391:16:o;3927:153:3:-;-1:-1:-1;;;;;4038:25:3;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1861:51:19::0;1834:18;;2672:31:0::1;1715:203:19::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1560:300:3:-;1662:4;-1:-1:-1;;;;;;1697:40:3;;-1:-1:-1;;;1697:40:3;;:104;;-1:-1:-1;;;;;;;1753:48:3;;-1:-1:-1;;;1753:48:3;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:11;;;1817:36:3;763:146:11;16212:241:3;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:3;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:3;;;;;738:25:19;;;711:18;;16383:31:3;592:177:19;4412:146:16;4491:14;4524:27;:25;:27::i;:::-;4517:34;;4412:146;:::o;14492:120:3:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;8861:795::-;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:3;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:3;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:3;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:3;;;9180:256;-1:-1:-1;;;;;9450:16:3;;;9446:107;;-1:-1:-1;;;;;9510:13:3;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:3;-1:-1:-1;;;;;9563:21:3;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:3:o;1796:162:0:-;1866:12;:10;:12::i;:::-;-1:-1:-1;;;;;1855:23:0;:7;1710:6;;-1:-1:-1;;;;;1710:6:0;;1638:85;1855:7;-1:-1:-1;;;;;1855:23:0;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;-1:-1:-1;;;1901:40:0;;-1:-1:-1;;;;;1879:32:19;;;1901:40:0;;;1861:51:19;1834:18;;1901:40:0;1715:203:19;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15665:312:3:-;-1:-1:-1;;;;;15772:22:3;;15768:91;;15817:31;;-1:-1:-1;;;15817:31:3;;-1:-1:-1;;;;;1879:32:19;;15817:31:3;;;1861:51:19;1834:18;;15817:31:3;1715:203:19;15768:91:3;-1:-1:-1;;;;;15868:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15868:46:3;;;;;;;;;;15929:41;;540::19;;;15929::3;;513:18:19;15929:41:3;;;;;;;15665:312;;;:::o;985:924:7:-;-1:-1:-1;;;;;1165:14:7;;;:18;1161:742;;1203:67;;-1:-1:-1;;;1203:67:7;;-1:-1:-1;;;;;1203:36:7;;;;;:67;;1240:8;;1250:4;;1256:7;;1265:4;;1203:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:67:7;;;;;;;;-1:-1:-1;;1203:67:7;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:6;:13;1577:1;1560:18;1556:323;;1664:39;;-1:-1:-1;;;1664:39:7;;-1:-1:-1;;;;;1879:32:19;;1664:39:7;;;1861:51:19;1834:18;;1664:39:7;1715:203:19;1556:323:7;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;-1:-1:-1;;;;;;1317:51:7;;-1:-1:-1;;;1317:51:7;1313:182;;1437:39;;-1:-1:-1;;;1437:39:7;;-1:-1:-1;;;;;1879:32:19;;1437:39:7;;;1861:51:19;1834:18;;1437:39:7;1715:203:19;1313:182:7;1271:238;1199:694;985:924;;;;;:::o;10656:100:3:-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;2206:429:2:-;2268:7;2312:8;3483:2;2422:10;-1:-1:-1;;;;;1707:17:2;1931:31;;2403:71;;;;;2455:19;2437:14;:37;;2403:71;2399:230;;;2513:8;;2522:36;2539:19;2522:14;:36;:::i;:::-;2513:47;;;;;:::i;:::-;2505:56;;;:::i;:::-;2497:65;;2490:72;;;;2206:429;:::o;2399:230::-;735:10:8;2593:25:2;;;;2206:429;:::o;14794:662:3:-;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:3;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:3;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:3;:5;-1:-1:-1;;;;;15189:13:3;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:3;;-1:-1:-1;;;;;1879:32:19;;15263:27:3;;;1861:51:19;1834:18;;15263:27:3;1715:203:19;15163:142:3;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:3;15366:5;-1:-1:-1;;;;;15357:28:3;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:3;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:3;-1:-1:-1;;;;;15420:29:3;;;;;;;;;;14794:662::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:3;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:3;;;;;738:25:19;;;711:18;;7321:31:3;592:177:19;7271:186:3;7398:44;;-1:-1:-1;;;7398:44:3;;-1:-1:-1;;;;;9487:32:19;;7398:44:3;;;9469:51:19;9536:18;;;9529:34;;;9442:18;;7398:44:3;9295:274:19;10977:207:3;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;11133:12;:10;:12::i;:::-;11155:1;11159:2;11163:7;11172:4;11099:33;:78::i;6401:272::-;6504:4;-1:-1:-1;;;;;6539:21:3;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:3;:5;-1:-1:-1;;;;;6577:16:3;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;6033:7:3;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6633:32:3;;;6059:24;;6633:32;6577:88;6520:146;6401:272;-1:-1:-1;;;;6401:272:3:o;9978:327::-;-1:-1:-1;;;;;10045:16:3;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:3;;10114:1;10084:33;;;1861:51:19;1834:18;;10084:33:3;1715:203:19;10041:87:3;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:3;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:3;;10285:1;10257:31;;;1861:51:19;1834:18;;10257:31:3;1715:203:19;14:131;-1:-1:-1;;;;;;88:32:19;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;774:250::-;859:1;869:113;883:6;880:1;877:13;869:113;;;959:11;;;953:18;940:11;;;933:39;905:2;898:10;869:113;;;-1:-1:-1;;1016:1:19;998:16;;991:27;774:250::o;1029:271::-;1071:3;1109:5;1103:12;1136:6;1131:3;1124:19;1152:76;1221:6;1214:4;1209:3;1205:14;1198:4;1191:5;1187:16;1152:76;:::i;:::-;1282:2;1261:15;-1:-1:-1;;1257:29:19;1248:39;;;;1289:4;1244:50;;1029:271;-1:-1:-1;;1029:271:19:o;1305:220::-;1454:2;1443:9;1436:21;1417:4;1474:45;1515:2;1504:9;1500:18;1492:6;1474:45;:::i;1530:180::-;1589:6;1642:2;1630:9;1621:7;1617:23;1613:32;1610:52;;;1658:1;1655;1648:12;1610:52;-1:-1:-1;1681:23:19;;1530:180;-1:-1:-1;1530:180:19:o;1923:131::-;-1:-1:-1;;;;;1998:31:19;;1988:42;;1978:70;;2044:1;2041;2034:12;2059:315;2127:6;2135;2188:2;2176:9;2167:7;2163:23;2159:32;2156:52;;;2204:1;2201;2194:12;2156:52;2243:9;2230:23;2262:31;2287:5;2262:31;:::i;:::-;2312:5;2364:2;2349:18;;;;2336:32;;-1:-1:-1;;;2059:315:19:o;2379:456::-;2456:6;2464;2472;2525:2;2513:9;2504:7;2500:23;2496:32;2493:52;;;2541:1;2538;2531:12;2493:52;2580:9;2567:23;2599:31;2624:5;2599:31;:::i;:::-;2649:5;-1:-1:-1;2706:2:19;2691:18;;2678:32;2719:33;2678:32;2719:33;:::i;:::-;2379:456;;2771:7;;-1:-1:-1;;;2825:2:19;2810:18;;;;2797:32;;2379:456::o;2840:275::-;2927:6;2980:2;2968:9;2959:7;2955:23;2951:32;2948:52;;;2996:1;2993;2986:12;2948:52;3035:9;3022:23;3054:31;3079:5;3054:31;:::i;3372:416::-;3437:6;3445;3498:2;3486:9;3477:7;3473:23;3469:32;3466:52;;;3514:1;3511;3504:12;3466:52;3553:9;3540:23;3572:31;3597:5;3572:31;:::i;:::-;3622:5;-1:-1:-1;3679:2:19;3664:18;;3651:32;3721:15;;3714:23;3702:36;;3692:64;;3752:1;3749;3742:12;3692:64;3775:7;3765:17;;;3372:416;;;;;:::o;3793:127::-;3854:10;3849:3;3845:20;3842:1;3835:31;3885:4;3882:1;3875:15;3909:4;3906:1;3899:15;3925:275;3996:2;3990:9;4061:2;4042:13;;-1:-1:-1;;4038:27:19;4026:40;;4096:18;4081:34;;4117:22;;;4078:62;4075:88;;;4143:18;;:::i;:::-;4179:2;4172:22;3925:275;;-1:-1:-1;3925:275:19:o;4205:186::-;4253:4;4286:18;4278:6;4275:30;4272:56;;;4308:18;;:::i;:::-;-1:-1:-1;4374:2:19;4353:15;-1:-1:-1;;4349:29:19;4380:4;4345:40;;4205:186::o;4396:1016::-;4491:6;4499;4507;4515;4568:3;4556:9;4547:7;4543:23;4539:33;4536:53;;;4585:1;4582;4575:12;4536:53;4624:9;4611:23;4643:31;4668:5;4643:31;:::i;:::-;4693:5;-1:-1:-1;4750:2:19;4735:18;;4722:32;4763:33;4722:32;4763:33;:::i;:::-;4815:7;-1:-1:-1;4869:2:19;4854:18;;4841:32;;-1:-1:-1;4924:2:19;4909:18;;4896:32;4951:18;4940:30;;4937:50;;;4983:1;4980;4973:12;4937:50;5006:22;;5059:4;5051:13;;5047:27;-1:-1:-1;5037:55:19;;5088:1;5085;5078:12;5037:55;5124:2;5111:16;5149:48;5165:31;5193:2;5165:31;:::i;:::-;5149:48;:::i;:::-;5220:2;5213:5;5206:17;5260:7;5255:2;5250;5246;5242:11;5238:20;5235:33;5232:53;;;5281:1;5278;5271:12;5232:53;5336:2;5331;5327;5323:11;5318:2;5311:5;5307:14;5294:45;5380:1;5375:2;5370;5363:5;5359:14;5355:23;5348:34;5401:5;5391:15;;;;;4396:1016;;;;;;;:::o;5653:388::-;5721:6;5729;5782:2;5770:9;5761:7;5757:23;5753:32;5750:52;;;5798:1;5795;5788:12;5750:52;5837:9;5824:23;5856:31;5881:5;5856:31;:::i;:::-;5906:5;-1:-1:-1;5963:2:19;5948:18;;5935:32;5976:33;5935:32;5976:33;:::i;6046:380::-;6125:1;6121:12;;;;6168;;;6189:61;;6243:4;6235:6;6231:17;6221:27;;6189:61;6296:2;6288:6;6285:14;6265:18;6262:38;6259:161;;6342:10;6337:3;6333:20;6330:1;6323:31;6377:4;6374:1;6367:15;6405:4;6402:1;6395:15;6259:161;;6046:380;;;:::o;6811:127::-;6872:10;6867:3;6863:20;6860:1;6853:31;6903:4;6900:1;6893:15;6927:4;6924:1;6917:15;6943:135;6982:3;7003:17;;;7000:43;;7023:18;;:::i;:::-;-1:-1:-1;7070:1:19;7059:13;;6943:135::o;7083:648::-;7163:6;7216:2;7204:9;7195:7;7191:23;7187:32;7184:52;;;7232:1;7229;7222:12;7184:52;7265:9;7259:16;7298:18;7290:6;7287:30;7284:50;;;7330:1;7327;7320:12;7284:50;7353:22;;7406:4;7398:13;;7394:27;-1:-1:-1;7384:55:19;;7435:1;7432;7425:12;7384:55;7464:2;7458:9;7489:48;7505:31;7533:2;7505:31;:::i;7489:48::-;7560:2;7553:5;7546:17;7600:7;7595:2;7590;7586;7582:11;7578:20;7575:33;7572:53;;;7621:1;7618;7611:12;7572:53;7634:67;7698:2;7693;7686:5;7682:14;7677:2;7673;7669:11;7634:67;:::i;:::-;7720:5;7083:648;-1:-1:-1;;;;;7083:648:19:o;7736:489::-;-1:-1:-1;;;;;8005:15:19;;;7987:34;;8057:15;;8052:2;8037:18;;8030:43;8104:2;8089:18;;8082:34;;;8152:3;8147:2;8132:18;;8125:31;;;7930:4;;8173:46;;8199:19;;8191:6;8173:46;:::i;:::-;8165:54;7736:489;-1:-1:-1;;;;;;7736:489:19:o;8230:249::-;8299:6;8352:2;8340:9;8331:7;8327:23;8323:32;8320:52;;;8368:1;8365;8358:12;8320:52;8400:9;8394:16;8419:30;8443:5;8419:30;:::i;8484:128::-;8551:9;;;8572:11;;;8569:37;;;8586:18;;:::i;8617:331::-;8722:9;8733;8775:8;8763:10;8760:24;8757:44;;;8797:1;8794;8787:12;8757:44;8826:6;8816:8;8813:20;8810:40;;;8846:1;8843;8836:12;8810:40;-1:-1:-1;;8872:23:19;;;8917:25;;;;;-1:-1:-1;8617:331:19:o;8953:337::-;-1:-1:-1;;9074:19:19;;9161:11;;;;9192:2;9184:11;;9181:103;;;9271:2;9265;9258:3;9254:2;9250:12;9247:1;9243:20;9239:29;9235:2;9231:38;9227:47;9218:56;;9181:103;;;8953:337;;;;:::o","generatedSources":[{"ast":{"nativeSrc":"0:9571:19","nodeType":"YulBlock","src":"0:9571:19","statements":[{"nativeSrc":"6:3:19","nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nativeSrc":"58:87:19","nodeType":"YulBlock","src":"58:87:19","statements":[{"body":{"nativeSrc":"123:16:19","nodeType":"YulBlock","src":"123:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"132:1:19","nodeType":"YulLiteral","src":"132:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"135:1:19","nodeType":"YulLiteral","src":"135:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"125:6:19","nodeType":"YulIdentifier","src":"125:6:19"},"nativeSrc":"125:12:19","nodeType":"YulFunctionCall","src":"125:12:19"},"nativeSrc":"125:12:19","nodeType":"YulExpressionStatement","src":"125:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"81:5:19","nodeType":"YulIdentifier","src":"81:5:19"},{"arguments":[{"name":"value","nativeSrc":"92:5:19","nodeType":"YulIdentifier","src":"92:5:19"},{"arguments":[{"kind":"number","nativeSrc":"103:3:19","nodeType":"YulLiteral","src":"103:3:19","type":"","value":"224"},{"kind":"number","nativeSrc":"108:10:19","nodeType":"YulLiteral","src":"108:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"99:3:19","nodeType":"YulIdentifier","src":"99:3:19"},"nativeSrc":"99:20:19","nodeType":"YulFunctionCall","src":"99:20:19"}],"functionName":{"name":"and","nativeSrc":"88:3:19","nodeType":"YulIdentifier","src":"88:3:19"},"nativeSrc":"88:32:19","nodeType":"YulFunctionCall","src":"88:32:19"}],"functionName":{"name":"eq","nativeSrc":"78:2:19","nodeType":"YulIdentifier","src":"78:2:19"},"nativeSrc":"78:43:19","nodeType":"YulFunctionCall","src":"78:43:19"}],"functionName":{"name":"iszero","nativeSrc":"71:6:19","nodeType":"YulIdentifier","src":"71:6:19"},"nativeSrc":"71:51:19","nodeType":"YulFunctionCall","src":"71:51:19"},"nativeSrc":"68:71:19","nodeType":"YulIf","src":"68:71:19"}]},"name":"validator_revert_bytes4","nativeSrc":"14:131:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"47:5:19","nodeType":"YulTypedName","src":"47:5:19","type":""}],"src":"14:131:19"},{"body":{"nativeSrc":"219:176:19","nodeType":"YulBlock","src":"219:176:19","statements":[{"body":{"nativeSrc":"265:16:19","nodeType":"YulBlock","src":"265:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"274:1:19","nodeType":"YulLiteral","src":"274:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"277:1:19","nodeType":"YulLiteral","src":"277:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"267:6:19","nodeType":"YulIdentifier","src":"267:6:19"},"nativeSrc":"267:12:19","nodeType":"YulFunctionCall","src":"267:12:19"},"nativeSrc":"267:12:19","nodeType":"YulExpressionStatement","src":"267:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"240:7:19","nodeType":"YulIdentifier","src":"240:7:19"},{"name":"headStart","nativeSrc":"249:9:19","nodeType":"YulIdentifier","src":"249:9:19"}],"functionName":{"name":"sub","nativeSrc":"236:3:19","nodeType":"YulIdentifier","src":"236:3:19"},"nativeSrc":"236:23:19","nodeType":"YulFunctionCall","src":"236:23:19"},{"kind":"number","nativeSrc":"261:2:19","nodeType":"YulLiteral","src":"261:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"232:3:19","nodeType":"YulIdentifier","src":"232:3:19"},"nativeSrc":"232:32:19","nodeType":"YulFunctionCall","src":"232:32:19"},"nativeSrc":"229:52:19","nodeType":"YulIf","src":"229:52:19"},{"nativeSrc":"290:36:19","nodeType":"YulVariableDeclaration","src":"290:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"316:9:19","nodeType":"YulIdentifier","src":"316:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"303:12:19","nodeType":"YulIdentifier","src":"303:12:19"},"nativeSrc":"303:23:19","nodeType":"YulFunctionCall","src":"303:23:19"},"variables":[{"name":"value","nativeSrc":"294:5:19","nodeType":"YulTypedName","src":"294:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"359:5:19","nodeType":"YulIdentifier","src":"359:5:19"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"335:23:19","nodeType":"YulIdentifier","src":"335:23:19"},"nativeSrc":"335:30:19","nodeType":"YulFunctionCall","src":"335:30:19"},"nativeSrc":"335:30:19","nodeType":"YulExpressionStatement","src":"335:30:19"},{"nativeSrc":"374:15:19","nodeType":"YulAssignment","src":"374:15:19","value":{"name":"value","nativeSrc":"384:5:19","nodeType":"YulIdentifier","src":"384:5:19"},"variableNames":[{"name":"value0","nativeSrc":"374:6:19","nodeType":"YulIdentifier","src":"374:6:19"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"150:245:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"185:9:19","nodeType":"YulTypedName","src":"185:9:19","type":""},{"name":"dataEnd","nativeSrc":"196:7:19","nodeType":"YulTypedName","src":"196:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"208:6:19","nodeType":"YulTypedName","src":"208:6:19","type":""}],"src":"150:245:19"},{"body":{"nativeSrc":"495:92:19","nodeType":"YulBlock","src":"495:92:19","statements":[{"nativeSrc":"505:26:19","nodeType":"YulAssignment","src":"505:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"517:9:19","nodeType":"YulIdentifier","src":"517:9:19"},{"kind":"number","nativeSrc":"528:2:19","nodeType":"YulLiteral","src":"528:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"513:3:19","nodeType":"YulIdentifier","src":"513:3:19"},"nativeSrc":"513:18:19","nodeType":"YulFunctionCall","src":"513:18:19"},"variableNames":[{"name":"tail","nativeSrc":"505:4:19","nodeType":"YulIdentifier","src":"505:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"547:9:19","nodeType":"YulIdentifier","src":"547:9:19"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"572:6:19","nodeType":"YulIdentifier","src":"572:6:19"}],"functionName":{"name":"iszero","nativeSrc":"565:6:19","nodeType":"YulIdentifier","src":"565:6:19"},"nativeSrc":"565:14:19","nodeType":"YulFunctionCall","src":"565:14:19"}],"functionName":{"name":"iszero","nativeSrc":"558:6:19","nodeType":"YulIdentifier","src":"558:6:19"},"nativeSrc":"558:22:19","nodeType":"YulFunctionCall","src":"558:22:19"}],"functionName":{"name":"mstore","nativeSrc":"540:6:19","nodeType":"YulIdentifier","src":"540:6:19"},"nativeSrc":"540:41:19","nodeType":"YulFunctionCall","src":"540:41:19"},"nativeSrc":"540:41:19","nodeType":"YulExpressionStatement","src":"540:41:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"400:187:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"464:9:19","nodeType":"YulTypedName","src":"464:9:19","type":""},{"name":"value0","nativeSrc":"475:6:19","nodeType":"YulTypedName","src":"475:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"486:4:19","nodeType":"YulTypedName","src":"486:4:19","type":""}],"src":"400:187:19"},{"body":{"nativeSrc":"693:76:19","nodeType":"YulBlock","src":"693:76:19","statements":[{"nativeSrc":"703:26:19","nodeType":"YulAssignment","src":"703:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"715:9:19","nodeType":"YulIdentifier","src":"715:9:19"},{"kind":"number","nativeSrc":"726:2:19","nodeType":"YulLiteral","src":"726:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"711:3:19","nodeType":"YulIdentifier","src":"711:3:19"},"nativeSrc":"711:18:19","nodeType":"YulFunctionCall","src":"711:18:19"},"variableNames":[{"name":"tail","nativeSrc":"703:4:19","nodeType":"YulIdentifier","src":"703:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"745:9:19","nodeType":"YulIdentifier","src":"745:9:19"},{"name":"value0","nativeSrc":"756:6:19","nodeType":"YulIdentifier","src":"756:6:19"}],"functionName":{"name":"mstore","nativeSrc":"738:6:19","nodeType":"YulIdentifier","src":"738:6:19"},"nativeSrc":"738:25:19","nodeType":"YulFunctionCall","src":"738:25:19"},"nativeSrc":"738:25:19","nodeType":"YulExpressionStatement","src":"738:25:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"592:177:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"662:9:19","nodeType":"YulTypedName","src":"662:9:19","type":""},{"name":"value0","nativeSrc":"673:6:19","nodeType":"YulTypedName","src":"673:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"684:4:19","nodeType":"YulTypedName","src":"684:4:19","type":""}],"src":"592:177:19"},{"body":{"nativeSrc":"840:184:19","nodeType":"YulBlock","src":"840:184:19","statements":[{"nativeSrc":"850:10:19","nodeType":"YulVariableDeclaration","src":"850:10:19","value":{"kind":"number","nativeSrc":"859:1:19","nodeType":"YulLiteral","src":"859:1:19","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"854:1:19","nodeType":"YulTypedName","src":"854:1:19","type":""}]},{"body":{"nativeSrc":"919:63:19","nodeType":"YulBlock","src":"919:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"944:3:19","nodeType":"YulIdentifier","src":"944:3:19"},{"name":"i","nativeSrc":"949:1:19","nodeType":"YulIdentifier","src":"949:1:19"}],"functionName":{"name":"add","nativeSrc":"940:3:19","nodeType":"YulIdentifier","src":"940:3:19"},"nativeSrc":"940:11:19","nodeType":"YulFunctionCall","src":"940:11:19"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"963:3:19","nodeType":"YulIdentifier","src":"963:3:19"},{"name":"i","nativeSrc":"968:1:19","nodeType":"YulIdentifier","src":"968:1:19"}],"functionName":{"name":"add","nativeSrc":"959:3:19","nodeType":"YulIdentifier","src":"959:3:19"},"nativeSrc":"959:11:19","nodeType":"YulFunctionCall","src":"959:11:19"}],"functionName":{"name":"mload","nativeSrc":"953:5:19","nodeType":"YulIdentifier","src":"953:5:19"},"nativeSrc":"953:18:19","nodeType":"YulFunctionCall","src":"953:18:19"}],"functionName":{"name":"mstore","nativeSrc":"933:6:19","nodeType":"YulIdentifier","src":"933:6:19"},"nativeSrc":"933:39:19","nodeType":"YulFunctionCall","src":"933:39:19"},"nativeSrc":"933:39:19","nodeType":"YulExpressionStatement","src":"933:39:19"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"880:1:19","nodeType":"YulIdentifier","src":"880:1:19"},{"name":"length","nativeSrc":"883:6:19","nodeType":"YulIdentifier","src":"883:6:19"}],"functionName":{"name":"lt","nativeSrc":"877:2:19","nodeType":"YulIdentifier","src":"877:2:19"},"nativeSrc":"877:13:19","nodeType":"YulFunctionCall","src":"877:13:19"},"nativeSrc":"869:113:19","nodeType":"YulForLoop","post":{"nativeSrc":"891:19:19","nodeType":"YulBlock","src":"891:19:19","statements":[{"nativeSrc":"893:15:19","nodeType":"YulAssignment","src":"893:15:19","value":{"arguments":[{"name":"i","nativeSrc":"902:1:19","nodeType":"YulIdentifier","src":"902:1:19"},{"kind":"number","nativeSrc":"905:2:19","nodeType":"YulLiteral","src":"905:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"898:3:19","nodeType":"YulIdentifier","src":"898:3:19"},"nativeSrc":"898:10:19","nodeType":"YulFunctionCall","src":"898:10:19"},"variableNames":[{"name":"i","nativeSrc":"893:1:19","nodeType":"YulIdentifier","src":"893:1:19"}]}]},"pre":{"nativeSrc":"873:3:19","nodeType":"YulBlock","src":"873:3:19","statements":[]},"src":"869:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1002:3:19","nodeType":"YulIdentifier","src":"1002:3:19"},{"name":"length","nativeSrc":"1007:6:19","nodeType":"YulIdentifier","src":"1007:6:19"}],"functionName":{"name":"add","nativeSrc":"998:3:19","nodeType":"YulIdentifier","src":"998:3:19"},"nativeSrc":"998:16:19","nodeType":"YulFunctionCall","src":"998:16:19"},{"kind":"number","nativeSrc":"1016:1:19","nodeType":"YulLiteral","src":"1016:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"991:6:19","nodeType":"YulIdentifier","src":"991:6:19"},"nativeSrc":"991:27:19","nodeType":"YulFunctionCall","src":"991:27:19"},"nativeSrc":"991:27:19","nodeType":"YulExpressionStatement","src":"991:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"774:250:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"818:3:19","nodeType":"YulTypedName","src":"818:3:19","type":""},{"name":"dst","nativeSrc":"823:3:19","nodeType":"YulTypedName","src":"823:3:19","type":""},{"name":"length","nativeSrc":"828:6:19","nodeType":"YulTypedName","src":"828:6:19","type":""}],"src":"774:250:19"},{"body":{"nativeSrc":"1079:221:19","nodeType":"YulBlock","src":"1079:221:19","statements":[{"nativeSrc":"1089:26:19","nodeType":"YulVariableDeclaration","src":"1089:26:19","value":{"arguments":[{"name":"value","nativeSrc":"1109:5:19","nodeType":"YulIdentifier","src":"1109:5:19"}],"functionName":{"name":"mload","nativeSrc":"1103:5:19","nodeType":"YulIdentifier","src":"1103:5:19"},"nativeSrc":"1103:12:19","nodeType":"YulFunctionCall","src":"1103:12:19"},"variables":[{"name":"length","nativeSrc":"1093:6:19","nodeType":"YulTypedName","src":"1093:6:19","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1131:3:19","nodeType":"YulIdentifier","src":"1131:3:19"},{"name":"length","nativeSrc":"1136:6:19","nodeType":"YulIdentifier","src":"1136:6:19"}],"functionName":{"name":"mstore","nativeSrc":"1124:6:19","nodeType":"YulIdentifier","src":"1124:6:19"},"nativeSrc":"1124:19:19","nodeType":"YulFunctionCall","src":"1124:19:19"},"nativeSrc":"1124:19:19","nodeType":"YulExpressionStatement","src":"1124:19:19"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1191:5:19","nodeType":"YulIdentifier","src":"1191:5:19"},{"kind":"number","nativeSrc":"1198:4:19","nodeType":"YulLiteral","src":"1198:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1187:3:19","nodeType":"YulIdentifier","src":"1187:3:19"},"nativeSrc":"1187:16:19","nodeType":"YulFunctionCall","src":"1187:16:19"},{"arguments":[{"name":"pos","nativeSrc":"1209:3:19","nodeType":"YulIdentifier","src":"1209:3:19"},{"kind":"number","nativeSrc":"1214:4:19","nodeType":"YulLiteral","src":"1214:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1205:3:19","nodeType":"YulIdentifier","src":"1205:3:19"},"nativeSrc":"1205:14:19","nodeType":"YulFunctionCall","src":"1205:14:19"},{"name":"length","nativeSrc":"1221:6:19","nodeType":"YulIdentifier","src":"1221:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1152:34:19","nodeType":"YulIdentifier","src":"1152:34:19"},"nativeSrc":"1152:76:19","nodeType":"YulFunctionCall","src":"1152:76:19"},"nativeSrc":"1152:76:19","nodeType":"YulExpressionStatement","src":"1152:76:19"},{"nativeSrc":"1237:57:19","nodeType":"YulAssignment","src":"1237:57:19","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1252:3:19","nodeType":"YulIdentifier","src":"1252:3:19"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1265:6:19","nodeType":"YulIdentifier","src":"1265:6:19"},{"kind":"number","nativeSrc":"1273:2:19","nodeType":"YulLiteral","src":"1273:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1261:3:19","nodeType":"YulIdentifier","src":"1261:3:19"},"nativeSrc":"1261:15:19","nodeType":"YulFunctionCall","src":"1261:15:19"},{"arguments":[{"kind":"number","nativeSrc":"1282:2:19","nodeType":"YulLiteral","src":"1282:2:19","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1278:3:19","nodeType":"YulIdentifier","src":"1278:3:19"},"nativeSrc":"1278:7:19","nodeType":"YulFunctionCall","src":"1278:7:19"}],"functionName":{"name":"and","nativeSrc":"1257:3:19","nodeType":"YulIdentifier","src":"1257:3:19"},"nativeSrc":"1257:29:19","nodeType":"YulFunctionCall","src":"1257:29:19"}],"functionName":{"name":"add","nativeSrc":"1248:3:19","nodeType":"YulIdentifier","src":"1248:3:19"},"nativeSrc":"1248:39:19","nodeType":"YulFunctionCall","src":"1248:39:19"},{"kind":"number","nativeSrc":"1289:4:19","nodeType":"YulLiteral","src":"1289:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1244:3:19","nodeType":"YulIdentifier","src":"1244:3:19"},"nativeSrc":"1244:50:19","nodeType":"YulFunctionCall","src":"1244:50:19"},"variableNames":[{"name":"end","nativeSrc":"1237:3:19","nodeType":"YulIdentifier","src":"1237:3:19"}]}]},"name":"abi_encode_string","nativeSrc":"1029:271:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1056:5:19","nodeType":"YulTypedName","src":"1056:5:19","type":""},{"name":"pos","nativeSrc":"1063:3:19","nodeType":"YulTypedName","src":"1063:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1071:3:19","nodeType":"YulTypedName","src":"1071:3:19","type":""}],"src":"1029:271:19"},{"body":{"nativeSrc":"1426:99:19","nodeType":"YulBlock","src":"1426:99:19","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1443:9:19","nodeType":"YulIdentifier","src":"1443:9:19"},{"kind":"number","nativeSrc":"1454:2:19","nodeType":"YulLiteral","src":"1454:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1436:6:19","nodeType":"YulIdentifier","src":"1436:6:19"},"nativeSrc":"1436:21:19","nodeType":"YulFunctionCall","src":"1436:21:19"},"nativeSrc":"1436:21:19","nodeType":"YulExpressionStatement","src":"1436:21:19"},{"nativeSrc":"1466:53:19","nodeType":"YulAssignment","src":"1466:53:19","value":{"arguments":[{"name":"value0","nativeSrc":"1492:6:19","nodeType":"YulIdentifier","src":"1492:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"1504:9:19","nodeType":"YulIdentifier","src":"1504:9:19"},{"kind":"number","nativeSrc":"1515:2:19","nodeType":"YulLiteral","src":"1515:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1500:3:19","nodeType":"YulIdentifier","src":"1500:3:19"},"nativeSrc":"1500:18:19","nodeType":"YulFunctionCall","src":"1500:18:19"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1474:17:19","nodeType":"YulIdentifier","src":"1474:17:19"},"nativeSrc":"1474:45:19","nodeType":"YulFunctionCall","src":"1474:45:19"},"variableNames":[{"name":"tail","nativeSrc":"1466:4:19","nodeType":"YulIdentifier","src":"1466:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1305:220:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1395:9:19","nodeType":"YulTypedName","src":"1395:9:19","type":""},{"name":"value0","nativeSrc":"1406:6:19","nodeType":"YulTypedName","src":"1406:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1417:4:19","nodeType":"YulTypedName","src":"1417:4:19","type":""}],"src":"1305:220:19"},{"body":{"nativeSrc":"1600:110:19","nodeType":"YulBlock","src":"1600:110:19","statements":[{"body":{"nativeSrc":"1646:16:19","nodeType":"YulBlock","src":"1646:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1655:1:19","nodeType":"YulLiteral","src":"1655:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1658:1:19","nodeType":"YulLiteral","src":"1658:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1648:6:19","nodeType":"YulIdentifier","src":"1648:6:19"},"nativeSrc":"1648:12:19","nodeType":"YulFunctionCall","src":"1648:12:19"},"nativeSrc":"1648:12:19","nodeType":"YulExpressionStatement","src":"1648:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1621:7:19","nodeType":"YulIdentifier","src":"1621:7:19"},{"name":"headStart","nativeSrc":"1630:9:19","nodeType":"YulIdentifier","src":"1630:9:19"}],"functionName":{"name":"sub","nativeSrc":"1617:3:19","nodeType":"YulIdentifier","src":"1617:3:19"},"nativeSrc":"1617:23:19","nodeType":"YulFunctionCall","src":"1617:23:19"},{"kind":"number","nativeSrc":"1642:2:19","nodeType":"YulLiteral","src":"1642:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1613:3:19","nodeType":"YulIdentifier","src":"1613:3:19"},"nativeSrc":"1613:32:19","nodeType":"YulFunctionCall","src":"1613:32:19"},"nativeSrc":"1610:52:19","nodeType":"YulIf","src":"1610:52:19"},{"nativeSrc":"1671:33:19","nodeType":"YulAssignment","src":"1671:33:19","value":{"arguments":[{"name":"headStart","nativeSrc":"1694:9:19","nodeType":"YulIdentifier","src":"1694:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"1681:12:19","nodeType":"YulIdentifier","src":"1681:12:19"},"nativeSrc":"1681:23:19","nodeType":"YulFunctionCall","src":"1681:23:19"},"variableNames":[{"name":"value0","nativeSrc":"1671:6:19","nodeType":"YulIdentifier","src":"1671:6:19"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1530:180:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1566:9:19","nodeType":"YulTypedName","src":"1566:9:19","type":""},{"name":"dataEnd","nativeSrc":"1577:7:19","nodeType":"YulTypedName","src":"1577:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1589:6:19","nodeType":"YulTypedName","src":"1589:6:19","type":""}],"src":"1530:180:19"},{"body":{"nativeSrc":"1816:102:19","nodeType":"YulBlock","src":"1816:102:19","statements":[{"nativeSrc":"1826:26:19","nodeType":"YulAssignment","src":"1826:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"1838:9:19","nodeType":"YulIdentifier","src":"1838:9:19"},{"kind":"number","nativeSrc":"1849:2:19","nodeType":"YulLiteral","src":"1849:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1834:3:19","nodeType":"YulIdentifier","src":"1834:3:19"},"nativeSrc":"1834:18:19","nodeType":"YulFunctionCall","src":"1834:18:19"},"variableNames":[{"name":"tail","nativeSrc":"1826:4:19","nodeType":"YulIdentifier","src":"1826:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1868:9:19","nodeType":"YulIdentifier","src":"1868:9:19"},{"arguments":[{"name":"value0","nativeSrc":"1883:6:19","nodeType":"YulIdentifier","src":"1883:6:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1899:3:19","nodeType":"YulLiteral","src":"1899:3:19","type":"","value":"160"},{"kind":"number","nativeSrc":"1904:1:19","nodeType":"YulLiteral","src":"1904:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1895:3:19","nodeType":"YulIdentifier","src":"1895:3:19"},"nativeSrc":"1895:11:19","nodeType":"YulFunctionCall","src":"1895:11:19"},{"kind":"number","nativeSrc":"1908:1:19","nodeType":"YulLiteral","src":"1908:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1891:3:19","nodeType":"YulIdentifier","src":"1891:3:19"},"nativeSrc":"1891:19:19","nodeType":"YulFunctionCall","src":"1891:19:19"}],"functionName":{"name":"and","nativeSrc":"1879:3:19","nodeType":"YulIdentifier","src":"1879:3:19"},"nativeSrc":"1879:32:19","nodeType":"YulFunctionCall","src":"1879:32:19"}],"functionName":{"name":"mstore","nativeSrc":"1861:6:19","nodeType":"YulIdentifier","src":"1861:6:19"},"nativeSrc":"1861:51:19","nodeType":"YulFunctionCall","src":"1861:51:19"},"nativeSrc":"1861:51:19","nodeType":"YulExpressionStatement","src":"1861:51:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1715:203:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1785:9:19","nodeType":"YulTypedName","src":"1785:9:19","type":""},{"name":"value0","nativeSrc":"1796:6:19","nodeType":"YulTypedName","src":"1796:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1807:4:19","nodeType":"YulTypedName","src":"1807:4:19","type":""}],"src":"1715:203:19"},{"body":{"nativeSrc":"1968:86:19","nodeType":"YulBlock","src":"1968:86:19","statements":[{"body":{"nativeSrc":"2032:16:19","nodeType":"YulBlock","src":"2032:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2041:1:19","nodeType":"YulLiteral","src":"2041:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"2044:1:19","nodeType":"YulLiteral","src":"2044:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2034:6:19","nodeType":"YulIdentifier","src":"2034:6:19"},"nativeSrc":"2034:12:19","nodeType":"YulFunctionCall","src":"2034:12:19"},"nativeSrc":"2034:12:19","nodeType":"YulExpressionStatement","src":"2034:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1991:5:19","nodeType":"YulIdentifier","src":"1991:5:19"},{"arguments":[{"name":"value","nativeSrc":"2002:5:19","nodeType":"YulIdentifier","src":"2002:5:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2017:3:19","nodeType":"YulLiteral","src":"2017:3:19","type":"","value":"160"},{"kind":"number","nativeSrc":"2022:1:19","nodeType":"YulLiteral","src":"2022:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2013:3:19","nodeType":"YulIdentifier","src":"2013:3:19"},"nativeSrc":"2013:11:19","nodeType":"YulFunctionCall","src":"2013:11:19"},{"kind":"number","nativeSrc":"2026:1:19","nodeType":"YulLiteral","src":"2026:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2009:3:19","nodeType":"YulIdentifier","src":"2009:3:19"},"nativeSrc":"2009:19:19","nodeType":"YulFunctionCall","src":"2009:19:19"}],"functionName":{"name":"and","nativeSrc":"1998:3:19","nodeType":"YulIdentifier","src":"1998:3:19"},"nativeSrc":"1998:31:19","nodeType":"YulFunctionCall","src":"1998:31:19"}],"functionName":{"name":"eq","nativeSrc":"1988:2:19","nodeType":"YulIdentifier","src":"1988:2:19"},"nativeSrc":"1988:42:19","nodeType":"YulFunctionCall","src":"1988:42:19"}],"functionName":{"name":"iszero","nativeSrc":"1981:6:19","nodeType":"YulIdentifier","src":"1981:6:19"},"nativeSrc":"1981:50:19","nodeType":"YulFunctionCall","src":"1981:50:19"},"nativeSrc":"1978:70:19","nodeType":"YulIf","src":"1978:70:19"}]},"name":"validator_revert_address","nativeSrc":"1923:131:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1957:5:19","nodeType":"YulTypedName","src":"1957:5:19","type":""}],"src":"1923:131:19"},{"body":{"nativeSrc":"2146:228:19","nodeType":"YulBlock","src":"2146:228:19","statements":[{"body":{"nativeSrc":"2192:16:19","nodeType":"YulBlock","src":"2192:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2201:1:19","nodeType":"YulLiteral","src":"2201:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"2204:1:19","nodeType":"YulLiteral","src":"2204:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2194:6:19","nodeType":"YulIdentifier","src":"2194:6:19"},"nativeSrc":"2194:12:19","nodeType":"YulFunctionCall","src":"2194:12:19"},"nativeSrc":"2194:12:19","nodeType":"YulExpressionStatement","src":"2194:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2167:7:19","nodeType":"YulIdentifier","src":"2167:7:19"},{"name":"headStart","nativeSrc":"2176:9:19","nodeType":"YulIdentifier","src":"2176:9:19"}],"functionName":{"name":"sub","nativeSrc":"2163:3:19","nodeType":"YulIdentifier","src":"2163:3:19"},"nativeSrc":"2163:23:19","nodeType":"YulFunctionCall","src":"2163:23:19"},{"kind":"number","nativeSrc":"2188:2:19","nodeType":"YulLiteral","src":"2188:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2159:3:19","nodeType":"YulIdentifier","src":"2159:3:19"},"nativeSrc":"2159:32:19","nodeType":"YulFunctionCall","src":"2159:32:19"},"nativeSrc":"2156:52:19","nodeType":"YulIf","src":"2156:52:19"},{"nativeSrc":"2217:36:19","nodeType":"YulVariableDeclaration","src":"2217:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"2243:9:19","nodeType":"YulIdentifier","src":"2243:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"2230:12:19","nodeType":"YulIdentifier","src":"2230:12:19"},"nativeSrc":"2230:23:19","nodeType":"YulFunctionCall","src":"2230:23:19"},"variables":[{"name":"value","nativeSrc":"2221:5:19","nodeType":"YulTypedName","src":"2221:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2287:5:19","nodeType":"YulIdentifier","src":"2287:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2262:24:19","nodeType":"YulIdentifier","src":"2262:24:19"},"nativeSrc":"2262:31:19","nodeType":"YulFunctionCall","src":"2262:31:19"},"nativeSrc":"2262:31:19","nodeType":"YulExpressionStatement","src":"2262:31:19"},{"nativeSrc":"2302:15:19","nodeType":"YulAssignment","src":"2302:15:19","value":{"name":"value","nativeSrc":"2312:5:19","nodeType":"YulIdentifier","src":"2312:5:19"},"variableNames":[{"name":"value0","nativeSrc":"2302:6:19","nodeType":"YulIdentifier","src":"2302:6:19"}]},{"nativeSrc":"2326:42:19","nodeType":"YulAssignment","src":"2326:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2353:9:19","nodeType":"YulIdentifier","src":"2353:9:19"},{"kind":"number","nativeSrc":"2364:2:19","nodeType":"YulLiteral","src":"2364:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2349:3:19","nodeType":"YulIdentifier","src":"2349:3:19"},"nativeSrc":"2349:18:19","nodeType":"YulFunctionCall","src":"2349:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"2336:12:19","nodeType":"YulIdentifier","src":"2336:12:19"},"nativeSrc":"2336:32:19","nodeType":"YulFunctionCall","src":"2336:32:19"},"variableNames":[{"name":"value1","nativeSrc":"2326:6:19","nodeType":"YulIdentifier","src":"2326:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2059:315:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2104:9:19","nodeType":"YulTypedName","src":"2104:9:19","type":""},{"name":"dataEnd","nativeSrc":"2115:7:19","nodeType":"YulTypedName","src":"2115:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2127:6:19","nodeType":"YulTypedName","src":"2127:6:19","type":""},{"name":"value1","nativeSrc":"2135:6:19","nodeType":"YulTypedName","src":"2135:6:19","type":""}],"src":"2059:315:19"},{"body":{"nativeSrc":"2483:352:19","nodeType":"YulBlock","src":"2483:352:19","statements":[{"body":{"nativeSrc":"2529:16:19","nodeType":"YulBlock","src":"2529:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2538:1:19","nodeType":"YulLiteral","src":"2538:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"2541:1:19","nodeType":"YulLiteral","src":"2541:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2531:6:19","nodeType":"YulIdentifier","src":"2531:6:19"},"nativeSrc":"2531:12:19","nodeType":"YulFunctionCall","src":"2531:12:19"},"nativeSrc":"2531:12:19","nodeType":"YulExpressionStatement","src":"2531:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2504:7:19","nodeType":"YulIdentifier","src":"2504:7:19"},{"name":"headStart","nativeSrc":"2513:9:19","nodeType":"YulIdentifier","src":"2513:9:19"}],"functionName":{"name":"sub","nativeSrc":"2500:3:19","nodeType":"YulIdentifier","src":"2500:3:19"},"nativeSrc":"2500:23:19","nodeType":"YulFunctionCall","src":"2500:23:19"},{"kind":"number","nativeSrc":"2525:2:19","nodeType":"YulLiteral","src":"2525:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2496:3:19","nodeType":"YulIdentifier","src":"2496:3:19"},"nativeSrc":"2496:32:19","nodeType":"YulFunctionCall","src":"2496:32:19"},"nativeSrc":"2493:52:19","nodeType":"YulIf","src":"2493:52:19"},{"nativeSrc":"2554:36:19","nodeType":"YulVariableDeclaration","src":"2554:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"2580:9:19","nodeType":"YulIdentifier","src":"2580:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"2567:12:19","nodeType":"YulIdentifier","src":"2567:12:19"},"nativeSrc":"2567:23:19","nodeType":"YulFunctionCall","src":"2567:23:19"},"variables":[{"name":"value","nativeSrc":"2558:5:19","nodeType":"YulTypedName","src":"2558:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2624:5:19","nodeType":"YulIdentifier","src":"2624:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2599:24:19","nodeType":"YulIdentifier","src":"2599:24:19"},"nativeSrc":"2599:31:19","nodeType":"YulFunctionCall","src":"2599:31:19"},"nativeSrc":"2599:31:19","nodeType":"YulExpressionStatement","src":"2599:31:19"},{"nativeSrc":"2639:15:19","nodeType":"YulAssignment","src":"2639:15:19","value":{"name":"value","nativeSrc":"2649:5:19","nodeType":"YulIdentifier","src":"2649:5:19"},"variableNames":[{"name":"value0","nativeSrc":"2639:6:19","nodeType":"YulIdentifier","src":"2639:6:19"}]},{"nativeSrc":"2663:47:19","nodeType":"YulVariableDeclaration","src":"2663:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2695:9:19","nodeType":"YulIdentifier","src":"2695:9:19"},{"kind":"number","nativeSrc":"2706:2:19","nodeType":"YulLiteral","src":"2706:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2691:3:19","nodeType":"YulIdentifier","src":"2691:3:19"},"nativeSrc":"2691:18:19","nodeType":"YulFunctionCall","src":"2691:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"2678:12:19","nodeType":"YulIdentifier","src":"2678:12:19"},"nativeSrc":"2678:32:19","nodeType":"YulFunctionCall","src":"2678:32:19"},"variables":[{"name":"value_1","nativeSrc":"2667:7:19","nodeType":"YulTypedName","src":"2667:7:19","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"2744:7:19","nodeType":"YulIdentifier","src":"2744:7:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2719:24:19","nodeType":"YulIdentifier","src":"2719:24:19"},"nativeSrc":"2719:33:19","nodeType":"YulFunctionCall","src":"2719:33:19"},"nativeSrc":"2719:33:19","nodeType":"YulExpressionStatement","src":"2719:33:19"},{"nativeSrc":"2761:17:19","nodeType":"YulAssignment","src":"2761:17:19","value":{"name":"value_1","nativeSrc":"2771:7:19","nodeType":"YulIdentifier","src":"2771:7:19"},"variableNames":[{"name":"value1","nativeSrc":"2761:6:19","nodeType":"YulIdentifier","src":"2761:6:19"}]},{"nativeSrc":"2787:42:19","nodeType":"YulAssignment","src":"2787:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2814:9:19","nodeType":"YulIdentifier","src":"2814:9:19"},{"kind":"number","nativeSrc":"2825:2:19","nodeType":"YulLiteral","src":"2825:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2810:3:19","nodeType":"YulIdentifier","src":"2810:3:19"},"nativeSrc":"2810:18:19","nodeType":"YulFunctionCall","src":"2810:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"2797:12:19","nodeType":"YulIdentifier","src":"2797:12:19"},"nativeSrc":"2797:32:19","nodeType":"YulFunctionCall","src":"2797:32:19"},"variableNames":[{"name":"value2","nativeSrc":"2787:6:19","nodeType":"YulIdentifier","src":"2787:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2379:456:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2433:9:19","nodeType":"YulTypedName","src":"2433:9:19","type":""},{"name":"dataEnd","nativeSrc":"2444:7:19","nodeType":"YulTypedName","src":"2444:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2456:6:19","nodeType":"YulTypedName","src":"2456:6:19","type":""},{"name":"value1","nativeSrc":"2464:6:19","nodeType":"YulTypedName","src":"2464:6:19","type":""},{"name":"value2","nativeSrc":"2472:6:19","nodeType":"YulTypedName","src":"2472:6:19","type":""}],"src":"2379:456:19"},{"body":{"nativeSrc":"2938:177:19","nodeType":"YulBlock","src":"2938:177:19","statements":[{"body":{"nativeSrc":"2984:16:19","nodeType":"YulBlock","src":"2984:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2993:1:19","nodeType":"YulLiteral","src":"2993:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"2996:1:19","nodeType":"YulLiteral","src":"2996:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2986:6:19","nodeType":"YulIdentifier","src":"2986:6:19"},"nativeSrc":"2986:12:19","nodeType":"YulFunctionCall","src":"2986:12:19"},"nativeSrc":"2986:12:19","nodeType":"YulExpressionStatement","src":"2986:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2959:7:19","nodeType":"YulIdentifier","src":"2959:7:19"},{"name":"headStart","nativeSrc":"2968:9:19","nodeType":"YulIdentifier","src":"2968:9:19"}],"functionName":{"name":"sub","nativeSrc":"2955:3:19","nodeType":"YulIdentifier","src":"2955:3:19"},"nativeSrc":"2955:23:19","nodeType":"YulFunctionCall","src":"2955:23:19"},{"kind":"number","nativeSrc":"2980:2:19","nodeType":"YulLiteral","src":"2980:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2951:3:19","nodeType":"YulIdentifier","src":"2951:3:19"},"nativeSrc":"2951:32:19","nodeType":"YulFunctionCall","src":"2951:32:19"},"nativeSrc":"2948:52:19","nodeType":"YulIf","src":"2948:52:19"},{"nativeSrc":"3009:36:19","nodeType":"YulVariableDeclaration","src":"3009:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"3035:9:19","nodeType":"YulIdentifier","src":"3035:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"3022:12:19","nodeType":"YulIdentifier","src":"3022:12:19"},"nativeSrc":"3022:23:19","nodeType":"YulFunctionCall","src":"3022:23:19"},"variables":[{"name":"value","nativeSrc":"3013:5:19","nodeType":"YulTypedName","src":"3013:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3079:5:19","nodeType":"YulIdentifier","src":"3079:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3054:24:19","nodeType":"YulIdentifier","src":"3054:24:19"},"nativeSrc":"3054:31:19","nodeType":"YulFunctionCall","src":"3054:31:19"},"nativeSrc":"3054:31:19","nodeType":"YulExpressionStatement","src":"3054:31:19"},{"nativeSrc":"3094:15:19","nodeType":"YulAssignment","src":"3094:15:19","value":{"name":"value","nativeSrc":"3104:5:19","nodeType":"YulIdentifier","src":"3104:5:19"},"variableNames":[{"name":"value0","nativeSrc":"3094:6:19","nodeType":"YulIdentifier","src":"3094:6:19"}]}]},"name":"abi_decode_tuple_t_contract$_IJBTokenUriResolver_$6727","nativeSrc":"2840:275:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2904:9:19","nodeType":"YulTypedName","src":"2904:9:19","type":""},{"name":"dataEnd","nativeSrc":"2915:7:19","nodeType":"YulTypedName","src":"2915:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2927:6:19","nodeType":"YulTypedName","src":"2927:6:19","type":""}],"src":"2840:275:19"},{"body":{"nativeSrc":"3190:177:19","nodeType":"YulBlock","src":"3190:177:19","statements":[{"body":{"nativeSrc":"3236:16:19","nodeType":"YulBlock","src":"3236:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3245:1:19","nodeType":"YulLiteral","src":"3245:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"3248:1:19","nodeType":"YulLiteral","src":"3248:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3238:6:19","nodeType":"YulIdentifier","src":"3238:6:19"},"nativeSrc":"3238:12:19","nodeType":"YulFunctionCall","src":"3238:12:19"},"nativeSrc":"3238:12:19","nodeType":"YulExpressionStatement","src":"3238:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3211:7:19","nodeType":"YulIdentifier","src":"3211:7:19"},{"name":"headStart","nativeSrc":"3220:9:19","nodeType":"YulIdentifier","src":"3220:9:19"}],"functionName":{"name":"sub","nativeSrc":"3207:3:19","nodeType":"YulIdentifier","src":"3207:3:19"},"nativeSrc":"3207:23:19","nodeType":"YulFunctionCall","src":"3207:23:19"},{"kind":"number","nativeSrc":"3232:2:19","nodeType":"YulLiteral","src":"3232:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3203:3:19","nodeType":"YulIdentifier","src":"3203:3:19"},"nativeSrc":"3203:32:19","nodeType":"YulFunctionCall","src":"3203:32:19"},"nativeSrc":"3200:52:19","nodeType":"YulIf","src":"3200:52:19"},{"nativeSrc":"3261:36:19","nodeType":"YulVariableDeclaration","src":"3261:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"3287:9:19","nodeType":"YulIdentifier","src":"3287:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"3274:12:19","nodeType":"YulIdentifier","src":"3274:12:19"},"nativeSrc":"3274:23:19","nodeType":"YulFunctionCall","src":"3274:23:19"},"variables":[{"name":"value","nativeSrc":"3265:5:19","nodeType":"YulTypedName","src":"3265:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3331:5:19","nodeType":"YulIdentifier","src":"3331:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3306:24:19","nodeType":"YulIdentifier","src":"3306:24:19"},"nativeSrc":"3306:31:19","nodeType":"YulFunctionCall","src":"3306:31:19"},"nativeSrc":"3306:31:19","nodeType":"YulExpressionStatement","src":"3306:31:19"},{"nativeSrc":"3346:15:19","nodeType":"YulAssignment","src":"3346:15:19","value":{"name":"value","nativeSrc":"3356:5:19","nodeType":"YulIdentifier","src":"3356:5:19"},"variableNames":[{"name":"value0","nativeSrc":"3346:6:19","nodeType":"YulIdentifier","src":"3346:6:19"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3120:247:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3156:9:19","nodeType":"YulTypedName","src":"3156:9:19","type":""},{"name":"dataEnd","nativeSrc":"3167:7:19","nodeType":"YulTypedName","src":"3167:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3179:6:19","nodeType":"YulTypedName","src":"3179:6:19","type":""}],"src":"3120:247:19"},{"body":{"nativeSrc":"3456:332:19","nodeType":"YulBlock","src":"3456:332:19","statements":[{"body":{"nativeSrc":"3502:16:19","nodeType":"YulBlock","src":"3502:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3511:1:19","nodeType":"YulLiteral","src":"3511:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"3514:1:19","nodeType":"YulLiteral","src":"3514:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3504:6:19","nodeType":"YulIdentifier","src":"3504:6:19"},"nativeSrc":"3504:12:19","nodeType":"YulFunctionCall","src":"3504:12:19"},"nativeSrc":"3504:12:19","nodeType":"YulExpressionStatement","src":"3504:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3477:7:19","nodeType":"YulIdentifier","src":"3477:7:19"},{"name":"headStart","nativeSrc":"3486:9:19","nodeType":"YulIdentifier","src":"3486:9:19"}],"functionName":{"name":"sub","nativeSrc":"3473:3:19","nodeType":"YulIdentifier","src":"3473:3:19"},"nativeSrc":"3473:23:19","nodeType":"YulFunctionCall","src":"3473:23:19"},{"kind":"number","nativeSrc":"3498:2:19","nodeType":"YulLiteral","src":"3498:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3469:3:19","nodeType":"YulIdentifier","src":"3469:3:19"},"nativeSrc":"3469:32:19","nodeType":"YulFunctionCall","src":"3469:32:19"},"nativeSrc":"3466:52:19","nodeType":"YulIf","src":"3466:52:19"},{"nativeSrc":"3527:36:19","nodeType":"YulVariableDeclaration","src":"3527:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"3553:9:19","nodeType":"YulIdentifier","src":"3553:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"3540:12:19","nodeType":"YulIdentifier","src":"3540:12:19"},"nativeSrc":"3540:23:19","nodeType":"YulFunctionCall","src":"3540:23:19"},"variables":[{"name":"value","nativeSrc":"3531:5:19","nodeType":"YulTypedName","src":"3531:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3597:5:19","nodeType":"YulIdentifier","src":"3597:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3572:24:19","nodeType":"YulIdentifier","src":"3572:24:19"},"nativeSrc":"3572:31:19","nodeType":"YulFunctionCall","src":"3572:31:19"},"nativeSrc":"3572:31:19","nodeType":"YulExpressionStatement","src":"3572:31:19"},{"nativeSrc":"3612:15:19","nodeType":"YulAssignment","src":"3612:15:19","value":{"name":"value","nativeSrc":"3622:5:19","nodeType":"YulIdentifier","src":"3622:5:19"},"variableNames":[{"name":"value0","nativeSrc":"3612:6:19","nodeType":"YulIdentifier","src":"3612:6:19"}]},{"nativeSrc":"3636:47:19","nodeType":"YulVariableDeclaration","src":"3636:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3668:9:19","nodeType":"YulIdentifier","src":"3668:9:19"},{"kind":"number","nativeSrc":"3679:2:19","nodeType":"YulLiteral","src":"3679:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3664:3:19","nodeType":"YulIdentifier","src":"3664:3:19"},"nativeSrc":"3664:18:19","nodeType":"YulFunctionCall","src":"3664:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"3651:12:19","nodeType":"YulIdentifier","src":"3651:12:19"},"nativeSrc":"3651:32:19","nodeType":"YulFunctionCall","src":"3651:32:19"},"variables":[{"name":"value_1","nativeSrc":"3640:7:19","nodeType":"YulTypedName","src":"3640:7:19","type":""}]},{"body":{"nativeSrc":"3740:16:19","nodeType":"YulBlock","src":"3740:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3749:1:19","nodeType":"YulLiteral","src":"3749:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"3752:1:19","nodeType":"YulLiteral","src":"3752:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3742:6:19","nodeType":"YulIdentifier","src":"3742:6:19"},"nativeSrc":"3742:12:19","nodeType":"YulFunctionCall","src":"3742:12:19"},"nativeSrc":"3742:12:19","nodeType":"YulExpressionStatement","src":"3742:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"3705:7:19","nodeType":"YulIdentifier","src":"3705:7:19"},{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"3728:7:19","nodeType":"YulIdentifier","src":"3728:7:19"}],"functionName":{"name":"iszero","nativeSrc":"3721:6:19","nodeType":"YulIdentifier","src":"3721:6:19"},"nativeSrc":"3721:15:19","nodeType":"YulFunctionCall","src":"3721:15:19"}],"functionName":{"name":"iszero","nativeSrc":"3714:6:19","nodeType":"YulIdentifier","src":"3714:6:19"},"nativeSrc":"3714:23:19","nodeType":"YulFunctionCall","src":"3714:23:19"}],"functionName":{"name":"eq","nativeSrc":"3702:2:19","nodeType":"YulIdentifier","src":"3702:2:19"},"nativeSrc":"3702:36:19","nodeType":"YulFunctionCall","src":"3702:36:19"}],"functionName":{"name":"iszero","nativeSrc":"3695:6:19","nodeType":"YulIdentifier","src":"3695:6:19"},"nativeSrc":"3695:44:19","nodeType":"YulFunctionCall","src":"3695:44:19"},"nativeSrc":"3692:64:19","nodeType":"YulIf","src":"3692:64:19"},{"nativeSrc":"3765:17:19","nodeType":"YulAssignment","src":"3765:17:19","value":{"name":"value_1","nativeSrc":"3775:7:19","nodeType":"YulIdentifier","src":"3775:7:19"},"variableNames":[{"name":"value1","nativeSrc":"3765:6:19","nodeType":"YulIdentifier","src":"3765:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"3372:416:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3414:9:19","nodeType":"YulTypedName","src":"3414:9:19","type":""},{"name":"dataEnd","nativeSrc":"3425:7:19","nodeType":"YulTypedName","src":"3425:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3437:6:19","nodeType":"YulTypedName","src":"3437:6:19","type":""},{"name":"value1","nativeSrc":"3445:6:19","nodeType":"YulTypedName","src":"3445:6:19","type":""}],"src":"3372:416:19"},{"body":{"nativeSrc":"3825:95:19","nodeType":"YulBlock","src":"3825:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3842:1:19","nodeType":"YulLiteral","src":"3842:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3849:3:19","nodeType":"YulLiteral","src":"3849:3:19","type":"","value":"224"},{"kind":"number","nativeSrc":"3854:10:19","nodeType":"YulLiteral","src":"3854:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3845:3:19","nodeType":"YulIdentifier","src":"3845:3:19"},"nativeSrc":"3845:20:19","nodeType":"YulFunctionCall","src":"3845:20:19"}],"functionName":{"name":"mstore","nativeSrc":"3835:6:19","nodeType":"YulIdentifier","src":"3835:6:19"},"nativeSrc":"3835:31:19","nodeType":"YulFunctionCall","src":"3835:31:19"},"nativeSrc":"3835:31:19","nodeType":"YulExpressionStatement","src":"3835:31:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3882:1:19","nodeType":"YulLiteral","src":"3882:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"3885:4:19","nodeType":"YulLiteral","src":"3885:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3875:6:19","nodeType":"YulIdentifier","src":"3875:6:19"},"nativeSrc":"3875:15:19","nodeType":"YulFunctionCall","src":"3875:15:19"},"nativeSrc":"3875:15:19","nodeType":"YulExpressionStatement","src":"3875:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3906:1:19","nodeType":"YulLiteral","src":"3906:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"3909:4:19","nodeType":"YulLiteral","src":"3909:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3899:6:19","nodeType":"YulIdentifier","src":"3899:6:19"},"nativeSrc":"3899:15:19","nodeType":"YulFunctionCall","src":"3899:15:19"},"nativeSrc":"3899:15:19","nodeType":"YulExpressionStatement","src":"3899:15:19"}]},"name":"panic_error_0x41","nativeSrc":"3793:127:19","nodeType":"YulFunctionDefinition","src":"3793:127:19"},{"body":{"nativeSrc":"3970:230:19","nodeType":"YulBlock","src":"3970:230:19","statements":[{"nativeSrc":"3980:19:19","nodeType":"YulAssignment","src":"3980:19:19","value":{"arguments":[{"kind":"number","nativeSrc":"3996:2:19","nodeType":"YulLiteral","src":"3996:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3990:5:19","nodeType":"YulIdentifier","src":"3990:5:19"},"nativeSrc":"3990:9:19","nodeType":"YulFunctionCall","src":"3990:9:19"},"variableNames":[{"name":"memPtr","nativeSrc":"3980:6:19","nodeType":"YulIdentifier","src":"3980:6:19"}]},{"nativeSrc":"4008:58:19","nodeType":"YulVariableDeclaration","src":"4008:58:19","value":{"arguments":[{"name":"memPtr","nativeSrc":"4030:6:19","nodeType":"YulIdentifier","src":"4030:6:19"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"4046:4:19","nodeType":"YulIdentifier","src":"4046:4:19"},{"kind":"number","nativeSrc":"4052:2:19","nodeType":"YulLiteral","src":"4052:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4042:3:19","nodeType":"YulIdentifier","src":"4042:3:19"},"nativeSrc":"4042:13:19","nodeType":"YulFunctionCall","src":"4042:13:19"},{"arguments":[{"kind":"number","nativeSrc":"4061:2:19","nodeType":"YulLiteral","src":"4061:2:19","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4057:3:19","nodeType":"YulIdentifier","src":"4057:3:19"},"nativeSrc":"4057:7:19","nodeType":"YulFunctionCall","src":"4057:7:19"}],"functionName":{"name":"and","nativeSrc":"4038:3:19","nodeType":"YulIdentifier","src":"4038:3:19"},"nativeSrc":"4038:27:19","nodeType":"YulFunctionCall","src":"4038:27:19"}],"functionName":{"name":"add","nativeSrc":"4026:3:19","nodeType":"YulIdentifier","src":"4026:3:19"},"nativeSrc":"4026:40:19","nodeType":"YulFunctionCall","src":"4026:40:19"},"variables":[{"name":"newFreePtr","nativeSrc":"4012:10:19","nodeType":"YulTypedName","src":"4012:10:19","type":""}]},{"body":{"nativeSrc":"4141:22:19","nodeType":"YulBlock","src":"4141:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4143:16:19","nodeType":"YulIdentifier","src":"4143:16:19"},"nativeSrc":"4143:18:19","nodeType":"YulFunctionCall","src":"4143:18:19"},"nativeSrc":"4143:18:19","nodeType":"YulExpressionStatement","src":"4143:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4084:10:19","nodeType":"YulIdentifier","src":"4084:10:19"},{"kind":"number","nativeSrc":"4096:18:19","nodeType":"YulLiteral","src":"4096:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4081:2:19","nodeType":"YulIdentifier","src":"4081:2:19"},"nativeSrc":"4081:34:19","nodeType":"YulFunctionCall","src":"4081:34:19"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4120:10:19","nodeType":"YulIdentifier","src":"4120:10:19"},{"name":"memPtr","nativeSrc":"4132:6:19","nodeType":"YulIdentifier","src":"4132:6:19"}],"functionName":{"name":"lt","nativeSrc":"4117:2:19","nodeType":"YulIdentifier","src":"4117:2:19"},"nativeSrc":"4117:22:19","nodeType":"YulFunctionCall","src":"4117:22:19"}],"functionName":{"name":"or","nativeSrc":"4078:2:19","nodeType":"YulIdentifier","src":"4078:2:19"},"nativeSrc":"4078:62:19","nodeType":"YulFunctionCall","src":"4078:62:19"},"nativeSrc":"4075:88:19","nodeType":"YulIf","src":"4075:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4179:2:19","nodeType":"YulLiteral","src":"4179:2:19","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4183:10:19","nodeType":"YulIdentifier","src":"4183:10:19"}],"functionName":{"name":"mstore","nativeSrc":"4172:6:19","nodeType":"YulIdentifier","src":"4172:6:19"},"nativeSrc":"4172:22:19","nodeType":"YulFunctionCall","src":"4172:22:19"},"nativeSrc":"4172:22:19","nodeType":"YulExpressionStatement","src":"4172:22:19"}]},"name":"allocate_memory","nativeSrc":"3925:275:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"3950:4:19","nodeType":"YulTypedName","src":"3950:4:19","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"3959:6:19","nodeType":"YulTypedName","src":"3959:6:19","type":""}],"src":"3925:275:19"},{"body":{"nativeSrc":"4262:129:19","nodeType":"YulBlock","src":"4262:129:19","statements":[{"body":{"nativeSrc":"4306:22:19","nodeType":"YulBlock","src":"4306:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4308:16:19","nodeType":"YulIdentifier","src":"4308:16:19"},"nativeSrc":"4308:18:19","nodeType":"YulFunctionCall","src":"4308:18:19"},"nativeSrc":"4308:18:19","nodeType":"YulExpressionStatement","src":"4308:18:19"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4278:6:19","nodeType":"YulIdentifier","src":"4278:6:19"},{"kind":"number","nativeSrc":"4286:18:19","nodeType":"YulLiteral","src":"4286:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4275:2:19","nodeType":"YulIdentifier","src":"4275:2:19"},"nativeSrc":"4275:30:19","nodeType":"YulFunctionCall","src":"4275:30:19"},"nativeSrc":"4272:56:19","nodeType":"YulIf","src":"4272:56:19"},{"nativeSrc":"4337:48:19","nodeType":"YulAssignment","src":"4337:48:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4357:6:19","nodeType":"YulIdentifier","src":"4357:6:19"},{"kind":"number","nativeSrc":"4365:2:19","nodeType":"YulLiteral","src":"4365:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4353:3:19","nodeType":"YulIdentifier","src":"4353:3:19"},"nativeSrc":"4353:15:19","nodeType":"YulFunctionCall","src":"4353:15:19"},{"arguments":[{"kind":"number","nativeSrc":"4374:2:19","nodeType":"YulLiteral","src":"4374:2:19","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4370:3:19","nodeType":"YulIdentifier","src":"4370:3:19"},"nativeSrc":"4370:7:19","nodeType":"YulFunctionCall","src":"4370:7:19"}],"functionName":{"name":"and","nativeSrc":"4349:3:19","nodeType":"YulIdentifier","src":"4349:3:19"},"nativeSrc":"4349:29:19","nodeType":"YulFunctionCall","src":"4349:29:19"},{"kind":"number","nativeSrc":"4380:4:19","nodeType":"YulLiteral","src":"4380:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4345:3:19","nodeType":"YulIdentifier","src":"4345:3:19"},"nativeSrc":"4345:40:19","nodeType":"YulFunctionCall","src":"4345:40:19"},"variableNames":[{"name":"size","nativeSrc":"4337:4:19","nodeType":"YulIdentifier","src":"4337:4:19"}]}]},"name":"array_allocation_size_bytes","nativeSrc":"4205:186:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"4242:6:19","nodeType":"YulTypedName","src":"4242:6:19","type":""}],"returnVariables":[{"name":"size","nativeSrc":"4253:4:19","nodeType":"YulTypedName","src":"4253:4:19","type":""}],"src":"4205:186:19"},{"body":{"nativeSrc":"4526:886:19","nodeType":"YulBlock","src":"4526:886:19","statements":[{"body":{"nativeSrc":"4573:16:19","nodeType":"YulBlock","src":"4573:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4582:1:19","nodeType":"YulLiteral","src":"4582:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4585:1:19","nodeType":"YulLiteral","src":"4585:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4575:6:19","nodeType":"YulIdentifier","src":"4575:6:19"},"nativeSrc":"4575:12:19","nodeType":"YulFunctionCall","src":"4575:12:19"},"nativeSrc":"4575:12:19","nodeType":"YulExpressionStatement","src":"4575:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4547:7:19","nodeType":"YulIdentifier","src":"4547:7:19"},{"name":"headStart","nativeSrc":"4556:9:19","nodeType":"YulIdentifier","src":"4556:9:19"}],"functionName":{"name":"sub","nativeSrc":"4543:3:19","nodeType":"YulIdentifier","src":"4543:3:19"},"nativeSrc":"4543:23:19","nodeType":"YulFunctionCall","src":"4543:23:19"},{"kind":"number","nativeSrc":"4568:3:19","nodeType":"YulLiteral","src":"4568:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"4539:3:19","nodeType":"YulIdentifier","src":"4539:3:19"},"nativeSrc":"4539:33:19","nodeType":"YulFunctionCall","src":"4539:33:19"},"nativeSrc":"4536:53:19","nodeType":"YulIf","src":"4536:53:19"},{"nativeSrc":"4598:36:19","nodeType":"YulVariableDeclaration","src":"4598:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"4624:9:19","nodeType":"YulIdentifier","src":"4624:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"4611:12:19","nodeType":"YulIdentifier","src":"4611:12:19"},"nativeSrc":"4611:23:19","nodeType":"YulFunctionCall","src":"4611:23:19"},"variables":[{"name":"value","nativeSrc":"4602:5:19","nodeType":"YulTypedName","src":"4602:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4668:5:19","nodeType":"YulIdentifier","src":"4668:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4643:24:19","nodeType":"YulIdentifier","src":"4643:24:19"},"nativeSrc":"4643:31:19","nodeType":"YulFunctionCall","src":"4643:31:19"},"nativeSrc":"4643:31:19","nodeType":"YulExpressionStatement","src":"4643:31:19"},{"nativeSrc":"4683:15:19","nodeType":"YulAssignment","src":"4683:15:19","value":{"name":"value","nativeSrc":"4693:5:19","nodeType":"YulIdentifier","src":"4693:5:19"},"variableNames":[{"name":"value0","nativeSrc":"4683:6:19","nodeType":"YulIdentifier","src":"4683:6:19"}]},{"nativeSrc":"4707:47:19","nodeType":"YulVariableDeclaration","src":"4707:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4739:9:19","nodeType":"YulIdentifier","src":"4739:9:19"},{"kind":"number","nativeSrc":"4750:2:19","nodeType":"YulLiteral","src":"4750:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4735:3:19","nodeType":"YulIdentifier","src":"4735:3:19"},"nativeSrc":"4735:18:19","nodeType":"YulFunctionCall","src":"4735:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"4722:12:19","nodeType":"YulIdentifier","src":"4722:12:19"},"nativeSrc":"4722:32:19","nodeType":"YulFunctionCall","src":"4722:32:19"},"variables":[{"name":"value_1","nativeSrc":"4711:7:19","nodeType":"YulTypedName","src":"4711:7:19","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"4788:7:19","nodeType":"YulIdentifier","src":"4788:7:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4763:24:19","nodeType":"YulIdentifier","src":"4763:24:19"},"nativeSrc":"4763:33:19","nodeType":"YulFunctionCall","src":"4763:33:19"},"nativeSrc":"4763:33:19","nodeType":"YulExpressionStatement","src":"4763:33:19"},{"nativeSrc":"4805:17:19","nodeType":"YulAssignment","src":"4805:17:19","value":{"name":"value_1","nativeSrc":"4815:7:19","nodeType":"YulIdentifier","src":"4815:7:19"},"variableNames":[{"name":"value1","nativeSrc":"4805:6:19","nodeType":"YulIdentifier","src":"4805:6:19"}]},{"nativeSrc":"4831:42:19","nodeType":"YulAssignment","src":"4831:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4858:9:19","nodeType":"YulIdentifier","src":"4858:9:19"},{"kind":"number","nativeSrc":"4869:2:19","nodeType":"YulLiteral","src":"4869:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4854:3:19","nodeType":"YulIdentifier","src":"4854:3:19"},"nativeSrc":"4854:18:19","nodeType":"YulFunctionCall","src":"4854:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"4841:12:19","nodeType":"YulIdentifier","src":"4841:12:19"},"nativeSrc":"4841:32:19","nodeType":"YulFunctionCall","src":"4841:32:19"},"variableNames":[{"name":"value2","nativeSrc":"4831:6:19","nodeType":"YulIdentifier","src":"4831:6:19"}]},{"nativeSrc":"4882:46:19","nodeType":"YulVariableDeclaration","src":"4882:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4913:9:19","nodeType":"YulIdentifier","src":"4913:9:19"},{"kind":"number","nativeSrc":"4924:2:19","nodeType":"YulLiteral","src":"4924:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4909:3:19","nodeType":"YulIdentifier","src":"4909:3:19"},"nativeSrc":"4909:18:19","nodeType":"YulFunctionCall","src":"4909:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"4896:12:19","nodeType":"YulIdentifier","src":"4896:12:19"},"nativeSrc":"4896:32:19","nodeType":"YulFunctionCall","src":"4896:32:19"},"variables":[{"name":"offset","nativeSrc":"4886:6:19","nodeType":"YulTypedName","src":"4886:6:19","type":""}]},{"body":{"nativeSrc":"4971:16:19","nodeType":"YulBlock","src":"4971:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4980:1:19","nodeType":"YulLiteral","src":"4980:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4983:1:19","nodeType":"YulLiteral","src":"4983:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4973:6:19","nodeType":"YulIdentifier","src":"4973:6:19"},"nativeSrc":"4973:12:19","nodeType":"YulFunctionCall","src":"4973:12:19"},"nativeSrc":"4973:12:19","nodeType":"YulExpressionStatement","src":"4973:12:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4943:6:19","nodeType":"YulIdentifier","src":"4943:6:19"},{"kind":"number","nativeSrc":"4951:18:19","nodeType":"YulLiteral","src":"4951:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4940:2:19","nodeType":"YulIdentifier","src":"4940:2:19"},"nativeSrc":"4940:30:19","nodeType":"YulFunctionCall","src":"4940:30:19"},"nativeSrc":"4937:50:19","nodeType":"YulIf","src":"4937:50:19"},{"nativeSrc":"4996:32:19","nodeType":"YulVariableDeclaration","src":"4996:32:19","value":{"arguments":[{"name":"headStart","nativeSrc":"5010:9:19","nodeType":"YulIdentifier","src":"5010:9:19"},{"name":"offset","nativeSrc":"5021:6:19","nodeType":"YulIdentifier","src":"5021:6:19"}],"functionName":{"name":"add","nativeSrc":"5006:3:19","nodeType":"YulIdentifier","src":"5006:3:19"},"nativeSrc":"5006:22:19","nodeType":"YulFunctionCall","src":"5006:22:19"},"variables":[{"name":"_1","nativeSrc":"5000:2:19","nodeType":"YulTypedName","src":"5000:2:19","type":""}]},{"body":{"nativeSrc":"5076:16:19","nodeType":"YulBlock","src":"5076:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5085:1:19","nodeType":"YulLiteral","src":"5085:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5088:1:19","nodeType":"YulLiteral","src":"5088:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5078:6:19","nodeType":"YulIdentifier","src":"5078:6:19"},"nativeSrc":"5078:12:19","nodeType":"YulFunctionCall","src":"5078:12:19"},"nativeSrc":"5078:12:19","nodeType":"YulExpressionStatement","src":"5078:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5055:2:19","nodeType":"YulIdentifier","src":"5055:2:19"},{"kind":"number","nativeSrc":"5059:4:19","nodeType":"YulLiteral","src":"5059:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5051:3:19","nodeType":"YulIdentifier","src":"5051:3:19"},"nativeSrc":"5051:13:19","nodeType":"YulFunctionCall","src":"5051:13:19"},{"name":"dataEnd","nativeSrc":"5066:7:19","nodeType":"YulIdentifier","src":"5066:7:19"}],"functionName":{"name":"slt","nativeSrc":"5047:3:19","nodeType":"YulIdentifier","src":"5047:3:19"},"nativeSrc":"5047:27:19","nodeType":"YulFunctionCall","src":"5047:27:19"}],"functionName":{"name":"iszero","nativeSrc":"5040:6:19","nodeType":"YulIdentifier","src":"5040:6:19"},"nativeSrc":"5040:35:19","nodeType":"YulFunctionCall","src":"5040:35:19"},"nativeSrc":"5037:55:19","nodeType":"YulIf","src":"5037:55:19"},{"nativeSrc":"5101:26:19","nodeType":"YulVariableDeclaration","src":"5101:26:19","value":{"arguments":[{"name":"_1","nativeSrc":"5124:2:19","nodeType":"YulIdentifier","src":"5124:2:19"}],"functionName":{"name":"calldataload","nativeSrc":"5111:12:19","nodeType":"YulIdentifier","src":"5111:12:19"},"nativeSrc":"5111:16:19","nodeType":"YulFunctionCall","src":"5111:16:19"},"variables":[{"name":"_2","nativeSrc":"5105:2:19","nodeType":"YulTypedName","src":"5105:2:19","type":""}]},{"nativeSrc":"5136:61:19","nodeType":"YulVariableDeclaration","src":"5136:61:19","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"5193:2:19","nodeType":"YulIdentifier","src":"5193:2:19"}],"functionName":{"name":"array_allocation_size_bytes","nativeSrc":"5165:27:19","nodeType":"YulIdentifier","src":"5165:27:19"},"nativeSrc":"5165:31:19","nodeType":"YulFunctionCall","src":"5165:31:19"}],"functionName":{"name":"allocate_memory","nativeSrc":"5149:15:19","nodeType":"YulIdentifier","src":"5149:15:19"},"nativeSrc":"5149:48:19","nodeType":"YulFunctionCall","src":"5149:48:19"},"variables":[{"name":"array","nativeSrc":"5140:5:19","nodeType":"YulTypedName","src":"5140:5:19","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"5213:5:19","nodeType":"YulIdentifier","src":"5213:5:19"},{"name":"_2","nativeSrc":"5220:2:19","nodeType":"YulIdentifier","src":"5220:2:19"}],"functionName":{"name":"mstore","nativeSrc":"5206:6:19","nodeType":"YulIdentifier","src":"5206:6:19"},"nativeSrc":"5206:17:19","nodeType":"YulFunctionCall","src":"5206:17:19"},"nativeSrc":"5206:17:19","nodeType":"YulExpressionStatement","src":"5206:17:19"},{"body":{"nativeSrc":"5269:16:19","nodeType":"YulBlock","src":"5269:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5278:1:19","nodeType":"YulLiteral","src":"5278:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5281:1:19","nodeType":"YulLiteral","src":"5281:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5271:6:19","nodeType":"YulIdentifier","src":"5271:6:19"},"nativeSrc":"5271:12:19","nodeType":"YulFunctionCall","src":"5271:12:19"},"nativeSrc":"5271:12:19","nodeType":"YulExpressionStatement","src":"5271:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5246:2:19","nodeType":"YulIdentifier","src":"5246:2:19"},{"name":"_2","nativeSrc":"5250:2:19","nodeType":"YulIdentifier","src":"5250:2:19"}],"functionName":{"name":"add","nativeSrc":"5242:3:19","nodeType":"YulIdentifier","src":"5242:3:19"},"nativeSrc":"5242:11:19","nodeType":"YulFunctionCall","src":"5242:11:19"},{"kind":"number","nativeSrc":"5255:2:19","nodeType":"YulLiteral","src":"5255:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5238:3:19","nodeType":"YulIdentifier","src":"5238:3:19"},"nativeSrc":"5238:20:19","nodeType":"YulFunctionCall","src":"5238:20:19"},{"name":"dataEnd","nativeSrc":"5260:7:19","nodeType":"YulIdentifier","src":"5260:7:19"}],"functionName":{"name":"gt","nativeSrc":"5235:2:19","nodeType":"YulIdentifier","src":"5235:2:19"},"nativeSrc":"5235:33:19","nodeType":"YulFunctionCall","src":"5235:33:19"},"nativeSrc":"5232:53:19","nodeType":"YulIf","src":"5232:53:19"},{"expression":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"5311:5:19","nodeType":"YulIdentifier","src":"5311:5:19"},{"kind":"number","nativeSrc":"5318:2:19","nodeType":"YulLiteral","src":"5318:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5307:3:19","nodeType":"YulIdentifier","src":"5307:3:19"},"nativeSrc":"5307:14:19","nodeType":"YulFunctionCall","src":"5307:14:19"},{"arguments":[{"name":"_1","nativeSrc":"5327:2:19","nodeType":"YulIdentifier","src":"5327:2:19"},{"kind":"number","nativeSrc":"5331:2:19","nodeType":"YulLiteral","src":"5331:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5323:3:19","nodeType":"YulIdentifier","src":"5323:3:19"},"nativeSrc":"5323:11:19","nodeType":"YulFunctionCall","src":"5323:11:19"},{"name":"_2","nativeSrc":"5336:2:19","nodeType":"YulIdentifier","src":"5336:2:19"}],"functionName":{"name":"calldatacopy","nativeSrc":"5294:12:19","nodeType":"YulIdentifier","src":"5294:12:19"},"nativeSrc":"5294:45:19","nodeType":"YulFunctionCall","src":"5294:45:19"},"nativeSrc":"5294:45:19","nodeType":"YulExpressionStatement","src":"5294:45:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nativeSrc":"5363:5:19","nodeType":"YulIdentifier","src":"5363:5:19"},{"name":"_2","nativeSrc":"5370:2:19","nodeType":"YulIdentifier","src":"5370:2:19"}],"functionName":{"name":"add","nativeSrc":"5359:3:19","nodeType":"YulIdentifier","src":"5359:3:19"},"nativeSrc":"5359:14:19","nodeType":"YulFunctionCall","src":"5359:14:19"},{"kind":"number","nativeSrc":"5375:2:19","nodeType":"YulLiteral","src":"5375:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5355:3:19","nodeType":"YulIdentifier","src":"5355:3:19"},"nativeSrc":"5355:23:19","nodeType":"YulFunctionCall","src":"5355:23:19"},{"kind":"number","nativeSrc":"5380:1:19","nodeType":"YulLiteral","src":"5380:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5348:6:19","nodeType":"YulIdentifier","src":"5348:6:19"},"nativeSrc":"5348:34:19","nodeType":"YulFunctionCall","src":"5348:34:19"},"nativeSrc":"5348:34:19","nodeType":"YulExpressionStatement","src":"5348:34:19"},{"nativeSrc":"5391:15:19","nodeType":"YulAssignment","src":"5391:15:19","value":{"name":"array","nativeSrc":"5401:5:19","nodeType":"YulIdentifier","src":"5401:5:19"},"variableNames":[{"name":"value3","nativeSrc":"5391:6:19","nodeType":"YulIdentifier","src":"5391:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"4396:1016:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4468:9:19","nodeType":"YulTypedName","src":"4468:9:19","type":""},{"name":"dataEnd","nativeSrc":"4479:7:19","nodeType":"YulTypedName","src":"4479:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4491:6:19","nodeType":"YulTypedName","src":"4491:6:19","type":""},{"name":"value1","nativeSrc":"4499:6:19","nodeType":"YulTypedName","src":"4499:6:19","type":""},{"name":"value2","nativeSrc":"4507:6:19","nodeType":"YulTypedName","src":"4507:6:19","type":""},{"name":"value3","nativeSrc":"4515:6:19","nodeType":"YulTypedName","src":"4515:6:19","type":""}],"src":"4396:1016:19"},{"body":{"nativeSrc":"5546:102:19","nodeType":"YulBlock","src":"5546:102:19","statements":[{"nativeSrc":"5556:26:19","nodeType":"YulAssignment","src":"5556:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"5568:9:19","nodeType":"YulIdentifier","src":"5568:9:19"},{"kind":"number","nativeSrc":"5579:2:19","nodeType":"YulLiteral","src":"5579:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5564:3:19","nodeType":"YulIdentifier","src":"5564:3:19"},"nativeSrc":"5564:18:19","nodeType":"YulFunctionCall","src":"5564:18:19"},"variableNames":[{"name":"tail","nativeSrc":"5556:4:19","nodeType":"YulIdentifier","src":"5556:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5598:9:19","nodeType":"YulIdentifier","src":"5598:9:19"},{"arguments":[{"name":"value0","nativeSrc":"5613:6:19","nodeType":"YulIdentifier","src":"5613:6:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5629:3:19","nodeType":"YulLiteral","src":"5629:3:19","type":"","value":"160"},{"kind":"number","nativeSrc":"5634:1:19","nodeType":"YulLiteral","src":"5634:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5625:3:19","nodeType":"YulIdentifier","src":"5625:3:19"},"nativeSrc":"5625:11:19","nodeType":"YulFunctionCall","src":"5625:11:19"},{"kind":"number","nativeSrc":"5638:1:19","nodeType":"YulLiteral","src":"5638:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5621:3:19","nodeType":"YulIdentifier","src":"5621:3:19"},"nativeSrc":"5621:19:19","nodeType":"YulFunctionCall","src":"5621:19:19"}],"functionName":{"name":"and","nativeSrc":"5609:3:19","nodeType":"YulIdentifier","src":"5609:3:19"},"nativeSrc":"5609:32:19","nodeType":"YulFunctionCall","src":"5609:32:19"}],"functionName":{"name":"mstore","nativeSrc":"5591:6:19","nodeType":"YulIdentifier","src":"5591:6:19"},"nativeSrc":"5591:51:19","nodeType":"YulFunctionCall","src":"5591:51:19"},"nativeSrc":"5591:51:19","nodeType":"YulExpressionStatement","src":"5591:51:19"}]},"name":"abi_encode_tuple_t_contract$_IJBTokenUriResolver_$6727__to_t_address__fromStack_reversed","nativeSrc":"5417:231:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5515:9:19","nodeType":"YulTypedName","src":"5515:9:19","type":""},{"name":"value0","nativeSrc":"5526:6:19","nodeType":"YulTypedName","src":"5526:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5537:4:19","nodeType":"YulTypedName","src":"5537:4:19","type":""}],"src":"5417:231:19"},{"body":{"nativeSrc":"5740:301:19","nodeType":"YulBlock","src":"5740:301:19","statements":[{"body":{"nativeSrc":"5786:16:19","nodeType":"YulBlock","src":"5786:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5795:1:19","nodeType":"YulLiteral","src":"5795:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5798:1:19","nodeType":"YulLiteral","src":"5798:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5788:6:19","nodeType":"YulIdentifier","src":"5788:6:19"},"nativeSrc":"5788:12:19","nodeType":"YulFunctionCall","src":"5788:12:19"},"nativeSrc":"5788:12:19","nodeType":"YulExpressionStatement","src":"5788:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5761:7:19","nodeType":"YulIdentifier","src":"5761:7:19"},{"name":"headStart","nativeSrc":"5770:9:19","nodeType":"YulIdentifier","src":"5770:9:19"}],"functionName":{"name":"sub","nativeSrc":"5757:3:19","nodeType":"YulIdentifier","src":"5757:3:19"},"nativeSrc":"5757:23:19","nodeType":"YulFunctionCall","src":"5757:23:19"},{"kind":"number","nativeSrc":"5782:2:19","nodeType":"YulLiteral","src":"5782:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5753:3:19","nodeType":"YulIdentifier","src":"5753:3:19"},"nativeSrc":"5753:32:19","nodeType":"YulFunctionCall","src":"5753:32:19"},"nativeSrc":"5750:52:19","nodeType":"YulIf","src":"5750:52:19"},{"nativeSrc":"5811:36:19","nodeType":"YulVariableDeclaration","src":"5811:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"5837:9:19","nodeType":"YulIdentifier","src":"5837:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"5824:12:19","nodeType":"YulIdentifier","src":"5824:12:19"},"nativeSrc":"5824:23:19","nodeType":"YulFunctionCall","src":"5824:23:19"},"variables":[{"name":"value","nativeSrc":"5815:5:19","nodeType":"YulTypedName","src":"5815:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5881:5:19","nodeType":"YulIdentifier","src":"5881:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5856:24:19","nodeType":"YulIdentifier","src":"5856:24:19"},"nativeSrc":"5856:31:19","nodeType":"YulFunctionCall","src":"5856:31:19"},"nativeSrc":"5856:31:19","nodeType":"YulExpressionStatement","src":"5856:31:19"},{"nativeSrc":"5896:15:19","nodeType":"YulAssignment","src":"5896:15:19","value":{"name":"value","nativeSrc":"5906:5:19","nodeType":"YulIdentifier","src":"5906:5:19"},"variableNames":[{"name":"value0","nativeSrc":"5896:6:19","nodeType":"YulIdentifier","src":"5896:6:19"}]},{"nativeSrc":"5920:47:19","nodeType":"YulVariableDeclaration","src":"5920:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5952:9:19","nodeType":"YulIdentifier","src":"5952:9:19"},{"kind":"number","nativeSrc":"5963:2:19","nodeType":"YulLiteral","src":"5963:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5948:3:19","nodeType":"YulIdentifier","src":"5948:3:19"},"nativeSrc":"5948:18:19","nodeType":"YulFunctionCall","src":"5948:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"5935:12:19","nodeType":"YulIdentifier","src":"5935:12:19"},"nativeSrc":"5935:32:19","nodeType":"YulFunctionCall","src":"5935:32:19"},"variables":[{"name":"value_1","nativeSrc":"5924:7:19","nodeType":"YulTypedName","src":"5924:7:19","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"6001:7:19","nodeType":"YulIdentifier","src":"6001:7:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5976:24:19","nodeType":"YulIdentifier","src":"5976:24:19"},"nativeSrc":"5976:33:19","nodeType":"YulFunctionCall","src":"5976:33:19"},"nativeSrc":"5976:33:19","nodeType":"YulExpressionStatement","src":"5976:33:19"},{"nativeSrc":"6018:17:19","nodeType":"YulAssignment","src":"6018:17:19","value":{"name":"value_1","nativeSrc":"6028:7:19","nodeType":"YulIdentifier","src":"6028:7:19"},"variableNames":[{"name":"value1","nativeSrc":"6018:6:19","nodeType":"YulIdentifier","src":"6018:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5653:388:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5698:9:19","nodeType":"YulTypedName","src":"5698:9:19","type":""},{"name":"dataEnd","nativeSrc":"5709:7:19","nodeType":"YulTypedName","src":"5709:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5721:6:19","nodeType":"YulTypedName","src":"5721:6:19","type":""},{"name":"value1","nativeSrc":"5729:6:19","nodeType":"YulTypedName","src":"5729:6:19","type":""}],"src":"5653:388:19"},{"body":{"nativeSrc":"6101:325:19","nodeType":"YulBlock","src":"6101:325:19","statements":[{"nativeSrc":"6111:22:19","nodeType":"YulAssignment","src":"6111:22:19","value":{"arguments":[{"kind":"number","nativeSrc":"6125:1:19","nodeType":"YulLiteral","src":"6125:1:19","type":"","value":"1"},{"name":"data","nativeSrc":"6128:4:19","nodeType":"YulIdentifier","src":"6128:4:19"}],"functionName":{"name":"shr","nativeSrc":"6121:3:19","nodeType":"YulIdentifier","src":"6121:3:19"},"nativeSrc":"6121:12:19","nodeType":"YulFunctionCall","src":"6121:12:19"},"variableNames":[{"name":"length","nativeSrc":"6111:6:19","nodeType":"YulIdentifier","src":"6111:6:19"}]},{"nativeSrc":"6142:38:19","nodeType":"YulVariableDeclaration","src":"6142:38:19","value":{"arguments":[{"name":"data","nativeSrc":"6172:4:19","nodeType":"YulIdentifier","src":"6172:4:19"},{"kind":"number","nativeSrc":"6178:1:19","nodeType":"YulLiteral","src":"6178:1:19","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6168:3:19","nodeType":"YulIdentifier","src":"6168:3:19"},"nativeSrc":"6168:12:19","nodeType":"YulFunctionCall","src":"6168:12:19"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6146:18:19","nodeType":"YulTypedName","src":"6146:18:19","type":""}]},{"body":{"nativeSrc":"6219:31:19","nodeType":"YulBlock","src":"6219:31:19","statements":[{"nativeSrc":"6221:27:19","nodeType":"YulAssignment","src":"6221:27:19","value":{"arguments":[{"name":"length","nativeSrc":"6235:6:19","nodeType":"YulIdentifier","src":"6235:6:19"},{"kind":"number","nativeSrc":"6243:4:19","nodeType":"YulLiteral","src":"6243:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6231:3:19","nodeType":"YulIdentifier","src":"6231:3:19"},"nativeSrc":"6231:17:19","nodeType":"YulFunctionCall","src":"6231:17:19"},"variableNames":[{"name":"length","nativeSrc":"6221:6:19","nodeType":"YulIdentifier","src":"6221:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6199:18:19","nodeType":"YulIdentifier","src":"6199:18:19"}],"functionName":{"name":"iszero","nativeSrc":"6192:6:19","nodeType":"YulIdentifier","src":"6192:6:19"},"nativeSrc":"6192:26:19","nodeType":"YulFunctionCall","src":"6192:26:19"},"nativeSrc":"6189:61:19","nodeType":"YulIf","src":"6189:61:19"},{"body":{"nativeSrc":"6309:111:19","nodeType":"YulBlock","src":"6309:111:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6330:1:19","nodeType":"YulLiteral","src":"6330:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6337:3:19","nodeType":"YulLiteral","src":"6337:3:19","type":"","value":"224"},{"kind":"number","nativeSrc":"6342:10:19","nodeType":"YulLiteral","src":"6342:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6333:3:19","nodeType":"YulIdentifier","src":"6333:3:19"},"nativeSrc":"6333:20:19","nodeType":"YulFunctionCall","src":"6333:20:19"}],"functionName":{"name":"mstore","nativeSrc":"6323:6:19","nodeType":"YulIdentifier","src":"6323:6:19"},"nativeSrc":"6323:31:19","nodeType":"YulFunctionCall","src":"6323:31:19"},"nativeSrc":"6323:31:19","nodeType":"YulExpressionStatement","src":"6323:31:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6374:1:19","nodeType":"YulLiteral","src":"6374:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"6377:4:19","nodeType":"YulLiteral","src":"6377:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6367:6:19","nodeType":"YulIdentifier","src":"6367:6:19"},"nativeSrc":"6367:15:19","nodeType":"YulFunctionCall","src":"6367:15:19"},"nativeSrc":"6367:15:19","nodeType":"YulExpressionStatement","src":"6367:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6402:1:19","nodeType":"YulLiteral","src":"6402:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"6405:4:19","nodeType":"YulLiteral","src":"6405:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6395:6:19","nodeType":"YulIdentifier","src":"6395:6:19"},"nativeSrc":"6395:15:19","nodeType":"YulFunctionCall","src":"6395:15:19"},"nativeSrc":"6395:15:19","nodeType":"YulExpressionStatement","src":"6395:15:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6265:18:19","nodeType":"YulIdentifier","src":"6265:18:19"},{"arguments":[{"name":"length","nativeSrc":"6288:6:19","nodeType":"YulIdentifier","src":"6288:6:19"},{"kind":"number","nativeSrc":"6296:2:19","nodeType":"YulLiteral","src":"6296:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6285:2:19","nodeType":"YulIdentifier","src":"6285:2:19"},"nativeSrc":"6285:14:19","nodeType":"YulFunctionCall","src":"6285:14:19"}],"functionName":{"name":"eq","nativeSrc":"6262:2:19","nodeType":"YulIdentifier","src":"6262:2:19"},"nativeSrc":"6262:38:19","nodeType":"YulFunctionCall","src":"6262:38:19"},"nativeSrc":"6259:161:19","nodeType":"YulIf","src":"6259:161:19"}]},"name":"extract_byte_array_length","nativeSrc":"6046:380:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6081:4:19","nodeType":"YulTypedName","src":"6081:4:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6090:6:19","nodeType":"YulTypedName","src":"6090:6:19","type":""}],"src":"6046:380:19"},{"body":{"nativeSrc":"6588:218:19","nodeType":"YulBlock","src":"6588:218:19","statements":[{"nativeSrc":"6598:26:19","nodeType":"YulAssignment","src":"6598:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"6610:9:19","nodeType":"YulIdentifier","src":"6610:9:19"},{"kind":"number","nativeSrc":"6621:2:19","nodeType":"YulLiteral","src":"6621:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6606:3:19","nodeType":"YulIdentifier","src":"6606:3:19"},"nativeSrc":"6606:18:19","nodeType":"YulFunctionCall","src":"6606:18:19"},"variableNames":[{"name":"tail","nativeSrc":"6598:4:19","nodeType":"YulIdentifier","src":"6598:4:19"}]},{"nativeSrc":"6633:29:19","nodeType":"YulVariableDeclaration","src":"6633:29:19","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6651:3:19","nodeType":"YulLiteral","src":"6651:3:19","type":"","value":"160"},{"kind":"number","nativeSrc":"6656:1:19","nodeType":"YulLiteral","src":"6656:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6647:3:19","nodeType":"YulIdentifier","src":"6647:3:19"},"nativeSrc":"6647:11:19","nodeType":"YulFunctionCall","src":"6647:11:19"},{"kind":"number","nativeSrc":"6660:1:19","nodeType":"YulLiteral","src":"6660:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6643:3:19","nodeType":"YulIdentifier","src":"6643:3:19"},"nativeSrc":"6643:19:19","nodeType":"YulFunctionCall","src":"6643:19:19"},"variables":[{"name":"_1","nativeSrc":"6637:2:19","nodeType":"YulTypedName","src":"6637:2:19","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6678:9:19","nodeType":"YulIdentifier","src":"6678:9:19"},{"arguments":[{"name":"value0","nativeSrc":"6693:6:19","nodeType":"YulIdentifier","src":"6693:6:19"},{"name":"_1","nativeSrc":"6701:2:19","nodeType":"YulIdentifier","src":"6701:2:19"}],"functionName":{"name":"and","nativeSrc":"6689:3:19","nodeType":"YulIdentifier","src":"6689:3:19"},"nativeSrc":"6689:15:19","nodeType":"YulFunctionCall","src":"6689:15:19"}],"functionName":{"name":"mstore","nativeSrc":"6671:6:19","nodeType":"YulIdentifier","src":"6671:6:19"},"nativeSrc":"6671:34:19","nodeType":"YulFunctionCall","src":"6671:34:19"},"nativeSrc":"6671:34:19","nodeType":"YulExpressionStatement","src":"6671:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6725:9:19","nodeType":"YulIdentifier","src":"6725:9:19"},{"kind":"number","nativeSrc":"6736:2:19","nodeType":"YulLiteral","src":"6736:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6721:3:19","nodeType":"YulIdentifier","src":"6721:3:19"},"nativeSrc":"6721:18:19","nodeType":"YulFunctionCall","src":"6721:18:19"},{"name":"value1","nativeSrc":"6741:6:19","nodeType":"YulIdentifier","src":"6741:6:19"}],"functionName":{"name":"mstore","nativeSrc":"6714:6:19","nodeType":"YulIdentifier","src":"6714:6:19"},"nativeSrc":"6714:34:19","nodeType":"YulFunctionCall","src":"6714:34:19"},"nativeSrc":"6714:34:19","nodeType":"YulExpressionStatement","src":"6714:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6768:9:19","nodeType":"YulIdentifier","src":"6768:9:19"},{"kind":"number","nativeSrc":"6779:2:19","nodeType":"YulLiteral","src":"6779:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6764:3:19","nodeType":"YulIdentifier","src":"6764:3:19"},"nativeSrc":"6764:18:19","nodeType":"YulFunctionCall","src":"6764:18:19"},{"arguments":[{"name":"value2","nativeSrc":"6788:6:19","nodeType":"YulIdentifier","src":"6788:6:19"},{"name":"_1","nativeSrc":"6796:2:19","nodeType":"YulIdentifier","src":"6796:2:19"}],"functionName":{"name":"and","nativeSrc":"6784:3:19","nodeType":"YulIdentifier","src":"6784:3:19"},"nativeSrc":"6784:15:19","nodeType":"YulFunctionCall","src":"6784:15:19"}],"functionName":{"name":"mstore","nativeSrc":"6757:6:19","nodeType":"YulIdentifier","src":"6757:6:19"},"nativeSrc":"6757:43:19","nodeType":"YulFunctionCall","src":"6757:43:19"},"nativeSrc":"6757:43:19","nodeType":"YulExpressionStatement","src":"6757:43:19"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"6431:375:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6541:9:19","nodeType":"YulTypedName","src":"6541:9:19","type":""},{"name":"value2","nativeSrc":"6552:6:19","nodeType":"YulTypedName","src":"6552:6:19","type":""},{"name":"value1","nativeSrc":"6560:6:19","nodeType":"YulTypedName","src":"6560:6:19","type":""},{"name":"value0","nativeSrc":"6568:6:19","nodeType":"YulTypedName","src":"6568:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6579:4:19","nodeType":"YulTypedName","src":"6579:4:19","type":""}],"src":"6431:375:19"},{"body":{"nativeSrc":"6843:95:19","nodeType":"YulBlock","src":"6843:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6860:1:19","nodeType":"YulLiteral","src":"6860:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6867:3:19","nodeType":"YulLiteral","src":"6867:3:19","type":"","value":"224"},{"kind":"number","nativeSrc":"6872:10:19","nodeType":"YulLiteral","src":"6872:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6863:3:19","nodeType":"YulIdentifier","src":"6863:3:19"},"nativeSrc":"6863:20:19","nodeType":"YulFunctionCall","src":"6863:20:19"}],"functionName":{"name":"mstore","nativeSrc":"6853:6:19","nodeType":"YulIdentifier","src":"6853:6:19"},"nativeSrc":"6853:31:19","nodeType":"YulFunctionCall","src":"6853:31:19"},"nativeSrc":"6853:31:19","nodeType":"YulExpressionStatement","src":"6853:31:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6900:1:19","nodeType":"YulLiteral","src":"6900:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"6903:4:19","nodeType":"YulLiteral","src":"6903:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6893:6:19","nodeType":"YulIdentifier","src":"6893:6:19"},"nativeSrc":"6893:15:19","nodeType":"YulFunctionCall","src":"6893:15:19"},"nativeSrc":"6893:15:19","nodeType":"YulExpressionStatement","src":"6893:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6924:1:19","nodeType":"YulLiteral","src":"6924:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"6927:4:19","nodeType":"YulLiteral","src":"6927:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6917:6:19","nodeType":"YulIdentifier","src":"6917:6:19"},"nativeSrc":"6917:15:19","nodeType":"YulFunctionCall","src":"6917:15:19"},"nativeSrc":"6917:15:19","nodeType":"YulExpressionStatement","src":"6917:15:19"}]},"name":"panic_error_0x11","nativeSrc":"6811:127:19","nodeType":"YulFunctionDefinition","src":"6811:127:19"},{"body":{"nativeSrc":"6990:88:19","nodeType":"YulBlock","src":"6990:88:19","statements":[{"body":{"nativeSrc":"7021:22:19","nodeType":"YulBlock","src":"7021:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7023:16:19","nodeType":"YulIdentifier","src":"7023:16:19"},"nativeSrc":"7023:18:19","nodeType":"YulFunctionCall","src":"7023:18:19"},"nativeSrc":"7023:18:19","nodeType":"YulExpressionStatement","src":"7023:18:19"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"7006:5:19","nodeType":"YulIdentifier","src":"7006:5:19"},{"arguments":[{"kind":"number","nativeSrc":"7017:1:19","nodeType":"YulLiteral","src":"7017:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7013:3:19","nodeType":"YulIdentifier","src":"7013:3:19"},"nativeSrc":"7013:6:19","nodeType":"YulFunctionCall","src":"7013:6:19"}],"functionName":{"name":"eq","nativeSrc":"7003:2:19","nodeType":"YulIdentifier","src":"7003:2:19"},"nativeSrc":"7003:17:19","nodeType":"YulFunctionCall","src":"7003:17:19"},"nativeSrc":"7000:43:19","nodeType":"YulIf","src":"7000:43:19"},{"nativeSrc":"7052:20:19","nodeType":"YulAssignment","src":"7052:20:19","value":{"arguments":[{"name":"value","nativeSrc":"7063:5:19","nodeType":"YulIdentifier","src":"7063:5:19"},{"kind":"number","nativeSrc":"7070:1:19","nodeType":"YulLiteral","src":"7070:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7059:3:19","nodeType":"YulIdentifier","src":"7059:3:19"},"nativeSrc":"7059:13:19","nodeType":"YulFunctionCall","src":"7059:13:19"},"variableNames":[{"name":"ret","nativeSrc":"7052:3:19","nodeType":"YulIdentifier","src":"7052:3:19"}]}]},"name":"increment_t_uint256","nativeSrc":"6943:135:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6972:5:19","nodeType":"YulTypedName","src":"6972:5:19","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6982:3:19","nodeType":"YulTypedName","src":"6982:3:19","type":""}],"src":"6943:135:19"},{"body":{"nativeSrc":"7174:557:19","nodeType":"YulBlock","src":"7174:557:19","statements":[{"body":{"nativeSrc":"7220:16:19","nodeType":"YulBlock","src":"7220:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7229:1:19","nodeType":"YulLiteral","src":"7229:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"7232:1:19","nodeType":"YulLiteral","src":"7232:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7222:6:19","nodeType":"YulIdentifier","src":"7222:6:19"},"nativeSrc":"7222:12:19","nodeType":"YulFunctionCall","src":"7222:12:19"},"nativeSrc":"7222:12:19","nodeType":"YulExpressionStatement","src":"7222:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7195:7:19","nodeType":"YulIdentifier","src":"7195:7:19"},{"name":"headStart","nativeSrc":"7204:9:19","nodeType":"YulIdentifier","src":"7204:9:19"}],"functionName":{"name":"sub","nativeSrc":"7191:3:19","nodeType":"YulIdentifier","src":"7191:3:19"},"nativeSrc":"7191:23:19","nodeType":"YulFunctionCall","src":"7191:23:19"},{"kind":"number","nativeSrc":"7216:2:19","nodeType":"YulLiteral","src":"7216:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7187:3:19","nodeType":"YulIdentifier","src":"7187:3:19"},"nativeSrc":"7187:32:19","nodeType":"YulFunctionCall","src":"7187:32:19"},"nativeSrc":"7184:52:19","nodeType":"YulIf","src":"7184:52:19"},{"nativeSrc":"7245:30:19","nodeType":"YulVariableDeclaration","src":"7245:30:19","value":{"arguments":[{"name":"headStart","nativeSrc":"7265:9:19","nodeType":"YulIdentifier","src":"7265:9:19"}],"functionName":{"name":"mload","nativeSrc":"7259:5:19","nodeType":"YulIdentifier","src":"7259:5:19"},"nativeSrc":"7259:16:19","nodeType":"YulFunctionCall","src":"7259:16:19"},"variables":[{"name":"offset","nativeSrc":"7249:6:19","nodeType":"YulTypedName","src":"7249:6:19","type":""}]},{"body":{"nativeSrc":"7318:16:19","nodeType":"YulBlock","src":"7318:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7327:1:19","nodeType":"YulLiteral","src":"7327:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"7330:1:19","nodeType":"YulLiteral","src":"7330:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7320:6:19","nodeType":"YulIdentifier","src":"7320:6:19"},"nativeSrc":"7320:12:19","nodeType":"YulFunctionCall","src":"7320:12:19"},"nativeSrc":"7320:12:19","nodeType":"YulExpressionStatement","src":"7320:12:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7290:6:19","nodeType":"YulIdentifier","src":"7290:6:19"},{"kind":"number","nativeSrc":"7298:18:19","nodeType":"YulLiteral","src":"7298:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7287:2:19","nodeType":"YulIdentifier","src":"7287:2:19"},"nativeSrc":"7287:30:19","nodeType":"YulFunctionCall","src":"7287:30:19"},"nativeSrc":"7284:50:19","nodeType":"YulIf","src":"7284:50:19"},{"nativeSrc":"7343:32:19","nodeType":"YulVariableDeclaration","src":"7343:32:19","value":{"arguments":[{"name":"headStart","nativeSrc":"7357:9:19","nodeType":"YulIdentifier","src":"7357:9:19"},{"name":"offset","nativeSrc":"7368:6:19","nodeType":"YulIdentifier","src":"7368:6:19"}],"functionName":{"name":"add","nativeSrc":"7353:3:19","nodeType":"YulIdentifier","src":"7353:3:19"},"nativeSrc":"7353:22:19","nodeType":"YulFunctionCall","src":"7353:22:19"},"variables":[{"name":"_1","nativeSrc":"7347:2:19","nodeType":"YulTypedName","src":"7347:2:19","type":""}]},{"body":{"nativeSrc":"7423:16:19","nodeType":"YulBlock","src":"7423:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7432:1:19","nodeType":"YulLiteral","src":"7432:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"7435:1:19","nodeType":"YulLiteral","src":"7435:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7425:6:19","nodeType":"YulIdentifier","src":"7425:6:19"},"nativeSrc":"7425:12:19","nodeType":"YulFunctionCall","src":"7425:12:19"},"nativeSrc":"7425:12:19","nodeType":"YulExpressionStatement","src":"7425:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"7402:2:19","nodeType":"YulIdentifier","src":"7402:2:19"},{"kind":"number","nativeSrc":"7406:4:19","nodeType":"YulLiteral","src":"7406:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7398:3:19","nodeType":"YulIdentifier","src":"7398:3:19"},"nativeSrc":"7398:13:19","nodeType":"YulFunctionCall","src":"7398:13:19"},{"name":"dataEnd","nativeSrc":"7413:7:19","nodeType":"YulIdentifier","src":"7413:7:19"}],"functionName":{"name":"slt","nativeSrc":"7394:3:19","nodeType":"YulIdentifier","src":"7394:3:19"},"nativeSrc":"7394:27:19","nodeType":"YulFunctionCall","src":"7394:27:19"}],"functionName":{"name":"iszero","nativeSrc":"7387:6:19","nodeType":"YulIdentifier","src":"7387:6:19"},"nativeSrc":"7387:35:19","nodeType":"YulFunctionCall","src":"7387:35:19"},"nativeSrc":"7384:55:19","nodeType":"YulIf","src":"7384:55:19"},{"nativeSrc":"7448:19:19","nodeType":"YulVariableDeclaration","src":"7448:19:19","value":{"arguments":[{"name":"_1","nativeSrc":"7464:2:19","nodeType":"YulIdentifier","src":"7464:2:19"}],"functionName":{"name":"mload","nativeSrc":"7458:5:19","nodeType":"YulIdentifier","src":"7458:5:19"},"nativeSrc":"7458:9:19","nodeType":"YulFunctionCall","src":"7458:9:19"},"variables":[{"name":"_2","nativeSrc":"7452:2:19","nodeType":"YulTypedName","src":"7452:2:19","type":""}]},{"nativeSrc":"7476:61:19","nodeType":"YulVariableDeclaration","src":"7476:61:19","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"7533:2:19","nodeType":"YulIdentifier","src":"7533:2:19"}],"functionName":{"name":"array_allocation_size_bytes","nativeSrc":"7505:27:19","nodeType":"YulIdentifier","src":"7505:27:19"},"nativeSrc":"7505:31:19","nodeType":"YulFunctionCall","src":"7505:31:19"}],"functionName":{"name":"allocate_memory","nativeSrc":"7489:15:19","nodeType":"YulIdentifier","src":"7489:15:19"},"nativeSrc":"7489:48:19","nodeType":"YulFunctionCall","src":"7489:48:19"},"variables":[{"name":"array","nativeSrc":"7480:5:19","nodeType":"YulTypedName","src":"7480:5:19","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"7553:5:19","nodeType":"YulIdentifier","src":"7553:5:19"},{"name":"_2","nativeSrc":"7560:2:19","nodeType":"YulIdentifier","src":"7560:2:19"}],"functionName":{"name":"mstore","nativeSrc":"7546:6:19","nodeType":"YulIdentifier","src":"7546:6:19"},"nativeSrc":"7546:17:19","nodeType":"YulFunctionCall","src":"7546:17:19"},"nativeSrc":"7546:17:19","nodeType":"YulExpressionStatement","src":"7546:17:19"},{"body":{"nativeSrc":"7609:16:19","nodeType":"YulBlock","src":"7609:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7618:1:19","nodeType":"YulLiteral","src":"7618:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"7621:1:19","nodeType":"YulLiteral","src":"7621:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7611:6:19","nodeType":"YulIdentifier","src":"7611:6:19"},"nativeSrc":"7611:12:19","nodeType":"YulFunctionCall","src":"7611:12:19"},"nativeSrc":"7611:12:19","nodeType":"YulExpressionStatement","src":"7611:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"7586:2:19","nodeType":"YulIdentifier","src":"7586:2:19"},{"name":"_2","nativeSrc":"7590:2:19","nodeType":"YulIdentifier","src":"7590:2:19"}],"functionName":{"name":"add","nativeSrc":"7582:3:19","nodeType":"YulIdentifier","src":"7582:3:19"},"nativeSrc":"7582:11:19","nodeType":"YulFunctionCall","src":"7582:11:19"},{"kind":"number","nativeSrc":"7595:2:19","nodeType":"YulLiteral","src":"7595:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7578:3:19","nodeType":"YulIdentifier","src":"7578:3:19"},"nativeSrc":"7578:20:19","nodeType":"YulFunctionCall","src":"7578:20:19"},{"name":"dataEnd","nativeSrc":"7600:7:19","nodeType":"YulIdentifier","src":"7600:7:19"}],"functionName":{"name":"gt","nativeSrc":"7575:2:19","nodeType":"YulIdentifier","src":"7575:2:19"},"nativeSrc":"7575:33:19","nodeType":"YulFunctionCall","src":"7575:33:19"},"nativeSrc":"7572:53:19","nodeType":"YulIf","src":"7572:53:19"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"7673:2:19","nodeType":"YulIdentifier","src":"7673:2:19"},{"kind":"number","nativeSrc":"7677:2:19","nodeType":"YulLiteral","src":"7677:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7669:3:19","nodeType":"YulIdentifier","src":"7669:3:19"},"nativeSrc":"7669:11:19","nodeType":"YulFunctionCall","src":"7669:11:19"},{"arguments":[{"name":"array","nativeSrc":"7686:5:19","nodeType":"YulIdentifier","src":"7686:5:19"},{"kind":"number","nativeSrc":"7693:2:19","nodeType":"YulLiteral","src":"7693:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7682:3:19","nodeType":"YulIdentifier","src":"7682:3:19"},"nativeSrc":"7682:14:19","nodeType":"YulFunctionCall","src":"7682:14:19"},{"name":"_2","nativeSrc":"7698:2:19","nodeType":"YulIdentifier","src":"7698:2:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7634:34:19","nodeType":"YulIdentifier","src":"7634:34:19"},"nativeSrc":"7634:67:19","nodeType":"YulFunctionCall","src":"7634:67:19"},"nativeSrc":"7634:67:19","nodeType":"YulExpressionStatement","src":"7634:67:19"},{"nativeSrc":"7710:15:19","nodeType":"YulAssignment","src":"7710:15:19","value":{"name":"array","nativeSrc":"7720:5:19","nodeType":"YulIdentifier","src":"7720:5:19"},"variableNames":[{"name":"value0","nativeSrc":"7710:6:19","nodeType":"YulIdentifier","src":"7710:6:19"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nativeSrc":"7083:648:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7140:9:19","nodeType":"YulTypedName","src":"7140:9:19","type":""},{"name":"dataEnd","nativeSrc":"7151:7:19","nodeType":"YulTypedName","src":"7151:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7163:6:19","nodeType":"YulTypedName","src":"7163:6:19","type":""}],"src":"7083:648:19"},{"body":{"nativeSrc":"7939:286:19","nodeType":"YulBlock","src":"7939:286:19","statements":[{"nativeSrc":"7949:29:19","nodeType":"YulVariableDeclaration","src":"7949:29:19","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7967:3:19","nodeType":"YulLiteral","src":"7967:3:19","type":"","value":"160"},{"kind":"number","nativeSrc":"7972:1:19","nodeType":"YulLiteral","src":"7972:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7963:3:19","nodeType":"YulIdentifier","src":"7963:3:19"},"nativeSrc":"7963:11:19","nodeType":"YulFunctionCall","src":"7963:11:19"},{"kind":"number","nativeSrc":"7976:1:19","nodeType":"YulLiteral","src":"7976:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7959:3:19","nodeType":"YulIdentifier","src":"7959:3:19"},"nativeSrc":"7959:19:19","nodeType":"YulFunctionCall","src":"7959:19:19"},"variables":[{"name":"_1","nativeSrc":"7953:2:19","nodeType":"YulTypedName","src":"7953:2:19","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7994:9:19","nodeType":"YulIdentifier","src":"7994:9:19"},{"arguments":[{"name":"value0","nativeSrc":"8009:6:19","nodeType":"YulIdentifier","src":"8009:6:19"},{"name":"_1","nativeSrc":"8017:2:19","nodeType":"YulIdentifier","src":"8017:2:19"}],"functionName":{"name":"and","nativeSrc":"8005:3:19","nodeType":"YulIdentifier","src":"8005:3:19"},"nativeSrc":"8005:15:19","nodeType":"YulFunctionCall","src":"8005:15:19"}],"functionName":{"name":"mstore","nativeSrc":"7987:6:19","nodeType":"YulIdentifier","src":"7987:6:19"},"nativeSrc":"7987:34:19","nodeType":"YulFunctionCall","src":"7987:34:19"},"nativeSrc":"7987:34:19","nodeType":"YulExpressionStatement","src":"7987:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8041:9:19","nodeType":"YulIdentifier","src":"8041:9:19"},{"kind":"number","nativeSrc":"8052:2:19","nodeType":"YulLiteral","src":"8052:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8037:3:19","nodeType":"YulIdentifier","src":"8037:3:19"},"nativeSrc":"8037:18:19","nodeType":"YulFunctionCall","src":"8037:18:19"},{"arguments":[{"name":"value1","nativeSrc":"8061:6:19","nodeType":"YulIdentifier","src":"8061:6:19"},{"name":"_1","nativeSrc":"8069:2:19","nodeType":"YulIdentifier","src":"8069:2:19"}],"functionName":{"name":"and","nativeSrc":"8057:3:19","nodeType":"YulIdentifier","src":"8057:3:19"},"nativeSrc":"8057:15:19","nodeType":"YulFunctionCall","src":"8057:15:19"}],"functionName":{"name":"mstore","nativeSrc":"8030:6:19","nodeType":"YulIdentifier","src":"8030:6:19"},"nativeSrc":"8030:43:19","nodeType":"YulFunctionCall","src":"8030:43:19"},"nativeSrc":"8030:43:19","nodeType":"YulExpressionStatement","src":"8030:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8093:9:19","nodeType":"YulIdentifier","src":"8093:9:19"},{"kind":"number","nativeSrc":"8104:2:19","nodeType":"YulLiteral","src":"8104:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8089:3:19","nodeType":"YulIdentifier","src":"8089:3:19"},"nativeSrc":"8089:18:19","nodeType":"YulFunctionCall","src":"8089:18:19"},{"name":"value2","nativeSrc":"8109:6:19","nodeType":"YulIdentifier","src":"8109:6:19"}],"functionName":{"name":"mstore","nativeSrc":"8082:6:19","nodeType":"YulIdentifier","src":"8082:6:19"},"nativeSrc":"8082:34:19","nodeType":"YulFunctionCall","src":"8082:34:19"},"nativeSrc":"8082:34:19","nodeType":"YulExpressionStatement","src":"8082:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8136:9:19","nodeType":"YulIdentifier","src":"8136:9:19"},{"kind":"number","nativeSrc":"8147:2:19","nodeType":"YulLiteral","src":"8147:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8132:3:19","nodeType":"YulIdentifier","src":"8132:3:19"},"nativeSrc":"8132:18:19","nodeType":"YulFunctionCall","src":"8132:18:19"},{"kind":"number","nativeSrc":"8152:3:19","nodeType":"YulLiteral","src":"8152:3:19","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"8125:6:19","nodeType":"YulIdentifier","src":"8125:6:19"},"nativeSrc":"8125:31:19","nodeType":"YulFunctionCall","src":"8125:31:19"},"nativeSrc":"8125:31:19","nodeType":"YulExpressionStatement","src":"8125:31:19"},{"nativeSrc":"8165:54:19","nodeType":"YulAssignment","src":"8165:54:19","value":{"arguments":[{"name":"value3","nativeSrc":"8191:6:19","nodeType":"YulIdentifier","src":"8191:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"8203:9:19","nodeType":"YulIdentifier","src":"8203:9:19"},{"kind":"number","nativeSrc":"8214:3:19","nodeType":"YulLiteral","src":"8214:3:19","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8199:3:19","nodeType":"YulIdentifier","src":"8199:3:19"},"nativeSrc":"8199:19:19","nodeType":"YulFunctionCall","src":"8199:19:19"}],"functionName":{"name":"abi_encode_string","nativeSrc":"8173:17:19","nodeType":"YulIdentifier","src":"8173:17:19"},"nativeSrc":"8173:46:19","nodeType":"YulFunctionCall","src":"8173:46:19"},"variableNames":[{"name":"tail","nativeSrc":"8165:4:19","nodeType":"YulIdentifier","src":"8165:4:19"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"7736:489:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7884:9:19","nodeType":"YulTypedName","src":"7884:9:19","type":""},{"name":"value3","nativeSrc":"7895:6:19","nodeType":"YulTypedName","src":"7895:6:19","type":""},{"name":"value2","nativeSrc":"7903:6:19","nodeType":"YulTypedName","src":"7903:6:19","type":""},{"name":"value1","nativeSrc":"7911:6:19","nodeType":"YulTypedName","src":"7911:6:19","type":""},{"name":"value0","nativeSrc":"7919:6:19","nodeType":"YulTypedName","src":"7919:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7930:4:19","nodeType":"YulTypedName","src":"7930:4:19","type":""}],"src":"7736:489:19"},{"body":{"nativeSrc":"8310:169:19","nodeType":"YulBlock","src":"8310:169:19","statements":[{"body":{"nativeSrc":"8356:16:19","nodeType":"YulBlock","src":"8356:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8365:1:19","nodeType":"YulLiteral","src":"8365:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"8368:1:19","nodeType":"YulLiteral","src":"8368:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8358:6:19","nodeType":"YulIdentifier","src":"8358:6:19"},"nativeSrc":"8358:12:19","nodeType":"YulFunctionCall","src":"8358:12:19"},"nativeSrc":"8358:12:19","nodeType":"YulExpressionStatement","src":"8358:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8331:7:19","nodeType":"YulIdentifier","src":"8331:7:19"},{"name":"headStart","nativeSrc":"8340:9:19","nodeType":"YulIdentifier","src":"8340:9:19"}],"functionName":{"name":"sub","nativeSrc":"8327:3:19","nodeType":"YulIdentifier","src":"8327:3:19"},"nativeSrc":"8327:23:19","nodeType":"YulFunctionCall","src":"8327:23:19"},{"kind":"number","nativeSrc":"8352:2:19","nodeType":"YulLiteral","src":"8352:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8323:3:19","nodeType":"YulIdentifier","src":"8323:3:19"},"nativeSrc":"8323:32:19","nodeType":"YulFunctionCall","src":"8323:32:19"},"nativeSrc":"8320:52:19","nodeType":"YulIf","src":"8320:52:19"},{"nativeSrc":"8381:29:19","nodeType":"YulVariableDeclaration","src":"8381:29:19","value":{"arguments":[{"name":"headStart","nativeSrc":"8400:9:19","nodeType":"YulIdentifier","src":"8400:9:19"}],"functionName":{"name":"mload","nativeSrc":"8394:5:19","nodeType":"YulIdentifier","src":"8394:5:19"},"nativeSrc":"8394:16:19","nodeType":"YulFunctionCall","src":"8394:16:19"},"variables":[{"name":"value","nativeSrc":"8385:5:19","nodeType":"YulTypedName","src":"8385:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8443:5:19","nodeType":"YulIdentifier","src":"8443:5:19"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"8419:23:19","nodeType":"YulIdentifier","src":"8419:23:19"},"nativeSrc":"8419:30:19","nodeType":"YulFunctionCall","src":"8419:30:19"},"nativeSrc":"8419:30:19","nodeType":"YulExpressionStatement","src":"8419:30:19"},{"nativeSrc":"8458:15:19","nodeType":"YulAssignment","src":"8458:15:19","value":{"name":"value","nativeSrc":"8468:5:19","nodeType":"YulIdentifier","src":"8468:5:19"},"variableNames":[{"name":"value0","nativeSrc":"8458:6:19","nodeType":"YulIdentifier","src":"8458:6:19"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"8230:249:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8276:9:19","nodeType":"YulTypedName","src":"8276:9:19","type":""},{"name":"dataEnd","nativeSrc":"8287:7:19","nodeType":"YulTypedName","src":"8287:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8299:6:19","nodeType":"YulTypedName","src":"8299:6:19","type":""}],"src":"8230:249:19"},{"body":{"nativeSrc":"8533:79:19","nodeType":"YulBlock","src":"8533:79:19","statements":[{"nativeSrc":"8543:17:19","nodeType":"YulAssignment","src":"8543:17:19","value":{"arguments":[{"name":"x","nativeSrc":"8555:1:19","nodeType":"YulIdentifier","src":"8555:1:19"},{"name":"y","nativeSrc":"8558:1:19","nodeType":"YulIdentifier","src":"8558:1:19"}],"functionName":{"name":"sub","nativeSrc":"8551:3:19","nodeType":"YulIdentifier","src":"8551:3:19"},"nativeSrc":"8551:9:19","nodeType":"YulFunctionCall","src":"8551:9:19"},"variableNames":[{"name":"diff","nativeSrc":"8543:4:19","nodeType":"YulIdentifier","src":"8543:4:19"}]},{"body":{"nativeSrc":"8584:22:19","nodeType":"YulBlock","src":"8584:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8586:16:19","nodeType":"YulIdentifier","src":"8586:16:19"},"nativeSrc":"8586:18:19","nodeType":"YulFunctionCall","src":"8586:18:19"},"nativeSrc":"8586:18:19","nodeType":"YulExpressionStatement","src":"8586:18:19"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"8575:4:19","nodeType":"YulIdentifier","src":"8575:4:19"},{"name":"x","nativeSrc":"8581:1:19","nodeType":"YulIdentifier","src":"8581:1:19"}],"functionName":{"name":"gt","nativeSrc":"8572:2:19","nodeType":"YulIdentifier","src":"8572:2:19"},"nativeSrc":"8572:11:19","nodeType":"YulFunctionCall","src":"8572:11:19"},"nativeSrc":"8569:37:19","nodeType":"YulIf","src":"8569:37:19"}]},"name":"checked_sub_t_uint256","nativeSrc":"8484:128:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8515:1:19","nodeType":"YulTypedName","src":"8515:1:19","type":""},{"name":"y","nativeSrc":"8518:1:19","nodeType":"YulTypedName","src":"8518:1:19","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"8524:4:19","nodeType":"YulTypedName","src":"8524:4:19","type":""}],"src":"8484:128:19"},{"body":{"nativeSrc":"8747:201:19","nodeType":"YulBlock","src":"8747:201:19","statements":[{"body":{"nativeSrc":"8785:16:19","nodeType":"YulBlock","src":"8785:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8794:1:19","nodeType":"YulLiteral","src":"8794:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"8797:1:19","nodeType":"YulLiteral","src":"8797:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8787:6:19","nodeType":"YulIdentifier","src":"8787:6:19"},"nativeSrc":"8787:12:19","nodeType":"YulFunctionCall","src":"8787:12:19"},"nativeSrc":"8787:12:19","nodeType":"YulExpressionStatement","src":"8787:12:19"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"8763:10:19","nodeType":"YulIdentifier","src":"8763:10:19"},{"name":"endIndex","nativeSrc":"8775:8:19","nodeType":"YulIdentifier","src":"8775:8:19"}],"functionName":{"name":"gt","nativeSrc":"8760:2:19","nodeType":"YulIdentifier","src":"8760:2:19"},"nativeSrc":"8760:24:19","nodeType":"YulFunctionCall","src":"8760:24:19"},"nativeSrc":"8757:44:19","nodeType":"YulIf","src":"8757:44:19"},{"body":{"nativeSrc":"8834:16:19","nodeType":"YulBlock","src":"8834:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8843:1:19","nodeType":"YulLiteral","src":"8843:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"8846:1:19","nodeType":"YulLiteral","src":"8846:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8836:6:19","nodeType":"YulIdentifier","src":"8836:6:19"},"nativeSrc":"8836:12:19","nodeType":"YulFunctionCall","src":"8836:12:19"},"nativeSrc":"8836:12:19","nodeType":"YulExpressionStatement","src":"8836:12:19"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"8816:8:19","nodeType":"YulIdentifier","src":"8816:8:19"},{"name":"length","nativeSrc":"8826:6:19","nodeType":"YulIdentifier","src":"8826:6:19"}],"functionName":{"name":"gt","nativeSrc":"8813:2:19","nodeType":"YulIdentifier","src":"8813:2:19"},"nativeSrc":"8813:20:19","nodeType":"YulFunctionCall","src":"8813:20:19"},"nativeSrc":"8810:40:19","nodeType":"YulIf","src":"8810:40:19"},{"nativeSrc":"8859:36:19","nodeType":"YulAssignment","src":"8859:36:19","value":{"arguments":[{"name":"offset","nativeSrc":"8876:6:19","nodeType":"YulIdentifier","src":"8876:6:19"},{"name":"startIndex","nativeSrc":"8884:10:19","nodeType":"YulIdentifier","src":"8884:10:19"}],"functionName":{"name":"add","nativeSrc":"8872:3:19","nodeType":"YulIdentifier","src":"8872:3:19"},"nativeSrc":"8872:23:19","nodeType":"YulFunctionCall","src":"8872:23:19"},"variableNames":[{"name":"offsetOut","nativeSrc":"8859:9:19","nodeType":"YulIdentifier","src":"8859:9:19"}]},{"nativeSrc":"8904:38:19","nodeType":"YulAssignment","src":"8904:38:19","value":{"arguments":[{"name":"endIndex","nativeSrc":"8921:8:19","nodeType":"YulIdentifier","src":"8921:8:19"},{"name":"startIndex","nativeSrc":"8931:10:19","nodeType":"YulIdentifier","src":"8931:10:19"}],"functionName":{"name":"sub","nativeSrc":"8917:3:19","nodeType":"YulIdentifier","src":"8917:3:19"},"nativeSrc":"8917:25:19","nodeType":"YulFunctionCall","src":"8917:25:19"},"variableNames":[{"name":"lengthOut","nativeSrc":"8904:9:19","nodeType":"YulIdentifier","src":"8904:9:19"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"8617:331:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8681:6:19","nodeType":"YulTypedName","src":"8681:6:19","type":""},{"name":"length","nativeSrc":"8689:6:19","nodeType":"YulTypedName","src":"8689:6:19","type":""},{"name":"startIndex","nativeSrc":"8697:10:19","nodeType":"YulTypedName","src":"8697:10:19","type":""},{"name":"endIndex","nativeSrc":"8709:8:19","nodeType":"YulTypedName","src":"8709:8:19","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"8722:9:19","nodeType":"YulTypedName","src":"8722:9:19","type":""},{"name":"lengthOut","nativeSrc":"8733:9:19","nodeType":"YulTypedName","src":"8733:9:19","type":""}],"src":"8617:331:19"},{"body":{"nativeSrc":"9054:236:19","nodeType":"YulBlock","src":"9054:236:19","statements":[{"nativeSrc":"9064:29:19","nodeType":"YulVariableDeclaration","src":"9064:29:19","value":{"arguments":[{"name":"array","nativeSrc":"9087:5:19","nodeType":"YulIdentifier","src":"9087:5:19"}],"functionName":{"name":"calldataload","nativeSrc":"9074:12:19","nodeType":"YulIdentifier","src":"9074:12:19"},"nativeSrc":"9074:19:19","nodeType":"YulFunctionCall","src":"9074:19:19"},"variables":[{"name":"_1","nativeSrc":"9068:2:19","nodeType":"YulTypedName","src":"9068:2:19","type":""}]},{"nativeSrc":"9102:41:19","nodeType":"YulVariableDeclaration","src":"9102:41:19","value":{"arguments":[{"kind":"number","nativeSrc":"9116:26:19","nodeType":"YulLiteral","src":"9116:26:19","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"9112:3:19","nodeType":"YulIdentifier","src":"9112:3:19"},"nativeSrc":"9112:31:19","nodeType":"YulFunctionCall","src":"9112:31:19"},"variables":[{"name":"_2","nativeSrc":"9106:2:19","nodeType":"YulTypedName","src":"9106:2:19","type":""}]},{"nativeSrc":"9152:20:19","nodeType":"YulAssignment","src":"9152:20:19","value":{"arguments":[{"name":"_1","nativeSrc":"9165:2:19","nodeType":"YulIdentifier","src":"9165:2:19"},{"name":"_2","nativeSrc":"9169:2:19","nodeType":"YulIdentifier","src":"9169:2:19"}],"functionName":{"name":"and","nativeSrc":"9161:3:19","nodeType":"YulIdentifier","src":"9161:3:19"},"nativeSrc":"9161:11:19","nodeType":"YulFunctionCall","src":"9161:11:19"},"variableNames":[{"name":"value","nativeSrc":"9152:5:19","nodeType":"YulIdentifier","src":"9152:5:19"}]},{"body":{"nativeSrc":"9204:80:19","nodeType":"YulBlock","src":"9204:80:19","statements":[{"nativeSrc":"9218:56:19","nodeType":"YulAssignment","src":"9218:56:19","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"9235:2:19","nodeType":"YulIdentifier","src":"9235:2:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9247:1:19","nodeType":"YulLiteral","src":"9247:1:19","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"9254:2:19","nodeType":"YulLiteral","src":"9254:2:19","type":"","value":"20"},{"name":"len","nativeSrc":"9258:3:19","nodeType":"YulIdentifier","src":"9258:3:19"}],"functionName":{"name":"sub","nativeSrc":"9250:3:19","nodeType":"YulIdentifier","src":"9250:3:19"},"nativeSrc":"9250:12:19","nodeType":"YulFunctionCall","src":"9250:12:19"}],"functionName":{"name":"shl","nativeSrc":"9243:3:19","nodeType":"YulIdentifier","src":"9243:3:19"},"nativeSrc":"9243:20:19","nodeType":"YulFunctionCall","src":"9243:20:19"},{"name":"_2","nativeSrc":"9265:2:19","nodeType":"YulIdentifier","src":"9265:2:19"}],"functionName":{"name":"shl","nativeSrc":"9239:3:19","nodeType":"YulIdentifier","src":"9239:3:19"},"nativeSrc":"9239:29:19","nodeType":"YulFunctionCall","src":"9239:29:19"}],"functionName":{"name":"and","nativeSrc":"9231:3:19","nodeType":"YulIdentifier","src":"9231:3:19"},"nativeSrc":"9231:38:19","nodeType":"YulFunctionCall","src":"9231:38:19"},{"name":"_2","nativeSrc":"9271:2:19","nodeType":"YulIdentifier","src":"9271:2:19"}],"functionName":{"name":"and","nativeSrc":"9227:3:19","nodeType":"YulIdentifier","src":"9227:3:19"},"nativeSrc":"9227:47:19","nodeType":"YulFunctionCall","src":"9227:47:19"},"variableNames":[{"name":"value","nativeSrc":"9218:5:19","nodeType":"YulIdentifier","src":"9218:5:19"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"9187:3:19","nodeType":"YulIdentifier","src":"9187:3:19"},{"kind":"number","nativeSrc":"9192:2:19","nodeType":"YulLiteral","src":"9192:2:19","type":"","value":"20"}],"functionName":{"name":"lt","nativeSrc":"9184:2:19","nodeType":"YulIdentifier","src":"9184:2:19"},"nativeSrc":"9184:11:19","nodeType":"YulFunctionCall","src":"9184:11:19"},"nativeSrc":"9181:103:19","nodeType":"YulIf","src":"9181:103:19"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20","nativeSrc":"8953:337:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"9029:5:19","nodeType":"YulTypedName","src":"9029:5:19","type":""},{"name":"len","nativeSrc":"9036:3:19","nodeType":"YulTypedName","src":"9036:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9044:5:19","nodeType":"YulTypedName","src":"9044:5:19","type":""}],"src":"8953:337:19"},{"body":{"nativeSrc":"9424:145:19","nodeType":"YulBlock","src":"9424:145:19","statements":[{"nativeSrc":"9434:26:19","nodeType":"YulAssignment","src":"9434:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"9446:9:19","nodeType":"YulIdentifier","src":"9446:9:19"},{"kind":"number","nativeSrc":"9457:2:19","nodeType":"YulLiteral","src":"9457:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9442:3:19","nodeType":"YulIdentifier","src":"9442:3:19"},"nativeSrc":"9442:18:19","nodeType":"YulFunctionCall","src":"9442:18:19"},"variableNames":[{"name":"tail","nativeSrc":"9434:4:19","nodeType":"YulIdentifier","src":"9434:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9476:9:19","nodeType":"YulIdentifier","src":"9476:9:19"},{"arguments":[{"name":"value0","nativeSrc":"9491:6:19","nodeType":"YulIdentifier","src":"9491:6:19"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9507:3:19","nodeType":"YulLiteral","src":"9507:3:19","type":"","value":"160"},{"kind":"number","nativeSrc":"9512:1:19","nodeType":"YulLiteral","src":"9512:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9503:3:19","nodeType":"YulIdentifier","src":"9503:3:19"},"nativeSrc":"9503:11:19","nodeType":"YulFunctionCall","src":"9503:11:19"},{"kind":"number","nativeSrc":"9516:1:19","nodeType":"YulLiteral","src":"9516:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9499:3:19","nodeType":"YulIdentifier","src":"9499:3:19"},"nativeSrc":"9499:19:19","nodeType":"YulFunctionCall","src":"9499:19:19"}],"functionName":{"name":"and","nativeSrc":"9487:3:19","nodeType":"YulIdentifier","src":"9487:3:19"},"nativeSrc":"9487:32:19","nodeType":"YulFunctionCall","src":"9487:32:19"}],"functionName":{"name":"mstore","nativeSrc":"9469:6:19","nodeType":"YulIdentifier","src":"9469:6:19"},"nativeSrc":"9469:51:19","nodeType":"YulFunctionCall","src":"9469:51:19"},"nativeSrc":"9469:51:19","nodeType":"YulExpressionStatement","src":"9469:51:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9540:9:19","nodeType":"YulIdentifier","src":"9540:9:19"},{"kind":"number","nativeSrc":"9551:2:19","nodeType":"YulLiteral","src":"9551:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9536:3:19","nodeType":"YulIdentifier","src":"9536:3:19"},"nativeSrc":"9536:18:19","nodeType":"YulFunctionCall","src":"9536:18:19"},{"name":"value1","nativeSrc":"9556:6:19","nodeType":"YulIdentifier","src":"9556:6:19"}],"functionName":{"name":"mstore","nativeSrc":"9529:6:19","nodeType":"YulIdentifier","src":"9529:6:19"},"nativeSrc":"9529:34:19","nodeType":"YulFunctionCall","src":"9529:34:19"},"nativeSrc":"9529:34:19","nodeType":"YulExpressionStatement","src":"9529:34:19"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"9295:274:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9385:9:19","nodeType":"YulTypedName","src":"9385:9:19","type":""},{"name":"value1","nativeSrc":"9396:6:19","nodeType":"YulTypedName","src":"9396:6:19","type":""},{"name":"value0","nativeSrc":"9404:6:19","nodeType":"YulTypedName","src":"9404:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9415:4:19","nodeType":"YulTypedName","src":"9415:4:19","type":""}],"src":"9295:274:19"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_contract$_IJBTokenUriResolver_$6727(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := calldataload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, 32), add(_1, 32), _2)\n        mstore(add(add(array, _2), 32), 0)\n        value3 := array\n    }\n    function abi_encode_tuple_t_contract$_IJBTokenUriResolver_$6727__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := mload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(array, 32), _2)\n        value0 := array\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value\n    {\n        let _1 := calldataload(array)\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(len, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, len)), _2)), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"immutableReferences":{"294":[{"start":548,"length":32},{"start":644,"length":32},{"start":3023,"length":32}]}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","count()":"06661abd","createFor(address)":"c0715888","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","isTrustedForwarder(address)":"572b6c05","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setTokenUriResolver(address)":"2407497e","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","tokenUriResolver()":"e131fc0c","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","trustedForwarder()":"7da0a877"},"gasEstimates":{"creation":{"codeDepositCost":"986000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2716","count()":"2341","createFor(address)":"infinite","getApproved(uint256)":"infinite","isApprovedForAll(address,address)":"infinite","isTrustedForwarder(address)":"infinite","name()":"infinite","owner()":"2398","ownerOf(uint256)":"infinite","renounceOwnership()":"infinite","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","setTokenUriResolver(address)":"infinite","supportsInterface(bytes4)":"infinite","symbol()":"infinite","tokenURI(uint256)":"infinite","tokenUriResolver()":"2425","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite","trustedForwarder()":"infinite"},"internal":{"_contextSuffixLength()":"infinite","_msgData()":"infinite","_msgSender()":"infinite"}}}}},"src/interfaces/IJBProjects.sol":{"IJBProjects":{"abi":[{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"count","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"createFor","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"projectId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"operator","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"owner","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTokenUriResolver","inputs":[{"name":"resolver","type":"address","internalType":"contract IJBTokenUriResolver"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"tokenUriResolver","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IJBTokenUriResolver"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Create","inputs":[{"name":"projectId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"caller","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SetTokenUriResolver","inputs":[{"name":"resolver","type":"address","indexed":true,"internalType":"contract IJBTokenUriResolver"},{"name":"caller","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Create\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IJBTokenUriResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SetTokenUriResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IJBTokenUriResolver\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setTokenUriResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenUriResolver\",\"outputs\":[{\"internalType\":\"contract IJBTokenUriResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IJBProjects.sol\":\"IJBProjects\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"src/interfaces/IJBProjects.sol\":{\"keccak256\":\"0x4ae42a9cc29b517b26d2b9b635deb82c16696b777deeca92dfcad33b0f81c0a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dcbd860e7d7f05232d90c5e9cfd3d01e2ce986ffcdb053473d8a4d387b1a48a\",\"dweb:/ipfs/QmWKWoSJJbVWDumbnzXJBJyXmAacgC97bxMtchh8te41bn\"]},\"src/interfaces/IJBTokenUriResolver.sol\":{\"keccak256\":\"0xfa5cb00dcd6085d1ef912d071fe73c63f9478a2cd0f9d8bddaf659b6af2d0967\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282e4e7c342d65f77cde0e9a08fcaf20ef5cf379c7a48b639842c0ffd0b2afb8\",\"dweb:/ipfs/QmbnN3PEQeZaXdPLT75V1J79kMg7KqSMru37RHrL3z8Yf2\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","count()":"06661abd","createFor(address)":"c0715888","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setTokenUriResolver(address)":"2407497e","supportsInterface(bytes4)":"01ffc9a7","tokenUriResolver()":"e131fc0c","transferFrom(address,address,uint256)":"23b872dd"}}}},"src/interfaces/IJBTokenUriResolver.sol":{"IJBTokenUriResolver":{"abi":[{"type":"function","name":"getUri","inputs":[{"name":"projectId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"tokenUri","type":"string","internalType":"string"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"getUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IJBTokenUriResolver.sol\":\"IJBTokenUriResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@sphinx-labs/contracts/=lib/sphinx/packages/contracts/contracts/foundry/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\",\":sphinx/=lib/sphinx/packages/contracts/contracts/forge-std/src/\"]},\"sources\":{\"src/interfaces/IJBTokenUriResolver.sol\":{\"keccak256\":\"0xfa5cb00dcd6085d1ef912d071fe73c63f9478a2cd0f9d8bddaf659b6af2d0967\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282e4e7c342d65f77cde0e9a08fcaf20ef5cf379c7a48b639842c0ffd0b2afb8\",\"dweb:/ipfs/QmbnN3PEQeZaXdPLT75V1J79kMg7KqSMru37RHrL3z8Yf2\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getUri(uint256)":"da0544aa"}}}}}}},"expires_at":18446744073709551615}