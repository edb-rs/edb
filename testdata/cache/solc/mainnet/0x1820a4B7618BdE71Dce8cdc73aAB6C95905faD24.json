{"data":{"meta":{"SourceCode":"/* ERC1820 Pseudo-introspection Registry Contract\r\n * This standard defines a universal registry smart contract where any address (contract or regular account) can\r\n * register which interface it supports and which smart contract is responsible for its implementation.\r\n *\r\n * Written in 2019 by Jordi Baylina and Jacques Dafflon\r\n *\r\n * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to\r\n * this software to the public domain worldwide. This software is distributed without any warranty.\r\n *\r\n * You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see\r\n * <http://creativecommons.org/publicdomain/zero/1.0/>.\r\n *\r\n *    ███████╗██████╗  ██████╗ ██╗ █████╗ ██████╗  ██████╗\r\n *    ██╔════╝██╔══██╗██╔════╝███║██╔══██╗╚════██╗██╔═████╗\r\n *    █████╗  ██████╔╝██║     ╚██║╚█████╔╝ █████╔╝██║██╔██║\r\n *    ██╔══╝  ██╔══██╗██║      ██║██╔══██╗██╔═══╝ ████╔╝██║\r\n *    ███████╗██║  ██║╚██████╗ ██║╚█████╔╝███████╗╚██████╔╝\r\n *    ╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝ ╚════╝ ╚══════╝ ╚═════╝\r\n *\r\n *    ██████╗ ███████╗ ██████╗ ██╗███████╗████████╗██████╗ ██╗   ██╗\r\n *    ██╔══██╗██╔════╝██╔════╝ ██║██╔════╝╚══██╔══╝██╔══██╗╚██╗ ██╔╝\r\n *    ██████╔╝█████╗  ██║  ███╗██║███████╗   ██║   ██████╔╝ ╚████╔╝\r\n *    ██╔══██╗██╔══╝  ██║   ██║██║╚════██║   ██║   ██╔══██╗  ╚██╔╝\r\n *    ██║  ██║███████╗╚██████╔╝██║███████║   ██║   ██║  ██║   ██║\r\n *    ╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝\r\n *\r\n */\r\npragma solidity 0.5.3;\r\n// IV is value needed to have a vanity address starting with '0x1820'.\r\n// IV: 53759\r\n\r\n/// @dev The interface a contract MUST implement if it is the implementer of\r\n/// some (other) interface for any address other than itself.\r\ninterface ERC1820ImplementerInterface {\r\n    /// @notice Indicates whether the contract implements the interface 'interfaceHash' for the address 'addr' or not.\r\n    /// @param interfaceHash keccak256 hash of the name of the interface\r\n    /// @param addr Address for which the contract will implement the interface\r\n    /// @return ERC1820_ACCEPT_MAGIC only if the contract implements 'interfaceHash' for the address 'addr'.\r\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) external view returns(bytes32);\r\n}\r\n\r\n\r\n/// @title ERC1820 Pseudo-introspection Registry Contract\r\n/// @author Jordi Baylina and Jacques Dafflon\r\n/// @notice This contract is the official implementation of the ERC1820 Registry.\r\n/// @notice For more details, see https://eips.ethereum.org/EIPS/eip-1820\r\ncontract ERC1820Registry {\r\n    /// @notice ERC165 Invalid ID.\r\n    bytes4 constant internal INVALID_ID = 0xffffffff;\r\n    /// @notice Method ID for the ERC165 supportsInterface method (= `bytes4(keccak256('supportsInterface(bytes4)'))`).\r\n    bytes4 constant internal ERC165ID = 0x01ffc9a7;\r\n    /// @notice Magic value which is returned if a contract implements an interface on behalf of some other address.\r\n    bytes32 constant internal ERC1820_ACCEPT_MAGIC = keccak256(abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\"));\r\n\r\n    /// @notice mapping from addresses and interface hashes to their implementers.\r\n    mapping(address => mapping(bytes32 => address)) internal interfaces;\r\n    /// @notice mapping from addresses to their manager.\r\n    mapping(address => address) internal managers;\r\n    /// @notice flag for each address and erc165 interface to indicate if it is cached.\r\n    mapping(address => mapping(bytes4 => bool)) internal erc165Cached;\r\n\r\n    /// @notice Indicates a contract is the 'implementer' of 'interfaceHash' for 'addr'.\r\n    event InterfaceImplementerSet(address indexed addr, bytes32 indexed interfaceHash, address indexed implementer);\r\n    /// @notice Indicates 'newManager' is the address of the new manager for 'addr'.\r\n    event ManagerChanged(address indexed addr, address indexed newManager);\r\n\r\n    /// @notice Query if an address implements an interface and through which contract.\r\n    /// @param _addr Address being queried for the implementer of an interface.\r\n    /// (If '_addr' is the zero address then 'msg.sender' is assumed.)\r\n    /// @param _interfaceHash Keccak256 hash of the name of the interface as a string.\r\n    /// E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\r\n    /// @return The address of the contract which implements the interface '_interfaceHash' for '_addr'\r\n    /// or '0' if '_addr' did not register an implementer for this interface.\r\n    function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address) {\r\n        address addr = _addr == address(0) ? msg.sender : _addr;\r\n        if (isERC165Interface(_interfaceHash)) {\r\n            bytes4 erc165InterfaceHash = bytes4(_interfaceHash);\r\n            return implementsERC165Interface(addr, erc165InterfaceHash) ? addr : address(0);\r\n        }\r\n        return interfaces[addr][_interfaceHash];\r\n    }\r\n\r\n    /// @notice Sets the contract which implements a specific interface for an address.\r\n    /// Only the manager defined for that address can set it.\r\n    /// (Each address is the manager for itself until it sets a new manager.)\r\n    /// @param _addr Address for which to set the interface.\r\n    /// (If '_addr' is the zero address then 'msg.sender' is assumed.)\r\n    /// @param _interfaceHash Keccak256 hash of the name of the interface as a string.\r\n    /// E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\r\n    /// @param _implementer Contract address implementing '_interfaceHash' for '_addr'.\r\n    function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer) external {\r\n        address addr = _addr == address(0) ? msg.sender : _addr;\r\n        require(getManager(addr) == msg.sender, \"Not the manager\");\r\n\r\n        require(!isERC165Interface(_interfaceHash), \"Must not be an ERC165 hash\");\r\n        if (_implementer != address(0) && _implementer != msg.sender) {\r\n            require(\r\n                ERC1820ImplementerInterface(_implementer)\r\n                    .canImplementInterfaceForAddress(_interfaceHash, addr) == ERC1820_ACCEPT_MAGIC,\r\n                \"Does not implement the interface\"\r\n            );\r\n        }\r\n        interfaces[addr][_interfaceHash] = _implementer;\r\n        emit InterfaceImplementerSet(addr, _interfaceHash, _implementer);\r\n    }\r\n\r\n    /// @notice Sets '_newManager' as manager for '_addr'.\r\n    /// The new manager will be able to call 'setInterfaceImplementer' for '_addr'.\r\n    /// @param _addr Address for which to set the new manager.\r\n    /// @param _newManager Address of the new manager for 'addr'. (Pass '0x0' to reset the manager to '_addr'.)\r\n    function setManager(address _addr, address _newManager) external {\r\n        require(getManager(_addr) == msg.sender, \"Not the manager\");\r\n        managers[_addr] = _newManager == _addr ? address(0) : _newManager;\r\n        emit ManagerChanged(_addr, _newManager);\r\n    }\r\n\r\n    /// @notice Get the manager of an address.\r\n    /// @param _addr Address for which to return the manager.\r\n    /// @return Address of the manager for a given address.\r\n    function getManager(address _addr) public view returns(address) {\r\n        // By default the manager of an address is the same address\r\n        if (managers[_addr] == address(0)) {\r\n            return _addr;\r\n        } else {\r\n            return managers[_addr];\r\n        }\r\n    }\r\n\r\n    /// @notice Compute the keccak256 hash of an interface given its name.\r\n    /// @param _interfaceName Name of the interface.\r\n    /// @return The keccak256 hash of an interface name.\r\n    function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\r\n        return keccak256(abi.encodePacked(_interfaceName));\r\n    }\r\n\r\n    /* --- ERC165 Related Functions --- */\r\n    /* --- Developed in collaboration with William Entriken. --- */\r\n\r\n    /// @notice Updates the cache with whether the contract implements an ERC165 interface or not.\r\n    /// @param _contract Address of the contract for which to update the cache.\r\n    /// @param _interfaceId ERC165 interface for which to update the cache.\r\n    function updateERC165Cache(address _contract, bytes4 _interfaceId) external {\r\n        interfaces[_contract][_interfaceId] = implementsERC165InterfaceNoCache(\r\n            _contract, _interfaceId) ? _contract : address(0);\r\n        erc165Cached[_contract][_interfaceId] = true;\r\n    }\r\n\r\n    /// @notice Checks whether a contract implements an ERC165 interface or not.\r\n    //  If the result is not cached a direct lookup on the contract address is performed.\r\n    //  If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\r\n    //  'updateERC165Cache' with the contract address.\r\n    /// @param _contract Address of the contract to check.\r\n    /// @param _interfaceId ERC165 interface to check.\r\n    /// @return True if '_contract' implements '_interfaceId', false otherwise.\r\n    function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool) {\r\n        if (!erc165Cached[_contract][_interfaceId]) {\r\n            return implementsERC165InterfaceNoCache(_contract, _interfaceId);\r\n        }\r\n        return interfaces[_contract][_interfaceId] == _contract;\r\n    }\r\n\r\n    /// @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\r\n    /// @param _contract Address of the contract to check.\r\n    /// @param _interfaceId ERC165 interface to check.\r\n    /// @return True if '_contract' implements '_interfaceId', false otherwise.\r\n    function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool) {\r\n        uint256 success;\r\n        uint256 result;\r\n\r\n        (success, result) = noThrowCall(_contract, ERC165ID);\r\n        if (success == 0 || result == 0) {\r\n            return false;\r\n        }\r\n\r\n        (success, result) = noThrowCall(_contract, INVALID_ID);\r\n        if (success == 0 || result != 0) {\r\n            return false;\r\n        }\r\n\r\n        (success, result) = noThrowCall(_contract, _interfaceId);\r\n        if (success == 1 && result == 1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /// @notice Checks whether the hash is a ERC165 interface (ending with 28 zeroes) or not.\r\n    /// @param _interfaceHash The hash to check.\r\n    /// @return True if '_interfaceHash' is an ERC165 interface (ending with 28 zeroes), false otherwise.\r\n    function isERC165Interface(bytes32 _interfaceHash) internal pure returns (bool) {\r\n        return _interfaceHash & 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF == 0;\r\n    }\r\n\r\n    /// @dev Make a call on a contract without throwing if the function does not exist.\r\n    function noThrowCall(address _contract, bytes4 _interfaceId)\r\n        internal view returns (uint256 success, uint256 result)\r\n    {\r\n        bytes4 erc165ID = ERC165ID;\r\n\r\n        assembly {\r\n            let x := mload(0x40)               // Find empty storage location using \"free memory pointer\"\r\n            mstore(x, erc165ID)                // Place signature at beginning of empty storage\r\n            mstore(add(x, 0x04), _interfaceId) // Place first argument directly next to signature\r\n\r\n            success := staticcall(\r\n                30000,                         // 30k gas\r\n                _contract,                     // To addr\r\n                x,                             // Inputs are stored at location x\r\n                0x24,                          // Inputs are 36 (4 + 32) bytes long\r\n                x,                             // Store output over input (saves space)\r\n                0x20                           // Outputs are 32 bytes long\r\n            )\r\n\r\n            result := mload(x)                 // Load the result\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"name\":\"_implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"}]","ContractName":"ERC1820Registry","CompilerVersion":"v0.5.3+commit.10d17f24","OptimizationUsed":1,"Runs":200,"ConstructorArguments":"0x","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":0,"SwarmSource":"bzzr://377f4a2d4301ede9949f163f319021a6e9c687c292a5e2b2c4734c126b524e6c"},"input":{"language":"Solidity","sources":{"Contract":{"content":"/* ERC1820 Pseudo-introspection Registry Contract\r\n * This standard defines a universal registry smart contract where any address (contract or regular account) can\r\n * register which interface it supports and which smart contract is responsible for its implementation.\r\n *\r\n * Written in 2019 by Jordi Baylina and Jacques Dafflon\r\n *\r\n * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to\r\n * this software to the public domain worldwide. This software is distributed without any warranty.\r\n *\r\n * You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see\r\n * <http://creativecommons.org/publicdomain/zero/1.0/>.\r\n *\r\n *    ███████╗██████╗  ██████╗ ██╗ █████╗ ██████╗  ██████╗\r\n *    ██╔════╝██╔══██╗██╔════╝███║██╔══██╗╚════██╗██╔═████╗\r\n *    █████╗  ██████╔╝██║     ╚██║╚█████╔╝ █████╔╝██║██╔██║\r\n *    ██╔══╝  ██╔══██╗██║      ██║██╔══██╗██╔═══╝ ████╔╝██║\r\n *    ███████╗██║  ██║╚██████╗ ██║╚█████╔╝███████╗╚██████╔╝\r\n *    ╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝ ╚════╝ ╚══════╝ ╚═════╝\r\n *\r\n *    ██████╗ ███████╗ ██████╗ ██╗███████╗████████╗██████╗ ██╗   ██╗\r\n *    ██╔══██╗██╔════╝██╔════╝ ██║██╔════╝╚══██╔══╝██╔══██╗╚██╗ ██╔╝\r\n *    ██████╔╝█████╗  ██║  ███╗██║███████╗   ██║   ██████╔╝ ╚████╔╝\r\n *    ██╔══██╗██╔══╝  ██║   ██║██║╚════██║   ██║   ██╔══██╗  ╚██╔╝\r\n *    ██║  ██║███████╗╚██████╔╝██║███████║   ██║   ██║  ██║   ██║\r\n *    ╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝\r\n *\r\n */\r\npragma solidity 0.5.3;\r\n// IV is value needed to have a vanity address starting with '0x1820'.\r\n// IV: 53759\r\n\r\n/// @dev The interface a contract MUST implement if it is the implementer of\r\n/// some (other) interface for any address other than itself.\r\ninterface ERC1820ImplementerInterface {\r\n    /// @notice Indicates whether the contract implements the interface 'interfaceHash' for the address 'addr' or not.\r\n    /// @param interfaceHash keccak256 hash of the name of the interface\r\n    /// @param addr Address for which the contract will implement the interface\r\n    /// @return ERC1820_ACCEPT_MAGIC only if the contract implements 'interfaceHash' for the address 'addr'.\r\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) external view returns(bytes32);\r\n}\r\n\r\n\r\n/// @title ERC1820 Pseudo-introspection Registry Contract\r\n/// @author Jordi Baylina and Jacques Dafflon\r\n/// @notice This contract is the official implementation of the ERC1820 Registry.\r\n/// @notice For more details, see https://eips.ethereum.org/EIPS/eip-1820\r\ncontract ERC1820Registry {\r\n    /// @notice ERC165 Invalid ID.\r\n    bytes4 constant internal INVALID_ID = 0xffffffff;\r\n    /// @notice Method ID for the ERC165 supportsInterface method (= `bytes4(keccak256('supportsInterface(bytes4)'))`).\r\n    bytes4 constant internal ERC165ID = 0x01ffc9a7;\r\n    /// @notice Magic value which is returned if a contract implements an interface on behalf of some other address.\r\n    bytes32 constant internal ERC1820_ACCEPT_MAGIC = keccak256(abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\"));\r\n\r\n    /// @notice mapping from addresses and interface hashes to their implementers.\r\n    mapping(address => mapping(bytes32 => address)) internal interfaces;\r\n    /// @notice mapping from addresses to their manager.\r\n    mapping(address => address) internal managers;\r\n    /// @notice flag for each address and erc165 interface to indicate if it is cached.\r\n    mapping(address => mapping(bytes4 => bool)) internal erc165Cached;\r\n\r\n    /// @notice Indicates a contract is the 'implementer' of 'interfaceHash' for 'addr'.\r\n    event InterfaceImplementerSet(address indexed addr, bytes32 indexed interfaceHash, address indexed implementer);\r\n    /// @notice Indicates 'newManager' is the address of the new manager for 'addr'.\r\n    event ManagerChanged(address indexed addr, address indexed newManager);\r\n\r\n    /// @notice Query if an address implements an interface and through which contract.\r\n    /// @param _addr Address being queried for the implementer of an interface.\r\n    /// (If '_addr' is the zero address then 'msg.sender' is assumed.)\r\n    /// @param _interfaceHash Keccak256 hash of the name of the interface as a string.\r\n    /// E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\r\n    /// @return The address of the contract which implements the interface '_interfaceHash' for '_addr'\r\n    /// or '0' if '_addr' did not register an implementer for this interface.\r\n    function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address) {\r\n        address addr = _addr == address(0) ? msg.sender : _addr;\r\n        if (isERC165Interface(_interfaceHash)) {\r\n            bytes4 erc165InterfaceHash = bytes4(_interfaceHash);\r\n            return implementsERC165Interface(addr, erc165InterfaceHash) ? addr : address(0);\r\n        }\r\n        return interfaces[addr][_interfaceHash];\r\n    }\r\n\r\n    /// @notice Sets the contract which implements a specific interface for an address.\r\n    /// Only the manager defined for that address can set it.\r\n    /// (Each address is the manager for itself until it sets a new manager.)\r\n    /// @param _addr Address for which to set the interface.\r\n    /// (If '_addr' is the zero address then 'msg.sender' is assumed.)\r\n    /// @param _interfaceHash Keccak256 hash of the name of the interface as a string.\r\n    /// E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\r\n    /// @param _implementer Contract address implementing '_interfaceHash' for '_addr'.\r\n    function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer) external {\r\n        address addr = _addr == address(0) ? msg.sender : _addr;\r\n        require(getManager(addr) == msg.sender, \"Not the manager\");\r\n\r\n        require(!isERC165Interface(_interfaceHash), \"Must not be an ERC165 hash\");\r\n        if (_implementer != address(0) && _implementer != msg.sender) {\r\n            require(\r\n                ERC1820ImplementerInterface(_implementer)\r\n                    .canImplementInterfaceForAddress(_interfaceHash, addr) == ERC1820_ACCEPT_MAGIC,\r\n                \"Does not implement the interface\"\r\n            );\r\n        }\r\n        interfaces[addr][_interfaceHash] = _implementer;\r\n        emit InterfaceImplementerSet(addr, _interfaceHash, _implementer);\r\n    }\r\n\r\n    /// @notice Sets '_newManager' as manager for '_addr'.\r\n    /// The new manager will be able to call 'setInterfaceImplementer' for '_addr'.\r\n    /// @param _addr Address for which to set the new manager.\r\n    /// @param _newManager Address of the new manager for 'addr'. (Pass '0x0' to reset the manager to '_addr'.)\r\n    function setManager(address _addr, address _newManager) external {\r\n        require(getManager(_addr) == msg.sender, \"Not the manager\");\r\n        managers[_addr] = _newManager == _addr ? address(0) : _newManager;\r\n        emit ManagerChanged(_addr, _newManager);\r\n    }\r\n\r\n    /// @notice Get the manager of an address.\r\n    /// @param _addr Address for which to return the manager.\r\n    /// @return Address of the manager for a given address.\r\n    function getManager(address _addr) public view returns(address) {\r\n        // By default the manager of an address is the same address\r\n        if (managers[_addr] == address(0)) {\r\n            return _addr;\r\n        } else {\r\n            return managers[_addr];\r\n        }\r\n    }\r\n\r\n    /// @notice Compute the keccak256 hash of an interface given its name.\r\n    /// @param _interfaceName Name of the interface.\r\n    /// @return The keccak256 hash of an interface name.\r\n    function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\r\n        return keccak256(abi.encodePacked(_interfaceName));\r\n    }\r\n\r\n    /* --- ERC165 Related Functions --- */\r\n    /* --- Developed in collaboration with William Entriken. --- */\r\n\r\n    /// @notice Updates the cache with whether the contract implements an ERC165 interface or not.\r\n    /// @param _contract Address of the contract for which to update the cache.\r\n    /// @param _interfaceId ERC165 interface for which to update the cache.\r\n    function updateERC165Cache(address _contract, bytes4 _interfaceId) external {\r\n        interfaces[_contract][_interfaceId] = implementsERC165InterfaceNoCache(\r\n            _contract, _interfaceId) ? _contract : address(0);\r\n        erc165Cached[_contract][_interfaceId] = true;\r\n    }\r\n\r\n    /// @notice Checks whether a contract implements an ERC165 interface or not.\r\n    //  If the result is not cached a direct lookup on the contract address is performed.\r\n    //  If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\r\n    //  'updateERC165Cache' with the contract address.\r\n    /// @param _contract Address of the contract to check.\r\n    /// @param _interfaceId ERC165 interface to check.\r\n    /// @return True if '_contract' implements '_interfaceId', false otherwise.\r\n    function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool) {\r\n        if (!erc165Cached[_contract][_interfaceId]) {\r\n            return implementsERC165InterfaceNoCache(_contract, _interfaceId);\r\n        }\r\n        return interfaces[_contract][_interfaceId] == _contract;\r\n    }\r\n\r\n    /// @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\r\n    /// @param _contract Address of the contract to check.\r\n    /// @param _interfaceId ERC165 interface to check.\r\n    /// @return True if '_contract' implements '_interfaceId', false otherwise.\r\n    function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool) {\r\n        uint256 success;\r\n        uint256 result;\r\n\r\n        (success, result) = noThrowCall(_contract, ERC165ID);\r\n        if (success == 0 || result == 0) {\r\n            return false;\r\n        }\r\n\r\n        (success, result) = noThrowCall(_contract, INVALID_ID);\r\n        if (success == 0 || result != 0) {\r\n            return false;\r\n        }\r\n\r\n        (success, result) = noThrowCall(_contract, _interfaceId);\r\n        if (success == 1 && result == 1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /// @notice Checks whether the hash is a ERC165 interface (ending with 28 zeroes) or not.\r\n    /// @param _interfaceHash The hash to check.\r\n    /// @return True if '_interfaceHash' is an ERC165 interface (ending with 28 zeroes), false otherwise.\r\n    function isERC165Interface(bytes32 _interfaceHash) internal pure returns (bool) {\r\n        return _interfaceHash & 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF == 0;\r\n    }\r\n\r\n    /// @dev Make a call on a contract without throwing if the function does not exist.\r\n    function noThrowCall(address _contract, bytes4 _interfaceId)\r\n        internal view returns (uint256 success, uint256 result)\r\n    {\r\n        bytes4 erc165ID = ERC165ID;\r\n\r\n        assembly {\r\n            let x := mload(0x40)               // Find empty storage location using \"free memory pointer\"\r\n            mstore(x, erc165ID)                // Place signature at beginning of empty storage\r\n            mstore(add(x, 0x04), _interfaceId) // Place first argument directly next to signature\r\n\r\n            success := staticcall(\r\n                30000,                         // 30k gas\r\n                _contract,                     // To addr\r\n                x,                             // Inputs are stored at location x\r\n                0x24,                          // Inputs are 36 (4 + 32) bytes long\r\n                x,                             // Store output over input (saves space)\r\n                0x20                           // Outputs are 32 bytes long\r\n            )\r\n\r\n            result := mload(x)                 // Load the result\r\n        }\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"":["*"],"*":["*"]}},"evmVersion":"byzantium","libraries":{}}},"output":{"sources":{"Contract":{"id":0,"ast":{"absolutePath":"Contract","id":432,"exportedSymbols":{"ERC1820ImplementerInterface":[11],"ERC1820Registry":[431]},"nodeType":"SourceUnit","src":"2686:10467:0","nodes":[{"id":1,"nodeType":"PragmaDirective","src":"2686:22:0","nodes":[],"literals":["solidity","0.5",".3"]},{"id":11,"nodeType":"ContractDefinition","src":"2939:542:0","nodes":[{"id":10,"nodeType":"FunctionDefinition","src":"3369:109:0","nodes":[],"documentation":"@return ERC1820_ACCEPT_MAGIC only if the contract implements 'interfaceHash' for the address 'addr'.","implemented":false,"kind":"function","modifiers":[],"name":"canImplementInterfaceForAddress","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3,"name":"interfaceHash","nodeType":"VariableDeclaration","scope":10,"src":"3410:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3410:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":5,"name":"addr","nodeType":"VariableDeclaration","scope":10,"src":"3433:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"3433:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3409:37:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"name":"","nodeType":"VariableDeclaration","scope":10,"src":"3469:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3469:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3468:9:0"},"scope":11,"stateMutability":"view","superFunction":null,"visibility":"external"}],"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":"some (other) interface for any address other than itself.","fullyImplemented":false,"linearizedBaseContracts":[11],"name":"ERC1820ImplementerInterface","scope":432},{"id":431,"nodeType":"ContractDefinition","src":"3751:9402:0","nodes":[{"id":14,"nodeType":"VariableDeclaration","src":"3819:48:0","nodes":[],"constant":true,"name":"INVALID_ID","scope":431,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":12,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3819:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"hexValue":"30786666666666666666","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3857:10:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"internal"},{"id":17,"nodeType":"VariableDeclaration","src":"3995:46:0","nodes":[],"constant":true,"name":"ERC165ID","scope":431,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":15,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3995:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"hexValue":"30783031666663396137","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4031:10:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_33540519_by_1","typeString":"int_const 33540519"},"value":"0x01ffc9a7"},"visibility":"internal"},{"id":25,"nodeType":"VariableDeclaration","src":"4166:100:0","nodes":[],"constant":true,"name":"ERC1820_ACCEPT_MAGIC","scope":431,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4166:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"455243313832305f4143434550545f4d41474943","id":22,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4242:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4","typeString":"literal_string \"ERC1820_ACCEPT_MAGIC\""},"value":"ERC1820_ACCEPT_MAGIC"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4","typeString":"literal_string \"ERC1820_ACCEPT_MAGIC\""}],"expression":{"argumentTypes":null,"id":20,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"4225:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":21,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4225:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":23,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4225:40:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":19,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4215:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":24,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4215:51:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"id":31,"nodeType":"VariableDeclaration","src":"4359:67:0","nodes":[],"constant":false,"name":"interfaces","scope":431,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$","typeString":"mapping(address => mapping(bytes32 => address))"},"typeName":{"id":30,"keyType":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"4367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4359:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$","typeString":"mapping(address => mapping(bytes32 => address))"},"valueType":{"id":29,"keyType":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4386:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"4378:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"4397:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"value":null,"visibility":"internal"},{"id":35,"nodeType":"VariableDeclaration","src":"4491:45:0","nodes":[],"constant":false,"name":"managers","scope":431,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":34,"keyType":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"4499:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4491:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"4510:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"value":null,"visibility":"internal"},{"id":41,"nodeType":"VariableDeclaration","src":"4632:65:0","nodes":[],"constant":false,"name":"erc165Cached","scope":431,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$","typeString":"mapping(address => mapping(bytes4 => bool))"},"typeName":{"id":40,"keyType":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4632:43:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$","typeString":"mapping(address => mapping(bytes4 => bool))"},"valueType":{"id":39,"keyType":{"id":37,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4659:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"4651:23:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueType":{"id":38,"name":"bool","nodeType":"ElementaryTypeName","src":"4669:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"value":null,"visibility":"internal"},{"id":49,"nodeType":"EventDefinition","src":"4796:112:0","nodes":[],"anonymous":false,"documentation":"@notice Indicates a contract is the 'implementer' of 'interfaceHash' for 'addr'.","name":"InterfaceImplementerSet","parameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"indexed":true,"name":"addr","nodeType":"VariableDeclaration","scope":49,"src":"4826:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":45,"indexed":true,"name":"interfaceHash","nodeType":"VariableDeclaration","scope":49,"src":"4848:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":47,"indexed":true,"name":"implementer","nodeType":"VariableDeclaration","scope":49,"src":"4879:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4825:82:0"}},{"id":55,"nodeType":"EventDefinition","src":"5000:71:0","nodes":[],"anonymous":false,"documentation":"@notice Indicates 'newManager' is the address of the new manager for 'addr'.","name":"ManagerChanged","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"indexed":true,"name":"addr","nodeType":"VariableDeclaration","scope":55,"src":"5021:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"5021:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":53,"indexed":true,"name":"newManager","nodeType":"VariableDeclaration","scope":55,"src":"5043:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"5043:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5020:50:0"}},{"id":104,"nodeType":"FunctionDefinition","src":"5699:449:0","nodes":[],"body":{"id":103,"nodeType":"Block","src":"5803:345:0","nodes":[],"statements":[{"assignments":[65],"declarations":[{"constant":false,"id":65,"name":"addr","nodeType":"VariableDeclaration","scope":103,"src":"5814:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"5814:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":75,"initialValue":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":66,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"5829:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5846:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":67,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5838:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5838:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5829:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":73,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"5864:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5829:40:0","trueExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"5851:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5851:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5814:55:0"},{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":77,"name":"_interfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"5902:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":76,"name":"isERC165Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5884:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) pure returns (bool)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5884:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":96,"nodeType":"IfStatement","src":"5880:211:0","trueBody":{"id":95,"nodeType":"Block","src":"5919:172:0","statements":[{"assignments":[80],"declarations":[{"constant":false,"id":80,"name":"erc165InterfaceHash","nodeType":"VariableDeclaration","scope":95,"src":"5934:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":79,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5934:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"id":84,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":82,"name":"_interfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"5970:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":81,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5963:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5963:22:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"5934:51:0"},{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":86,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"6033:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":87,"name":"erc165InterfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6039:19:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":85,"name":"implementsERC165Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"6007:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6007:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":91,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6077:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":90,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6069:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6069:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6007:72:0","trueExpression":{"argumentTypes":null,"id":89,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"6062:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":94,"nodeType":"Return","src":"6000:79:0"}]}},{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":97,"name":"interfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"6108:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$","typeString":"mapping(address => mapping(bytes32 => address))"}},"id":99,"indexExpression":{"argumentTypes":null,"id":98,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"6119:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6108:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":101,"indexExpression":{"argumentTypes":null,"id":100,"name":"_interfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"6125:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6108:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":102,"nodeType":"Return","src":"6101:39:0"}]},"documentation":"or '0' if '_addr' did not register an implementer for this interface.","implemented":true,"kind":"function","modifiers":[],"name":"getInterfaceImplementer","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"name":"_addr","nodeType":"VariableDeclaration","scope":104,"src":"5732:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"5732:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":59,"name":"_interfaceHash","nodeType":"VariableDeclaration","scope":104,"src":"5747:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":58,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5747:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5731:39:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"name":"","nodeType":"VariableDeclaration","scope":104,"src":"5794:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"5794:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5793:9:0"},"scope":431,"stateMutability":"view","superFunction":null,"visibility":"external"},{"id":183,"nodeType":"FunctionDefinition","src":"6804:799:0","nodes":[],"body":{"id":182,"nodeType":"Block","src":"6907:696:0","nodes":[],"statements":[{"assignments":[114],"declarations":[{"constant":false,"id":114,"name":"addr","nodeType":"VariableDeclaration","scope":182,"src":"6918:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"6918:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":124,"initialValue":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":115,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"6933:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6950:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6942:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6942:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6933:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":122,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"6968:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6933:40:0","trueExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6955:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6955:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6918:55:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":127,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"7003:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":126,"name":"getManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"6992:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6992:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"7012:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7012:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6992:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f7420746865206d616e61676572","id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7024:17:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05d265f35446405bb8e248c5b20b42f74b593c053f831f072952d663e40433c2","typeString":"literal_string \"Not the manager\""},"value":"Not the manager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05d265f35446405bb8e248c5b20b42f74b593c053f831f072952d663e40433c2","typeString":"literal_string \"Not the manager\""}],"id":125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[449,450],"referencedDeclaration":450,"src":"6984:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6984:58:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"6984:58:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7063:34:0","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":137,"name":"_interfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"7082:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"isERC165Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"7064:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) pure returns (bool)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7064:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4d757374206e6f7420626520616e204552433136352068617368","id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7099:28:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7dd17e3bdc8c01861fedac2891b332ca9e60a72297f10c299d56bc0c5395549d","typeString":"literal_string \"Must not be an ERC165 hash\""},"value":"Must not be an ERC165 hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dd17e3bdc8c01861fedac2891b332ca9e60a72297f10c299d56bc0c5395549d","typeString":"literal_string \"Must not be an ERC165 hash\""}],"id":135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[449,450],"referencedDeclaration":450,"src":"7055:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7055:73:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":142,"nodeType":"ExpressionStatement","src":"7055:73:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":143,"name":"_implementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"7143:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7167:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7159:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7159:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7143:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":148,"name":"_implementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"7173:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"7189:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7189:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7173:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7143:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":167,"nodeType":"IfStatement","src":"7139:324:0","trueBody":{"id":166,"nodeType":"Block","src":"7201:262:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":158,"name":"_interfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"7338:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":159,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"7354:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":155,"name":"_implementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"7270:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":154,"name":"ERC1820ImplementerInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"7242:27:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1820ImplementerInterface_$11_$","typeString":"type(contract ERC1820ImplementerInterface)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7242:41:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1820ImplementerInterface_$11","typeString":"contract ERC1820ImplementerInterface"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"canImplementInterfaceForAddress","nodeType":"MemberAccess","referencedDeclaration":10,"src":"7242:95:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bytes32_$","typeString":"function (bytes32,address) view external returns (bytes32)"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7242:117:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":161,"name":"ERC1820_ACCEPT_MAGIC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7242:141:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"446f6573206e6f7420696d706c656d656e742074686520696e74657266616365","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7402:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_c92cae19700c9af80bbef3a32b31347feeed2544373f4066d22ba2f8466a32b0","typeString":"literal_string \"Does not implement the interface\""},"value":"Does not implement the interface"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c92cae19700c9af80bbef3a32b31347feeed2544373f4066d22ba2f8466a32b0","typeString":"literal_string \"Does not implement the interface\""}],"id":153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[449,450],"referencedDeclaration":450,"src":"7216:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7216:235:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"7216:235:0"}]}},{"expression":{"argumentTypes":null,"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":168,"name":"interfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"7473:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$","typeString":"mapping(address => mapping(bytes32 => address))"}},"id":171,"indexExpression":{"argumentTypes":null,"id":169,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7473:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":172,"indexExpression":{"argumentTypes":null,"id":170,"name":"_interfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"7490:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7473:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":173,"name":"_implementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"7508:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7473:47:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":175,"nodeType":"ExpressionStatement","src":"7473:47:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":177,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"7560:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":178,"name":"_interfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"7566:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":179,"name":"_implementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"7582:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":176,"name":"InterfaceImplementerSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"7536:23:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7536:59:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"EmitStatement","src":"7531:64:0"}]},"documentation":"@param _implementer Contract address implementing '_interfaceHash' for '_addr'.","implemented":true,"kind":"function","modifiers":[],"name":"setInterfaceImplementer","parameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"name":"_addr","nodeType":"VariableDeclaration","scope":183,"src":"6837:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"6837:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":108,"name":"_interfaceHash","nodeType":"VariableDeclaration","scope":183,"src":"6852:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6852:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":110,"name":"_implementer","nodeType":"VariableDeclaration","scope":183,"src":"6876:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"6876:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6836:61:0"},"returnParameters":{"id":112,"nodeType":"ParameterList","parameters":[],"src":"6907:0:0"},"scope":431,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"id":219,"nodeType":"FunctionDefinition","src":"7933:269:0","nodes":[],"body":{"id":218,"nodeType":"Block","src":"7998:204:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":192,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"8028:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":191,"name":"getManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"8017:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8017:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"8038:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8038:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"8017:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f7420746865206d616e61676572","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8050:17:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05d265f35446405bb8e248c5b20b42f74b593c053f831f072952d663e40433c2","typeString":"literal_string \"Not the manager\""},"value":"Not the manager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05d265f35446405bb8e248c5b20b42f74b593c053f831f072952d663e40433c2","typeString":"literal_string \"Not the manager\""}],"id":190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[449,450],"referencedDeclaration":450,"src":"8009:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8009:59:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"ExpressionStatement","src":"8009:59:0"},{"expression":{"argumentTypes":null,"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":200,"name":"managers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"8079:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":202,"indexExpression":{"argumentTypes":null,"id":201,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"8088:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8079:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":203,"name":"_newManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"8097:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":204,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"8112:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8097:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":209,"name":"_newManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"8133:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8097:47:0","trueExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8128:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8120:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8120:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8079:65:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":212,"nodeType":"ExpressionStatement","src":"8079:65:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":214,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"8175:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":215,"name":"_newManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"8182:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":213,"name":"ManagerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"8160:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8160:34:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"EmitStatement","src":"8155:39:0"}]},"documentation":"@param _newManager Address of the new manager for 'addr'. (Pass '0x0' to reset the manager to '_addr'.)","implemented":true,"kind":"function","modifiers":[],"name":"setManager","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"name":"_addr","nodeType":"VariableDeclaration","scope":219,"src":"7953:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"7953:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":187,"name":"_newManager","nodeType":"VariableDeclaration","scope":219,"src":"7968:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"7968:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"7952:36:0"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"7998:0:0"},"scope":431,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"id":243,"nodeType":"FunctionDefinition","src":"8382:280:0","nodes":[],"body":{"id":242,"nodeType":"Block","src":"8446:216:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":226,"name":"managers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"8530:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":228,"indexExpression":{"argumentTypes":null,"id":227,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"8539:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8530:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8557:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8549:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8549:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"8530:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":240,"nodeType":"Block","src":"8606:49:0","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":236,"name":"managers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"8628:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":238,"indexExpression":{"argumentTypes":null,"id":237,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"8637:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8628:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":225,"id":239,"nodeType":"Return","src":"8621:22:0"}]},"id":241,"nodeType":"IfStatement","src":"8526:129:0","trueBody":{"id":235,"nodeType":"Block","src":"8561:39:0","statements":[{"expression":{"argumentTypes":null,"id":233,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"8583:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":225,"id":234,"nodeType":"Return","src":"8576:12:0"}]}}]},"documentation":"@return Address of the manager for a given address.","implemented":true,"kind":"function","modifiers":[],"name":"getManager","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"name":"_addr","nodeType":"VariableDeclaration","scope":243,"src":"8402:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"8402:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"8401:15:0"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"name":"","nodeType":"VariableDeclaration","scope":243,"src":"8437:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"8437:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"8436:9:0"},"scope":431,"stateMutability":"view","superFunction":null,"visibility":"public"},{"id":258,"nodeType":"FunctionDefinition","src":"8858:155:0","nodes":[],"body":{"id":257,"nodeType":"Block","src":"8944:69:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":253,"name":"_interfaceName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"8989:14:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"argumentTypes":null,"id":251,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"8972:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8972:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8972:32:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":250,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"8962:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8962:43:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":249,"id":256,"nodeType":"Return","src":"8955:50:0"}]},"documentation":"@return The keccak256 hash of an interface name.","implemented":true,"kind":"function","modifiers":[],"name":"interfaceHash","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"name":"_interfaceName","nodeType":"VariableDeclaration","scope":258,"src":"8881:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":244,"name":"string","nodeType":"ElementaryTypeName","src":"8881:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"8880:32:0"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"name":"","nodeType":"VariableDeclaration","scope":258,"src":"8935:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8935:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"8934:9:0"},"scope":431,"stateMutability":"pure","superFunction":null,"visibility":"external"},{"id":290,"nodeType":"FunctionDefinition","src":"9394:284:0","nodes":[],"body":{"id":289,"nodeType":"Block","src":"9470:208:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":265,"name":"interfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"9481:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$","typeString":"mapping(address => mapping(bytes32 => address))"}},"id":268,"indexExpression":{"argumentTypes":null,"id":266,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"9492:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9481:21:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":269,"indexExpression":{"argumentTypes":null,"id":267,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"9503:12:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9481:35:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":271,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"9566:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":272,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"9577:12:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":270,"name":"implementsERC165InterfaceNoCache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"9519:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9519:71:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9605:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9519:96:0","trueExpression":{"argumentTypes":null,"id":274,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"9593:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9481:134:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":280,"nodeType":"ExpressionStatement","src":"9481:134:0"},{"expression":{"argumentTypes":null,"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":281,"name":"erc165Cached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"9626:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$","typeString":"mapping(address => mapping(bytes4 => bool))"}},"id":284,"indexExpression":{"argumentTypes":null,"id":282,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"9639:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9626:23:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":285,"indexExpression":{"argumentTypes":null,"id":283,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"9650:12:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9626:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9666:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9626:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":288,"nodeType":"ExpressionStatement","src":"9626:44:0"}]},"documentation":"@param _interfaceId ERC165 interface for which to update the cache.","implemented":true,"kind":"function","modifiers":[],"name":"updateERC165Cache","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"name":"_contract","nodeType":"VariableDeclaration","scope":290,"src":"9421:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"9421:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":262,"name":"_interfaceId","nodeType":"VariableDeclaration","scope":290,"src":"9440:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":261,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9440:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"9420:40:0"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"9470:0:0"},"scope":431,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"id":321,"nodeType":"FunctionDefinition","src":"10231:321:0","nodes":[],"body":{"id":320,"nodeType":"Block","src":"10333:219:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10348:38:0","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":299,"name":"erc165Cached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"10349:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$","typeString":"mapping(address => mapping(bytes4 => bool))"}},"id":301,"indexExpression":{"argumentTypes":null,"id":300,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"10362:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10349:23:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":303,"indexExpression":{"argumentTypes":null,"id":302,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"10373:12:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10349:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":311,"nodeType":"IfStatement","src":"10344:135:0","trueBody":{"id":310,"nodeType":"Block","src":"10388:91:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":306,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"10443:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":307,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"10454:12:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":305,"name":"implementsERC165InterfaceNoCache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"10410:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10410:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":298,"id":309,"nodeType":"Return","src":"10403:64:0"}]}},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":312,"name":"interfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"10496:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$","typeString":"mapping(address => mapping(bytes32 => address))"}},"id":314,"indexExpression":{"argumentTypes":null,"id":313,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"10507:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10496:21:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":316,"indexExpression":{"argumentTypes":null,"id":315,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"10518:12:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10496:35:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":317,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"10535:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10496:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":298,"id":319,"nodeType":"Return","src":"10489:55:0"}]},"documentation":"@return True if '_contract' implements '_interfaceId', false otherwise.","implemented":true,"kind":"function","modifiers":[],"name":"implementsERC165Interface","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"name":"_contract","nodeType":"VariableDeclaration","scope":321,"src":"10266:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"10266:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":294,"name":"_interfaceId","nodeType":"VariableDeclaration","scope":321,"src":"10285:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":293,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10285:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"10265:40:0"},"returnParameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"name":"","nodeType":"VariableDeclaration","scope":321,"src":"10327:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":296,"name":"bool","nodeType":"ElementaryTypeName","src":"10327:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"10326:6:0"},"scope":431,"stateMutability":"view","superFunction":null,"visibility":"public"},{"id":399,"nodeType":"FunctionDefinition","src":"10876:637:0","nodes":[],"body":{"id":398,"nodeType":"Block","src":"10985:528:0","nodes":[],"statements":[{"assignments":[331],"declarations":[{"constant":false,"id":331,"name":"success","nodeType":"VariableDeclaration","scope":398,"src":"10996:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"10996:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":332,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"10996:15:0"},{"assignments":[334],"declarations":[{"constant":false,"id":334,"name":"result","nodeType":"VariableDeclaration","scope":398,"src":"11022:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"11022:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":335,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"11022:14:0"},{"expression":{"argumentTypes":null,"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":336,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"11050:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11059:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":338,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11049:17:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":340,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"11081:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":341,"name":"ERC165ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"11092:8:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":339,"name":"noThrowCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"11069:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,bytes4) view returns (uint256,uint256)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:32:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11049:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"11049:52:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":345,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"11116:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11127:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11116:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":348,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11132:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11142:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11132:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11116:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":355,"nodeType":"IfStatement","src":"11112:72:0","trueBody":{"id":354,"nodeType":"Block","src":"11145:39:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11167:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":329,"id":353,"nodeType":"Return","src":"11160:12:0"}]}},{"expression":{"argumentTypes":null,"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":356,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"11197:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11206:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":358,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11196:17:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":360,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"11228:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":361,"name":"INVALID_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"11239:10:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":359,"name":"noThrowCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"11216:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,bytes4) view returns (uint256,uint256)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11216:34:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11196:54:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"ExpressionStatement","src":"11196:54:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":365,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"11265:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11276:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11281:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11291:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11281:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11265:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":375,"nodeType":"IfStatement","src":"11261:72:0","trueBody":{"id":374,"nodeType":"Block","src":"11294:39:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11316:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":329,"id":373,"nodeType":"Return","src":"11309:12:0"}]}},{"expression":{"argumentTypes":null,"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":376,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"11346:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11355:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":378,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11345:17:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":380,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"11377:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":381,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"11388:12:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":379,"name":"noThrowCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"11365:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,bytes4) view returns (uint256,uint256)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11365:36:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11345:56:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"ExpressionStatement","src":"11345:56:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":385,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"11416:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"31","id":386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11427:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11416:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":388,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11432:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"31","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11442:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11432:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11416:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":395,"nodeType":"IfStatement","src":"11412:71:0","trueBody":{"id":394,"nodeType":"Block","src":"11445:38:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11467:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":329,"id":393,"nodeType":"Return","src":"11460:11:0"}]}},{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11500:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":329,"id":397,"nodeType":"Return","src":"11493:12:0"}]},"documentation":"@return True if '_contract' implements '_interfaceId', false otherwise.","implemented":true,"kind":"function","modifiers":[],"name":"implementsERC165InterfaceNoCache","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"name":"_contract","nodeType":"VariableDeclaration","scope":399,"src":"10918:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"10918:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":325,"name":"_interfaceId","nodeType":"VariableDeclaration","scope":399,"src":"10937:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":324,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10937:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"10917:40:0"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"name":"","nodeType":"VariableDeclaration","scope":399,"src":"10979:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":327,"name":"bool","nodeType":"ElementaryTypeName","src":"10979:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"10978:6:0"},"scope":431,"stateMutability":"view","superFunction":null,"visibility":"public"},{"id":413,"nodeType":"FunctionDefinition","src":"11773:194:0","nodes":[],"body":{"id":412,"nodeType":"Block","src":"11853:114:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":406,"name":"_interfaceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"11871:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"hexValue":"307830303030303030304646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11888:66:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1","typeString":"int_const 2695...(60 digits omitted)...9215"},"value":"0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"src":"11871:83:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11958:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11871:88:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":405,"id":411,"nodeType":"Return","src":"11864:95:0"}]},"documentation":"@return True if '_interfaceHash' is an ERC165 interface (ending with 28 zeroes), false otherwise.","implemented":true,"kind":"function","modifiers":[],"name":"isERC165Interface","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"name":"_interfaceHash","nodeType":"VariableDeclaration","scope":413,"src":"11800:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11800:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"11799:24:0"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"name":"","nodeType":"VariableDeclaration","scope":413,"src":"11847:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":403,"name":"bool","nodeType":"ElementaryTypeName","src":"11847:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"11846:6:0"},"scope":431,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":430,"nodeType":"FunctionDefinition","src":"12064:1086:0","nodes":[],"body":{"id":429,"nodeType":"Block","src":"12195:955:0","nodes":[],"statements":[{"assignments":[425],"declarations":[{"constant":false,"id":425,"name":"erc165ID","nodeType":"VariableDeclaration","scope":429,"src":"12206:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":424,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12206:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"id":427,"initialValue":{"argumentTypes":null,"id":426,"name":"ERC165ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"12224:8:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"12206:26:0"},{"externalReferences":[{"success":{"declaration":420,"isOffset":false,"isSlot":false,"src":"12574:7:0","valueSize":1}},{"erc165ID":{"declaration":425,"isOffset":false,"isSlot":false,"src":"12386:8:0","valueSize":1}},{"_interfaceId":{"declaration":417,"isOffset":false,"isSlot":false,"src":"12494:12:0","valueSize":1}},{"result":{"declaration":422,"isOffset":false,"isSlot":false,"src":"13079:6:0","valueSize":1}},{"_contract":{"declaration":415,"isOffset":false,"isSlot":false,"src":"12673:9:0","valueSize":1}}],"id":428,"nodeType":"InlineAssembly","operations":"{\n    let x := mload(0x40)\n    mstore(x, erc165ID)\n    mstore(add(x, 0x04), _interfaceId)\n    success := staticcall(30000, _contract, x, 0x24, x, 0x20)\n    result := mload(x)\n}","src":"12245:905:0"}]},"documentation":"@dev Make a call on a contract without throwing if the function does not exist.","implemented":true,"kind":"function","modifiers":[],"name":"noThrowCall","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"name":"_contract","nodeType":"VariableDeclaration","scope":430,"src":"12085:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"12085:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":417,"name":"_interfaceId","nodeType":"VariableDeclaration","scope":430,"src":"12104:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":416,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12104:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"12084:40:0"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"name":"success","nodeType":"VariableDeclaration","scope":430,"src":"12157:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"12157:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":422,"name":"result","nodeType":"VariableDeclaration","scope":430,"src":"12174:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"12174:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12156:33:0"},"scope":431,"stateMutability":"view","superFunction":null,"visibility":"internal"}],"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":"@notice For more details, see https://eips.ethereum.org/EIPS/eip-1820","fullyImplemented":true,"linearizedBaseContracts":[431],"name":"ERC1820Registry","scope":432}]}}},"contracts":{"Contract":{"ERC1820ImplementerInterface":{"abi":[{"type":"function","name":"canImplementInterfaceForAddress","inputs":[{"name":"interfaceHash","type":"bytes32"},{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"bytes32"}],"stateMutability":"view"}],"userdoc":{"notice":"some (other) interface for any address other than itself."},"devdoc":{"methods":{"canImplementInterfaceForAddress(bytes32,address)":{}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"canImplementInterfaceForAddress(bytes32,address)":"249cb3fa"}}},"ERC1820Registry":{"abi":[{"type":"function","name":"getInterfaceImplementer","inputs":[{"name":"_addr","type":"address"},{"name":"_interfaceHash","type":"bytes32"}],"outputs":[{"name":"","type":"address"}],"stateMutability":"view"},{"type":"function","name":"getManager","inputs":[{"name":"_addr","type":"address"}],"outputs":[{"name":"","type":"address"}],"stateMutability":"view"},{"type":"function","name":"implementsERC165Interface","inputs":[{"name":"_contract","type":"address"},{"name":"_interfaceId","type":"bytes4"}],"outputs":[{"name":"","type":"bool"}],"stateMutability":"view"},{"type":"function","name":"implementsERC165InterfaceNoCache","inputs":[{"name":"_contract","type":"address"},{"name":"_interfaceId","type":"bytes4"}],"outputs":[{"name":"","type":"bool"}],"stateMutability":"view"},{"type":"function","name":"interfaceHash","inputs":[{"name":"_interfaceName","type":"string"}],"outputs":[{"name":"","type":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"setInterfaceImplementer","inputs":[{"name":"_addr","type":"address"},{"name":"_interfaceHash","type":"bytes32"},{"name":"_implementer","type":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setManager","inputs":[{"name":"_addr","type":"address"},{"name":"_newManager","type":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateERC165Cache","inputs":[{"name":"_contract","type":"address"},{"name":"_interfaceId","type":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"InterfaceImplementerSet","inputs":[{"name":"addr","type":"address","indexed":true},{"name":"interfaceHash","type":"bytes32","indexed":true},{"name":"implementer","type":"address","indexed":true}],"anonymous":false},{"type":"event","name":"ManagerChanged","inputs":[{"name":"addr","type":"address","indexed":true},{"name":"newManager","type":"address","indexed":true}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.5.3+commit.10d17f24\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"name\":\"_implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"getManager(address)\":{\"return\":\"Address of the manager for a given address.\"},\"implementsERC165Interface(address,bytes4)\":{\"return\":\"True if '_contract' implements '_interfaceId', false otherwise.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"return\":\"True if '_contract' implements '_interfaceId', false otherwise.\"},\"interfaceHash(string)\":{\"return\":\"The keccak256 hash of an interface name.\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"params\":{\"_implementer\":\"Contract address implementing '_interfaceHash' for '_addr'.\"}},\"setManager(address,address)\":{\"params\":{\"_newManager\":\"Address of the new manager for 'addr'. (Pass '0x0' to reset the manager to '_addr'.)\"}},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"_interfaceId\":\"ERC165 interface for which to update the cache.\"}}}},\"userdoc\":{\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"notice\":\"or '0' if '_addr' did not register an implementer for this interface.\"}},\"notice\":\"For more details, see https://eips.ethereum.org/EIPS/eip-1820\"}},\"settings\":{\"compilationTarget\":{\"Contract\":\"ERC1820Registry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contract\":{\"keccak256\":\"0x9962adce7a0d02e8105655bdec822f76fa485f204313265424926f94cbbd94d8\",\"urls\":[\"bzzr://a555183df1a97cd6fda3f1bb269f1c6625b7ff9cb3b9bde939c745b5781ec6fe\"]}},\"version\":1}","userdoc":{"methods":{"getInterfaceImplementer(address,bytes32)":{"notice":"or '0' if '_addr' did not register an implementer for this interface."}},"notice":"For more details, see https://eips.ethereum.org/EIPS/eip-1820"},"devdoc":{"methods":{"getManager(address)":{},"implementsERC165Interface(address,bytes4)":{},"implementsERC165InterfaceNoCache(address,bytes4)":{},"interfaceHash(string)":{},"setInterfaceImplementer(address,bytes32,address)":{"params":{"_implementer":"Contract address implementing '_interfaceHash' for '_addr'."}},"setManager(address,address)":{"params":{"_newManager":"Address of the new manager for 'addr'. (Pass '0x0' to reset the manager to '_addr'.)"}},"updateERC165Cache(address,bytes4)":{"params":{"_interfaceId":"ERC165 interface for which to update the cache."}}}},"evm":{"assembly":"    /* \"Contract\":3751:13153  contract ERC1820Registry {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Contract\":3751:13153  contract ERC1820Registry {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract\":3751:13153  contract ERC1820Registry {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Contract\":3751:13153  contract ERC1820Registry {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      calldataload(0x00)\n      0x0100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0xa41e7d51\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xa41e7d51\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xaabbb8ca\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb7056765\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf712f3e8\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x29965a1d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3d584063\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5df8122f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x65ba36c1\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contract\":6804:7603  function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer) external {\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":6804:7603  function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer) external {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      0x40\n      swap1\n      swap2\n      add\n      calldataload\n      and\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Contract\":8382:8662  function getManager(address _addr) public view returns(address) {\r... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n      pop\n        /* \"Contract\":8382:8662  function getManager(address _addr) public view returns(address) {\r... */\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      tag_17\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      sub(exp(0x02, 0xa0), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Contract\":7933:8202  function setManager(address _addr, address _newManager) external {\r... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":7933:8202  function setManager(address _addr, address _newManager) external {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_20\n      jump\t// in\n        /* \"Contract\":8858:9013  function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\r... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"Contract\":8858:9013  function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\r... */\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n        /* \"Contract\":8858:9013  function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"Contract\":8858:9013  function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_25:\n      pop\n        /* \"Contract\":8858:9013  function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\r... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_26\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Contract\":9394:9678  function updateERC165Cache(address _contract, bytes4 _interfaceId) external {\r... */\n    tag_7:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n      pop\n        /* \"Contract\":9394:9678  function updateERC165Cache(address _contract, bytes4 _interfaceId) external {\r... */\n      dup1\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      not(sub(exp(0x02, 0xe0), 0x01))\n      and\n      tag_29\n      jump\t// in\n        /* \"Contract\":5699:6148  function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address) {\r... */\n    tag_8:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":5699:6148  function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_32\n      jump\t// in\n        /* \"Contract\":10876:11513  function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool) {\r... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n      pop\n        /* \"Contract\":10876:11513  function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool) {\r... */\n      dup1\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      not(sub(exp(0x02, 0xe0), 0x01))\n      and\n      tag_35\n      jump\t// in\n    tag_33:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Contract\":10231:10552  function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool) {\r... */\n    tag_10:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n      pop\n        /* \"Contract\":10231:10552  function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool) {\r... */\n      dup1\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      not(sub(exp(0x02, 0xe0), 0x01))\n      and\n      tag_38\n      jump\t// in\n        /* \"Contract\":6804:7603  function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer) external {\r... */\n    tag_14:\n        /* \"Contract\":6918:6930  address addr */\n      0x00\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":6933:6952  _addr == address(0) */\n      dup5\n      and\n      iszero\n        /* \"Contract\":6933:6973  _addr == address(0) ? msg.sender : _addr */\n      tag_40\n      jumpi\n        /* \"Contract\":6968:6973  _addr */\n      dup4\n        /* \"Contract\":6933:6973  _addr == address(0) ? msg.sender : _addr */\n      jump(tag_41)\n    tag_40:\n        /* \"Contract\":6955:6965  msg.sender */\n      caller\n        /* \"Contract\":6933:6973  _addr == address(0) ? msg.sender : _addr */\n    tag_41:\n        /* \"Contract\":6918:6973  address addr = _addr == address(0) ? msg.sender : _addr */\n      swap1\n      pop\n        /* \"Contract\":7012:7022  msg.sender */\n      caller\n        /* \"Contract\":6992:7008  getManager(addr) */\n      tag_42\n        /* \"Contract\":6918:6973  address addr = _addr == address(0) ? msg.sender : _addr */\n      dup3\n        /* \"Contract\":6992:7002  getManager */\n      tag_17\n        /* \"Contract\":6992:7008  getManager(addr) */\n      jump\t// in\n    tag_42:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":6992:7022  getManager(addr) == msg.sender */\n      and\n      eq\n        /* \"Contract\":6984:7042  require(getManager(addr) == msg.sender, \"Not the manager\") */\n      tag_43\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420746865206d616e616765720000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_43:\n        /* \"Contract\":7064:7097  isERC165Interface(_interfaceHash) */\n      tag_44\n        /* \"Contract\":7082:7096  _interfaceHash */\n      dup4\n        /* \"Contract\":7064:7081  isERC165Interface */\n      tag_45\n        /* \"Contract\":7064:7097  isERC165Interface(_interfaceHash) */\n      jump\t// in\n    tag_44:\n        /* \"Contract\":7063:7097  !isERC165Interface(_interfaceHash) */\n      iszero\n        /* \"Contract\":7055:7128  require(!isERC165Interface(_interfaceHash), \"Must not be an ERC165 hash\") */\n      tag_46\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x4d757374206e6f7420626520616e204552433136352068617368000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_46:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":7143:7169  _implementer != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"Contract\":7143:7199  _implementer != address(0) && _implementer != msg.sender */\n      tag_47\n      jumpi\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":7173:7199  _implementer != msg.sender */\n      dup3\n      and\n        /* \"Contract\":7189:7199  msg.sender */\n      caller\n        /* \"Contract\":7173:7199  _implementer != msg.sender */\n      eq\n      iszero\n        /* \"Contract\":7143:7199  _implementer != address(0) && _implementer != msg.sender */\n    tag_47:\n        /* \"Contract\":7139:7463  if (_implementer != address(0) && _implementer != msg.sender) {\r... */\n      iszero\n      tag_52\n      jumpi\n        /* \"Contract\":4225:4265  abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x455243313832305f4143434550545f4d41474943000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x14\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Contract\":4225:4265  abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\") */\n      swap1\n      0x40\n      mstore\n        /* \"Contract\":4215:4266  keccak256(abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Contract\":7270:7282  _implementer */\n      dup3\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":7242:7337  ERC1820ImplementerInterface(_implementer)\r... */\n      and\n      0x249cb3fa\n        /* \"Contract\":7338:7352  _interfaceHash */\n      dup6\n        /* \"Contract\":7354:7358  addr */\n      dup5\n        /* \"Contract\":7242:7359  ERC1820ImplementerInterface(_implementer)\r... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x0100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"Contract\":7242:7359  ERC1820ImplementerInterface(_implementer)\r... */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n        /* \"Contract\":7242:7359  ERC1820ImplementerInterface(_implementer)\r... */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n        /* \"Contract\":7242:7359  ERC1820ImplementerInterface(_implementer)\r... */\n      mload\n        /* \"Contract\":7242:7383  ERC1820ImplementerInterface(_implementer)\r... */\n      eq\n        /* \"Contract\":7216:7451  require(\r... */\n      tag_52\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x446f6573206e6f7420696d706c656d656e742074686520696e74657266616365\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_52:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":7473:7489  interfaces[addr] */\n      dup2\n      dup2\n      and\n        /* \"Contract\":7473:7483  interfaces */\n      0x00\n        /* \"Contract\":7473:7489  interfaces[addr] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Contract\":7473:7505  interfaces[addr][_interfaceHash] */\n      dup9\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"Contract\":7473:7520  interfaces[addr][_interfaceHash] = _implementer */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap5\n      dup8\n      and\n      swap5\n      dup6\n      or\n      swap1\n      sstore\n        /* \"Contract\":7536:7595  InterfaceImplementerSet(addr, _interfaceHash, _implementer) */\n      mload\n        /* \"Contract\":7473:7505  interfaces[addr][_interfaceHash] */\n      dup7\n      swap3\n        /* \"Contract\":7473:7489  interfaces[addr] */\n      swap2\n        /* \"Contract\":7536:7595  InterfaceImplementerSet(addr, _interfaceHash, _implementer) */\n      0x93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db153\n      swap2\n      log4\n        /* \"Contract\":6804:7603  function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contract\":8382:8662  function getManager(address _addr) public view returns(address) {\r... */\n    tag_17:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":8530:8545  managers[_addr] */\n      dup2\n      dup2\n      and\n        /* \"Contract\":8437:8444  address */\n      0x00\n        /* \"Contract\":8530:8545  managers[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"Contract\":8530:8538  managers */\n      0x01\n        /* \"Contract\":8530:8545  managers[_addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Contract\":8437:8444  address */\n      swap1\n      swap2\n        /* \"Contract\":8530:8545  managers[_addr] */\n      and\n        /* \"Contract\":8530:8559  managers[_addr] == address(0) */\n      iszero\n        /* \"Contract\":8526:8655  if (managers[_addr] == address(0)) {\r... */\n      iszero\n      tag_54\n      jumpi\n      pop\n        /* \"Contract\":8583:8588  _addr */\n      dup1\n        /* \"Contract\":8576:8588  return _addr */\n      jump(tag_55)\n        /* \"Contract\":8526:8655  if (managers[_addr] == address(0)) {\r... */\n    tag_54:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":8628:8643  managers[_addr] */\n      dup1\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Contract\":8628:8636  managers */\n      0x01\n        /* \"Contract\":8628:8643  managers[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"Contract\":8526:8655  if (managers[_addr] == address(0)) {\r... */\n    tag_55:\n        /* \"Contract\":8382:8662  function getManager(address _addr) public view returns(address) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Contract\":7933:8202  function setManager(address _addr, address _newManager) external {\r... */\n    tag_20:\n        /* \"Contract\":8038:8048  msg.sender */\n      caller\n        /* \"Contract\":8017:8034  getManager(_addr) */\n      tag_57\n        /* \"Contract\":8028:8033  _addr */\n      dup4\n        /* \"Contract\":8017:8027  getManager */\n      tag_17\n        /* \"Contract\":8017:8034  getManager(_addr) */\n      jump\t// in\n    tag_57:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":8017:8048  getManager(_addr) == msg.sender */\n      and\n      eq\n        /* \"Contract\":8009:8068  require(getManager(_addr) == msg.sender, \"Not the manager\") */\n      tag_58\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420746865206d616e616765720000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_58:\n        /* \"Contract\":8112:8117  _addr */\n      dup2\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":8097:8117  _newManager == _addr */\n      and\n        /* \"Contract\":8097:8108  _newManager */\n      dup2\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":8097:8117  _newManager == _addr */\n      and\n      eq\n        /* \"Contract\":8097:8144  _newManager == _addr ? address(0) : _newManager */\n      tag_59\n      jumpi\n        /* \"Contract\":8133:8144  _newManager */\n      dup1\n        /* \"Contract\":8097:8144  _newManager == _addr ? address(0) : _newManager */\n      jump(tag_60)\n    tag_59:\n        /* \"Contract\":8128:8129  0 */\n      0x00\n        /* \"Contract\":8097:8144  _newManager == _addr ? address(0) : _newManager */\n    tag_60:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":8079:8094  managers[_addr] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Contract\":8079:8087  managers */\n      0x01\n        /* \"Contract\":8079:8094  managers[_addr] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Contract\":8079:8144  managers[_addr] = _newManager == _addr ? address(0) : _newManager */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap6\n      dup6\n      and\n      swap6\n      swap1\n      swap6\n      or\n      swap1\n      swap5\n      sstore\n        /* \"Contract\":8160:8194  ManagerChanged(_addr, _newManager) */\n      swap3\n      mload\n      swap2\n      dup5\n      and\n      swap3\n        /* \"Contract\":8079:8094  managers[_addr] */\n      swap1\n      swap2\n        /* \"Contract\":8160:8194  ManagerChanged(_addr, _newManager) */\n      0x605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350\n      swap2\n        /* \"Contract\":8079:8094  managers[_addr] */\n      swap1\n        /* \"Contract\":8160:8194  ManagerChanged(_addr, _newManager) */\n      log3\n        /* \"Contract\":7933:8202  function setManager(address _addr, address _newManager) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contract\":8858:9013  function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\r... */\n    tag_26:\n        /* \"Contract\":8935:8942  bytes32 */\n      0x00\n        /* \"Contract\":8989:9003  _interfaceName */\n      dup3\n      dup3\n        /* \"Contract\":8972:9004  abi.encodePacked(_interfaceName) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":57:60   */\n      dup1\n        /* \"--CODEGEN--\":49:55   */\n      dup4\n        /* \"--CODEGEN--\":45:61   */\n      add\n        /* \"--CODEGEN--\":35:61   */\n      swap3\n      pop\n        /* \"Contract\":8972:9004  abi.encodePacked(_interfaceName) */\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Contract\":8972:9004  abi.encodePacked(_interfaceName) */\n      swap1\n      0x40\n      mstore\n        /* \"Contract\":8962:9005  keccak256(abi.encodePacked(_interfaceName)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Contract\":8955:9005  return keccak256(abi.encodePacked(_interfaceName)) */\n      swap1\n      pop\n        /* \"Contract\":8858:9013  function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\r... */\n    tag_61:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contract\":9394:9678  function updateERC165Cache(address _contract, bytes4 _interfaceId) external {\r... */\n    tag_29:\n        /* \"Contract\":9519:9590  implementsERC165InterfaceNoCache(\r... */\n      tag_63\n        /* \"Contract\":9566:9575  _contract */\n      dup3\n        /* \"Contract\":9577:9589  _interfaceId */\n      dup3\n        /* \"Contract\":9519:9551  implementsERC165InterfaceNoCache */\n      tag_35\n        /* \"Contract\":9519:9590  implementsERC165InterfaceNoCache(\r... */\n      jump\t// in\n    tag_63:\n        /* \"Contract\":9519:9615  implementsERC165InterfaceNoCache(\r... */\n      tag_64\n      jumpi\n        /* \"Contract\":9613:9614  0 */\n      0x00\n        /* \"Contract\":9519:9615  implementsERC165InterfaceNoCache(\r... */\n      jump(tag_65)\n    tag_64:\n        /* \"Contract\":9593:9602  _contract */\n      dup2\n        /* \"Contract\":9519:9615  implementsERC165InterfaceNoCache(\r... */\n    tag_65:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":9481:9502  interfaces[_contract] */\n      swap3\n      dup4\n      and\n        /* \"Contract\":9481:9491  interfaces */\n      0x00\n        /* \"Contract\":9481:9502  interfaces[_contract] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(sub(exp(0x02, 0xe0), 0x01))\n        /* \"Contract\":9481:9516  interfaces[_contract][_interfaceId] */\n      swap7\n      swap1\n      swap7\n      and\n      dup1\n      dup5\n      mstore\n      swap6\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Contract\":9481:9615  interfaces[_contract][_interfaceId] = implementsERC165InterfaceNoCache(\r... */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap6\n      swap1\n      swap8\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap6\n      sstore\n        /* \"Contract\":9626:9649  erc165Cached[_contract] */\n      swap1\n      dup2\n      mstore\n        /* \"Contract\":9626:9638  erc165Cached */\n      0x02\n        /* \"Contract\":9626:9649  erc165Cached[_contract] */\n      dup5\n      mstore\n      dup2\n      dup2\n      keccak256\n        /* \"Contract\":9626:9663  erc165Cached[_contract][_interfaceId] */\n      swap3\n      dup2\n      mstore\n      swap2\n      swap1\n      swap3\n      mstore\n      keccak256\n        /* \"Contract\":9626:9670  erc165Cached[_contract][_interfaceId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"Contract\":9394:9678  function updateERC165Cache(address _contract, bytes4 _interfaceId) external {\r... */\n      jump\t// out\n        /* \"Contract\":5699:6148  function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address) {\r... */\n    tag_32:\n        /* \"Contract\":5794:5801  address */\n      0x00\n      dup1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":5829:5848  _addr == address(0) */\n      dup5\n      and\n      iszero\n        /* \"Contract\":5829:5869  _addr == address(0) ? msg.sender : _addr */\n      tag_67\n      jumpi\n        /* \"Contract\":5864:5869  _addr */\n      dup4\n        /* \"Contract\":5829:5869  _addr == address(0) ? msg.sender : _addr */\n      jump(tag_68)\n    tag_67:\n        /* \"Contract\":5851:5861  msg.sender */\n      caller\n        /* \"Contract\":5829:5869  _addr == address(0) ? msg.sender : _addr */\n    tag_68:\n        /* \"Contract\":5814:5869  address addr = _addr == address(0) ? msg.sender : _addr */\n      swap1\n      pop\n        /* \"Contract\":5884:5917  isERC165Interface(_interfaceHash) */\n      tag_69\n        /* \"Contract\":5902:5916  _interfaceHash */\n      dup4\n        /* \"Contract\":5884:5901  isERC165Interface */\n      tag_45\n        /* \"Contract\":5884:5917  isERC165Interface(_interfaceHash) */\n      jump\t// in\n    tag_69:\n        /* \"Contract\":5880:6091  if (isERC165Interface(_interfaceHash)) {\r... */\n      iszero\n      tag_70\n      jumpi\n        /* \"Contract\":5970:5984  _interfaceHash */\n      dup3\n        /* \"Contract\":6007:6059  implementsERC165Interface(addr, erc165InterfaceHash) */\n      tag_71\n        /* \"Contract\":6033:6037  addr */\n      dup3\n        /* \"Contract\":5970:5984  _interfaceHash */\n      dup3\n        /* \"Contract\":6007:6032  implementsERC165Interface */\n      tag_38\n        /* \"Contract\":6007:6059  implementsERC165Interface(addr, erc165InterfaceHash) */\n      jump\t// in\n    tag_71:\n        /* \"Contract\":6007:6079  implementsERC165Interface(addr, erc165InterfaceHash) ? addr : address(0) */\n      tag_72\n      jumpi\n        /* \"Contract\":6077:6078  0 */\n      0x00\n        /* \"Contract\":6007:6079  implementsERC165Interface(addr, erc165InterfaceHash) ? addr : address(0) */\n      jump(tag_73)\n    tag_72:\n        /* \"Contract\":6062:6066  addr */\n      dup2\n        /* \"Contract\":6007:6079  implementsERC165Interface(addr, erc165InterfaceHash) ? addr : address(0) */\n    tag_73:\n        /* \"Contract\":6000:6079  return implementsERC165Interface(addr, erc165InterfaceHash) ? addr : address(0) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_61)\n        /* \"Contract\":5880:6091  if (isERC165Interface(_interfaceHash)) {\r... */\n    tag_70:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":6108:6124  interfaces[addr] */\n      swap1\n      dup2\n      and\n        /* \"Contract\":6108:6118  interfaces */\n      0x00\n        /* \"Contract\":6108:6124  interfaces[addr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Contract\":6108:6140  interfaces[addr][_interfaceHash] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      and\n      swap1\n      pop\n        /* \"Contract\":5699:6148  function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contract\":10876:11513  function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool) {\r... */\n    tag_35:\n        /* \"Contract\":10979:10983  bool */\n      0x00\n      dup1\n      dup1\n        /* \"Contract\":11069:11101  noThrowCall(_contract, ERC165ID) */\n      tag_75\n        /* \"Contract\":11081:11090  _contract */\n      dup6\n        /* \"Contract\":11092:11100  ERC165ID */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"Contract\":11069:11080  noThrowCall */\n      tag_76\n        /* \"Contract\":11069:11101  noThrowCall(_contract, ERC165ID) */\n      jump\t// in\n    tag_75:\n        /* \"Contract\":11049:11101  (success, result) = noThrowCall(_contract, ERC165ID) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"Contract\":11116:11128  success == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"Contract\":11116:11143  success == 0 || result == 0 */\n      tag_77\n      jumpi\n      pop\n        /* \"Contract\":11132:11143  result == 0 */\n      dup1\n      iszero\n        /* \"Contract\":11116:11143  success == 0 || result == 0 */\n    tag_77:\n        /* \"Contract\":11112:11184  if (success == 0 || result == 0) {\r... */\n      iszero\n      tag_78\n      jumpi\n        /* \"Contract\":11167:11172  false */\n      0x00\n        /* \"Contract\":11160:11172  return false */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_61)\n        /* \"Contract\":11112:11184  if (success == 0 || result == 0) {\r... */\n    tag_78:\n        /* \"Contract\":11216:11250  noThrowCall(_contract, INVALID_ID) */\n      tag_79\n        /* \"Contract\":11228:11237  _contract */\n      dup6\n      not(sub(exp(0x02, 0xe0), 0x01))\n        /* \"Contract\":11216:11227  noThrowCall */\n      tag_76\n        /* \"Contract\":11216:11250  noThrowCall(_contract, INVALID_ID) */\n      jump\t// in\n    tag_79:\n        /* \"Contract\":11196:11250  (success, result) = noThrowCall(_contract, INVALID_ID) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"Contract\":11265:11277  success == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"Contract\":11265:11292  success == 0 || result != 0 */\n      tag_80\n      jumpi\n      pop\n        /* \"Contract\":11281:11292  result != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"Contract\":11265:11292  success == 0 || result != 0 */\n    tag_80:\n        /* \"Contract\":11261:11333  if (success == 0 || result != 0) {\r... */\n      iszero\n      tag_81\n      jumpi\n        /* \"Contract\":11316:11321  false */\n      0x00\n        /* \"Contract\":11309:11321  return false */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_61)\n        /* \"Contract\":11261:11333  if (success == 0 || result != 0) {\r... */\n    tag_81:\n        /* \"Contract\":11365:11401  noThrowCall(_contract, _interfaceId) */\n      tag_82\n        /* \"Contract\":11377:11386  _contract */\n      dup6\n        /* \"Contract\":11388:11400  _interfaceId */\n      dup6\n        /* \"Contract\":11365:11376  noThrowCall */\n      tag_76\n        /* \"Contract\":11365:11401  noThrowCall(_contract, _interfaceId) */\n      jump\t// in\n    tag_82:\n        /* \"Contract\":11345:11401  (success, result) = noThrowCall(_contract, _interfaceId) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"Contract\":11427:11428  1 */\n      0x01\n        /* \"Contract\":11416:11428  success == 1 */\n      dup3\n      eq\n        /* \"Contract\":11416:11443  success == 1 && result == 1 */\n      dup1\n      iszero\n      tag_83\n      jumpi\n      pop\n        /* \"Contract\":11432:11438  result */\n      dup1\n        /* \"Contract\":11442:11443  1 */\n      0x01\n        /* \"Contract\":11432:11443  result == 1 */\n      eq\n        /* \"Contract\":11416:11443  success == 1 && result == 1 */\n    tag_83:\n        /* \"Contract\":11412:11483  if (success == 1 && result == 1) {\r... */\n      iszero\n      tag_84\n      jumpi\n        /* \"Contract\":11467:11471  true */\n      0x01\n        /* \"Contract\":11460:11471  return true */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_61)\n        /* \"Contract\":11412:11483  if (success == 1 && result == 1) {\r... */\n    tag_84:\n      pop\n        /* \"Contract\":11500:11505  false */\n      0x00\n      swap5\n        /* \"Contract\":10876:11513  function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contract\":10231:10552  function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool) {\r... */\n    tag_38:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":10349:10372  erc165Cached[_contract] */\n      dup3\n      and\n        /* \"Contract\":10327:10331  bool */\n      0x00\n        /* \"Contract\":10349:10372  erc165Cached[_contract] */\n      swap1\n      dup2\n      mstore\n        /* \"Contract\":10349:10361  erc165Cached */\n      0x02\n        /* \"Contract\":10349:10372  erc165Cached[_contract] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(sub(exp(0x02, 0xe0), 0x01))\n        /* \"Contract\":10349:10386  erc165Cached[_contract][_interfaceId] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Contract\":10348:10386  !erc165Cached[_contract][_interfaceId] */\n      iszero\n        /* \"Contract\":10344:10479  if (!erc165Cached[_contract][_interfaceId]) {\r... */\n      iszero\n      tag_86\n      jumpi\n        /* \"Contract\":10410:10467  implementsERC165InterfaceNoCache(_contract, _interfaceId) */\n      tag_87\n        /* \"Contract\":10443:10452  _contract */\n      dup4\n        /* \"Contract\":10454:10466  _interfaceId */\n      dup4\n        /* \"Contract\":10410:10442  implementsERC165InterfaceNoCache */\n      tag_35\n        /* \"Contract\":10410:10467  implementsERC165InterfaceNoCache(_contract, _interfaceId) */\n      jump\t// in\n    tag_87:\n        /* \"Contract\":10403:10467  return implementsERC165InterfaceNoCache(_contract, _interfaceId) */\n      swap1\n      pop\n      jump(tag_61)\n        /* \"Contract\":10344:10479  if (!erc165Cached[_contract][_interfaceId]) {\r... */\n    tag_86:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"Contract\":10496:10544  interfaces[_contract][_interfaceId] == _contract */\n      dup1\n      dup4\n      and\n        /* \"Contract\":10496:10506  interfaces */\n      0x00\n        /* \"Contract\":10496:10517  interfaces[_contract] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(sub(exp(0x02, 0xe0), 0x01))\n        /* \"Contract\":10496:10531  interfaces[_contract][_interfaceId] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n      swap2\n      and\n        /* \"Contract\":10496:10544  interfaces[_contract][_interfaceId] == _contract */\n      eq\n        /* \"Contract\":10231:10552  function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contract\":11773:11967  function isERC165Interface(bytes32 _interfaceHash) internal pure returns (bool) {\r... */\n    tag_45:\n        /* \"Contract\":11888:11954  0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Contract\":11871:11954  _interfaceHash & 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF */\n      and\n        /* \"Contract\":11871:11959  _interfaceHash & 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF == 0 */\n      iszero\n      swap1\n        /* \"Contract\":11773:11967  function isERC165Interface(bytes32 _interfaceHash) internal pure returns (bool) {\r... */\n      jump\t// out\n        /* \"Contract\":12064:13150  function noThrowCall(address _contract, bytes4 _interfaceId)\r... */\n    tag_76:\n        /* \"Contract\":12284:12288  0x40 */\n      0x40\n        /* \"Contract\":12278:12289  mload(0x40) */\n      mload\n        /* \"Contract\":12224:12232  ERC165ID */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"Contract\":12376:12395  mstore(x, erc165ID) */\n      dup1\n      dup3\n      mstore\n        /* \"Contract\":12487:12491  0x04 */\n      0x04\n        /* \"Contract\":12480:12492  add(x, 0x04) */\n      dup3\n      add\n        /* \"Contract\":12473:12507  mstore(add(x, 0x04), _interfaceId) */\n      dup4\n      swap1\n      mstore\n        /* \"Contract\":12157:12172  uint256 success */\n      0x00\n      swap2\n      dup3\n      swap2\n        /* \"Contract\":12224:12232  ERC165ID */\n      swap1\n        /* \"Contract\":12989:12993  0x20 */\n      0x20\n        /* \"Contract\":12278:12289  mload(0x40) */\n      dup2\n        /* \"Contract\":12815:12819  0x24 */\n      0x24\n        /* \"Contract\":12278:12289  mload(0x40) */\n      dup2\n        /* \"Contract\":12673:12682  _contract */\n      dup10\n        /* \"Contract\":12614:12619  30000 */\n      0x7530\n        /* \"Contract\":12585:13063  staticcall(\r... */\n      staticcall\n        /* \"Contract\":13089:13097  mload(x) */\n      swap1\n      mload\n        /* \"Contract\":12574:13063  success := staticcall(\r... */\n      swap1\n      swap7\n        /* \"Contract\":13089:13097  mload(x) */\n      swap1\n      swap6\n      pop\n        /* \"Contract\":12254:13143  {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820256d57265f5ffb5bc7b36c4e4c23eb7dac84d142a955695a5934b7aa7cac03780029\n}\n","legacyAssembly":{".code":[{"begin":3751,"end":13153,"name":"PUSH","value":"80"},{"begin":3751,"end":13153,"name":"PUSH","value":"40"},{"begin":3751,"end":13153,"name":"MSTORE"},{"begin":3751,"end":13153,"name":"CALLVALUE"},{"begin":8,"end":17,"name":"DUP1"},{"begin":5,"end":7,"name":"ISZERO"},{"begin":5,"end":7,"name":"PUSH [tag]","value":"1"},{"begin":5,"end":7,"name":"JUMPI"},{"begin":30,"end":31,"name":"PUSH","value":"0"},{"begin":27,"end":28,"name":"DUP1"},{"begin":20,"end":32,"name":"REVERT"},{"begin":5,"end":7,"name":"tag","value":"1"},{"begin":5,"end":7,"name":"JUMPDEST"},{"begin":3751,"end":13153,"name":"POP"},{"begin":3751,"end":13153,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":3751,"end":13153,"name":"PUSH","value":"0"},{"begin":3751,"end":13153,"name":"CODECOPY"},{"begin":3751,"end":13153,"name":"PUSH","value":"0"},{"begin":3751,"end":13153,"name":"RETURN"}],".data":{"0":{".auxdata":"a165627a7a72305820256d57265f5ffb5bc7b36c4e4c23eb7dac84d142a955695a5934b7aa7cac03780029",".code":[{"begin":3751,"end":13153,"name":"PUSH","value":"80"},{"begin":3751,"end":13153,"name":"PUSH","value":"40"},{"begin":3751,"end":13153,"name":"MSTORE"},{"begin":3751,"end":13153,"name":"CALLVALUE"},{"begin":8,"end":17,"name":"DUP1"},{"begin":5,"end":7,"name":"ISZERO"},{"begin":5,"end":7,"name":"PUSH [tag]","value":"1"},{"begin":5,"end":7,"name":"JUMPI"},{"begin":30,"end":31,"name":"PUSH","value":"0"},{"begin":27,"end":28,"name":"DUP1"},{"begin":20,"end":32,"name":"REVERT"},{"begin":5,"end":7,"name":"tag","value":"1"},{"begin":5,"end":7,"name":"JUMPDEST"},{"begin":3751,"end":13153,"name":"POP"},{"begin":3751,"end":13153,"name":"PUSH","value":"4"},{"begin":3751,"end":13153,"name":"CALLDATASIZE"},{"begin":3751,"end":13153,"name":"LT"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"2"},{"begin":3751,"end":13153,"name":"JUMPI"},{"begin":3751,"end":13153,"name":"PUSH","value":"0"},{"begin":3751,"end":13153,"name":"CALLDATALOAD"},{"begin":3751,"end":13153,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":3751,"end":13153,"name":"SWAP1"},{"begin":3751,"end":13153,"name":"DIV"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"PUSH","value":"A41E7D51"},{"begin":3751,"end":13153,"name":"GT"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"11"},{"begin":3751,"end":13153,"name":"JUMPI"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"PUSH","value":"A41E7D51"},{"begin":3751,"end":13153,"name":"EQ"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"7"},{"begin":3751,"end":13153,"name":"JUMPI"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"PUSH","value":"AABBB8CA"},{"begin":3751,"end":13153,"name":"EQ"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"8"},{"begin":3751,"end":13153,"name":"JUMPI"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"PUSH","value":"B7056765"},{"begin":3751,"end":13153,"name":"EQ"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"9"},{"begin":3751,"end":13153,"name":"JUMPI"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"PUSH","value":"F712F3E8"},{"begin":3751,"end":13153,"name":"EQ"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"10"},{"begin":3751,"end":13153,"name":"JUMPI"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"2"},{"begin":3751,"end":13153,"name":"JUMP"},{"begin":3751,"end":13153,"name":"tag","value":"11"},{"begin":3751,"end":13153,"name":"JUMPDEST"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"PUSH","value":"29965A1D"},{"begin":3751,"end":13153,"name":"EQ"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"3"},{"begin":3751,"end":13153,"name":"JUMPI"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"PUSH","value":"3D584063"},{"begin":3751,"end":13153,"name":"EQ"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"4"},{"begin":3751,"end":13153,"name":"JUMPI"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"PUSH","value":"5DF8122F"},{"begin":3751,"end":13153,"name":"EQ"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"5"},{"begin":3751,"end":13153,"name":"JUMPI"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"PUSH","value":"65BA36C1"},{"begin":3751,"end":13153,"name":"EQ"},{"begin":3751,"end":13153,"name":"PUSH [tag]","value":"6"},{"begin":3751,"end":13153,"name":"JUMPI"},{"begin":3751,"end":13153,"name":"tag","value":"2"},{"begin":3751,"end":13153,"name":"JUMPDEST"},{"begin":3751,"end":13153,"name":"PUSH","value":"0"},{"begin":3751,"end":13153,"name":"DUP1"},{"begin":3751,"end":13153,"name":"REVERT"},{"begin":6804,"end":7603,"name":"tag","value":"3"},{"begin":6804,"end":7603,"name":"JUMPDEST"},{"begin":6804,"end":7603,"name":"PUSH [tag]","value":"12"},{"begin":6804,"end":7603,"name":"PUSH","value":"4"},{"begin":6804,"end":7603,"name":"DUP1"},{"begin":6804,"end":7603,"name":"CALLDATASIZE"},{"begin":6804,"end":7603,"name":"SUB"},{"begin":13,"end":15,"name":"PUSH","value":"60"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"13"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"13"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":6804,"end":7603,"name":"DUP2"},{"begin":6804,"end":7603,"name":"CALLDATALOAD"},{"begin":6804,"end":7603,"name":"DUP2"},{"begin":6804,"end":7603,"name":"AND"},{"begin":6804,"end":7603,"name":"SWAP2"},{"begin":6804,"end":7603,"name":"PUSH","value":"20"},{"begin":6804,"end":7603,"name":"DUP2"},{"begin":6804,"end":7603,"name":"ADD"},{"begin":6804,"end":7603,"name":"CALLDATALOAD"},{"begin":6804,"end":7603,"name":"SWAP2"},{"begin":6804,"end":7603,"name":"PUSH","value":"40"},{"begin":6804,"end":7603,"name":"SWAP1"},{"begin":6804,"end":7603,"name":"SWAP2"},{"begin":6804,"end":7603,"name":"ADD"},{"begin":6804,"end":7603,"name":"CALLDATALOAD"},{"begin":6804,"end":7603,"name":"AND"},{"begin":6804,"end":7603,"name":"PUSH [tag]","value":"14"},{"begin":6804,"end":7603,"name":"JUMP","value":"[in]"},{"begin":6804,"end":7603,"name":"tag","value":"12"},{"begin":6804,"end":7603,"name":"JUMPDEST"},{"begin":6804,"end":7603,"name":"STOP"},{"begin":8382,"end":8662,"name":"tag","value":"4"},{"begin":8382,"end":8662,"name":"JUMPDEST"},{"begin":8382,"end":8662,"name":"PUSH [tag]","value":"15"},{"begin":8382,"end":8662,"name":"PUSH","value":"4"},{"begin":8382,"end":8662,"name":"DUP1"},{"begin":8382,"end":8662,"name":"CALLDATASIZE"},{"begin":8382,"end":8662,"name":"SUB"},{"begin":13,"end":15,"name":"PUSH","value":"20"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"16"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"16"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":8382,"end":8662,"name":"CALLDATALOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":8382,"end":8662,"name":"AND"},{"begin":8382,"end":8662,"name":"PUSH [tag]","value":"17"},{"begin":8382,"end":8662,"name":"JUMP","value":"[in]"},{"begin":8382,"end":8662,"name":"tag","value":"15"},{"begin":8382,"end":8662,"name":"JUMPDEST"},{"begin":8382,"end":8662,"name":"PUSH","value":"40"},{"begin":8382,"end":8662,"name":"DUP1"},{"begin":8382,"end":8662,"name":"MLOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":8382,"end":8662,"name":"SWAP1"},{"begin":8382,"end":8662,"name":"SWAP3"},{"begin":8382,"end":8662,"name":"AND"},{"begin":8382,"end":8662,"name":"DUP3"},{"begin":8382,"end":8662,"name":"MSTORE"},{"begin":8382,"end":8662,"name":"MLOAD"},{"begin":8382,"end":8662,"name":"SWAP1"},{"begin":8382,"end":8662,"name":"DUP2"},{"begin":8382,"end":8662,"name":"SWAP1"},{"begin":8382,"end":8662,"name":"SUB"},{"begin":8382,"end":8662,"name":"PUSH","value":"20"},{"begin":8382,"end":8662,"name":"ADD"},{"begin":8382,"end":8662,"name":"SWAP1"},{"begin":8382,"end":8662,"name":"RETURN"},{"begin":7933,"end":8202,"name":"tag","value":"5"},{"begin":7933,"end":8202,"name":"JUMPDEST"},{"begin":7933,"end":8202,"name":"PUSH [tag]","value":"12"},{"begin":7933,"end":8202,"name":"PUSH","value":"4"},{"begin":7933,"end":8202,"name":"DUP1"},{"begin":7933,"end":8202,"name":"CALLDATASIZE"},{"begin":7933,"end":8202,"name":"SUB"},{"begin":13,"end":15,"name":"PUSH","value":"40"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"19"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"19"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":7933,"end":8202,"name":"DUP2"},{"begin":7933,"end":8202,"name":"CALLDATALOAD"},{"begin":7933,"end":8202,"name":"DUP2"},{"begin":7933,"end":8202,"name":"AND"},{"begin":7933,"end":8202,"name":"SWAP2"},{"begin":7933,"end":8202,"name":"PUSH","value":"20"},{"begin":7933,"end":8202,"name":"ADD"},{"begin":7933,"end":8202,"name":"CALLDATALOAD"},{"begin":7933,"end":8202,"name":"AND"},{"begin":7933,"end":8202,"name":"PUSH [tag]","value":"20"},{"begin":7933,"end":8202,"name":"JUMP","value":"[in]"},{"begin":8858,"end":9013,"name":"tag","value":"6"},{"begin":8858,"end":9013,"name":"JUMPDEST"},{"begin":8858,"end":9013,"name":"PUSH [tag]","value":"21"},{"begin":8858,"end":9013,"name":"PUSH","value":"4"},{"begin":8858,"end":9013,"name":"DUP1"},{"begin":8858,"end":9013,"name":"CALLDATASIZE"},{"begin":8858,"end":9013,"name":"SUB"},{"begin":13,"end":15,"name":"PUSH","value":"20"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"22"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"22"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":8858,"end":9013,"name":"DUP2"},{"begin":8858,"end":9013,"name":"ADD"},{"begin":8858,"end":9013,"name":"SWAP1"},{"begin":8858,"end":9013,"name":"PUSH","value":"20"},{"begin":8858,"end":9013,"name":"DUP2"},{"begin":8858,"end":9013,"name":"ADD"},{"begin":8858,"end":9013,"name":"DUP2"},{"begin":8858,"end":9013,"name":"CALLDATALOAD"},{"begin":21,"end":32,"name":"PUSH","value":"100000000"},{"begin":5,"end":33,"name":"DUP2"},{"begin":5,"end":33,"name":"GT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"23"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":46,"end":47,"name":"PUSH","value":"0"},{"begin":43,"end":44,"name":"DUP1"},{"begin":36,"end":48,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"23"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":8858,"end":9013,"name":"DUP3"},{"begin":8858,"end":9013,"name":"ADD"},{"begin":35,"end":44,"name":"DUP4"},{"begin":28,"end":32,"name":"PUSH","value":"20"},{"begin":12,"end":26,"name":"DUP3"},{"begin":8,"end":33,"name":"ADD"},{"begin":5,"end":45,"name":"GT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"24"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":58,"end":59,"name":"PUSH","value":"0"},{"begin":55,"end":56,"name":"DUP1"},{"begin":48,"end":60,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"24"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":8858,"end":9013,"name":"DUP1"},{"begin":8858,"end":9013,"name":"CALLDATALOAD"},{"begin":8858,"end":9013,"name":"SWAP1"},{"begin":8858,"end":9013,"name":"PUSH","value":"20"},{"begin":8858,"end":9013,"name":"ADD"},{"begin":8858,"end":9013,"name":"SWAP2"},{"begin":100,"end":109,"name":"DUP5"},{"begin":95,"end":96,"name":"PUSH","value":"1"},{"begin":81,"end":93,"name":"DUP4"},{"begin":77,"end":97,"name":"MUL"},{"begin":67,"end":75,"name":"DUP5"},{"begin":63,"end":98,"name":"ADD"},{"begin":60,"end":110,"name":"GT"},{"begin":39,"end":50,"name":"PUSH","value":"100000000"},{"begin":25,"end":37,"name":"DUP4"},{"begin":22,"end":51,"name":"GT"},{"begin":11,"end":118,"name":"OR"},{"begin":8,"end":10,"name":"ISZERO"},{"begin":8,"end":10,"name":"PUSH [tag]","value":"25"},{"begin":8,"end":10,"name":"JUMPI"},{"begin":131,"end":132,"name":"PUSH","value":"0"},{"begin":128,"end":129,"name":"DUP1"},{"begin":121,"end":133,"name":"REVERT"},{"begin":8,"end":10,"name":"tag","value":"25"},{"begin":8,"end":10,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":8858,"end":9013,"name":"SWAP1"},{"begin":8858,"end":9013,"name":"SWAP3"},{"begin":-1,"end":-1,"name":"POP"},{"begin":8858,"end":9013,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":8858,"end":9013,"name":"PUSH [tag]","value":"26"},{"begin":8858,"end":9013,"name":"JUMP","value":"[in]"},{"begin":8858,"end":9013,"name":"tag","value":"21"},{"begin":8858,"end":9013,"name":"JUMPDEST"},{"begin":8858,"end":9013,"name":"PUSH","value":"40"},{"begin":8858,"end":9013,"name":"DUP1"},{"begin":8858,"end":9013,"name":"MLOAD"},{"begin":8858,"end":9013,"name":"SWAP2"},{"begin":8858,"end":9013,"name":"DUP3"},{"begin":8858,"end":9013,"name":"MSTORE"},{"begin":8858,"end":9013,"name":"MLOAD"},{"begin":8858,"end":9013,"name":"SWAP1"},{"begin":8858,"end":9013,"name":"DUP2"},{"begin":8858,"end":9013,"name":"SWAP1"},{"begin":8858,"end":9013,"name":"SUB"},{"begin":8858,"end":9013,"name":"PUSH","value":"20"},{"begin":8858,"end":9013,"name":"ADD"},{"begin":8858,"end":9013,"name":"SWAP1"},{"begin":8858,"end":9013,"name":"RETURN"},{"begin":9394,"end":9678,"name":"tag","value":"7"},{"begin":9394,"end":9678,"name":"JUMPDEST"},{"begin":9394,"end":9678,"name":"PUSH [tag]","value":"12"},{"begin":9394,"end":9678,"name":"PUSH","value":"4"},{"begin":9394,"end":9678,"name":"DUP1"},{"begin":9394,"end":9678,"name":"CALLDATASIZE"},{"begin":9394,"end":9678,"name":"SUB"},{"begin":13,"end":15,"name":"PUSH","value":"40"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"28"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"28"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":9394,"end":9678,"name":"DUP1"},{"begin":9394,"end":9678,"name":"CALLDATALOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":9394,"end":9678,"name":"AND"},{"begin":9394,"end":9678,"name":"SWAP1"},{"begin":9394,"end":9678,"name":"PUSH","value":"20"},{"begin":9394,"end":9678,"name":"ADD"},{"begin":9394,"end":9678,"name":"CALLDATALOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"E0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":9394,"end":9678,"name":"AND"},{"begin":9394,"end":9678,"name":"PUSH [tag]","value":"29"},{"begin":9394,"end":9678,"name":"JUMP","value":"[in]"},{"begin":5699,"end":6148,"name":"tag","value":"8"},{"begin":5699,"end":6148,"name":"JUMPDEST"},{"begin":5699,"end":6148,"name":"PUSH [tag]","value":"15"},{"begin":5699,"end":6148,"name":"PUSH","value":"4"},{"begin":5699,"end":6148,"name":"DUP1"},{"begin":5699,"end":6148,"name":"CALLDATASIZE"},{"begin":5699,"end":6148,"name":"SUB"},{"begin":13,"end":15,"name":"PUSH","value":"40"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"31"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"31"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":5699,"end":6148,"name":"DUP2"},{"begin":5699,"end":6148,"name":"CALLDATALOAD"},{"begin":5699,"end":6148,"name":"AND"},{"begin":5699,"end":6148,"name":"SWAP1"},{"begin":5699,"end":6148,"name":"PUSH","value":"20"},{"begin":5699,"end":6148,"name":"ADD"},{"begin":5699,"end":6148,"name":"CALLDATALOAD"},{"begin":5699,"end":6148,"name":"PUSH [tag]","value":"32"},{"begin":5699,"end":6148,"name":"JUMP","value":"[in]"},{"begin":10876,"end":11513,"name":"tag","value":"9"},{"begin":10876,"end":11513,"name":"JUMPDEST"},{"begin":10876,"end":11513,"name":"PUSH [tag]","value":"33"},{"begin":10876,"end":11513,"name":"PUSH","value":"4"},{"begin":10876,"end":11513,"name":"DUP1"},{"begin":10876,"end":11513,"name":"CALLDATASIZE"},{"begin":10876,"end":11513,"name":"SUB"},{"begin":13,"end":15,"name":"PUSH","value":"40"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"34"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"34"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":10876,"end":11513,"name":"DUP1"},{"begin":10876,"end":11513,"name":"CALLDATALOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":10876,"end":11513,"name":"AND"},{"begin":10876,"end":11513,"name":"SWAP1"},{"begin":10876,"end":11513,"name":"PUSH","value":"20"},{"begin":10876,"end":11513,"name":"ADD"},{"begin":10876,"end":11513,"name":"CALLDATALOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"E0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":10876,"end":11513,"name":"AND"},{"begin":10876,"end":11513,"name":"PUSH [tag]","value":"35"},{"begin":10876,"end":11513,"name":"JUMP","value":"[in]"},{"begin":10876,"end":11513,"name":"tag","value":"33"},{"begin":10876,"end":11513,"name":"JUMPDEST"},{"begin":10876,"end":11513,"name":"PUSH","value":"40"},{"begin":10876,"end":11513,"name":"DUP1"},{"begin":10876,"end":11513,"name":"MLOAD"},{"begin":10876,"end":11513,"name":"SWAP2"},{"begin":10876,"end":11513,"name":"ISZERO"},{"begin":10876,"end":11513,"name":"ISZERO"},{"begin":10876,"end":11513,"name":"DUP3"},{"begin":10876,"end":11513,"name":"MSTORE"},{"begin":10876,"end":11513,"name":"MLOAD"},{"begin":10876,"end":11513,"name":"SWAP1"},{"begin":10876,"end":11513,"name":"DUP2"},{"begin":10876,"end":11513,"name":"SWAP1"},{"begin":10876,"end":11513,"name":"SUB"},{"begin":10876,"end":11513,"name":"PUSH","value":"20"},{"begin":10876,"end":11513,"name":"ADD"},{"begin":10876,"end":11513,"name":"SWAP1"},{"begin":10876,"end":11513,"name":"RETURN"},{"begin":10231,"end":10552,"name":"tag","value":"10"},{"begin":10231,"end":10552,"name":"JUMPDEST"},{"begin":10231,"end":10552,"name":"PUSH [tag]","value":"33"},{"begin":10231,"end":10552,"name":"PUSH","value":"4"},{"begin":10231,"end":10552,"name":"DUP1"},{"begin":10231,"end":10552,"name":"CALLDATASIZE"},{"begin":10231,"end":10552,"name":"SUB"},{"begin":13,"end":15,"name":"PUSH","value":"40"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"37"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"37"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":10231,"end":10552,"name":"DUP1"},{"begin":10231,"end":10552,"name":"CALLDATALOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":10231,"end":10552,"name":"AND"},{"begin":10231,"end":10552,"name":"SWAP1"},{"begin":10231,"end":10552,"name":"PUSH","value":"20"},{"begin":10231,"end":10552,"name":"ADD"},{"begin":10231,"end":10552,"name":"CALLDATALOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"E0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":10231,"end":10552,"name":"AND"},{"begin":10231,"end":10552,"name":"PUSH [tag]","value":"38"},{"begin":10231,"end":10552,"name":"JUMP","value":"[in]"},{"begin":6804,"end":7603,"name":"tag","value":"14"},{"begin":6804,"end":7603,"name":"JUMPDEST"},{"begin":6918,"end":6930,"name":"PUSH","value":"0"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":6933,"end":6952,"name":"DUP5"},{"begin":6933,"end":6952,"name":"AND"},{"begin":6933,"end":6952,"name":"ISZERO"},{"begin":6933,"end":6973,"name":"PUSH [tag]","value":"40"},{"begin":6933,"end":6973,"name":"JUMPI"},{"begin":6968,"end":6973,"name":"DUP4"},{"begin":6933,"end":6973,"name":"PUSH [tag]","value":"41"},{"begin":6933,"end":6973,"name":"JUMP"},{"begin":6933,"end":6973,"name":"tag","value":"40"},{"begin":6933,"end":6973,"name":"JUMPDEST"},{"begin":6955,"end":6965,"name":"CALLER"},{"begin":6933,"end":6973,"name":"tag","value":"41"},{"begin":6933,"end":6973,"name":"JUMPDEST"},{"begin":6918,"end":6973,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":7012,"end":7022,"name":"CALLER"},{"begin":6992,"end":7008,"name":"PUSH [tag]","value":"42"},{"begin":6918,"end":6973,"name":"DUP3"},{"begin":6992,"end":7002,"name":"PUSH [tag]","value":"17"},{"begin":6992,"end":7008,"name":"JUMP","value":"[in]"},{"begin":6992,"end":7008,"name":"tag","value":"42"},{"begin":6992,"end":7008,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":6992,"end":7022,"name":"AND"},{"begin":6992,"end":7022,"name":"EQ"},{"begin":6984,"end":7042,"name":"PUSH [tag]","value":"43"},{"begin":6984,"end":7042,"name":"JUMPI"},{"begin":6984,"end":7042,"name":"PUSH","value":"40"},{"begin":6984,"end":7042,"name":"DUP1"},{"begin":6984,"end":7042,"name":"MLOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"E5"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"PUSH","value":"461BCD"},{"begin":-1,"end":-1,"name":"MUL"},{"begin":6984,"end":7042,"name":"DUP2"},{"begin":6984,"end":7042,"name":"MSTORE"},{"begin":6984,"end":7042,"name":"PUSH","value":"20"},{"begin":6984,"end":7042,"name":"PUSH","value":"4"},{"begin":6984,"end":7042,"name":"DUP3"},{"begin":6984,"end":7042,"name":"ADD"},{"begin":6984,"end":7042,"name":"MSTORE"},{"begin":6984,"end":7042,"name":"PUSH","value":"F"},{"begin":6984,"end":7042,"name":"PUSH","value":"24"},{"begin":6984,"end":7042,"name":"DUP3"},{"begin":6984,"end":7042,"name":"ADD"},{"begin":6984,"end":7042,"name":"MSTORE"},{"begin":6984,"end":7042,"name":"PUSH","value":"4E6F7420746865206D616E616765720000000000000000000000000000000000"},{"begin":6984,"end":7042,"name":"PUSH","value":"44"},{"begin":6984,"end":7042,"name":"DUP3"},{"begin":6984,"end":7042,"name":"ADD"},{"begin":6984,"end":7042,"name":"MSTORE"},{"begin":6984,"end":7042,"name":"SWAP1"},{"begin":6984,"end":7042,"name":"MLOAD"},{"begin":6984,"end":7042,"name":"SWAP1"},{"begin":6984,"end":7042,"name":"DUP2"},{"begin":6984,"end":7042,"name":"SWAP1"},{"begin":6984,"end":7042,"name":"SUB"},{"begin":6984,"end":7042,"name":"PUSH","value":"64"},{"begin":6984,"end":7042,"name":"ADD"},{"begin":6984,"end":7042,"name":"SWAP1"},{"begin":6984,"end":7042,"name":"REVERT"},{"begin":6984,"end":7042,"name":"tag","value":"43"},{"begin":6984,"end":7042,"name":"JUMPDEST"},{"begin":7064,"end":7097,"name":"PUSH [tag]","value":"44"},{"begin":7082,"end":7096,"name":"DUP4"},{"begin":7064,"end":7081,"name":"PUSH [tag]","value":"45"},{"begin":7064,"end":7097,"name":"JUMP","value":"[in]"},{"begin":7064,"end":7097,"name":"tag","value":"44"},{"begin":7064,"end":7097,"name":"JUMPDEST"},{"begin":7063,"end":7097,"name":"ISZERO"},{"begin":7055,"end":7128,"name":"PUSH [tag]","value":"46"},{"begin":7055,"end":7128,"name":"JUMPI"},{"begin":7055,"end":7128,"name":"PUSH","value":"40"},{"begin":7055,"end":7128,"name":"DUP1"},{"begin":7055,"end":7128,"name":"MLOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"E5"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"PUSH","value":"461BCD"},{"begin":-1,"end":-1,"name":"MUL"},{"begin":7055,"end":7128,"name":"DUP2"},{"begin":7055,"end":7128,"name":"MSTORE"},{"begin":7055,"end":7128,"name":"PUSH","value":"20"},{"begin":7055,"end":7128,"name":"PUSH","value":"4"},{"begin":7055,"end":7128,"name":"DUP3"},{"begin":7055,"end":7128,"name":"ADD"},{"begin":7055,"end":7128,"name":"MSTORE"},{"begin":7055,"end":7128,"name":"PUSH","value":"1A"},{"begin":7055,"end":7128,"name":"PUSH","value":"24"},{"begin":7055,"end":7128,"name":"DUP3"},{"begin":7055,"end":7128,"name":"ADD"},{"begin":7055,"end":7128,"name":"MSTORE"},{"begin":7055,"end":7128,"name":"PUSH","value":"4D757374206E6F7420626520616E204552433136352068617368000000000000"},{"begin":7055,"end":7128,"name":"PUSH","value":"44"},{"begin":7055,"end":7128,"name":"DUP3"},{"begin":7055,"end":7128,"name":"ADD"},{"begin":7055,"end":7128,"name":"MSTORE"},{"begin":7055,"end":7128,"name":"SWAP1"},{"begin":7055,"end":7128,"name":"MLOAD"},{"begin":7055,"end":7128,"name":"SWAP1"},{"begin":7055,"end":7128,"name":"DUP2"},{"begin":7055,"end":7128,"name":"SWAP1"},{"begin":7055,"end":7128,"name":"SUB"},{"begin":7055,"end":7128,"name":"PUSH","value":"64"},{"begin":7055,"end":7128,"name":"ADD"},{"begin":7055,"end":7128,"name":"SWAP1"},{"begin":7055,"end":7128,"name":"REVERT"},{"begin":7055,"end":7128,"name":"tag","value":"46"},{"begin":7055,"end":7128,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":7143,"end":7169,"name":"DUP3"},{"begin":7143,"end":7169,"name":"AND"},{"begin":7143,"end":7169,"name":"ISZERO"},{"begin":7143,"end":7169,"name":"DUP1"},{"begin":7143,"end":7169,"name":"ISZERO"},{"begin":7143,"end":7169,"name":"SWAP1"},{"begin":7143,"end":7199,"name":"PUSH [tag]","value":"47"},{"begin":7143,"end":7199,"name":"JUMPI"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":7173,"end":7199,"name":"DUP3"},{"begin":7173,"end":7199,"name":"AND"},{"begin":7189,"end":7199,"name":"CALLER"},{"begin":7173,"end":7199,"name":"EQ"},{"begin":7173,"end":7199,"name":"ISZERO"},{"begin":7143,"end":7199,"name":"tag","value":"47"},{"begin":7143,"end":7199,"name":"JUMPDEST"},{"begin":7139,"end":7463,"name":"ISZERO"},{"begin":7139,"end":7463,"name":"PUSH [tag]","value":"52"},{"begin":7139,"end":7463,"name":"JUMPI"},{"begin":4225,"end":4265,"name":"PUSH","value":"40"},{"begin":4225,"end":4265,"name":"MLOAD"},{"begin":4225,"end":4265,"name":"PUSH","value":"20"},{"begin":4225,"end":4265,"name":"ADD"},{"begin":4225,"end":4265,"name":"DUP1"},{"begin":4225,"end":4265,"name":"DUP1"},{"begin":4225,"end":4265,"name":"PUSH","value":"455243313832305F4143434550545F4D41474943000000000000000000000000"},{"begin":4225,"end":4265,"name":"DUP2"},{"begin":4225,"end":4265,"name":"MSTORE"},{"begin":4225,"end":4265,"name":"POP"},{"begin":4225,"end":4265,"name":"PUSH","value":"14"},{"begin":4225,"end":4265,"name":"ADD"},{"begin":4225,"end":4265,"name":"SWAP1"},{"begin":4225,"end":4265,"name":"POP"},{"begin":4225,"end":4265,"name":"PUSH","value":"40"},{"begin":4225,"end":4265,"name":"MLOAD"},{"begin":49,"end":53,"name":"PUSH","value":"20"},{"begin":39,"end":46,"name":"DUP2"},{"begin":30,"end":37,"name":"DUP4"},{"begin":26,"end":47,"name":"SUB"},{"begin":22,"end":54,"name":"SUB"},{"begin":13,"end":20,"name":"DUP2"},{"begin":6,"end":55,"name":"MSTORE"},{"begin":4225,"end":4265,"name":"SWAP1"},{"begin":4225,"end":4265,"name":"PUSH","value":"40"},{"begin":4225,"end":4265,"name":"MSTORE"},{"begin":4215,"end":4266,"name":"DUP1"},{"begin":4215,"end":4266,"name":"MLOAD"},{"begin":4215,"end":4266,"name":"SWAP1"},{"begin":4215,"end":4266,"name":"PUSH","value":"20"},{"begin":4215,"end":4266,"name":"ADD"},{"begin":4215,"end":4266,"name":"KECCAK256"},{"begin":7270,"end":7282,"name":"DUP3"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":7242,"end":7337,"name":"AND"},{"begin":7242,"end":7337,"name":"PUSH","value":"249CB3FA"},{"begin":7338,"end":7352,"name":"DUP6"},{"begin":7354,"end":7358,"name":"DUP5"},{"begin":7242,"end":7359,"name":"PUSH","value":"40"},{"begin":7242,"end":7359,"name":"MLOAD"},{"begin":7242,"end":7359,"name":"DUP4"},{"begin":7242,"end":7359,"name":"PUSH","value":"FFFFFFFF"},{"begin":7242,"end":7359,"name":"AND"},{"begin":7242,"end":7359,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":7242,"end":7359,"name":"MUL"},{"begin":7242,"end":7359,"name":"DUP2"},{"begin":7242,"end":7359,"name":"MSTORE"},{"begin":7242,"end":7359,"name":"PUSH","value":"4"},{"begin":7242,"end":7359,"name":"ADD"},{"begin":7242,"end":7359,"name":"DUP1"},{"begin":7242,"end":7359,"name":"DUP4"},{"begin":7242,"end":7359,"name":"DUP2"},{"begin":7242,"end":7359,"name":"MSTORE"},{"begin":7242,"end":7359,"name":"PUSH","value":"20"},{"begin":7242,"end":7359,"name":"ADD"},{"begin":7242,"end":7359,"name":"DUP3"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":7242,"end":7359,"name":"AND"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":7242,"end":7359,"name":"AND"},{"begin":7242,"end":7359,"name":"DUP2"},{"begin":7242,"end":7359,"name":"MSTORE"},{"begin":7242,"end":7359,"name":"PUSH","value":"20"},{"begin":7242,"end":7359,"name":"ADD"},{"begin":7242,"end":7359,"name":"SWAP3"},{"begin":7242,"end":7359,"name":"POP"},{"begin":7242,"end":7359,"name":"POP"},{"begin":7242,"end":7359,"name":"POP"},{"begin":7242,"end":7359,"name":"PUSH","value":"20"},{"begin":7242,"end":7359,"name":"PUSH","value":"40"},{"begin":7242,"end":7359,"name":"MLOAD"},{"begin":7242,"end":7359,"name":"DUP1"},{"begin":7242,"end":7359,"name":"DUP4"},{"begin":7242,"end":7359,"name":"SUB"},{"begin":7242,"end":7359,"name":"DUP2"},{"begin":7242,"end":7359,"name":"DUP7"},{"begin":7242,"end":7359,"name":"DUP1"},{"begin":7242,"end":7359,"name":"EXTCODESIZE"},{"begin":7242,"end":7359,"name":"ISZERO"},{"begin":8,"end":17,"name":"DUP1"},{"begin":5,"end":7,"name":"ISZERO"},{"begin":5,"end":7,"name":"PUSH [tag]","value":"49"},{"begin":5,"end":7,"name":"JUMPI"},{"begin":30,"end":31,"name":"PUSH","value":"0"},{"begin":27,"end":28,"name":"DUP1"},{"begin":20,"end":32,"name":"REVERT"},{"begin":5,"end":7,"name":"tag","value":"49"},{"begin":5,"end":7,"name":"JUMPDEST"},{"begin":7242,"end":7359,"name":"POP"},{"begin":7242,"end":7359,"name":"GAS"},{"begin":7242,"end":7359,"name":"STATICCALL"},{"begin":7242,"end":7359,"name":"ISZERO"},{"begin":8,"end":17,"name":"DUP1"},{"begin":5,"end":7,"name":"ISZERO"},{"begin":5,"end":7,"name":"PUSH [tag]","value":"50"},{"begin":5,"end":7,"name":"JUMPI"},{"begin":45,"end":61,"name":"RETURNDATASIZE"},{"begin":42,"end":43,"name":"PUSH","value":"0"},{"begin":39,"end":40,"name":"DUP1"},{"begin":24,"end":62,"name":"RETURNDATACOPY"},{"begin":77,"end":93,"name":"RETURNDATASIZE"},{"begin":74,"end":75,"name":"PUSH","value":"0"},{"begin":67,"end":94,"name":"REVERT"},{"begin":5,"end":7,"name":"tag","value":"50"},{"begin":5,"end":7,"name":"JUMPDEST"},{"begin":7242,"end":7359,"name":"POP"},{"begin":7242,"end":7359,"name":"POP"},{"begin":7242,"end":7359,"name":"POP"},{"begin":7242,"end":7359,"name":"POP"},{"begin":7242,"end":7359,"name":"PUSH","value":"40"},{"begin":7242,"end":7359,"name":"MLOAD"},{"begin":7242,"end":7359,"name":"RETURNDATASIZE"},{"begin":13,"end":15,"name":"PUSH","value":"20"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"51"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"51"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":7242,"end":7359,"name":"MLOAD"},{"begin":7242,"end":7383,"name":"EQ"},{"begin":7216,"end":7451,"name":"PUSH [tag]","value":"52"},{"begin":7216,"end":7451,"name":"JUMPI"},{"begin":7216,"end":7451,"name":"PUSH","value":"40"},{"begin":7216,"end":7451,"name":"DUP1"},{"begin":7216,"end":7451,"name":"MLOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"E5"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"PUSH","value":"461BCD"},{"begin":-1,"end":-1,"name":"MUL"},{"begin":7216,"end":7451,"name":"DUP2"},{"begin":7216,"end":7451,"name":"MSTORE"},{"begin":7216,"end":7451,"name":"PUSH","value":"20"},{"begin":7216,"end":7451,"name":"PUSH","value":"4"},{"begin":7216,"end":7451,"name":"DUP3"},{"begin":7216,"end":7451,"name":"ADD"},{"begin":7216,"end":7451,"name":"DUP2"},{"begin":7216,"end":7451,"name":"SWAP1"},{"begin":7216,"end":7451,"name":"MSTORE"},{"begin":7216,"end":7451,"name":"PUSH","value":"24"},{"begin":7216,"end":7451,"name":"DUP3"},{"begin":7216,"end":7451,"name":"ADD"},{"begin":7216,"end":7451,"name":"MSTORE"},{"begin":7216,"end":7451,"name":"PUSH","value":"446F6573206E6F7420696D706C656D656E742074686520696E74657266616365"},{"begin":7216,"end":7451,"name":"PUSH","value":"44"},{"begin":7216,"end":7451,"name":"DUP3"},{"begin":7216,"end":7451,"name":"ADD"},{"begin":7216,"end":7451,"name":"MSTORE"},{"begin":7216,"end":7451,"name":"SWAP1"},{"begin":7216,"end":7451,"name":"MLOAD"},{"begin":7216,"end":7451,"name":"SWAP1"},{"begin":7216,"end":7451,"name":"DUP2"},{"begin":7216,"end":7451,"name":"SWAP1"},{"begin":7216,"end":7451,"name":"SUB"},{"begin":7216,"end":7451,"name":"PUSH","value":"64"},{"begin":7216,"end":7451,"name":"ADD"},{"begin":7216,"end":7451,"name":"SWAP1"},{"begin":7216,"end":7451,"name":"REVERT"},{"begin":7216,"end":7451,"name":"tag","value":"52"},{"begin":7216,"end":7451,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":7473,"end":7489,"name":"DUP2"},{"begin":7473,"end":7489,"name":"DUP2"},{"begin":7473,"end":7489,"name":"AND"},{"begin":7473,"end":7483,"name":"PUSH","value":"0"},{"begin":7473,"end":7489,"name":"DUP2"},{"begin":7473,"end":7489,"name":"DUP2"},{"begin":7473,"end":7489,"name":"MSTORE"},{"begin":7473,"end":7489,"name":"PUSH","value":"20"},{"begin":7473,"end":7489,"name":"DUP2"},{"begin":7473,"end":7489,"name":"DUP2"},{"begin":7473,"end":7489,"name":"MSTORE"},{"begin":7473,"end":7489,"name":"PUSH","value":"40"},{"begin":7473,"end":7489,"name":"DUP1"},{"begin":7473,"end":7489,"name":"DUP4"},{"begin":7473,"end":7489,"name":"KECCAK256"},{"begin":7473,"end":7505,"name":"DUP9"},{"begin":7473,"end":7505,"name":"DUP5"},{"begin":7473,"end":7505,"name":"MSTORE"},{"begin":7473,"end":7505,"name":"SWAP1"},{"begin":7473,"end":7505,"name":"SWAP2"},{"begin":7473,"end":7505,"name":"MSTORE"},{"begin":7473,"end":7505,"name":"DUP1"},{"begin":7473,"end":7505,"name":"DUP3"},{"begin":7473,"end":7505,"name":"KECCAK256"},{"begin":7473,"end":7520,"name":"DUP1"},{"begin":7473,"end":7520,"name":"SLOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":7473,"end":7520,"name":"AND"},{"begin":7473,"end":7520,"name":"SWAP5"},{"begin":7473,"end":7520,"name":"DUP8"},{"begin":7473,"end":7520,"name":"AND"},{"begin":7473,"end":7520,"name":"SWAP5"},{"begin":7473,"end":7520,"name":"DUP6"},{"begin":7473,"end":7520,"name":"OR"},{"begin":7473,"end":7520,"name":"SWAP1"},{"begin":7473,"end":7520,"name":"SSTORE"},{"begin":7536,"end":7595,"name":"MLOAD"},{"begin":7473,"end":7505,"name":"DUP7"},{"begin":7473,"end":7505,"name":"SWAP3"},{"begin":7473,"end":7489,"name":"SWAP2"},{"begin":7536,"end":7595,"name":"PUSH","value":"93BAA6EFBD2244243BFEE6CE4CFDD1D04FC4C0E9A786ABD3A41313BD352DB153"},{"begin":7536,"end":7595,"name":"SWAP2"},{"begin":7536,"end":7595,"name":"LOG4"},{"begin":6804,"end":7603,"name":"POP"},{"begin":6804,"end":7603,"name":"POP"},{"begin":6804,"end":7603,"name":"POP"},{"begin":6804,"end":7603,"name":"POP"},{"begin":6804,"end":7603,"name":"JUMP","value":"[out]"},{"begin":8382,"end":8662,"name":"tag","value":"17"},{"begin":8382,"end":8662,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":8530,"end":8545,"name":"DUP2"},{"begin":8530,"end":8545,"name":"DUP2"},{"begin":8530,"end":8545,"name":"AND"},{"begin":8437,"end":8444,"name":"PUSH","value":"0"},{"begin":8530,"end":8545,"name":"SWAP1"},{"begin":8530,"end":8545,"name":"DUP2"},{"begin":8530,"end":8545,"name":"MSTORE"},{"begin":8530,"end":8538,"name":"PUSH","value":"1"},{"begin":8530,"end":8545,"name":"PUSH","value":"20"},{"begin":8530,"end":8545,"name":"MSTORE"},{"begin":8530,"end":8545,"name":"PUSH","value":"40"},{"begin":8530,"end":8545,"name":"DUP2"},{"begin":8530,"end":8545,"name":"KECCAK256"},{"begin":8530,"end":8545,"name":"SLOAD"},{"begin":8437,"end":8444,"name":"SWAP1"},{"begin":8437,"end":8444,"name":"SWAP2"},{"begin":8530,"end":8545,"name":"AND"},{"begin":8530,"end":8559,"name":"ISZERO"},{"begin":8526,"end":8655,"name":"ISZERO"},{"begin":8526,"end":8655,"name":"PUSH [tag]","value":"54"},{"begin":8526,"end":8655,"name":"JUMPI"},{"begin":-1,"end":-1,"name":"POP"},{"begin":8583,"end":8588,"name":"DUP1"},{"begin":8576,"end":8588,"name":"PUSH [tag]","value":"55"},{"begin":8576,"end":8588,"name":"JUMP"},{"begin":8526,"end":8655,"name":"tag","value":"54"},{"begin":8526,"end":8655,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":8628,"end":8643,"name":"DUP1"},{"begin":8628,"end":8643,"name":"DUP3"},{"begin":8628,"end":8643,"name":"AND"},{"begin":8628,"end":8643,"name":"PUSH","value":"0"},{"begin":8628,"end":8643,"name":"SWAP1"},{"begin":8628,"end":8643,"name":"DUP2"},{"begin":8628,"end":8643,"name":"MSTORE"},{"begin":8628,"end":8636,"name":"PUSH","value":"1"},{"begin":8628,"end":8643,"name":"PUSH","value":"20"},{"begin":8628,"end":8643,"name":"MSTORE"},{"begin":8628,"end":8643,"name":"PUSH","value":"40"},{"begin":8628,"end":8643,"name":"SWAP1"},{"begin":8628,"end":8643,"name":"KECCAK256"},{"begin":8628,"end":8643,"name":"SLOAD"},{"begin":8628,"end":8643,"name":"AND"},{"begin":8526,"end":8655,"name":"tag","value":"55"},{"begin":8526,"end":8655,"name":"JUMPDEST"},{"begin":8382,"end":8662,"name":"SWAP2"},{"begin":8382,"end":8662,"name":"SWAP1"},{"begin":8382,"end":8662,"name":"POP"},{"begin":8382,"end":8662,"name":"JUMP","value":"[out]"},{"begin":7933,"end":8202,"name":"tag","value":"20"},{"begin":7933,"end":8202,"name":"JUMPDEST"},{"begin":8038,"end":8048,"name":"CALLER"},{"begin":8017,"end":8034,"name":"PUSH [tag]","value":"57"},{"begin":8028,"end":8033,"name":"DUP4"},{"begin":8017,"end":8027,"name":"PUSH [tag]","value":"17"},{"begin":8017,"end":8034,"name":"JUMP","value":"[in]"},{"begin":8017,"end":8034,"name":"tag","value":"57"},{"begin":8017,"end":8034,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":8017,"end":8048,"name":"AND"},{"begin":8017,"end":8048,"name":"EQ"},{"begin":8009,"end":8068,"name":"PUSH [tag]","value":"58"},{"begin":8009,"end":8068,"name":"JUMPI"},{"begin":8009,"end":8068,"name":"PUSH","value":"40"},{"begin":8009,"end":8068,"name":"DUP1"},{"begin":8009,"end":8068,"name":"MLOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"E5"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"PUSH","value":"461BCD"},{"begin":-1,"end":-1,"name":"MUL"},{"begin":8009,"end":8068,"name":"DUP2"},{"begin":8009,"end":8068,"name":"MSTORE"},{"begin":8009,"end":8068,"name":"PUSH","value":"20"},{"begin":8009,"end":8068,"name":"PUSH","value":"4"},{"begin":8009,"end":8068,"name":"DUP3"},{"begin":8009,"end":8068,"name":"ADD"},{"begin":8009,"end":8068,"name":"MSTORE"},{"begin":8009,"end":8068,"name":"PUSH","value":"F"},{"begin":8009,"end":8068,"name":"PUSH","value":"24"},{"begin":8009,"end":8068,"name":"DUP3"},{"begin":8009,"end":8068,"name":"ADD"},{"begin":8009,"end":8068,"name":"MSTORE"},{"begin":8009,"end":8068,"name":"PUSH","value":"4E6F7420746865206D616E616765720000000000000000000000000000000000"},{"begin":8009,"end":8068,"name":"PUSH","value":"44"},{"begin":8009,"end":8068,"name":"DUP3"},{"begin":8009,"end":8068,"name":"ADD"},{"begin":8009,"end":8068,"name":"MSTORE"},{"begin":8009,"end":8068,"name":"SWAP1"},{"begin":8009,"end":8068,"name":"MLOAD"},{"begin":8009,"end":8068,"name":"SWAP1"},{"begin":8009,"end":8068,"name":"DUP2"},{"begin":8009,"end":8068,"name":"SWAP1"},{"begin":8009,"end":8068,"name":"SUB"},{"begin":8009,"end":8068,"name":"PUSH","value":"64"},{"begin":8009,"end":8068,"name":"ADD"},{"begin":8009,"end":8068,"name":"SWAP1"},{"begin":8009,"end":8068,"name":"REVERT"},{"begin":8009,"end":8068,"name":"tag","value":"58"},{"begin":8009,"end":8068,"name":"JUMPDEST"},{"begin":8112,"end":8117,"name":"DUP2"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":8097,"end":8117,"name":"AND"},{"begin":8097,"end":8108,"name":"DUP2"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":8097,"end":8117,"name":"AND"},{"begin":8097,"end":8117,"name":"EQ"},{"begin":8097,"end":8144,"name":"PUSH [tag]","value":"59"},{"begin":8097,"end":8144,"name":"JUMPI"},{"begin":8133,"end":8144,"name":"DUP1"},{"begin":8097,"end":8144,"name":"PUSH [tag]","value":"60"},{"begin":8097,"end":8144,"name":"JUMP"},{"begin":8097,"end":8144,"name":"tag","value":"59"},{"begin":8097,"end":8144,"name":"JUMPDEST"},{"begin":8128,"end":8129,"name":"PUSH","value":"0"},{"begin":8097,"end":8144,"name":"tag","value":"60"},{"begin":8097,"end":8144,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":8079,"end":8094,"name":"DUP4"},{"begin":8079,"end":8094,"name":"DUP2"},{"begin":8079,"end":8094,"name":"AND"},{"begin":8079,"end":8094,"name":"PUSH","value":"0"},{"begin":8079,"end":8094,"name":"DUP2"},{"begin":8079,"end":8094,"name":"DUP2"},{"begin":8079,"end":8094,"name":"MSTORE"},{"begin":8079,"end":8087,"name":"PUSH","value":"1"},{"begin":8079,"end":8094,"name":"PUSH","value":"20"},{"begin":8079,"end":8094,"name":"MSTORE"},{"begin":8079,"end":8094,"name":"PUSH","value":"40"},{"begin":8079,"end":8094,"name":"DUP1"},{"begin":8079,"end":8094,"name":"DUP3"},{"begin":8079,"end":8094,"name":"KECCAK256"},{"begin":8079,"end":8144,"name":"DUP1"},{"begin":8079,"end":8144,"name":"SLOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":8079,"end":8144,"name":"AND"},{"begin":8079,"end":8144,"name":"SWAP6"},{"begin":8079,"end":8144,"name":"DUP6"},{"begin":8079,"end":8144,"name":"AND"},{"begin":8079,"end":8144,"name":"SWAP6"},{"begin":8079,"end":8144,"name":"SWAP1"},{"begin":8079,"end":8144,"name":"SWAP6"},{"begin":8079,"end":8144,"name":"OR"},{"begin":8079,"end":8144,"name":"SWAP1"},{"begin":8079,"end":8144,"name":"SWAP5"},{"begin":8079,"end":8144,"name":"SSTORE"},{"begin":8160,"end":8194,"name":"SWAP3"},{"begin":8160,"end":8194,"name":"MLOAD"},{"begin":8160,"end":8194,"name":"SWAP2"},{"begin":8160,"end":8194,"name":"DUP5"},{"begin":8160,"end":8194,"name":"AND"},{"begin":8160,"end":8194,"name":"SWAP3"},{"begin":8079,"end":8094,"name":"SWAP1"},{"begin":8079,"end":8094,"name":"SWAP2"},{"begin":8160,"end":8194,"name":"PUSH","value":"605C2DBF762E5F7D60A546D42E7205DCB1B011EBC62A61736A57C9089D3A4350"},{"begin":8160,"end":8194,"name":"SWAP2"},{"begin":8079,"end":8094,"name":"SWAP1"},{"begin":8160,"end":8194,"name":"LOG3"},{"begin":7933,"end":8202,"name":"POP"},{"begin":7933,"end":8202,"name":"POP"},{"begin":7933,"end":8202,"name":"JUMP","value":"[out]"},{"begin":8858,"end":9013,"name":"tag","value":"26"},{"begin":8858,"end":9013,"name":"JUMPDEST"},{"begin":8935,"end":8942,"name":"PUSH","value":"0"},{"begin":8989,"end":9003,"name":"DUP3"},{"begin":8989,"end":9003,"name":"DUP3"},{"begin":8972,"end":9004,"name":"PUSH","value":"40"},{"begin":8972,"end":9004,"name":"MLOAD"},{"begin":8972,"end":9004,"name":"PUSH","value":"20"},{"begin":8972,"end":9004,"name":"ADD"},{"begin":8972,"end":9004,"name":"DUP1"},{"begin":8972,"end":9004,"name":"DUP4"},{"begin":8972,"end":9004,"name":"DUP4"},{"begin":30,"end":33,"name":"DUP1"},{"begin":22,"end":28,"name":"DUP3"},{"begin":14,"end":20,"name":"DUP5"},{"begin":1,"end":34,"name":"CALLDATACOPY"},{"begin":57,"end":60,"name":"DUP1"},{"begin":49,"end":55,"name":"DUP4"},{"begin":45,"end":61,"name":"ADD"},{"begin":35,"end":61,"name":"SWAP3"},{"begin":35,"end":61,"name":"POP"},{"begin":8972,"end":9004,"name":"POP"},{"begin":8972,"end":9004,"name":"POP"},{"begin":8972,"end":9004,"name":"SWAP3"},{"begin":8972,"end":9004,"name":"POP"},{"begin":8972,"end":9004,"name":"POP"},{"begin":8972,"end":9004,"name":"POP"},{"begin":8972,"end":9004,"name":"PUSH","value":"40"},{"begin":8972,"end":9004,"name":"MLOAD"},{"begin":49,"end":53,"name":"PUSH","value":"20"},{"begin":39,"end":46,"name":"DUP2"},{"begin":30,"end":37,"name":"DUP4"},{"begin":26,"end":47,"name":"SUB"},{"begin":22,"end":54,"name":"SUB"},{"begin":13,"end":20,"name":"DUP2"},{"begin":6,"end":55,"name":"MSTORE"},{"begin":8972,"end":9004,"name":"SWAP1"},{"begin":8972,"end":9004,"name":"PUSH","value":"40"},{"begin":8972,"end":9004,"name":"MSTORE"},{"begin":8962,"end":9005,"name":"DUP1"},{"begin":8962,"end":9005,"name":"MLOAD"},{"begin":8962,"end":9005,"name":"SWAP1"},{"begin":8962,"end":9005,"name":"PUSH","value":"20"},{"begin":8962,"end":9005,"name":"ADD"},{"begin":8962,"end":9005,"name":"KECCAK256"},{"begin":8955,"end":9005,"name":"SWAP1"},{"begin":8955,"end":9005,"name":"POP"},{"begin":8858,"end":9013,"name":"tag","value":"61"},{"begin":8858,"end":9013,"name":"JUMPDEST"},{"begin":8858,"end":9013,"name":"SWAP3"},{"begin":8858,"end":9013,"name":"SWAP2"},{"begin":8858,"end":9013,"name":"POP"},{"begin":8858,"end":9013,"name":"POP"},{"begin":8858,"end":9013,"name":"JUMP","value":"[out]"},{"begin":9394,"end":9678,"name":"tag","value":"29"},{"begin":9394,"end":9678,"name":"JUMPDEST"},{"begin":9519,"end":9590,"name":"PUSH [tag]","value":"63"},{"begin":9566,"end":9575,"name":"DUP3"},{"begin":9577,"end":9589,"name":"DUP3"},{"begin":9519,"end":9551,"name":"PUSH [tag]","value":"35"},{"begin":9519,"end":9590,"name":"JUMP","value":"[in]"},{"begin":9519,"end":9590,"name":"tag","value":"63"},{"begin":9519,"end":9590,"name":"JUMPDEST"},{"begin":9519,"end":9615,"name":"PUSH [tag]","value":"64"},{"begin":9519,"end":9615,"name":"JUMPI"},{"begin":9613,"end":9614,"name":"PUSH","value":"0"},{"begin":9519,"end":9615,"name":"PUSH [tag]","value":"65"},{"begin":9519,"end":9615,"name":"JUMP"},{"begin":9519,"end":9615,"name":"tag","value":"64"},{"begin":9519,"end":9615,"name":"JUMPDEST"},{"begin":9593,"end":9602,"name":"DUP2"},{"begin":9519,"end":9615,"name":"tag","value":"65"},{"begin":9519,"end":9615,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":9481,"end":9502,"name":"SWAP3"},{"begin":9481,"end":9502,"name":"DUP4"},{"begin":9481,"end":9502,"name":"AND"},{"begin":9481,"end":9491,"name":"PUSH","value":"0"},{"begin":9481,"end":9502,"name":"DUP2"},{"begin":9481,"end":9502,"name":"DUP2"},{"begin":9481,"end":9502,"name":"MSTORE"},{"begin":9481,"end":9502,"name":"PUSH","value":"20"},{"begin":9481,"end":9502,"name":"DUP2"},{"begin":9481,"end":9502,"name":"DUP2"},{"begin":9481,"end":9502,"name":"MSTORE"},{"begin":9481,"end":9502,"name":"PUSH","value":"40"},{"begin":9481,"end":9502,"name":"DUP1"},{"begin":9481,"end":9502,"name":"DUP4"},{"begin":9481,"end":9502,"name":"KECCAK256"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"E0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":9481,"end":9516,"name":"SWAP7"},{"begin":9481,"end":9516,"name":"SWAP1"},{"begin":9481,"end":9516,"name":"SWAP7"},{"begin":9481,"end":9516,"name":"AND"},{"begin":9481,"end":9516,"name":"DUP1"},{"begin":9481,"end":9516,"name":"DUP5"},{"begin":9481,"end":9516,"name":"MSTORE"},{"begin":9481,"end":9516,"name":"SWAP6"},{"begin":9481,"end":9516,"name":"DUP3"},{"begin":9481,"end":9516,"name":"MSTORE"},{"begin":9481,"end":9516,"name":"DUP1"},{"begin":9481,"end":9516,"name":"DUP4"},{"begin":9481,"end":9516,"name":"KECCAK256"},{"begin":9481,"end":9615,"name":"DUP1"},{"begin":9481,"end":9615,"name":"SLOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":9481,"end":9615,"name":"AND"},{"begin":9481,"end":9615,"name":"SWAP6"},{"begin":9481,"end":9615,"name":"SWAP1"},{"begin":9481,"end":9615,"name":"SWAP8"},{"begin":9481,"end":9615,"name":"AND"},{"begin":9481,"end":9615,"name":"SWAP5"},{"begin":9481,"end":9615,"name":"SWAP1"},{"begin":9481,"end":9615,"name":"SWAP5"},{"begin":9481,"end":9615,"name":"OR"},{"begin":9481,"end":9615,"name":"SWAP1"},{"begin":9481,"end":9615,"name":"SWAP6"},{"begin":9481,"end":9615,"name":"SSTORE"},{"begin":9626,"end":9649,"name":"SWAP1"},{"begin":9626,"end":9649,"name":"DUP2"},{"begin":9626,"end":9649,"name":"MSTORE"},{"begin":9626,"end":9638,"name":"PUSH","value":"2"},{"begin":9626,"end":9649,"name":"DUP5"},{"begin":9626,"end":9649,"name":"MSTORE"},{"begin":9626,"end":9649,"name":"DUP2"},{"begin":9626,"end":9649,"name":"DUP2"},{"begin":9626,"end":9649,"name":"KECCAK256"},{"begin":9626,"end":9663,"name":"SWAP3"},{"begin":9626,"end":9663,"name":"DUP2"},{"begin":9626,"end":9663,"name":"MSTORE"},{"begin":9626,"end":9663,"name":"SWAP2"},{"begin":9626,"end":9663,"name":"SWAP1"},{"begin":9626,"end":9663,"name":"SWAP3"},{"begin":9626,"end":9663,"name":"MSTORE"},{"begin":9626,"end":9663,"name":"KECCAK256"},{"begin":9626,"end":9670,"name":"DUP1"},{"begin":9626,"end":9670,"name":"SLOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"FF"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":9626,"end":9670,"name":"AND"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":9626,"end":9670,"name":"OR"},{"begin":9626,"end":9670,"name":"SWAP1"},{"begin":9626,"end":9670,"name":"SSTORE"},{"begin":9394,"end":9678,"name":"JUMP","value":"[out]"},{"begin":5699,"end":6148,"name":"tag","value":"32"},{"begin":5699,"end":6148,"name":"JUMPDEST"},{"begin":5794,"end":5801,"name":"PUSH","value":"0"},{"begin":5794,"end":5801,"name":"DUP1"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":5829,"end":5848,"name":"DUP5"},{"begin":5829,"end":5848,"name":"AND"},{"begin":5829,"end":5848,"name":"ISZERO"},{"begin":5829,"end":5869,"name":"PUSH [tag]","value":"67"},{"begin":5829,"end":5869,"name":"JUMPI"},{"begin":5864,"end":5869,"name":"DUP4"},{"begin":5829,"end":5869,"name":"PUSH [tag]","value":"68"},{"begin":5829,"end":5869,"name":"JUMP"},{"begin":5829,"end":5869,"name":"tag","value":"67"},{"begin":5829,"end":5869,"name":"JUMPDEST"},{"begin":5851,"end":5861,"name":"CALLER"},{"begin":5829,"end":5869,"name":"tag","value":"68"},{"begin":5829,"end":5869,"name":"JUMPDEST"},{"begin":5814,"end":5869,"name":"SWAP1"},{"begin":5814,"end":5869,"name":"POP"},{"begin":5884,"end":5917,"name":"PUSH [tag]","value":"69"},{"begin":5902,"end":5916,"name":"DUP4"},{"begin":5884,"end":5901,"name":"PUSH [tag]","value":"45"},{"begin":5884,"end":5917,"name":"JUMP","value":"[in]"},{"begin":5884,"end":5917,"name":"tag","value":"69"},{"begin":5884,"end":5917,"name":"JUMPDEST"},{"begin":5880,"end":6091,"name":"ISZERO"},{"begin":5880,"end":6091,"name":"PUSH [tag]","value":"70"},{"begin":5880,"end":6091,"name":"JUMPI"},{"begin":5970,"end":5984,"name":"DUP3"},{"begin":6007,"end":6059,"name":"PUSH [tag]","value":"71"},{"begin":6033,"end":6037,"name":"DUP3"},{"begin":5970,"end":5984,"name":"DUP3"},{"begin":6007,"end":6032,"name":"PUSH [tag]","value":"38"},{"begin":6007,"end":6059,"name":"JUMP","value":"[in]"},{"begin":6007,"end":6059,"name":"tag","value":"71"},{"begin":6007,"end":6059,"name":"JUMPDEST"},{"begin":6007,"end":6079,"name":"PUSH [tag]","value":"72"},{"begin":6007,"end":6079,"name":"JUMPI"},{"begin":6077,"end":6078,"name":"PUSH","value":"0"},{"begin":6007,"end":6079,"name":"PUSH [tag]","value":"73"},{"begin":6007,"end":6079,"name":"JUMP"},{"begin":6007,"end":6079,"name":"tag","value":"72"},{"begin":6007,"end":6079,"name":"JUMPDEST"},{"begin":6062,"end":6066,"name":"DUP2"},{"begin":6007,"end":6079,"name":"tag","value":"73"},{"begin":6007,"end":6079,"name":"JUMPDEST"},{"begin":6000,"end":6079,"name":"SWAP3"},{"begin":6000,"end":6079,"name":"POP"},{"begin":6000,"end":6079,"name":"POP"},{"begin":6000,"end":6079,"name":"POP"},{"begin":6000,"end":6079,"name":"PUSH [tag]","value":"61"},{"begin":6000,"end":6079,"name":"JUMP"},{"begin":5880,"end":6091,"name":"tag","value":"70"},{"begin":5880,"end":6091,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":6108,"end":6124,"name":"SWAP1"},{"begin":6108,"end":6124,"name":"DUP2"},{"begin":6108,"end":6124,"name":"AND"},{"begin":6108,"end":6118,"name":"PUSH","value":"0"},{"begin":6108,"end":6124,"name":"SWAP1"},{"begin":6108,"end":6124,"name":"DUP2"},{"begin":6108,"end":6124,"name":"MSTORE"},{"begin":6108,"end":6124,"name":"PUSH","value":"20"},{"begin":6108,"end":6124,"name":"DUP2"},{"begin":6108,"end":6124,"name":"DUP2"},{"begin":6108,"end":6124,"name":"MSTORE"},{"begin":6108,"end":6124,"name":"PUSH","value":"40"},{"begin":6108,"end":6124,"name":"DUP1"},{"begin":6108,"end":6124,"name":"DUP4"},{"begin":6108,"end":6124,"name":"KECCAK256"},{"begin":6108,"end":6140,"name":"DUP7"},{"begin":6108,"end":6140,"name":"DUP5"},{"begin":6108,"end":6140,"name":"MSTORE"},{"begin":6108,"end":6140,"name":"SWAP1"},{"begin":6108,"end":6140,"name":"SWAP2"},{"begin":6108,"end":6140,"name":"MSTORE"},{"begin":6108,"end":6140,"name":"SWAP1"},{"begin":6108,"end":6140,"name":"KECCAK256"},{"begin":6108,"end":6140,"name":"SLOAD"},{"begin":6108,"end":6140,"name":"AND"},{"begin":6108,"end":6140,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":5699,"end":6148,"name":"SWAP3"},{"begin":5699,"end":6148,"name":"SWAP2"},{"begin":5699,"end":6148,"name":"POP"},{"begin":5699,"end":6148,"name":"POP"},{"begin":5699,"end":6148,"name":"JUMP","value":"[out]"},{"begin":10876,"end":11513,"name":"tag","value":"35"},{"begin":10876,"end":11513,"name":"JUMPDEST"},{"begin":10979,"end":10983,"name":"PUSH","value":"0"},{"begin":10979,"end":10983,"name":"DUP1"},{"begin":10979,"end":10983,"name":"DUP1"},{"begin":11069,"end":11101,"name":"PUSH [tag]","value":"75"},{"begin":11081,"end":11090,"name":"DUP6"},{"begin":11092,"end":11100,"name":"PUSH","value":"1FFC9A700000000000000000000000000000000000000000000000000000000"},{"begin":11069,"end":11080,"name":"PUSH [tag]","value":"76"},{"begin":11069,"end":11101,"name":"JUMP","value":"[in]"},{"begin":11069,"end":11101,"name":"tag","value":"75"},{"begin":11069,"end":11101,"name":"JUMPDEST"},{"begin":11049,"end":11101,"name":"SWAP1"},{"begin":11049,"end":11101,"name":"SWAP3"},{"begin":-1,"end":-1,"name":"POP"},{"begin":11049,"end":11101,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":11116,"end":11128,"name":"DUP2"},{"begin":11116,"end":11128,"name":"ISZERO"},{"begin":11116,"end":11128,"name":"DUP1"},{"begin":11116,"end":11143,"name":"PUSH [tag]","value":"77"},{"begin":11116,"end":11143,"name":"JUMPI"},{"begin":-1,"end":-1,"name":"POP"},{"begin":11132,"end":11143,"name":"DUP1"},{"begin":11132,"end":11143,"name":"ISZERO"},{"begin":11116,"end":11143,"name":"tag","value":"77"},{"begin":11116,"end":11143,"name":"JUMPDEST"},{"begin":11112,"end":11184,"name":"ISZERO"},{"begin":11112,"end":11184,"name":"PUSH [tag]","value":"78"},{"begin":11112,"end":11184,"name":"JUMPI"},{"begin":11167,"end":11172,"name":"PUSH","value":"0"},{"begin":11160,"end":11172,"name":"SWAP3"},{"begin":11160,"end":11172,"name":"POP"},{"begin":11160,"end":11172,"name":"POP"},{"begin":11160,"end":11172,"name":"POP"},{"begin":11160,"end":11172,"name":"PUSH [tag]","value":"61"},{"begin":11160,"end":11172,"name":"JUMP"},{"begin":11112,"end":11184,"name":"tag","value":"78"},{"begin":11112,"end":11184,"name":"JUMPDEST"},{"begin":11216,"end":11250,"name":"PUSH [tag]","value":"79"},{"begin":11228,"end":11237,"name":"DUP6"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"E0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":11216,"end":11227,"name":"PUSH [tag]","value":"76"},{"begin":11216,"end":11250,"name":"JUMP","value":"[in]"},{"begin":11216,"end":11250,"name":"tag","value":"79"},{"begin":11216,"end":11250,"name":"JUMPDEST"},{"begin":11196,"end":11250,"name":"SWAP1"},{"begin":11196,"end":11250,"name":"SWAP3"},{"begin":-1,"end":-1,"name":"POP"},{"begin":11196,"end":11250,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":11265,"end":11277,"name":"DUP2"},{"begin":11265,"end":11277,"name":"ISZERO"},{"begin":11265,"end":11277,"name":"DUP1"},{"begin":11265,"end":11292,"name":"PUSH [tag]","value":"80"},{"begin":11265,"end":11292,"name":"JUMPI"},{"begin":-1,"end":-1,"name":"POP"},{"begin":11281,"end":11292,"name":"DUP1"},{"begin":11281,"end":11292,"name":"ISZERO"},{"begin":11281,"end":11292,"name":"ISZERO"},{"begin":11265,"end":11292,"name":"tag","value":"80"},{"begin":11265,"end":11292,"name":"JUMPDEST"},{"begin":11261,"end":11333,"name":"ISZERO"},{"begin":11261,"end":11333,"name":"PUSH [tag]","value":"81"},{"begin":11261,"end":11333,"name":"JUMPI"},{"begin":11316,"end":11321,"name":"PUSH","value":"0"},{"begin":11309,"end":11321,"name":"SWAP3"},{"begin":11309,"end":11321,"name":"POP"},{"begin":11309,"end":11321,"name":"POP"},{"begin":11309,"end":11321,"name":"POP"},{"begin":11309,"end":11321,"name":"PUSH [tag]","value":"61"},{"begin":11309,"end":11321,"name":"JUMP"},{"begin":11261,"end":11333,"name":"tag","value":"81"},{"begin":11261,"end":11333,"name":"JUMPDEST"},{"begin":11365,"end":11401,"name":"PUSH [tag]","value":"82"},{"begin":11377,"end":11386,"name":"DUP6"},{"begin":11388,"end":11400,"name":"DUP6"},{"begin":11365,"end":11376,"name":"PUSH [tag]","value":"76"},{"begin":11365,"end":11401,"name":"JUMP","value":"[in]"},{"begin":11365,"end":11401,"name":"tag","value":"82"},{"begin":11365,"end":11401,"name":"JUMPDEST"},{"begin":11345,"end":11401,"name":"SWAP1"},{"begin":11345,"end":11401,"name":"SWAP3"},{"begin":-1,"end":-1,"name":"POP"},{"begin":11345,"end":11401,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":11427,"end":11428,"name":"PUSH","value":"1"},{"begin":11416,"end":11428,"name":"DUP3"},{"begin":11416,"end":11428,"name":"EQ"},{"begin":11416,"end":11443,"name":"DUP1"},{"begin":11416,"end":11443,"name":"ISZERO"},{"begin":11416,"end":11443,"name":"PUSH [tag]","value":"83"},{"begin":11416,"end":11443,"name":"JUMPI"},{"begin":11416,"end":11443,"name":"POP"},{"begin":11432,"end":11438,"name":"DUP1"},{"begin":11442,"end":11443,"name":"PUSH","value":"1"},{"begin":11432,"end":11443,"name":"EQ"},{"begin":11416,"end":11443,"name":"tag","value":"83"},{"begin":11416,"end":11443,"name":"JUMPDEST"},{"begin":11412,"end":11483,"name":"ISZERO"},{"begin":11412,"end":11483,"name":"PUSH [tag]","value":"84"},{"begin":11412,"end":11483,"name":"JUMPI"},{"begin":11467,"end":11471,"name":"PUSH","value":"1"},{"begin":11460,"end":11471,"name":"SWAP3"},{"begin":11460,"end":11471,"name":"POP"},{"begin":11460,"end":11471,"name":"POP"},{"begin":11460,"end":11471,"name":"POP"},{"begin":11460,"end":11471,"name":"PUSH [tag]","value":"61"},{"begin":11460,"end":11471,"name":"JUMP"},{"begin":11412,"end":11483,"name":"tag","value":"84"},{"begin":11412,"end":11483,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":11500,"end":11505,"name":"PUSH","value":"0"},{"begin":11500,"end":11505,"name":"SWAP5"},{"begin":10876,"end":11513,"name":"SWAP4"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":10876,"end":11513,"name":"JUMP","value":"[out]"},{"begin":10231,"end":10552,"name":"tag","value":"38"},{"begin":10231,"end":10552,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":10349,"end":10372,"name":"DUP3"},{"begin":10349,"end":10372,"name":"AND"},{"begin":10327,"end":10331,"name":"PUSH","value":"0"},{"begin":10349,"end":10372,"name":"SWAP1"},{"begin":10349,"end":10372,"name":"DUP2"},{"begin":10349,"end":10372,"name":"MSTORE"},{"begin":10349,"end":10361,"name":"PUSH","value":"2"},{"begin":10349,"end":10372,"name":"PUSH","value":"20"},{"begin":10349,"end":10372,"name":"SWAP1"},{"begin":10349,"end":10372,"name":"DUP2"},{"begin":10349,"end":10372,"name":"MSTORE"},{"begin":10349,"end":10372,"name":"PUSH","value":"40"},{"begin":10349,"end":10372,"name":"DUP1"},{"begin":10349,"end":10372,"name":"DUP4"},{"begin":10349,"end":10372,"name":"KECCAK256"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"E0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":10349,"end":10386,"name":"DUP6"},{"begin":10349,"end":10386,"name":"AND"},{"begin":10349,"end":10386,"name":"DUP5"},{"begin":10349,"end":10386,"name":"MSTORE"},{"begin":10349,"end":10386,"name":"SWAP1"},{"begin":10349,"end":10386,"name":"SWAP2"},{"begin":10349,"end":10386,"name":"MSTORE"},{"begin":10349,"end":10386,"name":"DUP2"},{"begin":10349,"end":10386,"name":"KECCAK256"},{"begin":10349,"end":10386,"name":"SLOAD"},{"begin":10349,"end":10386,"name":"PUSH","value":"FF"},{"begin":10349,"end":10386,"name":"AND"},{"begin":10348,"end":10386,"name":"ISZERO"},{"begin":10344,"end":10479,"name":"ISZERO"},{"begin":10344,"end":10479,"name":"PUSH [tag]","value":"86"},{"begin":10344,"end":10479,"name":"JUMPI"},{"begin":10410,"end":10467,"name":"PUSH [tag]","value":"87"},{"begin":10443,"end":10452,"name":"DUP4"},{"begin":10454,"end":10466,"name":"DUP4"},{"begin":10410,"end":10442,"name":"PUSH [tag]","value":"35"},{"begin":10410,"end":10467,"name":"JUMP","value":"[in]"},{"begin":10410,"end":10467,"name":"tag","value":"87"},{"begin":10410,"end":10467,"name":"JUMPDEST"},{"begin":10403,"end":10467,"name":"SWAP1"},{"begin":10403,"end":10467,"name":"POP"},{"begin":10403,"end":10467,"name":"PUSH [tag]","value":"61"},{"begin":10403,"end":10467,"name":"JUMP"},{"begin":10344,"end":10479,"name":"tag","value":"86"},{"begin":10344,"end":10479,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"A0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":10496,"end":10544,"name":"DUP1"},{"begin":10496,"end":10544,"name":"DUP4"},{"begin":10496,"end":10544,"name":"AND"},{"begin":10496,"end":10506,"name":"PUSH","value":"0"},{"begin":10496,"end":10517,"name":"DUP2"},{"begin":10496,"end":10517,"name":"DUP2"},{"begin":10496,"end":10517,"name":"MSTORE"},{"begin":10496,"end":10517,"name":"PUSH","value":"20"},{"begin":10496,"end":10517,"name":"DUP2"},{"begin":10496,"end":10517,"name":"DUP2"},{"begin":10496,"end":10517,"name":"MSTORE"},{"begin":10496,"end":10517,"name":"PUSH","value":"40"},{"begin":10496,"end":10517,"name":"DUP1"},{"begin":10496,"end":10517,"name":"DUP4"},{"begin":10496,"end":10517,"name":"KECCAK256"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"E0"},{"begin":-1,"end":-1,"name":"PUSH","value":"2"},{"begin":-1,"end":-1,"name":"EXP"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":10496,"end":10531,"name":"DUP8"},{"begin":10496,"end":10531,"name":"AND"},{"begin":10496,"end":10531,"name":"DUP5"},{"begin":10496,"end":10531,"name":"MSTORE"},{"begin":10496,"end":10531,"name":"SWAP1"},{"begin":10496,"end":10531,"name":"SWAP2"},{"begin":10496,"end":10531,"name":"MSTORE"},{"begin":10496,"end":10531,"name":"SWAP1"},{"begin":10496,"end":10531,"name":"KECCAK256"},{"begin":10496,"end":10531,"name":"SLOAD"},{"begin":10496,"end":10531,"name":"SWAP1"},{"begin":10496,"end":10531,"name":"SWAP2"},{"begin":10496,"end":10531,"name":"AND"},{"begin":10496,"end":10544,"name":"EQ"},{"begin":10231,"end":10552,"name":"SWAP3"},{"begin":10231,"end":10552,"name":"SWAP2"},{"begin":10231,"end":10552,"name":"POP"},{"begin":10231,"end":10552,"name":"POP"},{"begin":10231,"end":10552,"name":"JUMP","value":"[out]"},{"begin":11773,"end":11967,"name":"tag","value":"45"},{"begin":11773,"end":11967,"name":"JUMPDEST"},{"begin":11888,"end":11954,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":11871,"end":11954,"name":"AND"},{"begin":11871,"end":11959,"name":"ISZERO"},{"begin":11871,"end":11959,"name":"SWAP1"},{"begin":11773,"end":11967,"name":"JUMP","value":"[out]"},{"begin":12064,"end":13150,"name":"tag","value":"76"},{"begin":12064,"end":13150,"name":"JUMPDEST"},{"begin":12284,"end":12288,"name":"PUSH","value":"40"},{"begin":12278,"end":12289,"name":"MLOAD"},{"begin":12224,"end":12232,"name":"PUSH","value":"1FFC9A700000000000000000000000000000000000000000000000000000000"},{"begin":12376,"end":12395,"name":"DUP1"},{"begin":12376,"end":12395,"name":"DUP3"},{"begin":12376,"end":12395,"name":"MSTORE"},{"begin":12487,"end":12491,"name":"PUSH","value":"4"},{"begin":12480,"end":12492,"name":"DUP3"},{"begin":12480,"end":12492,"name":"ADD"},{"begin":12473,"end":12507,"name":"DUP4"},{"begin":12473,"end":12507,"name":"SWAP1"},{"begin":12473,"end":12507,"name":"MSTORE"},{"begin":12157,"end":12172,"name":"PUSH","value":"0"},{"begin":12157,"end":12172,"name":"SWAP2"},{"begin":12157,"end":12172,"name":"DUP3"},{"begin":12157,"end":12172,"name":"SWAP2"},{"begin":12224,"end":12232,"name":"SWAP1"},{"begin":12989,"end":12993,"name":"PUSH","value":"20"},{"begin":12278,"end":12289,"name":"DUP2"},{"begin":12815,"end":12819,"name":"PUSH","value":"24"},{"begin":12278,"end":12289,"name":"DUP2"},{"begin":12673,"end":12682,"name":"DUP10"},{"begin":12614,"end":12619,"name":"PUSH","value":"7530"},{"begin":12585,"end":13063,"name":"STATICCALL"},{"begin":13089,"end":13097,"name":"SWAP1"},{"begin":13089,"end":13097,"name":"MLOAD"},{"begin":12574,"end":13063,"name":"SWAP1"},{"begin":12574,"end":13063,"name":"SWAP7"},{"begin":13089,"end":13097,"name":"SWAP1"},{"begin":13089,"end":13097,"name":"SWAP6"},{"begin":-1,"end":-1,"name":"POP"},{"begin":12254,"end":13143,"name":"SWAP4"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":12254,"end":13143,"name":"JUMP","value":"[out]"}]}}},"bytecode":{"object":"608060405234801561001057600080fd5b506109c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c010000000000000000000000000000000000000000000000000000000090048063a41e7d5111610078578063a41e7d51146101d4578063aabbb8ca1461020a578063b705676514610236578063f712f3e814610280576100a5565b806329965a1d146100aa5780633d584063146100e25780635df8122f1461012457806365ba36c114610152575b600080fd5b6100e0600480360360608110156100c057600080fd5b50600160a060020a038135811691602081013591604090910135166102b6565b005b610108600480360360208110156100f857600080fd5b5035600160a060020a0316610570565b60408051600160a060020a039092168252519081900360200190f35b6100e06004803603604081101561013a57600080fd5b50600160a060020a03813581169160200135166105bc565b6101c26004803603602081101561016857600080fd5b81019060208101813564010000000081111561018357600080fd5b82018360208201111561019557600080fd5b803590602001918460018302840111640100000000831117156101b757600080fd5b5090925090506106b3565b60408051918252519081900360200190f35b6100e0600480360360408110156101ea57600080fd5b508035600160a060020a03169060200135600160e060020a0319166106ee565b6101086004803603604081101561022057600080fd5b50600160a060020a038135169060200135610778565b61026c6004803603604081101561024c57600080fd5b508035600160a060020a03169060200135600160e060020a0319166107ef565b604080519115158252519081900360200190f35b61026c6004803603604081101561029657600080fd5b508035600160a060020a03169060200135600160e060020a0319166108aa565b6000600160a060020a038416156102cd57836102cf565b335b9050336102db82610570565b600160a060020a031614610339576040805160e560020a62461bcd02815260206004820152600f60248201527f4e6f7420746865206d616e616765720000000000000000000000000000000000604482015290519081900360640190fd5b6103428361092a565b15610397576040805160e560020a62461bcd02815260206004820152601a60248201527f4d757374206e6f7420626520616e204552433136352068617368000000000000604482015290519081900360640190fd5b600160a060020a038216158015906103b85750600160a060020a0382163314155b156104ff5760405160200180807f455243313832305f4143434550545f4d4147494300000000000000000000000081525060140190506040516020818303038152906040528051906020012082600160a060020a031663249cb3fa85846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182600160a060020a0316600160a060020a031681526020019250505060206040518083038186803b15801561047e57600080fd5b505afa158015610492573d6000803e3d6000fd5b505050506040513d60208110156104a857600080fd5b5051146104ff576040805160e560020a62461bcd02815260206004820181905260248201527f446f6573206e6f7420696d706c656d656e742074686520696e74657266616365604482015290519081900360640190fd5b600160a060020a03818116600081815260208181526040808320888452909152808220805473ffffffffffffffffffffffffffffffffffffffff19169487169485179055518692917f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15391a450505050565b600160a060020a03818116600090815260016020526040812054909116151561059a5750806105b7565b50600160a060020a03808216600090815260016020526040902054165b919050565b336105c683610570565b600160a060020a031614610624576040805160e560020a62461bcd02815260206004820152600f60248201527f4e6f7420746865206d616e616765720000000000000000000000000000000000604482015290519081900360640190fd5b81600160a060020a031681600160a060020a0316146106435780610646565b60005b600160a060020a03838116600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff19169585169590951790945592519184169290917f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a43509190a35050565b600082826040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090505b92915050565b6106f882826107ef565b610703576000610705565b815b600160a060020a03928316600081815260208181526040808320600160e060020a031996909616808452958252808320805473ffffffffffffffffffffffffffffffffffffffff19169590971694909417909555908152600284528181209281529190925220805460ff19166001179055565b600080600160a060020a038416156107905783610792565b335b905061079d8361092a565b156107c357826107ad82826108aa565b6107b85760006107ba565b815b925050506106e8565b600160a060020a0390811660009081526020818152604080832086845290915290205416905092915050565b6000808061081d857f01ffc9a70000000000000000000000000000000000000000000000000000000061094c565b909250905081158061082d575080155b1561083d576000925050506106e8565b61084f85600160e060020a031961094c565b909250905081158061086057508015155b15610870576000925050506106e8565b61087a858561094c565b909250905060018214801561088f5750806001145b1561089f576001925050506106e8565b506000949350505050565b600160a060020a0382166000908152600260209081526040808320600160e060020a03198516845290915281205460ff1615156108f2576108eb83836107ef565b90506106e8565b50600160a060020a03808316600081815260208181526040808320600160e060020a0319871684529091529020549091161492915050565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff161590565b6040517f01ffc9a7000000000000000000000000000000000000000000000000000000008082526004820183905260009182919060208160248189617530fa90519096909550935050505056fea165627a7a72305820256d57265f5ffb5bc7b36c4e4c23eb7dac84d142a955695a5934b7aa7cac03780029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0xA41E7D51 GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xA41E7D51 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xAABBB8CA EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xB7056765 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF712F3E8 EQ PUSH2 0x280 JUMPI PUSH2 0xA5 JUMP JUMPDEST DUP1 PUSH4 0x29965A1D EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x3D584063 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x5DF8122F EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x65BA36C1 EQ PUSH2 0x152 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x2B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT AND PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x778 JUMP JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT AND PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT AND PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND ISZERO PUSH2 0x2CD JUMPI DUP4 PUSH2 0x2CF JUMP JUMPDEST CALLER JUMPDEST SWAP1 POP CALLER PUSH2 0x2DB DUP3 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0x339 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746865206D616E616765720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x342 DUP4 PUSH2 0x92A JUMP JUMPDEST ISZERO PUSH2 0x397 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206E6F7420626520616E204552433136352068617368000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3B8 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x455243313832305F4143434550545F4D41474943000000000000000000000000 DUP2 MSTORE POP PUSH1 0x14 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x249CB3FA DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD EQ PUSH2 0x4FF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6573206E6F7420696D706C656D656E742074686520696E74657266616365 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP5 DUP8 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD DUP7 SWAP3 SWAP2 PUSH32 0x93BAA6EFBD2244243BFEE6CE4CFDD1D04FC4C0E9A786ABD3A41313BD352DB153 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO ISZERO PUSH2 0x59A JUMPI POP DUP1 PUSH2 0x5B7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH2 0x5C6 DUP4 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0x624 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746865206D616E616765720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0x643 JUMPI DUP1 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP6 DUP6 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD SWAP2 DUP5 AND SWAP3 SWAP1 SWAP2 PUSH32 0x605C2DBF762E5F7D60A546D42E7205DCB1B011EBC62A61736A57C9089D3A4350 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F8 DUP3 DUP3 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x703 JUMPI PUSH1 0x0 PUSH2 0x705 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT SWAP7 SWAP1 SWAP7 AND DUP1 DUP5 MSTORE SWAP6 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP6 SWAP1 SWAP8 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP6 SSTORE SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE DUP2 DUP2 KECCAK256 SWAP3 DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND ISZERO PUSH2 0x790 JUMPI DUP4 PUSH2 0x792 JUMP JUMPDEST CALLER JUMPDEST SWAP1 POP PUSH2 0x79D DUP4 PUSH2 0x92A JUMP JUMPDEST ISZERO PUSH2 0x7C3 JUMPI DUP3 PUSH2 0x7AD DUP3 DUP3 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x0 PUSH2 0x7BA JUMP JUMPDEST DUP2 JUMPDEST SWAP3 POP POP POP PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x81D DUP6 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH2 0x94C JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x82D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x84F DUP6 PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT PUSH2 0x94C JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x860 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x87A DUP6 DUP6 PUSH2 0x94C JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP3 EQ DUP1 ISZERO PUSH2 0x88F JUMPI POP DUP1 PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x89F JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x6E8 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x8F2 JUMPI PUSH2 0x8EB DUP4 DUP4 PUSH2 0x7EF JUMP JUMPDEST SWAP1 POP PUSH2 0x6E8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP10 PUSH2 0x7530 STATICCALL SWAP1 MLOAD SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0x25 PUSH14 0x57265F5FFB5BC7B36C4E4C23EB7D 0xac DUP5 0xd1 TIMESTAMP 0xa9 SSTORE PUSH10 0x5A5934B7AA7CAC037800 0x29 ","sourceMap":"3751:9402:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3751:9402:0;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"608060405234801561001057600080fd5b50600436106100a5576000357c010000000000000000000000000000000000000000000000000000000090048063a41e7d5111610078578063a41e7d51146101d4578063aabbb8ca1461020a578063b705676514610236578063f712f3e814610280576100a5565b806329965a1d146100aa5780633d584063146100e25780635df8122f1461012457806365ba36c114610152575b600080fd5b6100e0600480360360608110156100c057600080fd5b50600160a060020a038135811691602081013591604090910135166102b6565b005b610108600480360360208110156100f857600080fd5b5035600160a060020a0316610570565b60408051600160a060020a039092168252519081900360200190f35b6100e06004803603604081101561013a57600080fd5b50600160a060020a03813581169160200135166105bc565b6101c26004803603602081101561016857600080fd5b81019060208101813564010000000081111561018357600080fd5b82018360208201111561019557600080fd5b803590602001918460018302840111640100000000831117156101b757600080fd5b5090925090506106b3565b60408051918252519081900360200190f35b6100e0600480360360408110156101ea57600080fd5b508035600160a060020a03169060200135600160e060020a0319166106ee565b6101086004803603604081101561022057600080fd5b50600160a060020a038135169060200135610778565b61026c6004803603604081101561024c57600080fd5b508035600160a060020a03169060200135600160e060020a0319166107ef565b604080519115158252519081900360200190f35b61026c6004803603604081101561029657600080fd5b508035600160a060020a03169060200135600160e060020a0319166108aa565b6000600160a060020a038416156102cd57836102cf565b335b9050336102db82610570565b600160a060020a031614610339576040805160e560020a62461bcd02815260206004820152600f60248201527f4e6f7420746865206d616e616765720000000000000000000000000000000000604482015290519081900360640190fd5b6103428361092a565b15610397576040805160e560020a62461bcd02815260206004820152601a60248201527f4d757374206e6f7420626520616e204552433136352068617368000000000000604482015290519081900360640190fd5b600160a060020a038216158015906103b85750600160a060020a0382163314155b156104ff5760405160200180807f455243313832305f4143434550545f4d4147494300000000000000000000000081525060140190506040516020818303038152906040528051906020012082600160a060020a031663249cb3fa85846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182600160a060020a0316600160a060020a031681526020019250505060206040518083038186803b15801561047e57600080fd5b505afa158015610492573d6000803e3d6000fd5b505050506040513d60208110156104a857600080fd5b5051146104ff576040805160e560020a62461bcd02815260206004820181905260248201527f446f6573206e6f7420696d706c656d656e742074686520696e74657266616365604482015290519081900360640190fd5b600160a060020a03818116600081815260208181526040808320888452909152808220805473ffffffffffffffffffffffffffffffffffffffff19169487169485179055518692917f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15391a450505050565b600160a060020a03818116600090815260016020526040812054909116151561059a5750806105b7565b50600160a060020a03808216600090815260016020526040902054165b919050565b336105c683610570565b600160a060020a031614610624576040805160e560020a62461bcd02815260206004820152600f60248201527f4e6f7420746865206d616e616765720000000000000000000000000000000000604482015290519081900360640190fd5b81600160a060020a031681600160a060020a0316146106435780610646565b60005b600160a060020a03838116600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff19169585169590951790945592519184169290917f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a43509190a35050565b600082826040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090505b92915050565b6106f882826107ef565b610703576000610705565b815b600160a060020a03928316600081815260208181526040808320600160e060020a031996909616808452958252808320805473ffffffffffffffffffffffffffffffffffffffff19169590971694909417909555908152600284528181209281529190925220805460ff19166001179055565b600080600160a060020a038416156107905783610792565b335b905061079d8361092a565b156107c357826107ad82826108aa565b6107b85760006107ba565b815b925050506106e8565b600160a060020a0390811660009081526020818152604080832086845290915290205416905092915050565b6000808061081d857f01ffc9a70000000000000000000000000000000000000000000000000000000061094c565b909250905081158061082d575080155b1561083d576000925050506106e8565b61084f85600160e060020a031961094c565b909250905081158061086057508015155b15610870576000925050506106e8565b61087a858561094c565b909250905060018214801561088f5750806001145b1561089f576001925050506106e8565b506000949350505050565b600160a060020a0382166000908152600260209081526040808320600160e060020a03198516845290915281205460ff1615156108f2576108eb83836107ef565b90506106e8565b50600160a060020a03808316600081815260208181526040808320600160e060020a0319871684529091529020549091161492915050565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff161590565b6040517f01ffc9a7000000000000000000000000000000000000000000000000000000008082526004820183905260009182919060208160248189617530fa90519096909550935050505056fea165627a7a72305820256d57265f5ffb5bc7b36c4e4c23eb7dac84d142a955695a5934b7aa7cac03780029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0xA41E7D51 GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xA41E7D51 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xAABBB8CA EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xB7056765 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF712F3E8 EQ PUSH2 0x280 JUMPI PUSH2 0xA5 JUMP JUMPDEST DUP1 PUSH4 0x29965A1D EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x3D584063 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x5DF8122F EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x65BA36C1 EQ PUSH2 0x152 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x2B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT AND PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x778 JUMP JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT AND PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT AND PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND ISZERO PUSH2 0x2CD JUMPI DUP4 PUSH2 0x2CF JUMP JUMPDEST CALLER JUMPDEST SWAP1 POP CALLER PUSH2 0x2DB DUP3 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0x339 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746865206D616E616765720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x342 DUP4 PUSH2 0x92A JUMP JUMPDEST ISZERO PUSH2 0x397 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206E6F7420626520616E204552433136352068617368000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3B8 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x455243313832305F4143434550545F4D41474943000000000000000000000000 DUP2 MSTORE POP PUSH1 0x14 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x249CB3FA DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD EQ PUSH2 0x4FF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6573206E6F7420696D706C656D656E742074686520696E74657266616365 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP5 DUP8 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD DUP7 SWAP3 SWAP2 PUSH32 0x93BAA6EFBD2244243BFEE6CE4CFDD1D04FC4C0E9A786ABD3A41313BD352DB153 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO ISZERO PUSH2 0x59A JUMPI POP DUP1 PUSH2 0x5B7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH2 0x5C6 DUP4 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0x624 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746865206D616E616765720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0x643 JUMPI DUP1 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP6 DUP6 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD SWAP2 DUP5 AND SWAP3 SWAP1 SWAP2 PUSH32 0x605C2DBF762E5F7D60A546D42E7205DCB1B011EBC62A61736A57C9089D3A4350 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F8 DUP3 DUP3 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x703 JUMPI PUSH1 0x0 PUSH2 0x705 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT SWAP7 SWAP1 SWAP7 AND DUP1 DUP5 MSTORE SWAP6 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP6 SWAP1 SWAP8 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP6 SSTORE SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE DUP2 DUP2 KECCAK256 SWAP3 DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND ISZERO PUSH2 0x790 JUMPI DUP4 PUSH2 0x792 JUMP JUMPDEST CALLER JUMPDEST SWAP1 POP PUSH2 0x79D DUP4 PUSH2 0x92A JUMP JUMPDEST ISZERO PUSH2 0x7C3 JUMPI DUP3 PUSH2 0x7AD DUP3 DUP3 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x0 PUSH2 0x7BA JUMP JUMPDEST DUP2 JUMPDEST SWAP3 POP POP POP PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x81D DUP6 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH2 0x94C JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x82D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x84F DUP6 PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT PUSH2 0x94C JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x860 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x87A DUP6 DUP6 PUSH2 0x94C JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP3 EQ DUP1 ISZERO PUSH2 0x88F JUMPI POP DUP1 PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x89F JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x6E8 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x8F2 JUMPI PUSH2 0x8EB DUP4 DUP4 PUSH2 0x7EF JUMP JUMPDEST SWAP1 POP PUSH2 0x6E8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP10 PUSH2 0x7530 STATICCALL SWAP1 MLOAD SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0x25 PUSH14 0x57265F5FFB5BC7B36C4E4C23EB7D 0xac DUP5 0xd1 TIMESTAMP 0xa9 SSTORE PUSH10 0x5A5934B7AA7CAC037800 0x29 ","sourceMap":"3751:9402:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3751:9402:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6804:799;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6804:799:0;;;;;;;;;;;;;;;;;:::i;:::-;;8382:280;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8382:280:0;-1:-1:-1;;;;;8382:280:0;;:::i;:::-;;;;-1:-1:-1;;;;;8382:280:0;;;;;;;;;;;;;;7933:269;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7933:269:0;;;;;;;;;;:::i;8858:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8858:155:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8858:155:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8858:155:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;8858:155:0;;-1:-1:-1;8858:155:0;-1:-1:-1;8858:155:0;:::i;:::-;;;;;;;;;;;;;;;;9394:284;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9394:284:0;;-1:-1:-1;;;;;9394:284:0;;;;;-1:-1:-1;;;;;;9394:284:0;;:::i;5699:449::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5699:449:0;;;;;;;;:::i;10876:637::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10876:637:0;;-1:-1:-1;;;;;10876:637:0;;;;;-1:-1:-1;;;;;;10876:637:0;;:::i;:::-;;;;;;;;;;;;;;;;;;10231:321;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10231:321:0;;-1:-1:-1;;;;;10231:321:0;;;;;-1:-1:-1;;;;;;10231:321:0;;:::i;6804:799::-;6918:12;-1:-1:-1;;;;;6933:19:0;;;:40;;6968:5;6933:40;;;6955:10;6933:40;6918:55;-1:-1:-1;7012:10:0;6992:16;6918:55;6992:10;:16::i;:::-;-1:-1:-1;;;;;6992:30:0;;6984:58;;;;;-1:-1:-1;;;;;6984:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:33;7082:14;7064:17;:33::i;:::-;7063:34;7055:73;;;;;-1:-1:-1;;;;;7055:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7143:26:0;;;;;;:56;;-1:-1:-1;;;;;;7173:26:0;;7189:10;7173:26;;7143:56;7139:324;;;4225:40;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4225:40:0;;;4215:51;;;;;;7270:12;-1:-1:-1;;;;;7242:95:0;;7338:14;7354:4;7242:117;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7242:117:0;-1:-1:-1;;;;;7242:117:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7242:117:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7242:117:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7242:117:0;:141;7216:235;;;;;-1:-1:-1;;;;;7216:235:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7473:16:0;;;:10;:16;;;;;;;;;;;:32;;;;;;;;;:47;;-1:-1:-1;;7473:47:0;;;;;;;;;7536:59;7473:32;;:16;7536:59;;;6804:799;;;;:::o;8382:280::-;-1:-1:-1;;;;;8530:15:0;;;8437:7;8530:15;;;:8;:15;;;;;;8437:7;;8530:15;:29;8526:129;;;-1:-1:-1;8583:5:0;8576:12;;8526:129;-1:-1:-1;;;;;;8628:15:0;;;;;;;:8;:15;;;;;;;8526:129;8382:280;;;:::o;7933:269::-;8038:10;8017:17;8028:5;8017:10;:17::i;:::-;-1:-1:-1;;;;;8017:31:0;;8009:59;;;;;-1:-1:-1;;;;;8009:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8112:5;-1:-1:-1;;;;;8097:20:0;:11;-1:-1:-1;;;;;8097:20:0;;:47;;8133:11;8097:47;;;8128:1;8097:47;-1:-1:-1;;;;;8079:15:0;;;;;;;:8;:15;;;;;;:65;;-1:-1:-1;;8079:65:0;;;;;;;;;;;8160:34;;;;;;8079:15;;8160:34;;8079:15;8160:34;7933:269;;:::o;8858:155::-;8935:7;8989:14;;8972:32;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;8972:32:0;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8972:32:0;;;8962:43;;;;;;8955:50;;8858:155;;;;;:::o;9394:284::-;9519:71;9566:9;9577:12;9519:32;:71::i;:::-;:96;;9613:1;9519:96;;;9593:9;9519:96;-1:-1:-1;;;;;9481:21:0;;;:10;:21;;;;;;;;;;;-1:-1:-1;;;;;;9481:35:0;;;;;;;;;;;;;:134;;-1:-1:-1;;9481:134:0;;;;;;;;;;;;9626:23;;;:12;:23;;;;;:37;;;;;;;;:44;;-1:-1:-1;;9626:44:0;-1:-1:-1;9626:44:0;;;9394:284::o;5699:449::-;5794:7;;-1:-1:-1;;;;;5829:19:0;;;:40;;5864:5;5829:40;;;5851:10;5829:40;5814:55;;5884:33;5902:14;5884:17;:33::i;:::-;5880:211;;;5970:14;6007:52;6033:4;5970:14;6007:25;:52::i;:::-;:72;;6077:1;6007:72;;;6062:4;6007:72;6000:79;;;;;;5880:211;-1:-1:-1;;;;;6108:16:0;;;:10;:16;;;;;;;;;;;:32;;;;;;;;;;;-1:-1:-1;5699:449:0;;;;:::o;10876:637::-;10979:4;;;11069:32;11081:9;11092:8;11069:11;:32::i;:::-;11049:52;;-1:-1:-1;11049:52:0;-1:-1:-1;11116:12:0;;;:27;;-1:-1:-1;11132:11:0;;11116:27;11112:72;;;11167:5;11160:12;;;;;;11112:72;11216:34;11228:9;-1:-1:-1;;;;;;11216:11:0;:34::i;:::-;11196:54;;-1:-1:-1;11196:54:0;-1:-1:-1;11265:12:0;;;:27;;-1:-1:-1;11281:11:0;;;11265:27;11261:72;;;11316:5;11309:12;;;;;;11261:72;11365:36;11377:9;11388:12;11365:11;:36::i;:::-;11345:56;;-1:-1:-1;11345:56:0;-1:-1:-1;11427:1:0;11416:12;;:27;;;;;11432:6;11442:1;11432:11;11416:27;11412:71;;;11467:4;11460:11;;;;;;11412:71;-1:-1:-1;11500:5:0;;10876:637;-1:-1:-1;;;;10876:637:0:o;10231:321::-;-1:-1:-1;;;;;10349:23:0;;10327:4;10349:23;;;:12;:23;;;;;;;;-1:-1:-1;;;;;;10349:37:0;;;;;;;;;;;;10348:38;10344:135;;;10410:57;10443:9;10454:12;10410:32;:57::i;:::-;10403:64;;;;10344:135;-1:-1:-1;;;;;;10496:48:0;;;:10;:21;;;;;;;;;;;-1:-1:-1;;;;;;10496:35:0;;;;;;;;;;;;;:48;10231:321;;;;:::o;11773:194::-;11888:66;11871:83;:88;;11773:194::o;12064:1086::-;12284:4;12278:11;12224:8;12376:19;;;12487:4;12480:12;;12473:34;;;12157:15;;;;12224:8;12989:4;12278:11;12815:4;12278:11;12673:9;12614:5;12585:478;13089:8;;12574:489;;13089:8;;-1:-1:-1;12254:889:0;-1:-1:-1;;;;12254:889:0:o","linkReferences":{}},"methodIdentifiers":{"getInterfaceImplementer(address,bytes32)":"aabbb8ca","getManager(address)":"3d584063","implementsERC165Interface(address,bytes4)":"f712f3e8","implementsERC165InterfaceNoCache(address,bytes4)":"b7056765","interfaceHash(string)":"65ba36c1","setInterfaceImplementer(address,bytes32,address)":"29965a1d","setManager(address,address)":"5df8122f","updateERC165Cache(address,bytes4)":"a41e7d51"},"gasEstimates":{"creation":{"codeDepositCost":"500200","executionCost":"537","totalCost":"500737"},"external":{"getInterfaceImplementer(address,bytes32)":"infinite","getManager(address)":"1158","implementsERC165Interface(address,bytes4)":"infinite","implementsERC165InterfaceNoCache(address,bytes4)":"infinite","interfaceHash(string)":"infinite","setInterfaceImplementer(address,bytes32,address)":"infinite","setManager(address,address)":"23312","updateERC165Cache(address,bytes4)":"infinite"},"internal":{"isERC165Interface(bytes32)":"21","noThrowCall(address,bytes4)":"infinite"}}}}}}}},"expires_at":18446744073709551615}