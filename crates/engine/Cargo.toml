[package]
name = "edb-engine"
description = "EDB's core analysis and instrumentation engine"

version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
exclude.workspace = true

[lints]
workspace = true

[dependencies]
edb-common.workspace = true

# alloy - using individual crates like Foundry does
alloy-chains.workspace = true
alloy-contract.workspace = true
alloy-dyn-abi = { workspace = true, features = ["eip712"] }
alloy-json-abi.workspace = true
alloy-network.workspace = true
alloy-primitives = { workspace = true, features = ["getrandom", "rand"] }
alloy-provider = { workspace = true, features = ["reqwest"] }
alloy-rpc-types = { workspace = true, features = ["eth"] }
alloy-sol-types.workspace = true
alloy-transport-http = { workspace = true, features = ["reqwest"] }

# foundry
foundry-block-explorers.workspace = true
foundry-compilers = { workspace = true, features = ["svm-solc"] }

# revm
revm = { workspace = true, features = [
    "std",
    "serde",
    "optional_eip3607",
    "optional_block_gas_limit",
    "optional_no_base_fee",
    "alloydb",
] }

# solang
solang-parser = { workspace = true }

# async
tokio = { workspace = true, features = ["full"] }
futures.workspace = true

# serialization
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true

# web server
axum = { workspace = true, features = ["ws"] }
tower.workspace = true
tower-http = { workspace = true, features = ["cors"] }

# misc
delegate.workspace = true
eyre.workspace = true
hex.workspace = true
lazy_static.workspace = true
parking_lot.workspace = true
paste.workspace = true
rayon.workspace = true
semver.workspace = true
tempfile.workspace = true
thiserror.workspace = true
tracing.workspace = true
tracing-subscriber = { workspace = true, features = ["env-filter"] }
derive_more.workspace = true
rpds.workspace = true
serial_test.workspace = true
once_cell.workspace = true
rand.workspace = true
indicatif.workspace = true
itertools.workspace = true
